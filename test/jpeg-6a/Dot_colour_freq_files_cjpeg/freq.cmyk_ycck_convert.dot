digraph "CFG for 'cmyk_ycck_convert' function" {
	label="CFG for 'cmyk_ycck_convert' function";

	Node0x5955620 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %cconvert1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 56\l  %0 = bitcast %struct.jpeg_color_converter** %cconvert1 to\l... %struct.my_color_converter**\l  %1 = load %struct.my_color_converter*, %struct.my_color_converter** %0,\l... align 8, !tbaa !3\l  %rgb_ycc_tab = getelementptr inbounds %struct.my_color_converter,\l... %struct.my_color_converter* %1, i64 0, i32 1\l  %2 = load i64*, i64** %rgb_ycc_tab, align 8, !tbaa !11\l  %image_width = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 6\l  %3 = load i32, i32* %image_width, align 8, !tbaa !14\l  %cmp126 = icmp sgt i32 %num_rows, 0\l  br i1 %cmp126, label %while.body.lr.ph, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x5955620:s0 -> Node0x594e110;
	Node0x5955620:s1 -> Node0x594e1f0;
	Node0x594e110 [shape=record, style = filled, fillcolor = blue, label="{while.body.lr.ph:                                 \l  %arrayidx4 = getelementptr inbounds i8**, i8*** %output_buf, i64 1\l  %arrayidx7 = getelementptr inbounds i8**, i8*** %output_buf, i64 2\l  %arrayidx10 = getelementptr inbounds i8**, i8*** %output_buf, i64 3\l  %cmp12122 = icmp eq i32 %3, 0\l  br i1 %cmp12122, label %while.end, label %while.body.us.preheader\l|{<s0>T|<s1>F}}"];
	Node0x594e110:s0 -> Node0x594e1f0;
	Node0x594e110:s1 -> Node0x594e760;
	Node0x594e760 [shape=record, style = filled, fillcolor = blue, label="{while.body.us.preheader:                          \l  br label %while.body.us\l}"];
	Node0x594e760 -> Node0x594e870;
	Node0x594e870 [shape=record, style = filled, fillcolor = blue, label="{while.body.us:                                    \l  %dec129.us.in = phi i32 [ %dec129.us,\l... %for.cond.while.cond.loopexit_crit_edge.us ], [ %num_rows,\l... %while.body.us.preheader ]\l  %input_buf.addr.0128.us = phi i8** [ %incdec.ptr.us,\l... %for.cond.while.cond.loopexit_crit_edge.us ], [ %input_buf,\l... %while.body.us.preheader ]\l  %output_row.addr.0127.us = phi i32 [ %inc.us,\l... %for.cond.while.cond.loopexit_crit_edge.us ], [ %output_row,\l... %while.body.us.preheader ]\l  %dec129.us = add nsw i32 %dec129.us.in, -1\l  %4 = load i8*, i8** %input_buf.addr.0128.us, align 8, !tbaa !15\l  %idxprom.us = zext i32 %output_row.addr.0127.us to i64\l  %5 = load i8**, i8*** %output_buf, align 8, !tbaa !15\l  %arrayidx2.us = getelementptr inbounds i8*, i8** %5, i64 %idxprom.us\l  %6 = load i8*, i8** %arrayidx2.us, align 8, !tbaa !15\l  %7 = load i8**, i8*** %arrayidx4, align 8, !tbaa !15\l  %arrayidx5.us = getelementptr inbounds i8*, i8** %7, i64 %idxprom.us\l  %8 = load i8*, i8** %arrayidx5.us, align 8, !tbaa !15\l  %9 = load i8**, i8*** %arrayidx7, align 8, !tbaa !15\l  %arrayidx8.us = getelementptr inbounds i8*, i8** %9, i64 %idxprom.us\l  %10 = load i8*, i8** %arrayidx8.us, align 8, !tbaa !15\l  %11 = load i8**, i8*** %arrayidx10, align 8, !tbaa !15\l  %arrayidx11.us = getelementptr inbounds i8*, i8** %11, i64 %idxprom.us\l  %12 = load i8*, i8** %arrayidx11.us, align 8, !tbaa !15\l  br label %for.body.us\l}"];
	Node0x594e870 -> Node0x594efd0;
	Node0x594efd0 [shape=record, style = filled, fillcolor = blue, label="{for.body.us:                                      \l  %indvars.iv = phi i64 [ 0, %while.body.us ], [ %indvars.iv.next,\l... %for.body.us ]\l  %inptr.0123.us = phi i8* [ %4, %while.body.us ], [ %add.ptr.us, %for.body.us\l... ]\l  %13 = load i8, i8* %inptr.0123.us, align 1, !tbaa !16\l  %conv.us = zext i8 %13 to i32\l  %sub.us = xor i32 %conv.us, 255\l  %arrayidx14.us = getelementptr inbounds i8, i8* %inptr.0123.us, i64 1\l  %14 = load i8, i8* %arrayidx14.us, align 1, !tbaa !16\l  %conv15.us = zext i8 %14 to i32\l  %sub16.us = xor i32 %conv15.us, 255\l  %arrayidx17.us = getelementptr inbounds i8, i8* %inptr.0123.us, i64 2\l  %15 = load i8, i8* %arrayidx17.us, align 1, !tbaa !16\l  %conv18.us = zext i8 %15 to i32\l  %sub19.us = xor i32 %conv18.us, 255\l  %arrayidx20.us = getelementptr inbounds i8, i8* %inptr.0123.us, i64 3\l  %16 = load i8, i8* %arrayidx20.us, align 1, !tbaa !16\l  %arrayidx22.us = getelementptr inbounds i8, i8* %12, i64 %indvars.iv\l  store i8 %16, i8* %arrayidx22.us, align 1, !tbaa !16\l  %add.ptr.us = getelementptr inbounds i8, i8* %inptr.0123.us, i64 4\l  %idxprom23110.us = zext i32 %sub.us to i64\l  %arrayidx24.us = getelementptr inbounds i64, i64* %2, i64 %idxprom23110.us\l  %17 = load i64, i64* %arrayidx24.us, align 8, !tbaa !17\l  %add25.us = or i32 %sub16.us, 256\l  %idxprom26111.us = zext i32 %add25.us to i64\l  %arrayidx27.us = getelementptr inbounds i64, i64* %2, i64 %idxprom26111.us\l  %18 = load i64, i64* %arrayidx27.us, align 8, !tbaa !17\l  %add28.us = add nsw i64 %18, %17\l  %add29.us = or i32 %sub19.us, 512\l  %idxprom30112.us = zext i32 %add29.us to i64\l  %arrayidx31.us = getelementptr inbounds i64, i64* %2, i64 %idxprom30112.us\l  %19 = load i64, i64* %arrayidx31.us, align 8, !tbaa !17\l  %add32.us = add nsw i64 %add28.us, %19\l  %shr113.us = lshr i64 %add32.us, 16\l  %conv33.us = trunc i64 %shr113.us to i8\l  %arrayidx35.us = getelementptr inbounds i8, i8* %6, i64 %indvars.iv\l  store i8 %conv33.us, i8* %arrayidx35.us, align 1, !tbaa !16\l  %add36.us = or i32 %sub.us, 768\l  %idxprom37114.us = zext i32 %add36.us to i64\l  %arrayidx38.us = getelementptr inbounds i64, i64* %2, i64 %idxprom37114.us\l  %20 = load i64, i64* %arrayidx38.us, align 8, !tbaa !17\l  %add39.us = or i32 %sub16.us, 1024\l  %idxprom40115.us = zext i32 %add39.us to i64\l  %arrayidx41.us = getelementptr inbounds i64, i64* %2, i64 %idxprom40115.us\l  %21 = load i64, i64* %arrayidx41.us, align 8, !tbaa !17\l  %add42.us = add nsw i64 %21, %20\l  %add43.us = or i32 %sub19.us, 1280\l  %idxprom44116.us = zext i32 %add43.us to i64\l  %arrayidx45.us = getelementptr inbounds i64, i64* %2, i64 %idxprom44116.us\l  %22 = load i64, i64* %arrayidx45.us, align 8, !tbaa !17\l  %add46.us = add nsw i64 %add42.us, %22\l  %shr47117.us = lshr i64 %add46.us, 16\l  %conv48.us = trunc i64 %shr47117.us to i8\l  %arrayidx50.us = getelementptr inbounds i8, i8* %8, i64 %indvars.iv\l  store i8 %conv48.us, i8* %arrayidx50.us, align 1, !tbaa !16\l  %add51.us = or i32 %sub.us, 1280\l  %idxprom52118.us = zext i32 %add51.us to i64\l  %arrayidx53.us = getelementptr inbounds i64, i64* %2, i64 %idxprom52118.us\l  %23 = load i64, i64* %arrayidx53.us, align 8, !tbaa !17\l  %add54.us = or i32 %sub16.us, 1536\l  %idxprom55119.us = zext i32 %add54.us to i64\l  %arrayidx56.us = getelementptr inbounds i64, i64* %2, i64 %idxprom55119.us\l  %24 = load i64, i64* %arrayidx56.us, align 8, !tbaa !17\l  %add57.us = add nsw i64 %24, %23\l  %add58.us = or i32 %sub19.us, 1792\l  %idxprom59120.us = zext i32 %add58.us to i64\l  %arrayidx60.us = getelementptr inbounds i64, i64* %2, i64 %idxprom59120.us\l  %25 = load i64, i64* %arrayidx60.us, align 8, !tbaa !17\l  %add61.us = add nsw i64 %add57.us, %25\l  %shr62121.us = lshr i64 %add61.us, 16\l  %conv63.us = trunc i64 %shr62121.us to i8\l  %arrayidx65.us = getelementptr inbounds i8, i8* %10, i64 %indvars.iv\l  store i8 %conv63.us, i8* %arrayidx65.us, align 1, !tbaa !16\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %lftr.wideiv = trunc i64 %indvars.iv.next to i32\l  %exitcond = icmp eq i32 %lftr.wideiv, %3\l  br i1 %exitcond, label %for.cond.while.cond.loopexit_crit_edge.us, label\l... %for.body.us\l|{<s0>T|<s1>F}}"];
	Node0x594efd0:s0 -> Node0x594e9a0;
	Node0x594efd0:s1 -> Node0x594efd0;
	Node0x594e9a0 [shape=record, style = filled, fillcolor = blue, label="{for.cond.while.cond.loopexit_crit_edge.us:        \l  %incdec.ptr.us = getelementptr inbounds i8*, i8** %input_buf.addr.0128.us,\l... i64 1\l  %inc.us = add i32 %output_row.addr.0127.us, 1\l  %cmp.us = icmp sgt i32 %dec129.us.in, 1\l  br i1 %cmp.us, label %while.body.us, label %while.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x594e9a0:s0 -> Node0x594e870;
	Node0x594e9a0:s1 -> Node0x59741f0;
	Node0x59741f0 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit:                               \l  br label %while.end\l}"];
	Node0x59741f0 -> Node0x594e1f0;
	Node0x594e1f0 [shape=record, style = filled, fillcolor = blue, label="{while.end:                                        \l  ret void\l}"];
}
