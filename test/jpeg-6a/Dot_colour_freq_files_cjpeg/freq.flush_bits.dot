digraph "CFG for 'flush_bits' function" {
	label="CFG for 'flush_bits' function";

	Node0x56bc740 [shape=record, style = filled, fillcolor = skyblue, label="{entry:\l  %put_bits1.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %entropy, i64 0, i32 5\l  %gather_statistics.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %entropy, i64 0, i32 1\l  %0 = load i32, i32* %gather_statistics.i, align 8, !tbaa !3\l  %tobool.i = icmp eq i32 %0, 0\l  br i1 %tobool.i, label %if.end7.i, label %entry.emit_bits.exit_crit_edge,\l... !prof !11\l|{<s0>T|<s1>F}}"];
	Node0x56bc740:s0 -> Node0x565c440;
	Node0x56bc740:s1 -> Node0x565c550;
	Node0x565c550 [shape=record, style = filled, fillcolor = skyblue, label="{entry.emit_bits.exit_crit_edge:                   \l  %.pre = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %entropy, i64 0, i32 4\l  br label %emit_bits.exit\l}"];
	Node0x565c550 -> Node0x565c7c0;
	Node0x565c440 [shape=record, style = filled, fillcolor = skyblue, label="{if.end7.i:                                        \l  %1 = load i32, i32* %put_bits1.i, align 8, !tbaa !12\l  %add.i = add i32 %1, 7\l  %sub8.i = sub i32 17, %1\l  %sh_prom9.i = zext i32 %sub8.i to i64\l  %shl10.i = shl i64 127, %sh_prom9.i\l  %put_buffer11.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %entropy, i64 0, i32 4\l  %2 = load i64, i64* %put_buffer11.i, align 8, !tbaa !13\l  %or.i = or i64 %shl10.i, %2\l  %cmp1267.i = icmp sgt i32 %add.i, 7\l  br i1 %cmp1267.i, label %while.body.lr.ph.i, label %while.end.i, !prof !14\l|{<s0>T|<s1>F}}"];
	Node0x565c440:s0 -> Node0x565cdf0;
	Node0x565c440:s1 -> Node0x565cef0;
	Node0x565cdf0 [shape=record, style = filled, fillcolor = skyblue, label="{while.body.lr.ph.i:                               \l  %next_output_byte.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %entropy, i64 0, i32 2\l  %free_in_buffer.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %entropy, i64 0, i32 3\l  %cinfo.i5 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %entropy, i64 0, i32 6\l  %3 = bitcast i8** %next_output_byte.i to \<2 x i64\>*\l  %4 = bitcast i8** %next_output_byte.i to \<2 x i64\>*\l  br label %while.body.i\l}"];
	Node0x565cdf0 -> Node0x565d3e0;
	Node0x565d3e0 [shape=record, style = filled, fillcolor = skyblue, label="{while.body.i:                                     \l  %put_buffer.069.i = phi i64 [ %or.i, %while.body.lr.ph.i ], [ %shl33.i,\l... %if.end32.i ]\l  %put_bits.068.i = phi i32 [ %add.i, %while.body.lr.ph.i ], [ %sub34.i,\l... %if.end32.i ]\l  %shr66.i = lshr i64 %put_buffer.069.i, 16\l  %conv16.i = trunc i64 %shr66.i to i8\l  %5 = load i8*, i8** %next_output_byte.i, align 8, !tbaa !15\l  %incdec.ptr.i = getelementptr inbounds i8, i8* %5, i64 1\l  store i8* %incdec.ptr.i, i8** %next_output_byte.i, align 8, !tbaa !15\l  store i8 %conv16.i, i8* %5, align 1, !tbaa !16\l  %6 = load i64, i64* %free_in_buffer.i, align 8, !tbaa !17\l  %dec.i = add i64 %6, -1\l  store i64 %dec.i, i64* %free_in_buffer.i, align 8, !tbaa !17\l  %cmp17.i = icmp eq i64 %dec.i, 0\l  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i, !prof !18\l|{<s0>T|<s1>F}}"];
	Node0x565d3e0:s0 -> Node0x565df80;
	Node0x565d3e0:s1 -> Node0x565e030;
	Node0x565df80 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i:                                      \l  %7 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i5, align 8, !tbaa !19\l  %dest1.i6 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %7, i64 0, i32 5\l  %8 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i6, align 8, !tbaa !20\l  %empty_output_buffer.i7 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %8, i64 0, i32 3\l  %9 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i7, align 8, !tbaa !24\l  %call.i8 = tail call i32 %9(%struct.jpeg_compress_struct* %7) #3\l  %tobool.i9 = icmp eq i32 %call.i8, 0\l  br i1 %tobool.i9, label %if.then.i13, label %dump_buffer.exit17, !prof !26\l|{<s0>T|<s1>F}}"];
	Node0x565df80:s0 -> Node0x5674720;
	Node0x565df80:s1 -> Node0x5674830;
	Node0x5674720 [shape=record, style = filled, fillcolor = blue, label="{if.then.i13:                                      \l  %10 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i5, align 8, !tbaa !19\l  %err.i10 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %10, i64 0, i32 0\l  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i10, align\l... 8, !tbaa !27\l  %msg_code.i11 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 5\l  store i32 22, i32* %msg_code.i11, align 8, !tbaa !28\l  %error_exit.i12 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 0\l  %12 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i12, align 8, !tbaa !30\l  %13 = bitcast %struct.jpeg_compress_struct* %10 to\l... %struct.jpeg_common_struct*\l  tail call void %12(%struct.jpeg_common_struct* %13) #3\l  br label %dump_buffer.exit17\l}"];
	Node0x5674720 -> Node0x5674830;
	Node0x5674830 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit17:                               \l  %14 = bitcast %struct.jpeg_destination_mgr* %8 to \<2 x i64\>*\l  %15 = load \<2 x i64\>, \<2 x i64\>* %14, align 8, !tbaa !16\l  store \<2 x i64\> %15, \<2 x i64\>* %3, align 8, !tbaa !16\l  br label %if.end20.i\l}"];
	Node0x5674830 -> Node0x565e030;
	Node0x565e030 [shape=record, style = filled, fillcolor = skyblue, label="{if.end20.i:                                       \l  %conv15.i = and i64 %shr66.i, 255\l  %cmp21.i = icmp eq i64 %conv15.i, 255\l  br i1 %cmp21.i, label %if.then23.i, label %if.end32.i, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x565e030:s0 -> Node0x5674f70;
	Node0x565e030:s1 -> Node0x565d4f0;
	Node0x5674f70 [shape=record, style = filled, fillcolor = blue, label="{if.then23.i:                                      \l  %16 = load i8*, i8** %next_output_byte.i, align 8, !tbaa !15\l  %incdec.ptr25.i = getelementptr inbounds i8, i8* %16, i64 1\l  store i8* %incdec.ptr25.i, i8** %next_output_byte.i, align 8, !tbaa !15\l  store i8 0, i8* %16, align 1, !tbaa !16\l  %17 = load i64, i64* %free_in_buffer.i, align 8, !tbaa !17\l  %dec27.i = add i64 %17, -1\l  store i64 %dec27.i, i64* %free_in_buffer.i, align 8, !tbaa !17\l  %cmp28.i = icmp eq i64 %dec27.i, 0\l  br i1 %cmp28.i, label %if.then30.i, label %if.end32.i, !prof !32\l|{<s0>T|<s1>F}}"];
	Node0x5674f70:s0 -> Node0x565f5c0;
	Node0x5674f70:s1 -> Node0x565d4f0;
	Node0x565f5c0 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i:                                      \l  %18 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i5, align 8, !tbaa !19\l  %dest1.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %18, i64 0, i32 5\l  %19 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i, align 8, !tbaa !20\l  %empty_output_buffer.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %19, i64 0, i32 3\l  %20 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i, align 8, !tbaa !24\l  %call.i = tail call i32 %20(%struct.jpeg_compress_struct* %18) #3\l  %tobool.i3 = icmp eq i32 %call.i, 0\l  br i1 %tobool.i3, label %if.then.i, label %dump_buffer.exit, !prof !26\l|{<s0>T|<s1>F}}"];
	Node0x565f5c0:s0 -> Node0x565fe60;
	Node0x565f5c0:s1 -> Node0x565ff70;
	Node0x565fe60 [shape=record, style = filled, fillcolor = blue, label="{if.then.i:                                        \l  %21 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i5, align 8, !tbaa !19\l  %err.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %21, i64 0, i32 0\l  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align\l... 8, !tbaa !27\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %22, i64 0, i32 5\l  store i32 22, i32* %msg_code.i, align 8, !tbaa !28\l  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %22, i64 0, i32 0\l  %23 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !30\l  %24 = bitcast %struct.jpeg_compress_struct* %21 to\l... %struct.jpeg_common_struct*\l  tail call void %23(%struct.jpeg_common_struct* %24) #3\l  br label %dump_buffer.exit\l}"];
	Node0x565fe60 -> Node0x565ff70;
	Node0x565ff70 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit:                                 \l  %25 = bitcast %struct.jpeg_destination_mgr* %19 to \<2 x i64\>*\l  %26 = load \<2 x i64\>, \<2 x i64\>* %25, align 8, !tbaa !16\l  store \<2 x i64\> %26, \<2 x i64\>* %4, align 8, !tbaa !16\l  br label %if.end32.i\l}"];
	Node0x565ff70 -> Node0x565d4f0;
	Node0x565d4f0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end32.i:                                       \l  %shl33.i = shl i64 %put_buffer.069.i, 8\l  %sub34.i = add nsw i32 %put_bits.068.i, -8\l  %cmp12.i = icmp sgt i32 %sub34.i, 7\l  br i1 %cmp12.i, label %while.body.i, label %while.end.loopexit.i, !prof !14\l|{<s0>T|<s1>F}}"];
	Node0x565d4f0:s0 -> Node0x565d3e0;
	Node0x565d4f0:s1 -> Node0x5660910;
	Node0x5660910 [shape=record, style = filled, fillcolor = skyblue, label="{while.end.loopexit.i:                             \l  %shl33.i.lcssa = phi i64 [ %shl33.i, %if.end32.i ]\l  %27 = and i32 %add.i, 7\l  br label %while.end.i\l}"];
	Node0x5660910 -> Node0x565cef0;
	Node0x565cef0 [shape=record, style = filled, fillcolor = skyblue, label="{while.end.i:                                      \l  %put_buffer.0.lcssa.i = phi i64 [ %or.i, %if.end7.i ], [ %shl33.i.lcssa,\l... %while.end.loopexit.i ]\l  %put_bits.0.lcssa.i = phi i32 [ %add.i, %if.end7.i ], [ %27,\l... %while.end.loopexit.i ]\l  store i64 %put_buffer.0.lcssa.i, i64* %put_buffer11.i, align 8, !tbaa !13\l  store i32 %put_bits.0.lcssa.i, i32* %put_bits1.i, align 8, !tbaa !12\l  br label %emit_bits.exit\l}"];
	Node0x565cef0 -> Node0x565c7c0;
	Node0x565c7c0 [shape=record, style = filled, fillcolor = skyblue, label="{emit_bits.exit:                                   \l  %put_buffer.pre-phi = phi i64* [ %.pre, %entry.emit_bits.exit_crit_edge ], [\l... %put_buffer11.i, %while.end.i ]\l  store i64 0, i64* %put_buffer.pre-phi, align 8, !tbaa !13\l  store i32 0, i32* %put_bits1.i, align 8, !tbaa !12\l  ret void\l}"];
}
