; ModuleID = 'jdmarker.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_decompress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_source_mgr = type { i8*, i64, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i64)*, {}*, void (%struct.jpeg_decompress_struct*)* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.jpeg_decomp_master = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32 }
%struct.jpeg_d_main_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller = type { i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32, i32 }
%struct.jpeg_marker_reader = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, [16 x i32 (%struct.jpeg_decompress_struct*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*, [64 x i16]**)* }
%struct.jpeg_inverse_dct = type { void (%struct.jpeg_decompress_struct*)*, [10 x void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)* }

@jpeg_natural_order = external constant [0 x i32], align 4

; Function Attrs: nounwind uwtable
define i32 @jpeg_resync_to_restart(%struct.jpeg_decompress_struct* %cinfo, i32 %desired) #0 {
entry:
  %unread_marker = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 72
  %0 = load i32, i32* %unread_marker, align 4, !tbaa !2
  %err = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %1 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !10
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1, i64 0, i32 5
  store i32 117, i32* %msg_code, align 8, !tbaa !11
  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1, i64 0, i32 6, i32 0, i64 0
  store i32 %0, i32* %arrayidx, align 4, !tbaa !14
  %arrayidx5 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1, i64 0, i32 6, i32 0, i64 1
  store i32 %desired, i32* %arrayidx5, align 4, !tbaa !14
  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1, i64 0, i32 1
  %2 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !15
  %3 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %2(%struct.jpeg_common_struct* %3, i32 -1) #4
  %add = add nsw i32 %desired, 1
  %and = and i32 %add, 7
  %add11 = or i32 %and, 208
  %add14 = add nsw i32 %desired, 2
  %and15 = and i32 %add14, 7
  %add16 = or i32 %and15, 208
  %sub = add i32 %desired, 7
  %and20 = and i32 %sub, 7
  %add21 = or i32 %and20, 208
  %sub24 = add i32 %desired, 6
  %and25 = and i32 %sub24, 7
  %add26 = or i32 %and25, 208
  br label %for.cond.outer

for.cond.outer:                                   ; preds = %if.end48, %entry
  %marker.0.ph = phi i32 [ %13, %if.end48 ], [ %0, %entry ]
  %cmp = icmp slt i32 %marker.0.ph, 192
  %cmp12 = icmp eq i32 %marker.0.ph, %add11
  %cmp17 = icmp eq i32 %marker.0.ph, %add16
  %cmp22 = icmp eq i32 %marker.0.ph, %add21
  %cmp27 = icmp eq i32 %marker.0.ph, %add26
  br i1 %cmp, label %for.cond.outer.split.us, label %for.cond.outer.split

for.cond.outer.split.us:                          ; preds = %for.cond.outer
  %4 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !10
  %msg_code34.us.us = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 5
  store i32 96, i32* %msg_code34.us.us, align 8, !tbaa !11
  %arrayidx38.us.us = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 6, i32 0, i64 0
  store i32 %marker.0.ph, i32* %arrayidx38.us.us, align 4, !tbaa !14
  %arrayidx42.us.us = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 6, i32 0, i64 1
  store i32 2, i32* %arrayidx42.us.us, align 4, !tbaa !14
  %emit_message44.us.us = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 1
  %5 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message44.us.us, align 8, !tbaa !15
  tail call void %5(%struct.jpeg_common_struct* %3, i32 4) #4
  br label %sw.bb46

for.cond.outer.split:                             ; preds = %for.cond.outer
  %6 = and i32 %marker.0.ph, -8
  %7 = icmp eq i32 %6, 208
  br i1 %7, label %if.else10.us83.preheader, label %for.cond.outer.split.split

if.else10.us83.preheader:                         ; preds = %for.cond.outer.split
  %brmerge = or i1 %cmp12, %cmp17
  %8 = or i1 %cmp22, %cmp27
  %.. = select i1 %8, i32 2, i32 1
  %action.0.us88 = select i1 %brmerge, i32 3, i32 %..
  br label %if.else10.us83

if.else10.us83:                                   ; preds = %if.else10.us83.preheader, %if.else10.us83
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !10
  %msg_code34.us89 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 5
  store i32 96, i32* %msg_code34.us89, align 8, !tbaa !11
  %arrayidx38.us90 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 0
  store i32 %marker.0.ph, i32* %arrayidx38.us90, align 4, !tbaa !14
  %arrayidx42.us91 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 1
  store i32 %action.0.us88, i32* %arrayidx42.us91, align 4, !tbaa !14
  %emit_message44.us92 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 1
  %10 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message44.us92, align 8, !tbaa !15
  tail call void %10(%struct.jpeg_common_struct* %3, i32 4) #4
  switch i32 %action.0.us88, label %if.else10.us83 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb46.loopexit
    i32 3, label %cleanup.loopexit
  ]

for.cond.outer.split.split:                       ; preds = %for.cond.outer.split
  %marker.0.ph.lcssa = phi i32 [ %marker.0.ph, %for.cond.outer.split ]
  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !10
  %msg_code34.us101 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 5
  store i32 96, i32* %msg_code34.us101, align 8, !tbaa !11
  %arrayidx38.us102 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 6, i32 0, i64 0
  store i32 %marker.0.ph.lcssa, i32* %arrayidx38.us102, align 4, !tbaa !14
  %arrayidx42.us103 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 6, i32 0, i64 1
  store i32 3, i32* %arrayidx42.us103, align 4, !tbaa !14
  %emit_message44.us104 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 1
  %12 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message44.us104, align 8, !tbaa !15
  tail call void %12(%struct.jpeg_common_struct* %3, i32 4) #4
  br label %cleanup

sw.bb:                                            ; preds = %if.else10.us83
  store i32 0, i32* %unread_marker, align 4, !tbaa !2
  br label %cleanup

sw.bb46.loopexit:                                 ; preds = %if.else10.us83
  br label %sw.bb46

sw.bb46:                                          ; preds = %sw.bb46.loopexit, %for.cond.outer.split.us
  %call = tail call fastcc i32 @next_marker(%struct.jpeg_decompress_struct* nonnull %cinfo)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %cleanup.loopexit129, label %if.end48

if.end48:                                         ; preds = %sw.bb46
  %13 = load i32, i32* %unread_marker, align 4, !tbaa !2
  br label %for.cond.outer

cleanup.loopexit:                                 ; preds = %if.else10.us83
  br label %cleanup

cleanup.loopexit129:                              ; preds = %sw.bb46
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit129, %cleanup.loopexit, %for.cond.outer.split.split, %sw.bb
  %retval.0 = phi i32 [ 1, %sw.bb ], [ 1, %for.cond.outer.split.split ], [ 1, %cleanup.loopexit ], [ 0, %cleanup.loopexit129 ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @next_marker(%struct.jpeg_decompress_struct* %cinfo) unnamed_addr #0 {
entry:
  %src = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5
  %0 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align 8, !tbaa !16
  %next_input_byte1 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 0
  %1 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %bytes_in_buffer2 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 1
  %2 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  %fill_input_buffer = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 3
  %marker58 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 78
  br label %do.body

do.body:                                          ; preds = %entry, %if.end53
  %next_input_byte.0 = phi i8* [ %1, %entry ], [ %incdec.ptr42.lcssa, %if.end53 ]
  %bytes_in_buffer.0 = phi i64 [ %2, %entry ], [ %dec41.lcssa, %if.end53 ]
  %cmp = icmp eq i64 %bytes_in_buffer.0, 0
  br i1 %cmp, label %if.then, label %while.cond.preheader

if.then:                                          ; preds = %do.body
  %3 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer, align 8, !tbaa !20
  %call = tail call i32 %3(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %cleanup.loopexit152, label %if.end

if.end:                                           ; preds = %if.then
  %4 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %5 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.end, %do.body
  %c.0.in.in.ph = phi i8* [ %next_input_byte.0, %do.body ], [ %4, %if.end ]
  %bytes_in_buffer.2.in.ph = phi i64 [ %bytes_in_buffer.0, %do.body ], [ %5, %if.end ]
  %c.0.in134 = load i8, i8* %c.0.in.in.ph, align 1, !tbaa !21
  %next_input_byte.2135 = getelementptr inbounds i8, i8* %c.0.in.in.ph, i64 1
  %bytes_in_buffer.2136 = add i64 %bytes_in_buffer.2.in.ph, -1
  %cmp7137 = icmp eq i8 %c.0.in134, -1
  br i1 %cmp7137, label %do.body29.preheader, label %while.body.preheader

while.body.preheader:                             ; preds = %while.cond.preheader
  br label %while.body

while.body:                                       ; preds = %while.body.preheader, %while.cond.backedge
  %bytes_in_buffer.2139 = phi i64 [ %bytes_in_buffer.2, %while.cond.backedge ], [ %bytes_in_buffer.2136, %while.body.preheader ]
  %next_input_byte.2138 = phi i8* [ %next_input_byte.2, %while.cond.backedge ], [ %next_input_byte.2135, %while.body.preheader ]
  %6 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker58, align 8, !tbaa !22
  %discarded_bytes = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %6, i64 0, i32 8
  %7 = load i32, i32* %discarded_bytes, align 4, !tbaa !23
  %inc = add i32 %7, 1
  store i32 %inc, i32* %discarded_bytes, align 4, !tbaa !23
  store i8* %next_input_byte.2138, i8** %next_input_byte1, align 8, !tbaa !17
  store i64 %bytes_in_buffer.2139, i64* %bytes_in_buffer2, align 8, !tbaa !19
  %cmp12 = icmp eq i64 %bytes_in_buffer.2139, 0
  br i1 %cmp12, label %if.then14, label %while.cond.backedge

if.then14:                                        ; preds = %while.body
  %8 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer, align 8, !tbaa !20
  %call16 = tail call i32 %8(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool17 = icmp eq i32 %call16, 0
  br i1 %tobool17, label %cleanup.loopexit151, label %if.end19

if.end19:                                         ; preds = %if.then14
  %9 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %10 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end19, %while.body
  %c.0.in.in.be = phi i8* [ %9, %if.end19 ], [ %next_input_byte.2138, %while.body ]
  %bytes_in_buffer.2.in.be = phi i64 [ %10, %if.end19 ], [ %bytes_in_buffer.2139, %while.body ]
  %c.0.in = load i8, i8* %c.0.in.in.be, align 1, !tbaa !21
  %next_input_byte.2 = getelementptr inbounds i8, i8* %c.0.in.in.be, i64 1
  %bytes_in_buffer.2 = add i64 %bytes_in_buffer.2.in.be, -1
  %cmp7 = icmp eq i8 %c.0.in, -1
  br i1 %cmp7, label %do.body29.preheader.loopexit, label %while.body

do.body29.preheader.loopexit:                     ; preds = %while.cond.backedge
  %bytes_in_buffer.2.lcssa = phi i64 [ %bytes_in_buffer.2, %while.cond.backedge ]
  %next_input_byte.2.lcssa = phi i8* [ %next_input_byte.2, %while.cond.backedge ]
  br label %do.body29.preheader

do.body29.preheader:                              ; preds = %do.body29.preheader.loopexit, %while.cond.preheader
  %next_input_byte.4.ph = phi i8* [ %next_input_byte.2135, %while.cond.preheader ], [ %next_input_byte.2.lcssa, %do.body29.preheader.loopexit ]
  %bytes_in_buffer.4.ph = phi i64 [ %bytes_in_buffer.2136, %while.cond.preheader ], [ %bytes_in_buffer.2.lcssa, %do.body29.preheader.loopexit ]
  br label %do.body29

do.body29:                                        ; preds = %do.body29.preheader, %if.end40
  %next_input_byte.4 = phi i8* [ %incdec.ptr42, %if.end40 ], [ %next_input_byte.4.ph, %do.body29.preheader ]
  %bytes_in_buffer.4 = phi i64 [ %dec41, %if.end40 ], [ %bytes_in_buffer.4.ph, %do.body29.preheader ]
  %cmp30 = icmp eq i64 %bytes_in_buffer.4, 0
  br i1 %cmp30, label %if.then32, label %if.end40

if.then32:                                        ; preds = %do.body29
  %11 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer, align 8, !tbaa !20
  %call34 = tail call i32 %11(%struct.jpeg_decompress_struct* %cinfo) #4
  %tobool35 = icmp eq i32 %call34, 0
  br i1 %tobool35, label %cleanup.loopexit, label %if.end37

if.end37:                                         ; preds = %if.then32
  %12 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %13 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end40

if.end40:                                         ; preds = %if.end37, %do.body29
  %next_input_byte.5 = phi i8* [ %12, %if.end37 ], [ %next_input_byte.4, %do.body29 ]
  %bytes_in_buffer.5 = phi i64 [ %13, %if.end37 ], [ %bytes_in_buffer.4, %do.body29 ]
  %dec41 = add i64 %bytes_in_buffer.5, -1
  %incdec.ptr42 = getelementptr inbounds i8, i8* %next_input_byte.5, i64 1
  %14 = load i8, i8* %next_input_byte.5, align 1, !tbaa !21
  %cmp47 = icmp eq i8 %14, -1
  br i1 %cmp47, label %do.body29, label %do.end49

do.end49:                                         ; preds = %if.end40
  %.lcssa = phi i8 [ %14, %if.end40 ]
  %incdec.ptr42.lcssa = phi i8* [ %incdec.ptr42, %if.end40 ]
  %dec41.lcssa = phi i64 [ %dec41, %if.end40 ]
  %cmp50 = icmp eq i8 %.lcssa, 0
  %15 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker58, align 8, !tbaa !22
  %discarded_bytes59 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %15, i64 0, i32 8
  %16 = load i32, i32* %discarded_bytes59, align 4, !tbaa !23
  br i1 %cmp50, label %if.end53, label %for.end

if.end53:                                         ; preds = %do.end49
  %add = add i32 %16, 2
  store i32 %add, i32* %discarded_bytes59, align 4, !tbaa !23
  store i8* %incdec.ptr42.lcssa, i8** %next_input_byte1, align 8, !tbaa !17
  store i64 %dec41.lcssa, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %do.body

for.end:                                          ; preds = %do.end49
  %.lcssa154 = phi i32 [ %16, %do.end49 ]
  %.lcssa.lcssa = phi i8 [ %.lcssa, %do.end49 ]
  %incdec.ptr42.lcssa.lcssa = phi i8* [ %incdec.ptr42.lcssa, %do.end49 ]
  %dec41.lcssa.lcssa = phi i64 [ %dec41.lcssa, %do.end49 ]
  %conv43.le.le = zext i8 %.lcssa.lcssa to i32
  %cmp60 = icmp eq i32 %.lcssa154, 0
  br i1 %cmp60, label %if.end73, label %if.then62

if.then62:                                        ; preds = %for.end
  %err = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %17 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !10
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %17, i64 0, i32 5
  store i32 112, i32* %msg_code, align 8, !tbaa !11
  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %17, i64 0, i32 6, i32 0, i64 0
  store i32 %.lcssa154, i32* %arrayidx, align 4, !tbaa !14
  %arrayidx69 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %17, i64 0, i32 6, i32 0, i64 1
  store i32 %conv43.le.le, i32* %arrayidx69, align 4, !tbaa !14
  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %17, i64 0, i32 1
  %18 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !15
  %19 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %18(%struct.jpeg_common_struct* %19, i32 -1) #4
  %20 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker58, align 8, !tbaa !22
  %discarded_bytes72 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %20, i64 0, i32 8
  store i32 0, i32* %discarded_bytes72, align 4, !tbaa !23
  br label %if.end73

if.end73:                                         ; preds = %for.end, %if.then62
  %unread_marker = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 72
  store i32 %conv43.le.le, i32* %unread_marker, align 4, !tbaa !2
  store i8* %incdec.ptr42.lcssa.lcssa, i8** %next_input_byte1, align 8, !tbaa !17
  store i64 %dec41.lcssa.lcssa, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %cleanup

cleanup.loopexit:                                 ; preds = %if.then32
  br label %cleanup

cleanup.loopexit151:                              ; preds = %if.then14
  br label %cleanup

cleanup.loopexit152:                              ; preds = %if.then
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit152, %cleanup.loopexit151, %cleanup.loopexit, %if.end73
  %retval.0 = phi i32 [ 1, %if.end73 ], [ 0, %cleanup.loopexit ], [ 0, %cleanup.loopexit151 ], [ 0, %cleanup.loopexit152 ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define void @jinit_marker_reader(%struct.jpeg_decompress_struct* %cinfo) #0 {
entry:
  %mem = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1
  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !25
  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %0, i64 0, i32 0
  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !26
  %2 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  %call = tail call i8* %1(%struct.jpeg_common_struct* %2, i32 0, i64 176) #4
  %marker = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 78
  %3 = bitcast %struct.jpeg_marker_reader** %marker to i8**
  store i8* %call, i8** %3, align 8, !tbaa !22
  %reset_marker_reader = bitcast i8* %call to void (%struct.jpeg_decompress_struct*)**
  store void (%struct.jpeg_decompress_struct*)* @reset_marker_reader, void (%struct.jpeg_decompress_struct*)** %reset_marker_reader, align 8, !tbaa !28
  %read_markers = getelementptr inbounds i8, i8* %call, i64 8
  %4 = bitcast i8* %read_markers to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @read_markers, i32 (%struct.jpeg_decompress_struct*)* @read_restart_marker>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %4, align 8, !tbaa !29
  %process_COM = getelementptr inbounds i8, i8* %call, i64 24
  %5 = bitcast i8* %process_COM to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %5, align 8, !tbaa !29
  %6 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.1 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %6, i64 0, i32 4, i64 1
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.1, align 8, !tbaa !29
  %7 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.2 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %7, i64 0, i32 4, i64 2
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.2, align 8, !tbaa !29
  %8 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.3 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %8, i64 0, i32 4, i64 3
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.3, align 8, !tbaa !29
  %9 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.4 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %9, i64 0, i32 4, i64 4
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.4, align 8, !tbaa !29
  %10 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.5 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %10, i64 0, i32 4, i64 5
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.5, align 8, !tbaa !29
  %11 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.6 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %11, i64 0, i32 4, i64 6
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.6, align 8, !tbaa !29
  %12 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.7 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %12, i64 0, i32 4, i64 7
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.7, align 8, !tbaa !29
  %13 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.8 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %13, i64 0, i32 4, i64 8
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.8, align 8, !tbaa !29
  %14 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.9 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %14, i64 0, i32 4, i64 9
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.9, align 8, !tbaa !29
  %15 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.10 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %15, i64 0, i32 4, i64 10
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.10, align 8, !tbaa !29
  %16 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.11 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %16, i64 0, i32 4, i64 11
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.11, align 8, !tbaa !29
  %17 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.12 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %17, i64 0, i32 4, i64 12
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.12, align 8, !tbaa !29
  %18 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.13 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %18, i64 0, i32 4, i64 13
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.13, align 8, !tbaa !29
  %19 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.14 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %19, i64 0, i32 4, i64 14
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.14, align 8, !tbaa !29
  %20 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx.15 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %20, i64 0, i32 4, i64 15
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %arrayidx.15, align 8, !tbaa !29
  %21 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx8 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %21, i64 0, i32 4, i64 0
  store i32 (%struct.jpeg_decompress_struct*)* @get_app0, i32 (%struct.jpeg_decompress_struct*)** %arrayidx8, align 8, !tbaa !29
  %22 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx11 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %22, i64 0, i32 4, i64 14
  store i32 (%struct.jpeg_decompress_struct*)* @get_app14, i32 (%struct.jpeg_decompress_struct*)** %arrayidx11, align 8, !tbaa !29
  %comp_info.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43
  store %struct.jpeg_component_info* null, %struct.jpeg_component_info** %comp_info.i, align 8, !tbaa !30
  %input_scan_number.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 34
  store i32 0, i32* %input_scan_number.i, align 4, !tbaa !31
  %unread_marker.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 72
  store i32 0, i32* %unread_marker.i, align 4, !tbaa !2
  %23 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %saw_SOI.i = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %23, i64 0, i32 5
  store i32 0, i32* %saw_SOI.i, align 8, !tbaa !32
  %saw_SOF.i = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %23, i64 0, i32 6
  store i32 0, i32* %saw_SOF.i, align 4, !tbaa !33
  %discarded_bytes.i = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %23, i64 0, i32 8
  store i32 0, i32* %discarded_bytes.i, align 4, !tbaa !23
  ret void
}

; Function Attrs: norecurse nounwind uwtable
define internal void @reset_marker_reader(%struct.jpeg_decompress_struct* nocapture %cinfo) #2 {
entry:
  %comp_info = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43
  store %struct.jpeg_component_info* null, %struct.jpeg_component_info** %comp_info, align 8, !tbaa !30
  %input_scan_number = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 34
  store i32 0, i32* %input_scan_number, align 4, !tbaa !31
  %unread_marker = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 72
  store i32 0, i32* %unread_marker, align 4, !tbaa !2
  %marker = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 78
  %0 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %saw_SOI = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %0, i64 0, i32 5
  store i32 0, i32* %saw_SOI, align 8, !tbaa !32
  %saw_SOF = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %0, i64 0, i32 6
  store i32 0, i32* %saw_SOF, align 4, !tbaa !33
  %discarded_bytes = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %0, i64 0, i32 8
  store i32 0, i32* %discarded_bytes, align 4, !tbaa !23
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @read_markers(%struct.jpeg_decompress_struct* %cinfo) #0 {
entry:
  %bits.i = alloca [17 x i8], align 16
  %huffval.i = alloca [256 x i8], align 16
  %unread_marker = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 72
  %marker = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 78
  %src.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5
  %err.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %0 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  %arrayidx.i154 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 0
  %arrayidx6.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 0
  %arrayidx8.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 0
  %arrayidx.1.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 1
  %arrayidx6.1.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 1
  %arrayidx8.1.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 1
  %arrayidx.2.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 2
  %arrayidx6.2.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 2
  %arrayidx8.2.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 2
  %arrayidx.3.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 3
  %arrayidx6.3.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 3
  %arrayidx8.3.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 3
  %arrayidx.4.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 4
  %arrayidx6.4.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 4
  %arrayidx8.4.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 4
  %arrayidx.5.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 5
  %arrayidx6.5.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 5
  %arrayidx8.5.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 5
  %arrayidx.6.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 6
  %arrayidx6.6.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 6
  %arrayidx8.6.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 6
  %arrayidx.7.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 7
  %arrayidx6.7.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 7
  %arrayidx8.7.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 7
  %arrayidx.8.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 8
  %arrayidx6.8.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 8
  %arrayidx8.8.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 8
  %arrayidx.9.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 9
  %arrayidx6.9.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 9
  %arrayidx8.9.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 9
  %arrayidx.10.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 10
  %arrayidx6.10.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 10
  %arrayidx8.10.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 10
  %arrayidx.11.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 11
  %arrayidx6.11.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 11
  %arrayidx8.11.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 11
  %arrayidx.12.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 12
  %arrayidx6.12.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 12
  %arrayidx8.12.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 12
  %arrayidx.13.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 13
  %arrayidx6.13.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 13
  %arrayidx8.13.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 13
  %arrayidx.14.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 14
  %arrayidx6.14.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 14
  %arrayidx8.14.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 14
  %arrayidx.15.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 15
  %arrayidx6.15.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 15
  %arrayidx8.15.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 15
  %restart_interval.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 49
  %jpeg_color_space.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 9
  %CCIR601_sampling.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 56
  %saw_JFIF_marker.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 50
  %density_unit.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 51
  %X_density.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 52
  %Y_density.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 53
  %saw_Adobe_marker.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 54
  %Adobe_transform.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 55
  %1 = getelementptr inbounds [17 x i8], [17 x i8]* %bits.i, i64 0, i64 0
  %2 = getelementptr inbounds [256 x i8], [256 x i8]* %huffval.i, i64 0, i64 0
  %arrayidx73.i = getelementptr inbounds [17 x i8], [17 x i8]* %bits.i, i64 0, i64 1
  %arrayidx76.i = getelementptr inbounds [17 x i8], [17 x i8]* %bits.i, i64 0, i64 2
  %arrayidx82.i = getelementptr inbounds [17 x i8], [17 x i8]* %bits.i, i64 0, i64 4
  %arrayidx94.i = getelementptr inbounds [17 x i8], [17 x i8]* %bits.i, i64 0, i64 8
  %arrayidx130.i = getelementptr inbounds [17 x i8], [17 x i8]* %bits.i, i64 0, i64 16
  %3 = bitcast i8* %arrayidx76.i to i16*
  %4 = bitcast i8* %arrayidx82.i to i32*
  %5 = bitcast i8* %arrayidx94.i to i32*
  %6 = bitcast i8* %arrayidx94.i to i64*
  %.pre = load i32, i32* %unread_marker, align 4, !tbaa !2
  br label %for.cond

for.cond:                                         ; preds = %sw.epilog, %entry
  %7 = phi i32 [ 0, %sw.epilog ], [ %.pre, %entry ]
  %cmp = icmp eq i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end9

if.then:                                          ; preds = %for.cond
  %8 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %saw_SOI = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %8, i64 0, i32 5
  %9 = load i32, i32* %saw_SOI, align 8, !tbaa !32
  %tobool = icmp eq i32 %9, 0
  br i1 %tobool, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.then
  %10 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src.i, align 8, !tbaa !16
  %next_input_byte1.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %10, i64 0, i32 0
  %bytes_in_buffer2.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %10, i64 0, i32 1
  %11 = load i64, i64* %bytes_in_buffer2.i, align 8, !tbaa !19
  %cmp.i = icmp eq i64 %11, 0
  br i1 %cmp.i, label %if.then.i, label %if.end6.i

if.then.i:                                        ; preds = %if.then1
  %fill_input_buffer.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %10, i64 0, i32 3
  %12 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer.i, align 8, !tbaa !20
  %call.i = tail call i32 %12(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %return.loopexit489, label %if.end.i

if.end.i:                                         ; preds = %if.then.i
  %13 = load i64, i64* %bytes_in_buffer2.i, align 8, !tbaa !19
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.end.i, %if.then1
  %bytes_in_buffer.0.i = phi i64 [ %13, %if.end.i ], [ %11, %if.then1 ]
  %next_input_byte.0.i = load i8*, i8** %next_input_byte1.i, align 8, !tbaa !17
  %dec.i = add i64 %bytes_in_buffer.0.i, -1
  %incdec.ptr.i = getelementptr inbounds i8, i8* %next_input_byte.0.i, i64 1
  %14 = load i8, i8* %next_input_byte.0.i, align 1, !tbaa !21
  %conv.i = zext i8 %14 to i32
  %cmp8.i = icmp eq i64 %dec.i, 0
  br i1 %cmp8.i, label %if.then10.i, label %if.end18.i

if.then10.i:                                      ; preds = %if.end6.i
  %fill_input_buffer11.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %10, i64 0, i32 3
  %15 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer11.i, align 8, !tbaa !20
  %call12.i = tail call i32 %15(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool13.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.i, label %return.loopexit489, label %if.end15.i

if.end15.i:                                       ; preds = %if.then10.i
  %16 = load i8*, i8** %next_input_byte1.i, align 8, !tbaa !17
  %17 = load i64, i64* %bytes_in_buffer2.i, align 8, !tbaa !19
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.end15.i, %if.end6.i
  %next_input_byte.1.i = phi i8* [ %16, %if.end15.i ], [ %incdec.ptr.i, %if.end6.i ]
  %bytes_in_buffer.1.i = phi i64 [ %17, %if.end15.i ], [ %dec.i, %if.end6.i ]
  %dec19.i = add i64 %bytes_in_buffer.1.i, -1
  %incdec.ptr20.i = getelementptr inbounds i8, i8* %next_input_byte.1.i, i64 1
  %18 = load i8, i8* %next_input_byte.1.i, align 1, !tbaa !21
  %conv21.i = zext i8 %18 to i32
  %cmp24.i = icmp ne i8 %14, -1
  %cmp26.i = icmp ne i8 %18, -40
  %or.cond.i = or i1 %cmp24.i, %cmp26.i
  br i1 %or.cond.i, label %if.then28.i, label %first_marker.exit

if.then28.i:                                      ; preds = %if.end18.i
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 5
  store i32 52, i32* %msg_code.i, align 8, !tbaa !11
  %arrayidx.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 6, i32 0, i64 0
  store i32 %conv.i, i32* %arrayidx.i, align 4, !tbaa !14
  %arrayidx33.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 6, i32 0, i64 1
  store i32 %conv21.i, i32* %arrayidx33.i, align 4, !tbaa !14
  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 0
  %20 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !34
  tail call void %20(%struct.jpeg_common_struct* nonnull %0) #4
  br label %first_marker.exit

first_marker.exit:                                ; preds = %if.end18.i, %if.then28.i
  store i32 %conv21.i, i32* %unread_marker, align 4, !tbaa !2
  store i8* %incdec.ptr20.i, i8** %next_input_byte1.i, align 8, !tbaa !17
  store i64 %dec19.i, i64* %bytes_in_buffer2.i, align 8, !tbaa !19
  br label %if.end9

if.else:                                          ; preds = %if.then
  %call4 = tail call fastcc i32 @next_marker(%struct.jpeg_decompress_struct* nonnull %cinfo)
  %tobool5 = icmp eq i32 %call4, 0
  br i1 %tobool5, label %return.loopexit489, label %if.else.if.end9thread-pre-split_crit_edge

if.else.if.end9thread-pre-split_crit_edge:        ; preds = %if.else
  %.pr.pre = load i32, i32* %unread_marker, align 4, !tbaa !2
  br label %if.end9

if.end9:                                          ; preds = %first_marker.exit, %if.else.if.end9thread-pre-split_crit_edge, %for.cond
  %21 = phi i32 [ %7, %for.cond ], [ %.pr.pre, %if.else.if.end9thread-pre-split_crit_edge ], [ %conv21.i, %first_marker.exit ]
  switch i32 %21, label %sw.default [
    i32 216, label %sw.bb
    i32 192, label %sw.bb15
    i32 193, label %sw.bb15
    i32 194, label %sw.bb20
    i32 201, label %sw.bb25
    i32 202, label %sw.bb30
    i32 195, label %sw.bb35
    i32 197, label %sw.bb35
    i32 198, label %sw.bb35
    i32 199, label %sw.bb35
    i32 200, label %sw.bb35
    i32 203, label %sw.bb35
    i32 205, label %sw.bb35
    i32 206, label %sw.bb35
    i32 207, label %sw.bb35
    i32 218, label %sw.bb39
    i32 217, label %sw.bb45
    i32 204, label %sw.bb50
    i32 196, label %sw.bb55
    i32 219, label %sw.bb60
    i32 221, label %sw.bb65
    i32 224, label %sw.bb70
    i32 225, label %sw.bb70
    i32 226, label %sw.bb70
    i32 227, label %sw.bb70
    i32 228, label %sw.bb70
    i32 229, label %sw.bb70
    i32 230, label %sw.bb70
    i32 231, label %sw.bb70
    i32 232, label %sw.bb70
    i32 233, label %sw.bb70
    i32 234, label %sw.bb70
    i32 235, label %sw.bb70
    i32 236, label %sw.bb70
    i32 237, label %sw.bb70
    i32 238, label %sw.bb70
    i32 239, label %sw.bb70
    i32 254, label %sw.bb78
    i32 208, label %sw.bb84
    i32 209, label %sw.bb84
    i32 210, label %sw.bb84
    i32 211, label %sw.bb84
    i32 212, label %sw.bb84
    i32 213, label %sw.bb84
    i32 214, label %sw.bb84
    i32 215, label %sw.bb84
    i32 1, label %sw.bb84
    i32 220, label %sw.bb94
  ]

sw.bb:                                            ; preds = %if.end9
  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code.i150 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 5
  store i32 101, i32* %msg_code.i150, align 8, !tbaa !11
  %emit_message.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 1
  %23 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message.i, align 8, !tbaa !15
  tail call void %23(%struct.jpeg_common_struct* %0, i32 1) #4
  %24 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %saw_SOI.i = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %24, i64 0, i32 5
  %25 = load i32, i32* %saw_SOI.i, align 8, !tbaa !32
  %tobool.i151 = icmp eq i32 %25, 0
  br i1 %tobool.i151, label %get_soi.exit, label %if.then.i153

if.then.i153:                                     ; preds = %sw.bb
  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code3.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 5
  store i32 60, i32* %msg_code3.i, align 8, !tbaa !11
  %error_exit.i152 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 0
  %27 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i152, align 8, !tbaa !34
  tail call void %27(%struct.jpeg_common_struct* nonnull %0) #4
  %.pre461 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  br label %get_soi.exit

get_soi.exit:                                     ; preds = %sw.bb, %if.then.i153
  %28 = phi %struct.jpeg_marker_reader* [ %24, %sw.bb ], [ %.pre461, %if.then.i153 ]
  store i8 0, i8* %arrayidx.i154, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.1.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.1.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.1.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.2.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.2.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.2.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.3.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.3.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.3.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.4.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.4.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.4.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.5.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.5.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.5.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.6.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.6.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.6.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.7.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.7.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.7.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.8.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.8.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.8.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.9.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.9.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.9.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.10.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.10.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.10.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.11.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.11.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.11.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.12.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.12.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.12.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.13.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.13.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.13.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.14.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.14.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.14.i, align 1, !tbaa !21
  store i8 0, i8* %arrayidx.15.i, align 1, !tbaa !21
  store i8 1, i8* %arrayidx6.15.i, align 1, !tbaa !21
  store i8 5, i8* %arrayidx8.15.i, align 1, !tbaa !21
  store i32 0, i32* %restart_interval.i, align 8, !tbaa !35
  store i32 0, i32* %jpeg_color_space.i, align 4, !tbaa !36
  store i32 0, i32* %CCIR601_sampling.i, align 8, !tbaa !37
  store i32 0, i32* %saw_JFIF_marker.i, align 4, !tbaa !38
  store i8 0, i8* %density_unit.i, align 8, !tbaa !39
  store i16 1, i16* %X_density.i, align 2, !tbaa !40
  store i16 1, i16* %Y_density.i, align 4, !tbaa !41
  store i32 0, i32* %saw_Adobe_marker.i, align 8, !tbaa !42
  store i8 0, i8* %Adobe_transform.i, align 4, !tbaa !43
  %saw_SOI10.i = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %28, i64 0, i32 5
  store i32 1, i32* %saw_SOI10.i, align 8, !tbaa !32
  br label %sw.epilog

sw.bb15:                                          ; preds = %if.end9, %if.end9
  %call16 = tail call fastcc i32 @get_sof(%struct.jpeg_decompress_struct* nonnull %cinfo, i32 0, i32 0)
  %tobool17 = icmp eq i32 %call16, 0
  br i1 %tobool17, label %return.loopexit489, label %sw.epilog

sw.bb20:                                          ; preds = %if.end9
  %call21 = tail call fastcc i32 @get_sof(%struct.jpeg_decompress_struct* nonnull %cinfo, i32 1, i32 0)
  %tobool22 = icmp eq i32 %call21, 0
  br i1 %tobool22, label %return.loopexit489, label %sw.epilog

sw.bb25:                                          ; preds = %if.end9
  %call26 = tail call fastcc i32 @get_sof(%struct.jpeg_decompress_struct* nonnull %cinfo, i32 0, i32 1)
  %tobool27 = icmp eq i32 %call26, 0
  br i1 %tobool27, label %return.loopexit489, label %sw.epilog

sw.bb30:                                          ; preds = %if.end9
  %call31 = tail call fastcc i32 @get_sof(%struct.jpeg_decompress_struct* nonnull %cinfo, i32 1, i32 1)
  %tobool32 = icmp eq i32 %call31, 0
  br i1 %tobool32, label %return.loopexit489, label %sw.epilog

sw.bb35:                                          ; preds = %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 5
  store i32 59, i32* %msg_code, align 8, !tbaa !11
  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 6, i32 0, i64 0
  store i32 %21, i32* %arrayidx, align 4, !tbaa !14
  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 0
  %30 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !34
  tail call void %30(%struct.jpeg_common_struct* %0) #4
  br label %sw.epilog

sw.bb39:                                          ; preds = %if.end9
  %31 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src.i, align 8, !tbaa !16
  %next_input_byte1.i156 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %31, i64 0, i32 0
  %32 = load i8*, i8** %next_input_byte1.i156, align 8, !tbaa !17
  %bytes_in_buffer2.i157 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %31, i64 0, i32 1
  %33 = load i64, i64* %bytes_in_buffer2.i157, align 8, !tbaa !19
  %34 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %saw_SOF.i = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %34, i64 0, i32 6
  %35 = load i32, i32* %saw_SOF.i, align 4, !tbaa !33
  %tobool.i159 = icmp eq i32 %35, 0
  br i1 %tobool.i159, label %if.then.i163, label %do.body.i

if.then.i163:                                     ; preds = %sw.bb39
  %36 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code.i161 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %36, i64 0, i32 5
  store i32 61, i32* %msg_code.i161, align 8, !tbaa !11
  %error_exit.i162 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %36, i64 0, i32 0
  %37 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i162, align 8, !tbaa !34
  tail call void %37(%struct.jpeg_common_struct* nonnull %0) #4
  br label %do.body.i

do.body.i:                                        ; preds = %if.then.i163, %sw.bb39
  %cmp.i164 = icmp eq i64 %33, 0
  br i1 %cmp.i164, label %if.then4.i, label %if.end10.i

if.then4.i:                                       ; preds = %do.body.i
  %fill_input_buffer.i165 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %31, i64 0, i32 3
  %38 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer.i165, align 8, !tbaa !20
  %call.i166 = tail call i32 %38(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool5.i = icmp eq i32 %call.i166, 0
  br i1 %tobool5.i, label %return, label %if.end7.i

if.end7.i:                                        ; preds = %if.then4.i
  %39 = load i8*, i8** %next_input_byte1.i156, align 8, !tbaa !17
  %40 = load i64, i64* %bytes_in_buffer2.i157, align 8, !tbaa !19
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.end7.i, %do.body.i
  %next_input_byte.0.i167 = phi i8* [ %39, %if.end7.i ], [ %32, %do.body.i ]
  %bytes_in_buffer.0.i168 = phi i64 [ %40, %if.end7.i ], [ %33, %do.body.i ]
  %dec.i169 = add i64 %bytes_in_buffer.0.i168, -1
  %incdec.ptr.i170 = getelementptr inbounds i8, i8* %next_input_byte.0.i167, i64 1
  %41 = load i8, i8* %next_input_byte.0.i167, align 1, !tbaa !21
  %conv.i171 = zext i8 %41 to i64
  %shl.i = shl nuw nsw i64 %conv.i171, 8
  %cmp12.i = icmp eq i64 %dec.i169, 0
  br i1 %cmp12.i, label %if.then14.i, label %if.end22.i

if.then14.i:                                      ; preds = %if.end10.i
  %fill_input_buffer15.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %31, i64 0, i32 3
  %42 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer15.i, align 8, !tbaa !20
  %call16.i = tail call i32 %42(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool17.i = icmp eq i32 %call16.i, 0
  br i1 %tobool17.i, label %return, label %if.end19.i

if.end19.i:                                       ; preds = %if.then14.i
  %43 = load i8*, i8** %next_input_byte1.i156, align 8, !tbaa !17
  %44 = load i64, i64* %bytes_in_buffer2.i157, align 8, !tbaa !19
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.end19.i, %if.end10.i
  %next_input_byte.1.i172 = phi i8* [ %43, %if.end19.i ], [ %incdec.ptr.i170, %if.end10.i ]
  %bytes_in_buffer.1.i173 = phi i64 [ %44, %if.end19.i ], [ %dec.i169, %if.end10.i ]
  %dec23.i = add i64 %bytes_in_buffer.1.i173, -1
  %incdec.ptr24.i = getelementptr inbounds i8, i8* %next_input_byte.1.i172, i64 1
  %45 = load i8, i8* %next_input_byte.1.i172, align 1, !tbaa !21
  %conv25.i = zext i8 %45 to i64
  %add.i = or i64 %conv25.i, %shl.i
  %cmp27.i = icmp eq i64 %dec23.i, 0
  br i1 %cmp27.i, label %if.then29.i, label %if.end37.i

if.then29.i:                                      ; preds = %if.end22.i
  %fill_input_buffer30.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %31, i64 0, i32 3
  %46 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer30.i, align 8, !tbaa !20
  %call31.i = tail call i32 %46(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool32.i = icmp eq i32 %call31.i, 0
  br i1 %tobool32.i, label %return, label %if.end34.i

if.end34.i:                                       ; preds = %if.then29.i
  %47 = load i8*, i8** %next_input_byte1.i156, align 8, !tbaa !17
  %48 = load i64, i64* %bytes_in_buffer2.i157, align 8, !tbaa !19
  br label %if.end37.i

if.end37.i:                                       ; preds = %if.end34.i, %if.end22.i
  %next_input_byte.2.i = phi i8* [ %47, %if.end34.i ], [ %incdec.ptr24.i, %if.end22.i ]
  %bytes_in_buffer.2.i = phi i64 [ %48, %if.end34.i ], [ %dec23.i, %if.end22.i ]
  %49 = load i8, i8* %next_input_byte.2.i, align 1, !tbaa !21
  %conv40.i = zext i8 %49 to i32
  %mul.i = shl nuw nsw i32 %conv40.i, 1
  %add43.i = add nuw nsw i32 %mul.i, 6
  %conv44358.i = zext i32 %add43.i to i64
  %cmp45.i = icmp ne i64 %add.i, %conv44358.i
  %50 = add i8 %49, -1
  %51 = icmp ugt i8 %50, 3
  %52 = or i1 %51, %cmp45.i
  br i1 %52, label %if.then52.i, label %if.end57.i

if.then52.i:                                      ; preds = %if.end37.i
  %53 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code54.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %53, i64 0, i32 5
  store i32 9, i32* %msg_code54.i, align 8, !tbaa !11
  %error_exit56.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %53, i64 0, i32 0
  %54 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit56.i, align 8, !tbaa !34
  tail call void %54(%struct.jpeg_common_struct* nonnull %0) #4
  br label %if.end57.i

if.end57.i:                                       ; preds = %if.end37.i, %if.then52.i
  %55 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code59.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %55, i64 0, i32 5
  store i32 102, i32* %msg_code59.i, align 8, !tbaa !11
  %arrayidx.i174 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %55, i64 0, i32 6, i32 0, i64 0
  store i32 %conv40.i, i32* %arrayidx.i174, align 4, !tbaa !14
  %emit_message.i175 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %55, i64 0, i32 1
  %56 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message.i175, align 8, !tbaa !15
  tail call void %56(%struct.jpeg_common_struct* nonnull %0, i32 1) #4
  %comps_in_scan.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 62
  store i32 %conv40.i, i32* %comps_in_scan.i, align 8, !tbaa !44
  %next_input_byte.3369.i = getelementptr inbounds i8, i8* %next_input_byte.2.i, i64 1
  %bytes_in_buffer.3370.i = add i64 %bytes_in_buffer.2.i, -1
  %cmp63371.i = icmp eq i8 %49, 0
  %cmp66372.i = icmp eq i64 %bytes_in_buffer.3370.i, 0
  br i1 %cmp63371.i, label %do.body136.i, label %do.body65.lr.ph.i

do.body65.lr.ph.i:                                ; preds = %if.end57.i
  %fill_input_buffer69.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %31, i64 0, i32 3
  %comp_info.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43
  %num_components.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8
  %57 = zext i8 %49 to i64
  br label %do.body65.i

do.body65.i:                                      ; preds = %id_found.i, %do.body65.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %do.body65.lr.ph.i ], [ %indvars.iv.next.i, %id_found.i ]
  %cmp66376.i = phi i1 [ %cmp66372.i, %do.body65.lr.ph.i ], [ %cmp66.i, %id_found.i ]
  %bytes_in_buffer.3375.i = phi i64 [ %bytes_in_buffer.3370.i, %do.body65.lr.ph.i ], [ %bytes_in_buffer.3.i, %id_found.i ]
  %next_input_byte.3374.i = phi i8* [ %next_input_byte.3369.i, %do.body65.lr.ph.i ], [ %next_input_byte.3.i, %id_found.i ]
  br i1 %cmp66376.i, label %if.then68.i, label %if.end76.i

if.then68.i:                                      ; preds = %do.body65.i
  %58 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer69.i, align 8, !tbaa !20
  %call70.i = tail call i32 %58(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool71.i = icmp eq i32 %call70.i, 0
  br i1 %tobool71.i, label %return.loopexit, label %if.end73.i

if.end73.i:                                       ; preds = %if.then68.i
  %59 = load i8*, i8** %next_input_byte1.i156, align 8, !tbaa !17
  %60 = load i64, i64* %bytes_in_buffer2.i157, align 8, !tbaa !19
  br label %if.end76.i

if.end76.i:                                       ; preds = %if.end73.i, %do.body65.i
  %next_input_byte.4.i = phi i8* [ %59, %if.end73.i ], [ %next_input_byte.3374.i, %do.body65.i ]
  %bytes_in_buffer.4.i = phi i64 [ %60, %if.end73.i ], [ %bytes_in_buffer.3375.i, %do.body65.i ]
  %dec77.i = add i64 %bytes_in_buffer.4.i, -1
  %incdec.ptr78.i = getelementptr inbounds i8, i8* %next_input_byte.4.i, i64 1
  %61 = load i8, i8* %next_input_byte.4.i, align 1, !tbaa !21
  %conv79.i = zext i8 %61 to i32
  %cmp83.i = icmp eq i64 %dec77.i, 0
  br i1 %cmp83.i, label %if.then85.i, label %if.end93.i

if.then85.i:                                      ; preds = %if.end76.i
  %62 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer69.i, align 8, !tbaa !20
  %call87.i = tail call i32 %62(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool88.i = icmp eq i32 %call87.i, 0
  br i1 %tobool88.i, label %return.loopexit, label %if.end90.i

if.end90.i:                                       ; preds = %if.then85.i
  %63 = load i8*, i8** %next_input_byte1.i156, align 8, !tbaa !17
  %64 = load i64, i64* %bytes_in_buffer2.i157, align 8, !tbaa !19
  br label %if.end93.i

if.end93.i:                                       ; preds = %if.end90.i, %if.end76.i
  %next_input_byte.5.i = phi i8* [ %63, %if.end90.i ], [ %incdec.ptr78.i, %if.end76.i ]
  %bytes_in_buffer.5.i = phi i64 [ %64, %if.end90.i ], [ %dec77.i, %if.end76.i ]
  %65 = load i8, i8* %next_input_byte.5.i, align 1, !tbaa !21
  %conv96.i = zext i8 %65 to i32
  %66 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info.i, align 8, !tbaa !30
  %67 = load i32, i32* %num_components.i, align 8, !tbaa !45
  %cmp100366.i = icmp sgt i32 %67, 0
  br i1 %cmp100366.i, label %for.body102.i.preheader, label %for.end.i

for.body102.i.preheader:                          ; preds = %if.end93.i
  br label %for.body102.i

for.body102.i:                                    ; preds = %for.body102.i.preheader, %for.inc.i
  %compptr.0368.i = phi %struct.jpeg_component_info* [ %incdec.ptr107.i, %for.inc.i ], [ %66, %for.body102.i.preheader ]
  %ci.0367.i = phi i32 [ %inc.i, %for.inc.i ], [ 0, %for.body102.i.preheader ]
  %component_id.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0368.i, i64 0, i32 0
  %68 = load i32, i32* %component_id.i, align 8, !tbaa !46
  %cmp103.i = icmp eq i32 %conv79.i, %68
  br i1 %cmp103.i, label %id_found.i.loopexit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body102.i
  %inc.i = add nuw nsw i32 %ci.0367.i, 1
  %incdec.ptr107.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0368.i, i64 1
  %cmp100.i = icmp slt i32 %inc.i, %67
  br i1 %cmp100.i, label %for.body102.i, label %for.end.i.loopexit

for.end.i.loopexit:                               ; preds = %for.inc.i
  %incdec.ptr107.i.lcssa = phi %struct.jpeg_component_info* [ %incdec.ptr107.i, %for.inc.i ]
  br label %for.end.i

for.end.i:                                        ; preds = %for.end.i.loopexit, %if.end93.i
  %compptr.0.lcssa.i = phi %struct.jpeg_component_info* [ %66, %if.end93.i ], [ %incdec.ptr107.i.lcssa, %for.end.i.loopexit ]
  %69 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code109.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %69, i64 0, i32 5
  store i32 5, i32* %msg_code109.i, align 8, !tbaa !11
  %arrayidx113.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %69, i64 0, i32 6, i32 0, i64 0
  store i32 %conv79.i, i32* %arrayidx113.i, align 4, !tbaa !14
  %error_exit115.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %69, i64 0, i32 0
  %70 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit115.i, align 8, !tbaa !34
  tail call void %70(%struct.jpeg_common_struct* nonnull %0) #4
  br label %id_found.i

id_found.i.loopexit:                              ; preds = %for.body102.i
  %compptr.0368.i.lcssa = phi %struct.jpeg_component_info* [ %compptr.0368.i, %for.body102.i ]
  br label %id_found.i

id_found.i:                                       ; preds = %id_found.i.loopexit, %for.end.i
  %compptr.0362.i = phi %struct.jpeg_component_info* [ %compptr.0.lcssa.i, %for.end.i ], [ %compptr.0368.i.lcssa, %id_found.i.loopexit ]
  %arrayidx116.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 63, i64 %indvars.iv.i
  store %struct.jpeg_component_info* %compptr.0362.i, %struct.jpeg_component_info** %arrayidx116.i, align 8, !tbaa !29
  %shr360.i = lshr i32 %conv96.i, 4
  %dc_tbl_no.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0362.i, i64 0, i32 5
  store i32 %shr360.i, i32* %dc_tbl_no.i, align 4, !tbaa !48
  %and117.i = and i32 %conv96.i, 15
  %ac_tbl_no.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0362.i, i64 0, i32 6
  store i32 %and117.i, i32* %ac_tbl_no.i, align 8, !tbaa !49
  %71 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %arraydecay.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %71, i64 0, i32 6, i32 0, i64 0
  store i32 %conv79.i, i32* %arraydecay.i, align 4, !tbaa !14
  %72 = load i32, i32* %dc_tbl_no.i, align 4, !tbaa !48
  %arrayidx124.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %71, i64 0, i32 6, i32 0, i64 1
  store i32 %72, i32* %arrayidx124.i, align 4, !tbaa !14
  %73 = load i32, i32* %ac_tbl_no.i, align 8, !tbaa !49
  %arrayidx126.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %71, i64 0, i32 6, i32 0, i64 2
  store i32 %73, i32* %arrayidx126.i, align 4, !tbaa !14
  %msg_code128.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %71, i64 0, i32 5
  store i32 103, i32* %msg_code128.i, align 8, !tbaa !11
  %emit_message130.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %71, i64 0, i32 1
  %74 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message130.i, align 8, !tbaa !15
  tail call void %74(%struct.jpeg_common_struct* %0, i32 1) #4
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %next_input_byte.3.i = getelementptr inbounds i8, i8* %next_input_byte.5.i, i64 1
  %bytes_in_buffer.3.i = add i64 %bytes_in_buffer.5.i, -1
  %cmp63.i = icmp slt i64 %indvars.iv.next.i, %57
  %cmp66.i = icmp eq i64 %bytes_in_buffer.3.i, 0
  br i1 %cmp63.i, label %do.body65.i, label %do.body136.i.loopexit

do.body136.i.loopexit:                            ; preds = %id_found.i
  %cmp66.i.lcssa = phi i1 [ %cmp66.i, %id_found.i ]
  %bytes_in_buffer.3.i.lcssa = phi i64 [ %bytes_in_buffer.3.i, %id_found.i ]
  %next_input_byte.3.i.lcssa = phi i8* [ %next_input_byte.3.i, %id_found.i ]
  br label %do.body136.i

do.body136.i:                                     ; preds = %do.body136.i.loopexit, %if.end57.i
  %cmp66.lcssa.i = phi i1 [ %cmp66372.i, %if.end57.i ], [ %cmp66.i.lcssa, %do.body136.i.loopexit ]
  %bytes_in_buffer.3.lcssa.i = phi i64 [ %bytes_in_buffer.3370.i, %if.end57.i ], [ %bytes_in_buffer.3.i.lcssa, %do.body136.i.loopexit ]
  %next_input_byte.3.lcssa.i = phi i8* [ %next_input_byte.3369.i, %if.end57.i ], [ %next_input_byte.3.i.lcssa, %do.body136.i.loopexit ]
  br i1 %cmp66.lcssa.i, label %if.then139.i, label %if.end147.i

if.then139.i:                                     ; preds = %do.body136.i
  %fill_input_buffer140.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %31, i64 0, i32 3
  %75 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer140.i, align 8, !tbaa !20
  %call141.i = tail call i32 %75(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool142.i = icmp eq i32 %call141.i, 0
  br i1 %tobool142.i, label %return, label %if.end144.i

if.end144.i:                                      ; preds = %if.then139.i
  %76 = load i8*, i8** %next_input_byte1.i156, align 8, !tbaa !17
  %77 = load i64, i64* %bytes_in_buffer2.i157, align 8, !tbaa !19
  br label %if.end147.i

if.end147.i:                                      ; preds = %if.end144.i, %do.body136.i
  %next_input_byte.6.i = phi i8* [ %76, %if.end144.i ], [ %next_input_byte.3.lcssa.i, %do.body136.i ]
  %bytes_in_buffer.6.i = phi i64 [ %77, %if.end144.i ], [ %bytes_in_buffer.3.lcssa.i, %do.body136.i ]
  %dec148.i = add i64 %bytes_in_buffer.6.i, -1
  %incdec.ptr149.i = getelementptr inbounds i8, i8* %next_input_byte.6.i, i64 1
  %78 = load i8, i8* %next_input_byte.6.i, align 1, !tbaa !21
  %conv150.i = zext i8 %78 to i32
  %Ss.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 68
  store i32 %conv150.i, i32* %Ss.i, align 4, !tbaa !50
  %cmp154.i = icmp eq i64 %dec148.i, 0
  br i1 %cmp154.i, label %if.then156.i, label %if.end164.i

if.then156.i:                                     ; preds = %if.end147.i
  %fill_input_buffer157.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %31, i64 0, i32 3
  %79 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer157.i, align 8, !tbaa !20
  %call158.i = tail call i32 %79(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool159.i = icmp eq i32 %call158.i, 0
  br i1 %tobool159.i, label %return, label %if.end161.i

if.end161.i:                                      ; preds = %if.then156.i
  %80 = load i8*, i8** %next_input_byte1.i156, align 8, !tbaa !17
  %81 = load i64, i64* %bytes_in_buffer2.i157, align 8, !tbaa !19
  br label %if.end164.i

if.end164.i:                                      ; preds = %if.end161.i, %if.end147.i
  %next_input_byte.7.i = phi i8* [ %80, %if.end161.i ], [ %incdec.ptr149.i, %if.end147.i ]
  %bytes_in_buffer.7.i = phi i64 [ %81, %if.end161.i ], [ %dec148.i, %if.end147.i ]
  %dec165.i = add i64 %bytes_in_buffer.7.i, -1
  %incdec.ptr166.i = getelementptr inbounds i8, i8* %next_input_byte.7.i, i64 1
  %82 = load i8, i8* %next_input_byte.7.i, align 1, !tbaa !21
  %conv167.i = zext i8 %82 to i32
  %Se.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 69
  store i32 %conv167.i, i32* %Se.i, align 8, !tbaa !51
  %cmp171.i = icmp eq i64 %dec165.i, 0
  br i1 %cmp171.i, label %if.then173.i, label %if.end43

if.then173.i:                                     ; preds = %if.end164.i
  %fill_input_buffer174.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %31, i64 0, i32 3
  %83 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer174.i, align 8, !tbaa !20
  %call175.i = tail call i32 %83(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool176.i = icmp eq i32 %call175.i, 0
  br i1 %tobool176.i, label %return, label %if.end178.i

if.end178.i:                                      ; preds = %if.then173.i
  %84 = load i8*, i8** %next_input_byte1.i156, align 8, !tbaa !17
  %85 = load i64, i64* %bytes_in_buffer2.i157, align 8, !tbaa !19
  br label %if.end43

if.end43:                                         ; preds = %if.end178.i, %if.end164.i
  %next_input_byte.8.i = phi i8* [ %84, %if.end178.i ], [ %incdec.ptr166.i, %if.end164.i ]
  %bytes_in_buffer.8.i = phi i64 [ %85, %if.end178.i ], [ %dec165.i, %if.end164.i ]
  %dec182.i = add i64 %bytes_in_buffer.8.i, -1
  %incdec.ptr183.i = getelementptr inbounds i8, i8* %next_input_byte.8.i, i64 1
  %86 = load i8, i8* %next_input_byte.8.i, align 1, !tbaa !21
  %conv184.i = zext i8 %86 to i32
  %shr187359.i = lshr i32 %conv184.i, 4
  %Ah.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 70
  store i32 %shr187359.i, i32* %Ah.i, align 4, !tbaa !52
  %and189.i = and i32 %conv184.i, 15
  %Al.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 71
  store i32 %and189.i, i32* %Al.i, align 8, !tbaa !53
  %87 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %arraydecay195.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i64 0, i32 6, i32 0, i64 0
  %88 = load i32, i32* %Ss.i, align 4, !tbaa !50
  store i32 %88, i32* %arraydecay195.i, align 4, !tbaa !14
  %89 = load i32, i32* %Se.i, align 8, !tbaa !51
  %arrayidx199.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i64 0, i32 6, i32 0, i64 1
  store i32 %89, i32* %arrayidx199.i, align 4, !tbaa !14
  %90 = load i32, i32* %Ah.i, align 4, !tbaa !52
  %arrayidx201.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i64 0, i32 6, i32 0, i64 2
  store i32 %90, i32* %arrayidx201.i, align 4, !tbaa !14
  %91 = load i32, i32* %Al.i, align 8, !tbaa !53
  %arrayidx203.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i64 0, i32 6, i32 0, i64 3
  store i32 %91, i32* %arrayidx203.i, align 4, !tbaa !14
  %msg_code205.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i64 0, i32 5
  store i32 104, i32* %msg_code205.i, align 8, !tbaa !11
  %emit_message207.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i64 0, i32 1
  %92 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message207.i, align 8, !tbaa !15
  tail call void %92(%struct.jpeg_common_struct* nonnull %0, i32 1) #4
  %93 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %next_restart_num.i = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %93, i64 0, i32 7
  store i32 0, i32* %next_restart_num.i, align 8, !tbaa !54
  %input_scan_number.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 34
  %94 = load i32, i32* %input_scan_number.i, align 4, !tbaa !31
  %inc211.i = add nsw i32 %94, 1
  store i32 %inc211.i, i32* %input_scan_number.i, align 4, !tbaa !31
  store i8* %incdec.ptr183.i, i8** %next_input_byte1.i156, align 8, !tbaa !17
  store i64 %dec182.i, i64* %bytes_in_buffer2.i157, align 8, !tbaa !19
  store i32 0, i32* %unread_marker, align 4, !tbaa !2
  br label %return

sw.bb45:                                          ; preds = %if.end9
  %95 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code47 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %95, i64 0, i32 5
  store i32 84, i32* %msg_code47, align 8, !tbaa !11
  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %95, i64 0, i32 1
  %96 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !15
  tail call void %96(%struct.jpeg_common_struct* %0, i32 1) #4
  store i32 0, i32* %unread_marker, align 4, !tbaa !2
  br label %return

sw.bb50:                                          ; preds = %if.end9
  %97 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src.i, align 8, !tbaa !16
  %next_input_byte1.i178 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %97, i64 0, i32 0
  %bytes_in_buffer2.i179 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %97, i64 0, i32 1
  %98 = load i64, i64* %bytes_in_buffer2.i179, align 8, !tbaa !19
  %cmp.i180 = icmp eq i64 %98, 0
  br i1 %cmp.i180, label %if.then.i184, label %if.end6.i193

if.then.i184:                                     ; preds = %sw.bb50
  %fill_input_buffer.i181 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %97, i64 0, i32 3
  %99 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer.i181, align 8, !tbaa !20
  %call.i182 = tail call i32 %99(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool.i183 = icmp eq i32 %call.i182, 0
  br i1 %tobool.i183, label %return.loopexit489, label %if.end.i185

if.end.i185:                                      ; preds = %if.then.i184
  %100 = load i64, i64* %bytes_in_buffer2.i179, align 8, !tbaa !19
  br label %if.end6.i193

if.end6.i193:                                     ; preds = %if.end.i185, %sw.bb50
  %bytes_in_buffer.0.i186 = phi i64 [ %100, %if.end.i185 ], [ %98, %sw.bb50 ]
  %next_input_byte.0.i187 = load i8*, i8** %next_input_byte1.i178, align 8, !tbaa !17
  %dec.i188 = add i64 %bytes_in_buffer.0.i186, -1
  %incdec.ptr.i189 = getelementptr inbounds i8, i8* %next_input_byte.0.i187, i64 1
  %101 = load i8, i8* %next_input_byte.0.i187, align 1, !tbaa !21
  %conv.i190 = zext i8 %101 to i64
  %shl.i191 = shl nuw nsw i64 %conv.i190, 8
  %cmp8.i192 = icmp eq i64 %dec.i188, 0
  br i1 %cmp8.i192, label %if.then10.i197, label %if.end18.i205

if.then10.i197:                                   ; preds = %if.end6.i193
  %fill_input_buffer11.i194 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %97, i64 0, i32 3
  %102 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer11.i194, align 8, !tbaa !20
  %call12.i195 = tail call i32 %102(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool13.i196 = icmp eq i32 %call12.i195, 0
  br i1 %tobool13.i196, label %return.loopexit489, label %if.end15.i198

if.end15.i198:                                    ; preds = %if.then10.i197
  %103 = load i8*, i8** %next_input_byte1.i178, align 8, !tbaa !17
  %104 = load i64, i64* %bytes_in_buffer2.i179, align 8, !tbaa !19
  br label %if.end18.i205

if.end18.i205:                                    ; preds = %if.end15.i198, %if.end6.i193
  %next_input_byte.1.i199 = phi i8* [ %103, %if.end15.i198 ], [ %incdec.ptr.i189, %if.end6.i193 ]
  %bytes_in_buffer.1.i200 = phi i64 [ %104, %if.end15.i198 ], [ %dec.i188, %if.end6.i193 ]
  %dec19.i201 = add i64 %bytes_in_buffer.1.i200, -1
  %incdec.ptr20.i202 = getelementptr inbounds i8, i8* %next_input_byte.1.i199, i64 1
  %105 = load i8, i8* %next_input_byte.1.i199, align 1, !tbaa !21
  %conv21.i203 = zext i8 %105 to i64
  %add.i204 = or i64 %conv21.i203, %shl.i191
  %cmp22192.i = icmp ugt i64 %add.i204, 2
  br i1 %cmp22192.i, label %do.body24.lr.ph.i, label %get_dac.exit

do.body24.lr.ph.i:                                ; preds = %if.end18.i205
  %fill_input_buffer28.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %97, i64 0, i32 3
  br label %do.body24.i

do.body24.i:                                      ; preds = %while.cond.backedge.i, %do.body24.lr.ph.i
  %bytes_in_buffer.2195.i = phi i64 [ %dec19.i201, %do.body24.lr.ph.i ], [ %dec53.i, %while.cond.backedge.i ]
  %next_input_byte.2194.i = phi i8* [ %incdec.ptr20.i202, %do.body24.lr.ph.i ], [ %incdec.ptr54.i, %while.cond.backedge.i ]
  %length.0193.in.i = phi i64 [ %add.i204, %do.body24.lr.ph.i ], [ %length.0193.i, %while.cond.backedge.i ]
  %length.0193.i = add nsw i64 %length.0193.in.i, -2
  %cmp25.i = icmp eq i64 %bytes_in_buffer.2195.i, 0
  br i1 %cmp25.i, label %if.then27.i, label %if.end35.i209

if.then27.i:                                      ; preds = %do.body24.i
  %106 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer28.i, align 8, !tbaa !20
  %call29.i = tail call i32 %106(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool30.i = icmp eq i32 %call29.i, 0
  br i1 %tobool30.i, label %return.loopexit486, label %if.end32.i

if.end32.i:                                       ; preds = %if.then27.i
  %107 = load i8*, i8** %next_input_byte1.i178, align 8, !tbaa !17
  %108 = load i64, i64* %bytes_in_buffer2.i179, align 8, !tbaa !19
  br label %if.end35.i209

if.end35.i209:                                    ; preds = %if.end32.i, %do.body24.i
  %next_input_byte.3.i207 = phi i8* [ %107, %if.end32.i ], [ %next_input_byte.2194.i, %do.body24.i ]
  %bytes_in_buffer.3.i208 = phi i64 [ %108, %if.end32.i ], [ %bytes_in_buffer.2195.i, %do.body24.i ]
  %dec36.i = add i64 %bytes_in_buffer.3.i208, -1
  %incdec.ptr37.i = getelementptr inbounds i8, i8* %next_input_byte.3.i207, i64 1
  %109 = load i8, i8* %next_input_byte.3.i207, align 1, !tbaa !21
  %conv38.i = zext i8 %109 to i32
  %cmp42.i = icmp eq i64 %dec36.i, 0
  br i1 %cmp42.i, label %if.then44.i, label %if.end52.i

if.then44.i:                                      ; preds = %if.end35.i209
  %110 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer28.i, align 8, !tbaa !20
  %call46.i = tail call i32 %110(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool47.i = icmp eq i32 %call46.i, 0
  br i1 %tobool47.i, label %return.loopexit486, label %if.end49.i

if.end49.i:                                       ; preds = %if.then44.i
  %111 = load i8*, i8** %next_input_byte1.i178, align 8, !tbaa !17
  %112 = load i64, i64* %bytes_in_buffer2.i179, align 8, !tbaa !19
  br label %if.end52.i

if.end52.i:                                       ; preds = %if.end49.i, %if.end35.i209
  %next_input_byte.4.i210 = phi i8* [ %111, %if.end49.i ], [ %incdec.ptr37.i, %if.end35.i209 ]
  %bytes_in_buffer.4.i211 = phi i64 [ %112, %if.end49.i ], [ %dec36.i, %if.end35.i209 ]
  %dec53.i = add i64 %bytes_in_buffer.4.i211, -1
  %incdec.ptr54.i = getelementptr inbounds i8, i8* %next_input_byte.4.i210, i64 1
  %113 = load i8, i8* %next_input_byte.4.i210, align 1, !tbaa !21
  %conv55.i = zext i8 %113 to i32
  %114 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code.i212 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %114, i64 0, i32 5
  store i32 78, i32* %msg_code.i212, align 8, !tbaa !11
  %arrayidx.i213 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %114, i64 0, i32 6, i32 0, i64 0
  store i32 %conv38.i, i32* %arrayidx.i213, align 4, !tbaa !14
  %arrayidx63.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %114, i64 0, i32 6, i32 0, i64 1
  store i32 %conv55.i, i32* %arrayidx63.i, align 4, !tbaa !14
  %emit_message.i214 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %114, i64 0, i32 1
  %115 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message.i214, align 8, !tbaa !15
  tail call void %115(%struct.jpeg_common_struct* %0, i32 1) #4
  %cmp67.i = icmp ugt i8 %109, 31
  br i1 %cmp67.i, label %if.end77.thread.i, label %if.end77.i

if.end77.thread.i:                                ; preds = %if.end52.i
  %116 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code71.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %116, i64 0, i32 5
  store i32 26, i32* %msg_code71.i, align 8, !tbaa !11
  %arrayidx75.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %116, i64 0, i32 6, i32 0, i64 0
  store i32 %conv38.i, i32* %arrayidx75.i, align 4, !tbaa !14
  %error_exit.i215 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %116, i64 0, i32 0
  %117 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i215, align 8, !tbaa !34
  tail call void %117(%struct.jpeg_common_struct* nonnull %0) #4
  br label %if.then80.i

if.end77.i:                                       ; preds = %if.end52.i
  %cmp78.i = icmp ugt i8 %109, 15
  br i1 %cmp78.i, label %if.then80.i, label %if.else.i

if.then80.i:                                      ; preds = %if.end77.i, %if.end77.thread.i
  %sub82.i = add nsw i32 %conv38.i, -16
  %idxprom.i = sext i32 %sub82.i to i64
  %arrayidx83.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 48, i64 %idxprom.i
  store i8 %113, i8* %arrayidx83.i, align 1, !tbaa !21
  br label %while.cond.backedge.i

if.else.i:                                        ; preds = %if.end77.i
  %and.i = and i8 %113, 15
  %idxprom85.i = zext i8 %109 to i64
  %arrayidx86.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 46, i64 %idxprom85.i
  store i8 %and.i, i8* %arrayidx86.i, align 1, !tbaa !21
  %shr188.i = lshr i8 %113, 4
  %arrayidx89.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 47, i64 %idxprom85.i
  store i8 %shr188.i, i8* %arrayidx89.i, align 1, !tbaa !21
  %cmp98.i = icmp ugt i8 %and.i, %shr188.i
  br i1 %cmp98.i, label %if.then100.i, label %while.cond.backedge.i

while.cond.backedge.i:                            ; preds = %if.then100.i, %if.else.i, %if.then80.i
  %cmp22.i = icmp sgt i64 %length.0193.i, 2
  br i1 %cmp22.i, label %do.body24.i, label %get_dac.exit.loopexit

if.then100.i:                                     ; preds = %if.else.i
  %118 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code102.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %118, i64 0, i32 5
  store i32 27, i32* %msg_code102.i, align 8, !tbaa !11
  %arrayidx106.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %118, i64 0, i32 6, i32 0, i64 0
  store i32 %conv55.i, i32* %arrayidx106.i, align 4, !tbaa !14
  %error_exit108.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %118, i64 0, i32 0
  %119 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit108.i, align 8, !tbaa !34
  tail call void %119(%struct.jpeg_common_struct* nonnull %0) #4
  br label %while.cond.backedge.i

get_dac.exit.loopexit:                            ; preds = %while.cond.backedge.i
  %incdec.ptr54.i.lcssa = phi i8* [ %incdec.ptr54.i, %while.cond.backedge.i ]
  %dec53.i.lcssa = phi i64 [ %dec53.i, %while.cond.backedge.i ]
  br label %get_dac.exit

get_dac.exit:                                     ; preds = %get_dac.exit.loopexit, %if.end18.i205
  %bytes_in_buffer.2.lcssa.i = phi i64 [ %dec19.i201, %if.end18.i205 ], [ %dec53.i.lcssa, %get_dac.exit.loopexit ]
  %next_input_byte.2.lcssa.i = phi i8* [ %incdec.ptr20.i202, %if.end18.i205 ], [ %incdec.ptr54.i.lcssa, %get_dac.exit.loopexit ]
  store i8* %next_input_byte.2.lcssa.i, i8** %next_input_byte1.i178, align 8, !tbaa !17
  store i64 %bytes_in_buffer.2.lcssa.i, i64* %bytes_in_buffer2.i179, align 8, !tbaa !19
  br label %sw.epilog

sw.bb55:                                          ; preds = %if.end9
  call void @llvm.lifetime.start(i64 17, i8* %1) #4
  call void @llvm.lifetime.start(i64 256, i8* %2) #4
  %120 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src.i, align 8, !tbaa !16
  %next_input_byte1.i218 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %120, i64 0, i32 0
  %bytes_in_buffer2.i219 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %120, i64 0, i32 1
  %121 = load i64, i64* %bytes_in_buffer2.i219, align 8, !tbaa !19
  %cmp.i220 = icmp eq i64 %121, 0
  br i1 %cmp.i220, label %if.then.i224, label %if.end6.i233

if.then.i224:                                     ; preds = %sw.bb55
  %fill_input_buffer.i221 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %120, i64 0, i32 3
  %122 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer.i221, align 8, !tbaa !20
  %call.i222 = tail call i32 %122(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool.i223 = icmp eq i32 %call.i222, 0
  br i1 %tobool.i223, label %get_dht.exit.thread.loopexit490, label %if.end.i225

if.end.i225:                                      ; preds = %if.then.i224
  %123 = load i64, i64* %bytes_in_buffer2.i219, align 8, !tbaa !19
  br label %if.end6.i233

if.end6.i233:                                     ; preds = %if.end.i225, %sw.bb55
  %bytes_in_buffer.0.i226 = phi i64 [ %123, %if.end.i225 ], [ %121, %sw.bb55 ]
  %next_input_byte.0.i227 = load i8*, i8** %next_input_byte1.i218, align 8, !tbaa !17
  %dec.i228 = add i64 %bytes_in_buffer.0.i226, -1
  %incdec.ptr.i229 = getelementptr inbounds i8, i8* %next_input_byte.0.i227, i64 1
  %124 = load i8, i8* %next_input_byte.0.i227, align 1, !tbaa !21
  %conv.i230 = zext i8 %124 to i64
  %shl.i231 = shl nuw nsw i64 %conv.i230, 8
  %cmp8.i232 = icmp eq i64 %dec.i228, 0
  br i1 %cmp8.i232, label %if.then10.i237, label %if.end18.i245

if.then10.i237:                                   ; preds = %if.end6.i233
  %fill_input_buffer11.i234 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %120, i64 0, i32 3
  %125 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer11.i234, align 8, !tbaa !20
  %call12.i235 = tail call i32 %125(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool13.i236 = icmp eq i32 %call12.i235, 0
  br i1 %tobool13.i236, label %get_dht.exit.thread.loopexit490, label %if.end15.i238

if.end15.i238:                                    ; preds = %if.then10.i237
  %126 = load i8*, i8** %next_input_byte1.i218, align 8, !tbaa !17
  %127 = load i64, i64* %bytes_in_buffer2.i219, align 8, !tbaa !19
  br label %if.end18.i245

if.end18.i245:                                    ; preds = %if.end15.i238, %if.end6.i233
  %next_input_byte.1.i239 = phi i8* [ %126, %if.end15.i238 ], [ %incdec.ptr.i229, %if.end6.i233 ]
  %bytes_in_buffer.1.i240 = phi i64 [ %127, %if.end15.i238 ], [ %dec.i228, %if.end6.i233 ]
  %dec19.i241 = add i64 %bytes_in_buffer.1.i240, -1
  %incdec.ptr20.i242 = getelementptr inbounds i8, i8* %next_input_byte.1.i239, i64 1
  %128 = load i8, i8* %next_input_byte.1.i239, align 1, !tbaa !21
  %conv21.i243 = zext i8 %128 to i64
  %add.i244 = or i64 %conv21.i243, %shl.i231
  %cmp22353.i = icmp ugt i64 %add.i244, 2
  br i1 %cmp22353.i, label %do.body24.lr.ph.i248, label %get_dht.exit

do.body24.lr.ph.i248:                             ; preds = %if.end18.i245
  %sub.i = add nsw i64 %add.i244, -2
  %fill_input_buffer28.i246 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %120, i64 0, i32 3
  br label %do.body24.i250

do.body24.i250:                                   ; preds = %if.end203.i, %do.body24.lr.ph.i248
  %length.0356.i = phi i64 [ %sub.i, %do.body24.lr.ph.i248 ], [ %sub175.i, %if.end203.i ]
  %bytes_in_buffer.2355.i = phi i64 [ %dec19.i241, %do.body24.lr.ph.i248 ], [ %bytes_in_buffer.6.lcssa.i, %if.end203.i ]
  %next_input_byte.2354.i = phi i8* [ %incdec.ptr20.i242, %do.body24.lr.ph.i248 ], [ %next_input_byte.6.lcssa.i, %if.end203.i ]
  %cmp25.i249 = icmp eq i64 %bytes_in_buffer.2355.i, 0
  br i1 %cmp25.i249, label %if.then27.i253, label %if.end35.i261

if.then27.i253:                                   ; preds = %do.body24.i250
  %129 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer28.i246, align 8, !tbaa !20
  %call29.i251 = tail call i32 %129(%struct.jpeg_decompress_struct* %cinfo) #4
  %tobool30.i252 = icmp eq i32 %call29.i251, 0
  br i1 %tobool30.i252, label %get_dht.exit.thread.loopexit487, label %if.end32.i254

if.end32.i254:                                    ; preds = %if.then27.i253
  %130 = load i8*, i8** %next_input_byte1.i218, align 8, !tbaa !17
  %131 = load i64, i64* %bytes_in_buffer2.i219, align 8, !tbaa !19
  br label %if.end35.i261

if.end35.i261:                                    ; preds = %if.end32.i254, %do.body24.i250
  %next_input_byte.3.i255 = phi i8* [ %130, %if.end32.i254 ], [ %next_input_byte.2354.i, %do.body24.i250 ]
  %bytes_in_buffer.3.i256 = phi i64 [ %131, %if.end32.i254 ], [ %bytes_in_buffer.2355.i, %do.body24.i250 ]
  %132 = load i8, i8* %next_input_byte.3.i255, align 1, !tbaa !21
  %conv38.i257 = zext i8 %132 to i32
  %133 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code.i258 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %133, i64 0, i32 5
  store i32 79, i32* %msg_code.i258, align 8, !tbaa !11
  %arrayidx.i259 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %133, i64 0, i32 6, i32 0, i64 0
  store i32 %conv38.i257, i32* %arrayidx.i259, align 4, !tbaa !14
  %emit_message.i260 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %133, i64 0, i32 1
  %134 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message.i260, align 8, !tbaa !15
  tail call void %134(%struct.jpeg_common_struct* %0, i32 1) #4
  store i8 0, i8* %1, align 16, !tbaa !21
  %next_input_byte.4342.i = getelementptr inbounds i8, i8* %next_input_byte.3.i255, i64 1
  %bytes_in_buffer.4343.i = add i64 %bytes_in_buffer.3.i256, -1
  br label %do.body47.i

do.body47.i:                                      ; preds = %if.end58.i, %if.end35.i261
  %indvars.iv.i262 = phi i64 [ 1, %if.end35.i261 ], [ %indvars.iv.next.i265, %if.end58.i ]
  %bytes_in_buffer.4347.i = phi i64 [ %bytes_in_buffer.4343.i, %if.end35.i261 ], [ %bytes_in_buffer.4.i267, %if.end58.i ]
  %next_input_byte.4346.i = phi i8* [ %next_input_byte.4342.i, %if.end35.i261 ], [ %next_input_byte.4.i266, %if.end58.i ]
  %count.0344.i = phi i32 [ 0, %if.end35.i261 ], [ %add67.i, %if.end58.i ]
  %cmp48.i = icmp eq i64 %bytes_in_buffer.4347.i, 0
  br i1 %cmp48.i, label %if.then50.i, label %if.end58.i

if.then50.i:                                      ; preds = %do.body47.i
  %135 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer28.i246, align 8, !tbaa !20
  %call52.i = tail call i32 %135(%struct.jpeg_decompress_struct* %cinfo) #4
  %tobool53.i = icmp eq i32 %call52.i, 0
  br i1 %tobool53.i, label %get_dht.exit.thread.loopexit482, label %if.end55.i

if.end55.i:                                       ; preds = %if.then50.i
  %136 = load i8*, i8** %next_input_byte1.i218, align 8, !tbaa !17
  %137 = load i64, i64* %bytes_in_buffer2.i219, align 8, !tbaa !19
  br label %if.end58.i

if.end58.i:                                       ; preds = %if.end55.i, %do.body47.i
  %next_input_byte.5.i263 = phi i8* [ %136, %if.end55.i ], [ %next_input_byte.4346.i, %do.body47.i ]
  %bytes_in_buffer.5.i264 = phi i64 [ %137, %if.end55.i ], [ %bytes_in_buffer.4347.i, %do.body47.i ]
  %138 = load i8, i8* %next_input_byte.5.i263, align 1, !tbaa !21
  %arrayidx61.i = getelementptr inbounds [17 x i8], [17 x i8]* %bits.i, i64 0, i64 %indvars.iv.i262
  store i8 %138, i8* %arrayidx61.i, align 1, !tbaa !21
  %conv66.i = zext i8 %138 to i32
  %add67.i = add nsw i32 %conv66.i, %count.0344.i
  %indvars.iv.next.i265 = add nuw nsw i64 %indvars.iv.i262, 1
  %next_input_byte.4.i266 = getelementptr inbounds i8, i8* %next_input_byte.5.i263, i64 1
  %bytes_in_buffer.4.i267 = add i64 %bytes_in_buffer.5.i264, -1
  %cmp45.i268 = icmp slt i64 %indvars.iv.next.i265, 17
  br i1 %cmp45.i268, label %do.body47.i, label %for.end.i272

for.end.i272:                                     ; preds = %if.end58.i
  %bytes_in_buffer.4.i267.lcssa = phi i64 [ %bytes_in_buffer.4.i267, %if.end58.i ]
  %next_input_byte.4.i266.lcssa = phi i8* [ %next_input_byte.4.i266, %if.end58.i ]
  %add67.i.lcssa = phi i32 [ %add67.i, %if.end58.i ]
  %sub68.i = add nsw i64 %length.0356.i, -17
  %139 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %arraydecay.i269 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %139, i64 0, i32 6, i32 0, i64 0
  %140 = load i8, i8* %arrayidx73.i, align 1, !tbaa !21
  %conv74.i = zext i8 %140 to i32
  store i32 %conv74.i, i32* %arraydecay.i269, align 4, !tbaa !14
  %141 = load i16, i16* %3, align 2
  %142 = zext i16 %141 to i32
  %conv77.i = and i32 %142, 255
  %arrayidx78.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %139, i64 0, i32 6, i32 0, i64 1
  store i32 %conv77.i, i32* %arrayidx78.i, align 4, !tbaa !14
  %143 = lshr i16 %141, 8
  %144 = zext i16 %143 to i32
  %arrayidx81.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %139, i64 0, i32 6, i32 0, i64 2
  store i32 %144, i32* %arrayidx81.i, align 4, !tbaa !14
  %145 = load i32, i32* %4, align 4
  %conv83.i = and i32 %145, 255
  %arrayidx84.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %139, i64 0, i32 6, i32 0, i64 3
  store i32 %conv83.i, i32* %arrayidx84.i, align 4, !tbaa !14
  %146 = lshr i32 %145, 8
  %147 = and i32 %146, 255
  %arrayidx87.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %139, i64 0, i32 6, i32 0, i64 4
  store i32 %147, i32* %arrayidx87.i, align 4, !tbaa !14
  %148 = lshr i32 %145, 16
  %conv89.i = and i32 %148, 255
  %arrayidx90.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %139, i64 0, i32 6, i32 0, i64 5
  store i32 %conv89.i, i32* %arrayidx90.i, align 4, !tbaa !14
  %149 = lshr i32 %145, 24
  %arrayidx93.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %139, i64 0, i32 6, i32 0, i64 6
  store i32 %149, i32* %arrayidx93.i, align 4, !tbaa !14
  %150 = load i32, i32* %5, align 8
  %151 = load i64, i64* %6, align 8
  %152 = trunc i64 %151 to i32
  %conv95.i = and i32 %152, 255
  %arrayidx96.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %139, i64 0, i32 6, i32 0, i64 7
  store i32 %conv95.i, i32* %arrayidx96.i, align 4, !tbaa !14
  %msg_code98.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %139, i64 0, i32 5
  store i32 85, i32* %msg_code98.i, align 8, !tbaa !11
  %emit_message100.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %139, i64 0, i32 1
  %153 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message100.i, align 8, !tbaa !15
  tail call void %153(%struct.jpeg_common_struct* %0, i32 2) #4
  %154 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %arraydecay108.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 0
  %155 = lshr i32 %152, 8
  %156 = and i32 %155, 255
  store i32 %156, i32* %arraydecay108.i, align 4, !tbaa !14
  %157 = lshr i32 %152, 16
  %conv113.i = and i32 %157, 255
  %arrayidx114.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 1
  store i32 %conv113.i, i32* %arrayidx114.i, align 4, !tbaa !14
  %158 = lshr i32 %150, 24
  %arrayidx117.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 2
  store i32 %158, i32* %arrayidx117.i, align 4, !tbaa !14
  %159 = lshr i64 %151, 32
  %160 = trunc i64 %159 to i32
  %conv119.i = and i32 %160, 255
  %arrayidx120.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 3
  store i32 %conv119.i, i32* %arrayidx120.i, align 4, !tbaa !14
  %161 = lshr i64 %151, 40
  %162 = trunc i64 %161 to i32
  %conv122.i = and i32 %162, 255
  %arrayidx123.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 4
  store i32 %conv122.i, i32* %arrayidx123.i, align 4, !tbaa !14
  %163 = lshr i64 %151, 48
  %164 = trunc i64 %163 to i32
  %conv125.i = and i32 %164, 255
  %arrayidx126.i270 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 5
  store i32 %conv125.i, i32* %arrayidx126.i270, align 4, !tbaa !14
  %165 = lshr i64 %151, 56
  %166 = trunc i64 %165 to i32
  %arrayidx129.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 6
  store i32 %166, i32* %arrayidx129.i, align 4, !tbaa !14
  %167 = load i8, i8* %arrayidx130.i, align 16, !tbaa !21
  %conv131.i = zext i8 %167 to i32
  %arrayidx132.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 7
  store i32 %conv131.i, i32* %arrayidx132.i, align 4, !tbaa !14
  %msg_code134.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 5
  store i32 85, i32* %msg_code134.i, align 8, !tbaa !11
  %emit_message136.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 1
  %168 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message136.i, align 8, !tbaa !15
  tail call void %168(%struct.jpeg_common_struct* %0, i32 2) #4
  %cmp139.i = icmp sgt i32 %add67.i.lcssa, 256
  %conv141.i = sext i32 %add67.i.lcssa to i64
  %cmp142.i = icmp slt i64 %sub68.i, %conv141.i
  %or.cond.i271 = or i1 %cmp139.i, %cmp142.i
  br i1 %or.cond.i271, label %if.then144.i, label %for.cond149.preheader.i

if.then144.i:                                     ; preds = %for.end.i272
  %169 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code146.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %169, i64 0, i32 5
  store i32 28, i32* %msg_code146.i, align 8, !tbaa !11
  %error_exit.i273 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %169, i64 0, i32 0
  %170 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i273, align 8, !tbaa !34
  tail call void %170(%struct.jpeg_common_struct* nonnull %0) #4
  br label %for.cond149.preheader.i

for.cond149.preheader.i:                          ; preds = %if.then144.i, %for.end.i272
  %cmp150348.i = icmp sgt i32 %add67.i.lcssa, 0
  br i1 %cmp150348.i, label %do.body153.i.preheader, label %for.end173.i

do.body153.i.preheader:                           ; preds = %for.cond149.preheader.i
  br label %do.body153.i

do.body153.i:                                     ; preds = %do.body153.i.preheader, %if.end164.i283
  %indvars.iv361.i = phi i64 [ %indvars.iv.next362.i, %if.end164.i283 ], [ 0, %do.body153.i.preheader ]
  %bytes_in_buffer.6351.i = phi i64 [ %dec165.i281, %if.end164.i283 ], [ %bytes_in_buffer.4.i267.lcssa, %do.body153.i.preheader ]
  %next_input_byte.6350.i = phi i8* [ %incdec.ptr166.i282, %if.end164.i283 ], [ %next_input_byte.4.i266.lcssa, %do.body153.i.preheader ]
  %cmp154.i274 = icmp eq i64 %bytes_in_buffer.6351.i, 0
  br i1 %cmp154.i274, label %if.then156.i277, label %if.end164.i283

if.then156.i277:                                  ; preds = %do.body153.i
  %171 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer28.i246, align 8, !tbaa !20
  %call158.i275 = tail call i32 %171(%struct.jpeg_decompress_struct* %cinfo) #4
  %tobool159.i276 = icmp eq i32 %call158.i275, 0
  br i1 %tobool159.i276, label %get_dht.exit.thread.loopexit, label %if.end161.i278

if.end161.i278:                                   ; preds = %if.then156.i277
  %172 = load i8*, i8** %next_input_byte1.i218, align 8, !tbaa !17
  %173 = load i64, i64* %bytes_in_buffer2.i219, align 8, !tbaa !19
  br label %if.end164.i283

if.end164.i283:                                   ; preds = %if.end161.i278, %do.body153.i
  %next_input_byte.7.i279 = phi i8* [ %172, %if.end161.i278 ], [ %next_input_byte.6350.i, %do.body153.i ]
  %bytes_in_buffer.7.i280 = phi i64 [ %173, %if.end161.i278 ], [ %bytes_in_buffer.6351.i, %do.body153.i ]
  %dec165.i281 = add i64 %bytes_in_buffer.7.i280, -1
  %incdec.ptr166.i282 = getelementptr inbounds i8, i8* %next_input_byte.7.i279, i64 1
  %174 = load i8, i8* %next_input_byte.7.i279, align 1, !tbaa !21
  %arrayidx168.i = getelementptr inbounds [256 x i8], [256 x i8]* %huffval.i, i64 0, i64 %indvars.iv361.i
  store i8 %174, i8* %arrayidx168.i, align 1, !tbaa !21
  %indvars.iv.next362.i = add nuw nsw i64 %indvars.iv361.i, 1
  %cmp150.i = icmp slt i64 %indvars.iv.next362.i, %conv141.i
  br i1 %cmp150.i, label %do.body153.i, label %for.end173.i.loopexit

for.end173.i.loopexit:                            ; preds = %if.end164.i283
  %incdec.ptr166.i282.lcssa = phi i8* [ %incdec.ptr166.i282, %if.end164.i283 ]
  %dec165.i281.lcssa = phi i64 [ %dec165.i281, %if.end164.i283 ]
  br label %for.end173.i

for.end173.i:                                     ; preds = %for.end173.i.loopexit, %for.cond149.preheader.i
  %bytes_in_buffer.6.lcssa.i = phi i64 [ %bytes_in_buffer.4.i267.lcssa, %for.cond149.preheader.i ], [ %dec165.i281.lcssa, %for.end173.i.loopexit ]
  %next_input_byte.6.lcssa.i = phi i8* [ %next_input_byte.4.i266.lcssa, %for.cond149.preheader.i ], [ %incdec.ptr166.i282.lcssa, %for.end173.i.loopexit ]
  %sub175.i = sub nsw i64 %sub68.i, %conv141.i
  %and.i284 = and i32 %conv38.i257, 16
  %tobool176.i285 = icmp eq i32 %and.i284, 0
  %sub178.i = add nsw i32 %conv38.i257, -16
  %idxprom179.i = sext i32 %sub178.i to i64
  %arrayidx180.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 41, i64 %idxprom179.i
  %idxprom181.i = zext i8 %132 to i64
  %arrayidx182.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 40, i64 %idxprom181.i
  %index.0.i = select i1 %tobool176.i285, i32 %conv38.i257, i32 %sub178.i
  %htblptr.0.i = select i1 %tobool176.i285, %struct.JHUFF_TBL** %arrayidx182.i, %struct.JHUFF_TBL** %arrayidx180.i
  %175 = icmp ugt i32 %index.0.i, 3
  br i1 %175, label %if.then189.i, label %if.end198.i

if.then189.i:                                     ; preds = %for.end173.i
  %176 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code191.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %176, i64 0, i32 5
  store i32 29, i32* %msg_code191.i, align 8, !tbaa !11
  %arrayidx195.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %176, i64 0, i32 6, i32 0, i64 0
  store i32 %index.0.i, i32* %arrayidx195.i, align 4, !tbaa !14
  %error_exit197.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %176, i64 0, i32 0
  %177 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit197.i, align 8, !tbaa !34
  tail call void %177(%struct.jpeg_common_struct* %0) #4
  br label %if.end198.i

if.end198.i:                                      ; preds = %if.then189.i, %for.end173.i
  %178 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %htblptr.0.i, align 8, !tbaa !29
  %cmp199.i = icmp eq %struct.JHUFF_TBL* %178, null
  br i1 %cmp199.i, label %if.then201.i, label %if.end203.i

if.then201.i:                                     ; preds = %if.end198.i
  %call202.i = tail call %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %0) #4
  store %struct.JHUFF_TBL* %call202.i, %struct.JHUFF_TBL** %htblptr.0.i, align 8, !tbaa !29
  br label %if.end203.i

if.end203.i:                                      ; preds = %if.then201.i, %if.end198.i
  %179 = phi %struct.JHUFF_TBL* [ %call202.i, %if.then201.i ], [ %178, %if.end198.i ]
  %arraydecay205.i = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %179, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay205.i, i8* %1, i64 17, i32 4, i1 false) #4
  %180 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %htblptr.0.i, align 8, !tbaa !29
  %arraydecay208.i = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %180, i64 0, i32 1, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay208.i, i8* %2, i64 256, i32 1, i1 false) #4
  %cmp22.i286 = icmp sgt i64 %sub175.i, 0
  br i1 %cmp22.i286, label %do.body24.i250, label %get_dht.exit.loopexit

get_dht.exit.thread.loopexit:                     ; preds = %if.then156.i277
  br label %get_dht.exit.thread

get_dht.exit.thread.loopexit482:                  ; preds = %if.then50.i
  br label %get_dht.exit.thread

get_dht.exit.thread.loopexit487:                  ; preds = %if.then27.i253
  br label %get_dht.exit.thread

get_dht.exit.thread.loopexit490:                  ; preds = %if.then10.i237, %if.then.i224
  br label %get_dht.exit.thread

get_dht.exit.thread:                              ; preds = %get_dht.exit.thread.loopexit490, %get_dht.exit.thread.loopexit487, %get_dht.exit.thread.loopexit482, %get_dht.exit.thread.loopexit
  call void @llvm.lifetime.end(i64 256, i8* %2) #4
  call void @llvm.lifetime.end(i64 17, i8* %1) #4
  br label %return

get_dht.exit.loopexit:                            ; preds = %if.end203.i
  %next_input_byte.6.lcssa.i.lcssa = phi i8* [ %next_input_byte.6.lcssa.i, %if.end203.i ]
  %bytes_in_buffer.6.lcssa.i.lcssa = phi i64 [ %bytes_in_buffer.6.lcssa.i, %if.end203.i ]
  br label %get_dht.exit

get_dht.exit:                                     ; preds = %get_dht.exit.loopexit, %if.end18.i245
  %bytes_in_buffer.2.lcssa.i287 = phi i64 [ %dec19.i241, %if.end18.i245 ], [ %bytes_in_buffer.6.lcssa.i.lcssa, %get_dht.exit.loopexit ]
  %next_input_byte.2.lcssa.i288 = phi i8* [ %incdec.ptr20.i242, %if.end18.i245 ], [ %next_input_byte.6.lcssa.i.lcssa, %get_dht.exit.loopexit ]
  store i8* %next_input_byte.2.lcssa.i288, i8** %next_input_byte1.i218, align 8, !tbaa !17
  store i64 %bytes_in_buffer.2.lcssa.i287, i64* %bytes_in_buffer2.i219, align 8, !tbaa !19
  call void @llvm.lifetime.end(i64 256, i8* %2) #4
  call void @llvm.lifetime.end(i64 17, i8* %1) #4
  br label %sw.epilog

sw.bb60:                                          ; preds = %if.end9
  %181 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src.i, align 8, !tbaa !16
  %next_input_byte4.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %181, i64 0, i32 0
  %bytes_in_buffer6.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %181, i64 0, i32 1
  %182 = load i64, i64* %bytes_in_buffer6.i, align 8, !tbaa !19
  %cmp.i292 = icmp eq i64 %182, 0
  br i1 %cmp.i292, label %if.then.i296, label %if.end10.i305

if.then.i296:                                     ; preds = %sw.bb60
  %fill_input_buffer.i293 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %181, i64 0, i32 3
  %183 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer.i293, align 8, !tbaa !20
  %call.i294 = tail call i32 %183(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool.i295 = icmp eq i32 %call.i294, 0
  br i1 %tobool.i295, label %return.loopexit489, label %if.end.i297

if.end.i297:                                      ; preds = %if.then.i296
  %184 = load i64, i64* %bytes_in_buffer6.i, align 8, !tbaa !19
  br label %if.end10.i305

if.end10.i305:                                    ; preds = %if.end.i297, %sw.bb60
  %bytes_in_buffer.0.i298 = phi i64 [ %184, %if.end.i297 ], [ %182, %sw.bb60 ]
  %next_input_byte.0.i299 = load i8*, i8** %next_input_byte4.i, align 8, !tbaa !17
  %dec.i300 = add i64 %bytes_in_buffer.0.i298, -1
  %incdec.ptr.i301 = getelementptr inbounds i8, i8* %next_input_byte.0.i299, i64 1
  %185 = load i8, i8* %next_input_byte.0.i299, align 1, !tbaa !21
  %conv.i302 = zext i8 %185 to i64
  %shl.i303 = shl nuw nsw i64 %conv.i302, 8
  %cmp12.i304 = icmp eq i64 %dec.i300, 0
  br i1 %cmp12.i304, label %if.then14.i309, label %if.end22.i317

if.then14.i309:                                   ; preds = %if.end10.i305
  %fill_input_buffer15.i306 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %181, i64 0, i32 3
  %186 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer15.i306, align 8, !tbaa !20
  %call16.i307 = tail call i32 %186(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool17.i308 = icmp eq i32 %call16.i307, 0
  br i1 %tobool17.i308, label %return.loopexit489, label %if.end19.i310

if.end19.i310:                                    ; preds = %if.then14.i309
  %187 = load i8*, i8** %next_input_byte4.i, align 8, !tbaa !17
  %188 = load i64, i64* %bytes_in_buffer6.i, align 8, !tbaa !19
  br label %if.end22.i317

if.end22.i317:                                    ; preds = %if.end19.i310, %if.end10.i305
  %next_input_byte.1.i311 = phi i8* [ %187, %if.end19.i310 ], [ %incdec.ptr.i301, %if.end10.i305 ]
  %bytes_in_buffer.1.i312 = phi i64 [ %188, %if.end19.i310 ], [ %dec.i300, %if.end10.i305 ]
  %dec23.i313 = add i64 %bytes_in_buffer.1.i312, -1
  %incdec.ptr24.i314 = getelementptr inbounds i8, i8* %next_input_byte.1.i311, i64 1
  %189 = load i8, i8* %next_input_byte.1.i311, align 1, !tbaa !21
  %conv25.i315 = zext i8 %189 to i64
  %add.i316 = or i64 %conv25.i315, %shl.i303
  %cmp26348.i = icmp ugt i64 %add.i316, 2
  br i1 %cmp26348.i, label %do.body28.lr.ph.i, label %get_dqt.exit

do.body28.lr.ph.i:                                ; preds = %if.end22.i317
  %sub.i318 = add nsw i64 %add.i316, -2
  %fill_input_buffer32.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %181, i64 0, i32 3
  br label %do.body28.i

do.body28.i:                                      ; preds = %if.end204.i, %do.body28.lr.ph.i
  %bytes_in_buffer.2351.i = phi i64 [ %dec23.i313, %do.body28.lr.ph.i ], [ %bytes_in_buffer.4.lcssa.i, %if.end204.i ]
  %next_input_byte.2350.i = phi i8* [ %incdec.ptr24.i314, %do.body28.lr.ph.i ], [ %next_input_byte.4.lcssa.i, %if.end204.i ]
  %length.0349.i = phi i64 [ %sub.i318, %do.body28.lr.ph.i ], [ %sub205.sub208.i, %if.end204.i ]
  %cmp29.i = icmp eq i64 %bytes_in_buffer.2351.i, 0
  br i1 %cmp29.i, label %if.then31.i, label %if.end39.i

if.then31.i:                                      ; preds = %do.body28.i
  %190 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer32.i, align 8, !tbaa !20
  %call33.i = tail call i32 %190(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool34.i = icmp eq i32 %call33.i, 0
  br i1 %tobool34.i, label %return.loopexit488, label %if.end36.i

if.end36.i:                                       ; preds = %if.then31.i
  %191 = load i8*, i8** %next_input_byte4.i, align 8, !tbaa !17
  %192 = load i64, i64* %bytes_in_buffer6.i, align 8, !tbaa !19
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.end36.i, %do.body28.i
  %next_input_byte.3.i320 = phi i8* [ %191, %if.end36.i ], [ %next_input_byte.2350.i, %do.body28.i ]
  %bytes_in_buffer.3.i321 = phi i64 [ %192, %if.end36.i ], [ %bytes_in_buffer.2351.i, %do.body28.i ]
  %193 = load i8, i8* %next_input_byte.3.i320, align 1, !tbaa !21
  %conv42.i = zext i8 %193 to i32
  %shr333.i = lshr i32 %conv42.i, 4
  %and.i322 = and i32 %conv42.i, 15
  %194 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code.i323 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %194, i64 0, i32 5
  store i32 80, i32* %msg_code.i323, align 8, !tbaa !11
  %arrayidx.i324 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %194, i64 0, i32 6, i32 0, i64 0
  store i32 %and.i322, i32* %arrayidx.i324, align 4, !tbaa !14
  %arrayidx50.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %194, i64 0, i32 6, i32 0, i64 1
  store i32 %shr333.i, i32* %arrayidx50.i, align 4, !tbaa !14
  %emit_message.i325 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %194, i64 0, i32 1
  %195 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message.i325, align 8, !tbaa !15
  tail call void %195(%struct.jpeg_common_struct* %0, i32 1) #4
  %cmp52.i = icmp ugt i32 %and.i322, 3
  br i1 %cmp52.i, label %if.then54.i, label %if.end62.i

if.then54.i:                                      ; preds = %if.end39.i
  %196 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code56.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %196, i64 0, i32 5
  store i32 30, i32* %msg_code56.i, align 8, !tbaa !11
  %arrayidx60.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %196, i64 0, i32 6, i32 0, i64 0
  store i32 %and.i322, i32* %arrayidx60.i, align 4, !tbaa !14
  %error_exit.i326 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %196, i64 0, i32 0
  %197 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i326, align 8, !tbaa !34
  tail call void %197(%struct.jpeg_common_struct* nonnull %0) #4
  br label %if.end62.i

if.end62.i:                                       ; preds = %if.then54.i, %if.end39.i
  %idxprom334.i = zext i32 %and.i322 to i64
  %arrayidx63.i327 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 39, i64 %idxprom334.i
  %198 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %arrayidx63.i327, align 8, !tbaa !29
  %cmp64.i = icmp eq %struct.JQUANT_TBL* %198, null
  br i1 %cmp64.i, label %if.then66.i, label %if.end71.i

if.then66.i:                                      ; preds = %if.end62.i
  %call67.i = tail call %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct* nonnull %0) #4
  store %struct.JQUANT_TBL* %call67.i, %struct.JQUANT_TBL** %arrayidx63.i327, align 8, !tbaa !29
  br label %if.end71.i

if.end71.i:                                       ; preds = %if.then66.i, %if.end62.i
  %199 = phi %struct.JQUANT_TBL* [ %call67.i, %if.then66.i ], [ %198, %if.end62.i ]
  %next_input_byte.4342.i328 = getelementptr inbounds i8, i8* %next_input_byte.3.i320, i64 1
  %bytes_in_buffer.4343.i329 = add i64 %bytes_in_buffer.3.i321, -1
  %tobool77.i = icmp eq i32 %shr333.i, 0
  br i1 %tobool77.i, label %for.body.us.i.preheader, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %if.end71.i
  br label %for.body.i

for.body.us.i.preheader:                          ; preds = %if.end71.i
  br label %for.body.us.i

for.body.us.i:                                    ; preds = %for.body.us.i.preheader, %if.end123.us.i
  %indvars.iv358.i = phi i64 [ %indvars.iv.next359.i, %if.end123.us.i ], [ 0, %for.body.us.i.preheader ]
  %bytes_in_buffer.4346.us.i = phi i64 [ %bytes_in_buffer.4.us.i, %if.end123.us.i ], [ %bytes_in_buffer.4343.i329, %for.body.us.i.preheader ]
  %next_input_byte.4345.us.i = phi i8* [ %next_input_byte.4.us.i, %if.end123.us.i ], [ %next_input_byte.4342.i328, %for.body.us.i.preheader ]
  %cmp80.us.i = icmp eq i64 %bytes_in_buffer.4346.us.i, 0
  br i1 %cmp80.us.i, label %if.then115.us.i, label %if.end123.us.i

if.then115.us.i:                                  ; preds = %for.body.us.i
  %200 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer32.i, align 8, !tbaa !20
  %call117.us.i = tail call i32 %200(%struct.jpeg_decompress_struct* %cinfo) #4
  %tobool118.us.i = icmp eq i32 %call117.us.i, 0
  br i1 %tobool118.us.i, label %return.loopexit483, label %if.end120.us.i

if.end120.us.i:                                   ; preds = %if.then115.us.i
  %201 = load i8*, i8** %next_input_byte4.i, align 8, !tbaa !17
  %202 = load i64, i64* %bytes_in_buffer6.i, align 8, !tbaa !19
  br label %if.end123.us.i

if.end123.us.i:                                   ; preds = %if.end120.us.i, %for.body.us.i
  %next_input_byte.7.us.i = phi i8* [ %201, %if.end120.us.i ], [ %next_input_byte.4345.us.i, %for.body.us.i ]
  %bytes_in_buffer.7.us.i = phi i64 [ %202, %if.end120.us.i ], [ %bytes_in_buffer.4346.us.i, %for.body.us.i ]
  %203 = load i8, i8* %next_input_byte.7.us.i, align 1, !tbaa !21
  %conv126.us.i = zext i8 %203 to i16
  %arrayidx132.us.i = getelementptr inbounds [0 x i32], [0 x i32]* @jpeg_natural_order, i64 0, i64 %indvars.iv358.i
  %204 = load i32, i32* %arrayidx132.us.i, align 4, !tbaa !14
  %idxprom133.us.i = sext i32 %204 to i64
  %arrayidx134.us.i = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %199, i64 0, i32 0, i64 %idxprom133.us.i
  store i16 %conv126.us.i, i16* %arrayidx134.us.i, align 2, !tbaa !55
  %indvars.iv.next359.i = add nuw nsw i64 %indvars.iv358.i, 1
  %next_input_byte.4.us.i = getelementptr inbounds i8, i8* %next_input_byte.7.us.i, i64 1
  %bytes_in_buffer.4.us.i = add i64 %bytes_in_buffer.7.us.i, -1
  %cmp75.us.i = icmp slt i64 %indvars.iv.next359.i, 64
  br i1 %cmp75.us.i, label %for.body.us.i, label %for.end.i340.loopexit

for.body.i:                                       ; preds = %for.body.i.preheader, %if.end105.i
  %indvars.iv.i330 = phi i64 [ %indvars.iv.next.i337, %if.end105.i ], [ 0, %for.body.i.preheader ]
  %bytes_in_buffer.4346.i = phi i64 [ %bytes_in_buffer.4.i339, %if.end105.i ], [ %bytes_in_buffer.4343.i329, %for.body.i.preheader ]
  %next_input_byte.4345.i = phi i8* [ %next_input_byte.4.i338, %if.end105.i ], [ %next_input_byte.4342.i328, %for.body.i.preheader ]
  %cmp80.i = icmp eq i64 %bytes_in_buffer.4346.i, 0
  br i1 %cmp80.i, label %if.then82.i, label %if.end90.i333

if.then82.i:                                      ; preds = %for.body.i
  %205 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer32.i, align 8, !tbaa !20
  %call84.i = tail call i32 %205(%struct.jpeg_decompress_struct* %cinfo) #4
  %tobool85.i = icmp eq i32 %call84.i, 0
  br i1 %tobool85.i, label %return.loopexit484, label %if.end87.i

if.end87.i:                                       ; preds = %if.then82.i
  %206 = load i8*, i8** %next_input_byte4.i, align 8, !tbaa !17
  %207 = load i64, i64* %bytes_in_buffer6.i, align 8, !tbaa !19
  br label %if.end90.i333

if.end90.i333:                                    ; preds = %if.end87.i, %for.body.i
  %next_input_byte.5.i331 = phi i8* [ %206, %if.end87.i ], [ %next_input_byte.4345.i, %for.body.i ]
  %bytes_in_buffer.5.i332 = phi i64 [ %207, %if.end87.i ], [ %bytes_in_buffer.4346.i, %for.body.i ]
  %dec91.i = add i64 %bytes_in_buffer.5.i332, -1
  %incdec.ptr92.i = getelementptr inbounds i8, i8* %next_input_byte.5.i331, i64 1
  %208 = load i8, i8* %next_input_byte.5.i331, align 1, !tbaa !21
  %conv93.i = zext i8 %208 to i16
  %shl94.i = shl nuw i16 %conv93.i, 8
  %cmp95.i = icmp eq i64 %dec91.i, 0
  br i1 %cmp95.i, label %if.then97.i, label %if.end105.i

if.then97.i:                                      ; preds = %if.end90.i333
  %209 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer32.i, align 8, !tbaa !20
  %call99.i = tail call i32 %209(%struct.jpeg_decompress_struct* %cinfo) #4
  %tobool100.i = icmp eq i32 %call99.i, 0
  br i1 %tobool100.i, label %return.loopexit484, label %if.end102.i

if.end102.i:                                      ; preds = %if.then97.i
  %210 = load i8*, i8** %next_input_byte4.i, align 8, !tbaa !17
  %211 = load i64, i64* %bytes_in_buffer6.i, align 8, !tbaa !19
  br label %if.end105.i

if.end105.i:                                      ; preds = %if.end102.i, %if.end90.i333
  %next_input_byte.6.i334 = phi i8* [ %210, %if.end102.i ], [ %incdec.ptr92.i, %if.end90.i333 ]
  %bytes_in_buffer.6.i335 = phi i64 [ %211, %if.end102.i ], [ %dec91.i, %if.end90.i333 ]
  %212 = load i8, i8* %next_input_byte.6.i334, align 1, !tbaa !21
  %conv108.i = zext i8 %212 to i16
  %add109.i = or i16 %conv108.i, %shl94.i
  %arrayidx132.i336 = getelementptr inbounds [0 x i32], [0 x i32]* @jpeg_natural_order, i64 0, i64 %indvars.iv.i330
  %213 = load i32, i32* %arrayidx132.i336, align 4, !tbaa !14
  %idxprom133.i = sext i32 %213 to i64
  %arrayidx134.i = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %199, i64 0, i32 0, i64 %idxprom133.i
  store i16 %add109.i, i16* %arrayidx134.i, align 2, !tbaa !55
  %indvars.iv.next.i337 = add nuw nsw i64 %indvars.iv.i330, 1
  %next_input_byte.4.i338 = getelementptr inbounds i8, i8* %next_input_byte.6.i334, i64 1
  %bytes_in_buffer.4.i339 = add i64 %bytes_in_buffer.6.i335, -1
  %cmp75.i = icmp slt i64 %indvars.iv.next.i337, 64
  br i1 %cmp75.i, label %for.body.i, label %for.end.i340.loopexit485

for.end.i340.loopexit:                            ; preds = %if.end123.us.i
  %bytes_in_buffer.4.us.i.lcssa = phi i64 [ %bytes_in_buffer.4.us.i, %if.end123.us.i ]
  %next_input_byte.4.us.i.lcssa = phi i8* [ %next_input_byte.4.us.i, %if.end123.us.i ]
  br label %for.end.i340

for.end.i340.loopexit485:                         ; preds = %if.end105.i
  %bytes_in_buffer.4.i339.lcssa = phi i64 [ %bytes_in_buffer.4.i339, %if.end105.i ]
  %next_input_byte.4.i338.lcssa = phi i8* [ %next_input_byte.4.i338, %if.end105.i ]
  br label %for.end.i340

for.end.i340:                                     ; preds = %for.end.i340.loopexit485, %for.end.i340.loopexit
  %bytes_in_buffer.4.lcssa.i = phi i64 [ %bytes_in_buffer.4.us.i.lcssa, %for.end.i340.loopexit ], [ %bytes_in_buffer.4.i339.lcssa, %for.end.i340.loopexit485 ]
  %next_input_byte.4.lcssa.i = phi i8* [ %next_input_byte.4.us.i.lcssa, %for.end.i340.loopexit ], [ %next_input_byte.4.i338.lcssa, %for.end.i340.loopexit485 ]
  %214 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %trace_level.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %214, i64 0, i32 7
  %215 = load i32, i32* %trace_level.i, align 4, !tbaa !56
  %cmp136.i = icmp sgt i32 %215, 1
  br i1 %cmp136.i, label %do.body143.i.preheader, label %if.end204.i

do.body143.i.preheader:                           ; preds = %for.end.i340
  br label %do.body143.i

do.body143.i:                                     ; preds = %do.body143.i.preheader, %do.body143.do.body143_crit_edge.i
  %216 = phi %struct.jpeg_error_mgr* [ %.pre.i, %do.body143.do.body143_crit_edge.i ], [ %214, %do.body143.i.preheader ]
  %indvars.iv360.i = phi i64 [ %indvars.iv.next361.i, %do.body143.do.body143_crit_edge.i ], [ 0, %do.body143.i.preheader ]
  %arraydecay.i341 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %216, i64 0, i32 6, i32 0, i64 0
  %arrayidx150.i = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %199, i64 0, i32 0, i64 %indvars.iv360.i
  %217 = bitcast i16* %arrayidx150.i to <4 x i16>*
  %218 = load <4 x i16>, <4 x i16>* %217, align 2, !tbaa !55
  %219 = zext <4 x i16> %218 to <4 x i32>
  %220 = bitcast i32* %arraydecay.i341 to <4 x i32>*
  store <4 x i32> %219, <4 x i32>* %220, align 4, !tbaa !14
  %221 = or i64 %indvars.iv360.i, 4
  %arrayidx174.i = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %199, i64 0, i32 0, i64 %221
  %arrayidx176.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %216, i64 0, i32 6, i32 0, i64 4
  %222 = bitcast i16* %arrayidx174.i to <4 x i16>*
  %223 = load <4 x i16>, <4 x i16>* %222, align 2, !tbaa !55
  %224 = zext <4 x i16> %223 to <4 x i32>
  %225 = bitcast i32* %arrayidx176.i to <4 x i32>*
  store <4 x i32> %224, <4 x i32>* %225, align 4, !tbaa !14
  %msg_code196.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %216, i64 0, i32 5
  store i32 92, i32* %msg_code196.i, align 8, !tbaa !11
  %emit_message198.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %216, i64 0, i32 1
  %226 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message198.i, align 8, !tbaa !15
  tail call void %226(%struct.jpeg_common_struct* nonnull %0, i32 2) #4
  %indvars.iv.next361.i = add nuw nsw i64 %indvars.iv360.i, 8
  %cmp140.i = icmp slt i64 %indvars.iv.next361.i, 64
  br i1 %cmp140.i, label %do.body143.do.body143_crit_edge.i, label %if.end204.i.loopexit

do.body143.do.body143_crit_edge.i:                ; preds = %do.body143.i
  %.pre.i = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  br label %do.body143.i

if.end204.i.loopexit:                             ; preds = %do.body143.i
  br label %if.end204.i

if.end204.i:                                      ; preds = %if.end204.i.loopexit, %for.end.i340
  %sub205.sub208.v.i = select i1 %tobool77.i, i64 -65, i64 -129
  %sub205.sub208.i = add i64 %sub205.sub208.v.i, %length.0349.i
  %cmp26.i345 = icmp sgt i64 %sub205.sub208.i, 0
  br i1 %cmp26.i345, label %do.body28.i, label %get_dqt.exit.loopexit

get_dqt.exit.loopexit:                            ; preds = %if.end204.i
  %next_input_byte.4.lcssa.i.lcssa = phi i8* [ %next_input_byte.4.lcssa.i, %if.end204.i ]
  %bytes_in_buffer.4.lcssa.i.lcssa = phi i64 [ %bytes_in_buffer.4.lcssa.i, %if.end204.i ]
  br label %get_dqt.exit

get_dqt.exit:                                     ; preds = %get_dqt.exit.loopexit, %if.end22.i317
  %bytes_in_buffer.2.lcssa.i346 = phi i64 [ %dec23.i313, %if.end22.i317 ], [ %bytes_in_buffer.4.lcssa.i.lcssa, %get_dqt.exit.loopexit ]
  %next_input_byte.2.lcssa.i347 = phi i8* [ %incdec.ptr24.i314, %if.end22.i317 ], [ %next_input_byte.4.lcssa.i.lcssa, %get_dqt.exit.loopexit ]
  store i8* %next_input_byte.2.lcssa.i347, i8** %next_input_byte4.i, align 8, !tbaa !17
  store i64 %bytes_in_buffer.2.lcssa.i346, i64* %bytes_in_buffer6.i, align 8, !tbaa !19
  br label %sw.epilog

sw.bb65:                                          ; preds = %if.end9
  %227 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src.i, align 8, !tbaa !16
  %next_input_byte3.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %227, i64 0, i32 0
  %bytes_in_buffer5.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %227, i64 0, i32 1
  %228 = load i64, i64* %bytes_in_buffer5.i, align 8, !tbaa !19
  %cmp.i351 = icmp eq i64 %228, 0
  br i1 %cmp.i351, label %if.then.i355, label %if.end9.i

if.then.i355:                                     ; preds = %sw.bb65
  %fill_input_buffer.i352 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %227, i64 0, i32 3
  %229 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer.i352, align 8, !tbaa !20
  %call.i353 = tail call i32 %229(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool.i354 = icmp eq i32 %call.i353, 0
  br i1 %tobool.i354, label %return.loopexit489, label %if.end.i356

if.end.i356:                                      ; preds = %if.then.i355
  %230 = load i64, i64* %bytes_in_buffer5.i, align 8, !tbaa !19
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.end.i356, %sw.bb65
  %bytes_in_buffer.0.i357 = phi i64 [ %230, %if.end.i356 ], [ %228, %sw.bb65 ]
  %next_input_byte.0.i358 = load i8*, i8** %next_input_byte3.i, align 8, !tbaa !17
  %dec.i359 = add i64 %bytes_in_buffer.0.i357, -1
  %incdec.ptr.i360 = getelementptr inbounds i8, i8* %next_input_byte.0.i358, i64 1
  %231 = load i8, i8* %next_input_byte.0.i358, align 1, !tbaa !21
  %conv.i361 = zext i8 %231 to i64
  %shl.i362 = shl nuw nsw i64 %conv.i361, 8
  %cmp11.i = icmp eq i64 %dec.i359, 0
  br i1 %cmp11.i, label %if.then13.i, label %if.end21.i

if.then13.i:                                      ; preds = %if.end9.i
  %fill_input_buffer14.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %227, i64 0, i32 3
  %232 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer14.i, align 8, !tbaa !20
  %call15.i = tail call i32 %232(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool16.i = icmp eq i32 %call15.i, 0
  br i1 %tobool16.i, label %return.loopexit489, label %if.end18.i363

if.end18.i363:                                    ; preds = %if.then13.i
  %233 = load i8*, i8** %next_input_byte3.i, align 8, !tbaa !17
  %234 = load i64, i64* %bytes_in_buffer5.i, align 8, !tbaa !19
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end18.i363, %if.end9.i
  %next_input_byte.1.i364 = phi i8* [ %233, %if.end18.i363 ], [ %incdec.ptr.i360, %if.end9.i ]
  %bytes_in_buffer.1.i365 = phi i64 [ %234, %if.end18.i363 ], [ %dec.i359, %if.end9.i ]
  %dec22.i = add i64 %bytes_in_buffer.1.i365, -1
  %incdec.ptr23.i = getelementptr inbounds i8, i8* %next_input_byte.1.i364, i64 1
  %235 = load i8, i8* %next_input_byte.1.i364, align 1, !tbaa !21
  %conv24.i = zext i8 %235 to i64
  %add.i366 = or i64 %conv24.i, %shl.i362
  %cmp25.i367 = icmp eq i64 %add.i366, 4
  br i1 %cmp25.i367, label %do.body30.i, label %if.then27.i371

if.then27.i371:                                   ; preds = %if.end21.i
  %236 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code.i369 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %236, i64 0, i32 5
  store i32 9, i32* %msg_code.i369, align 8, !tbaa !11
  %error_exit.i370 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %236, i64 0, i32 0
  %237 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i370, align 8, !tbaa !34
  tail call void %237(%struct.jpeg_common_struct* nonnull %0) #4
  br label %do.body30.i

do.body30.i:                                      ; preds = %if.then27.i371, %if.end21.i
  %cmp31.i = icmp eq i64 %dec22.i, 0
  br i1 %cmp31.i, label %if.then33.i, label %if.end41.i

if.then33.i:                                      ; preds = %do.body30.i
  %fill_input_buffer34.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %227, i64 0, i32 3
  %238 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer34.i, align 8, !tbaa !20
  %call35.i = tail call i32 %238(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool36.i = icmp eq i32 %call35.i, 0
  br i1 %tobool36.i, label %return.loopexit489, label %if.end38.i

if.end38.i:                                       ; preds = %if.then33.i
  %239 = load i8*, i8** %next_input_byte3.i, align 8, !tbaa !17
  %240 = load i64, i64* %bytes_in_buffer5.i, align 8, !tbaa !19
  br label %if.end41.i

if.end41.i:                                       ; preds = %if.end38.i, %do.body30.i
  %next_input_byte.2.i372 = phi i8* [ %239, %if.end38.i ], [ %incdec.ptr23.i, %do.body30.i ]
  %bytes_in_buffer.2.i373 = phi i64 [ %240, %if.end38.i ], [ %dec22.i, %do.body30.i ]
  %dec42.i = add i64 %bytes_in_buffer.2.i373, -1
  %incdec.ptr43.i = getelementptr inbounds i8, i8* %next_input_byte.2.i372, i64 1
  %241 = load i8, i8* %next_input_byte.2.i372, align 1, !tbaa !21
  %conv44.i = zext i8 %241 to i32
  %shl45.i = shl nuw nsw i32 %conv44.i, 8
  %cmp46.i = icmp eq i64 %dec42.i, 0
  br i1 %cmp46.i, label %if.then48.i, label %get_dri.exit

if.then48.i:                                      ; preds = %if.end41.i
  %fill_input_buffer49.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %227, i64 0, i32 3
  %242 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer49.i, align 8, !tbaa !20
  %call50.i = tail call i32 %242(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool51.i = icmp eq i32 %call50.i, 0
  br i1 %tobool51.i, label %return.loopexit489, label %if.end53.i

if.end53.i:                                       ; preds = %if.then48.i
  %243 = load i8*, i8** %next_input_byte3.i, align 8, !tbaa !17
  %244 = load i64, i64* %bytes_in_buffer5.i, align 8, !tbaa !19
  br label %get_dri.exit

get_dri.exit:                                     ; preds = %if.end41.i, %if.end53.i
  %next_input_byte.3.i374 = phi i8* [ %243, %if.end53.i ], [ %incdec.ptr43.i, %if.end41.i ]
  %bytes_in_buffer.3.i375 = phi i64 [ %244, %if.end53.i ], [ %dec42.i, %if.end41.i ]
  %dec57.i = add i64 %bytes_in_buffer.3.i375, -1
  %incdec.ptr58.i = getelementptr inbounds i8, i8* %next_input_byte.3.i374, i64 1
  %245 = load i8, i8* %next_input_byte.3.i374, align 1, !tbaa !21
  %conv59.i = zext i8 %245 to i32
  %add60.i = or i32 %conv59.i, %shl45.i
  %246 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code64.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %246, i64 0, i32 5
  store i32 81, i32* %msg_code64.i, align 8, !tbaa !11
  %arrayidx.i376 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %246, i64 0, i32 6, i32 0, i64 0
  store i32 %add60.i, i32* %arrayidx.i376, align 4, !tbaa !14
  %emit_message.i377 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %246, i64 0, i32 1
  %247 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message.i377, align 8, !tbaa !15
  tail call void %247(%struct.jpeg_common_struct* %0, i32 1) #4
  store i32 %add60.i, i32* %restart_interval.i, align 8, !tbaa !35
  store i8* %incdec.ptr58.i, i8** %next_input_byte3.i, align 8, !tbaa !17
  store i64 %dec57.i, i64* %bytes_in_buffer5.i, align 8, !tbaa !19
  br label %sw.epilog

sw.bb70:                                          ; preds = %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9
  %sub = add nsw i32 %21, -224
  %idxprom = sext i32 %sub to i64
  %248 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %arrayidx73 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %248, i64 0, i32 4, i64 %idxprom
  %249 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %arrayidx73, align 8, !tbaa !29
  %call74 = tail call i32 %249(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool75 = icmp eq i32 %call74, 0
  br i1 %tobool75, label %return.loopexit489, label %sw.epilog

sw.bb78:                                          ; preds = %if.end9
  %250 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %process_COM = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %250, i64 0, i32 3
  %251 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %process_COM, align 8, !tbaa !57
  %call80 = tail call i32 %251(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool81 = icmp eq i32 %call80, 0
  br i1 %tobool81, label %return.loopexit489, label %sw.epilog

sw.bb84:                                          ; preds = %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9
  %252 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code86 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %252, i64 0, i32 5
  store i32 91, i32* %msg_code86, align 8, !tbaa !11
  %arrayidx91 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %252, i64 0, i32 6, i32 0, i64 0
  store i32 %21, i32* %arrayidx91, align 4, !tbaa !14
  %emit_message93 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %252, i64 0, i32 1
  %253 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message93, align 8, !tbaa !15
  tail call void %253(%struct.jpeg_common_struct* %0, i32 1) #4
  br label %sw.epilog

sw.bb94:                                          ; preds = %if.end9
  %254 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src.i, align 8, !tbaa !16
  %next_input_byte1.i381 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %254, i64 0, i32 0
  %bytes_in_buffer2.i382 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %254, i64 0, i32 1
  %255 = load i64, i64* %bytes_in_buffer2.i382, align 8, !tbaa !19
  %cmp.i383 = icmp eq i64 %255, 0
  br i1 %cmp.i383, label %if.then.i387, label %if.end6.i396

if.then.i387:                                     ; preds = %sw.bb94
  %fill_input_buffer.i384 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %254, i64 0, i32 3
  %256 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer.i384, align 8, !tbaa !20
  %call.i385 = tail call i32 %256(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool.i386 = icmp eq i32 %call.i385, 0
  br i1 %tobool.i386, label %return.loopexit489, label %if.end.i388

if.end.i388:                                      ; preds = %if.then.i387
  %257 = load i64, i64* %bytes_in_buffer2.i382, align 8, !tbaa !19
  br label %if.end6.i396

if.end6.i396:                                     ; preds = %if.end.i388, %sw.bb94
  %bytes_in_buffer.0.i389 = phi i64 [ %257, %if.end.i388 ], [ %255, %sw.bb94 ]
  %next_input_byte.0.i390 = load i8*, i8** %next_input_byte1.i381, align 8, !tbaa !17
  %dec.i391 = add i64 %bytes_in_buffer.0.i389, -1
  %incdec.ptr.i392 = getelementptr inbounds i8, i8* %next_input_byte.0.i390, i64 1
  %258 = load i8, i8* %next_input_byte.0.i390, align 1, !tbaa !21
  %conv.i393 = zext i8 %258 to i64
  %shl.i394 = shl nuw nsw i64 %conv.i393, 8
  %cmp8.i395 = icmp eq i64 %dec.i391, 0
  br i1 %cmp8.i395, label %if.then10.i400, label %skip_variable.exit

if.then10.i400:                                   ; preds = %if.end6.i396
  %fill_input_buffer11.i397 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %254, i64 0, i32 3
  %259 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer11.i397, align 8, !tbaa !20
  %call12.i398 = tail call i32 %259(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool13.i399 = icmp eq i32 %call12.i398, 0
  br i1 %tobool13.i399, label %return.loopexit489, label %if.end15.i401

if.end15.i401:                                    ; preds = %if.then10.i400
  %260 = load i8*, i8** %next_input_byte1.i381, align 8, !tbaa !17
  %261 = load i64, i64* %bytes_in_buffer2.i382, align 8, !tbaa !19
  br label %skip_variable.exit

skip_variable.exit:                               ; preds = %if.end6.i396, %if.end15.i401
  %next_input_byte.1.i402 = phi i8* [ %260, %if.end15.i401 ], [ %incdec.ptr.i392, %if.end6.i396 ]
  %bytes_in_buffer.1.i403 = phi i64 [ %261, %if.end15.i401 ], [ %dec.i391, %if.end6.i396 ]
  %dec19.i404 = add i64 %bytes_in_buffer.1.i403, -1
  %incdec.ptr20.i405 = getelementptr inbounds i8, i8* %next_input_byte.1.i402, i64 1
  %262 = load i8, i8* %next_input_byte.1.i402, align 1, !tbaa !21
  %conv21.i406 = zext i8 %262 to i64
  %add.i407 = or i64 %conv21.i406, %shl.i394
  %263 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code.i409 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %263, i64 0, i32 5
  store i32 90, i32* %msg_code.i409, align 8, !tbaa !11
  %264 = load i32, i32* %unread_marker, align 4, !tbaa !2
  %arrayidx.i411 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %263, i64 0, i32 6, i32 0, i64 0
  store i32 %264, i32* %arrayidx.i411, align 4, !tbaa !14
  %conv23.i = trunc i64 %add.i407 to i32
  %arrayidx27.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %263, i64 0, i32 6, i32 0, i64 1
  store i32 %conv23.i, i32* %arrayidx27.i, align 4, !tbaa !14
  %emit_message.i412 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %263, i64 0, i32 1
  %265 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message.i412, align 8, !tbaa !15
  tail call void %265(%struct.jpeg_common_struct* %0, i32 1) #4
  store i8* %incdec.ptr20.i405, i8** %next_input_byte1.i381, align 8, !tbaa !17
  store i64 %dec19.i404, i64* %bytes_in_buffer2.i382, align 8, !tbaa !19
  %266 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src.i, align 8, !tbaa !16
  %skip_input_data.i = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %266, i64 0, i32 4
  %267 = load void (%struct.jpeg_decompress_struct*, i64)*, void (%struct.jpeg_decompress_struct*, i64)** %skip_input_data.i, align 8, !tbaa !58
  %sub.i413 = add nsw i64 %add.i407, -2
  tail call void %267(%struct.jpeg_decompress_struct* nonnull %cinfo, i64 %sub.i413) #4
  br label %sw.epilog

sw.default:                                       ; preds = %if.end9
  %268 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !10
  %msg_code100 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %268, i64 0, i32 5
  store i32 67, i32* %msg_code100, align 8, !tbaa !11
  %arrayidx105 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %268, i64 0, i32 6, i32 0, i64 0
  store i32 %21, i32* %arrayidx105, align 4, !tbaa !14
  %error_exit107 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %268, i64 0, i32 0
  %269 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit107, align 8, !tbaa !34
  tail call void %269(%struct.jpeg_common_struct* %0) #4
  br label %sw.epilog

sw.epilog:                                        ; preds = %skip_variable.exit, %get_dri.exit, %get_dqt.exit, %get_dht.exit, %get_dac.exit, %sw.bb15, %sw.bb20, %sw.bb25, %sw.bb30, %sw.bb70, %sw.bb78, %get_soi.exit, %sw.default, %sw.bb84, %sw.bb35
  store i32 0, i32* %unread_marker, align 4, !tbaa !2
  br label %for.cond

return.loopexit:                                  ; preds = %if.then68.i, %if.then85.i
  br label %return

return.loopexit483:                               ; preds = %if.then115.us.i
  br label %return

return.loopexit484:                               ; preds = %if.then82.i, %if.then97.i
  br label %return

return.loopexit486:                               ; preds = %if.then27.i, %if.then44.i
  br label %return

return.loopexit488:                               ; preds = %if.then31.i
  br label %return

return.loopexit489:                               ; preds = %if.else, %sw.bb15, %sw.bb20, %sw.bb25, %sw.bb30, %sw.bb70, %sw.bb78, %if.then.i, %if.then10.i, %if.then.i184, %if.then10.i197, %if.then.i296, %if.then14.i309, %if.then.i355, %if.then13.i, %if.then33.i, %if.then48.i, %if.then.i387, %if.then10.i400
  br label %return

return:                                           ; preds = %return.loopexit489, %return.loopexit488, %return.loopexit486, %return.loopexit484, %return.loopexit483, %return.loopexit, %if.then173.i, %if.then156.i, %if.then139.i, %if.then29.i, %if.then14.i, %if.then4.i, %get_dht.exit.thread, %sw.bb45, %if.end43
  %retval.0 = phi i32 [ 2, %sw.bb45 ], [ 1, %if.end43 ], [ 0, %get_dht.exit.thread ], [ 0, %if.then4.i ], [ 0, %if.then14.i ], [ 0, %if.then29.i ], [ 0, %if.then139.i ], [ 0, %if.then156.i ], [ 0, %if.then173.i ], [ 0, %return.loopexit ], [ 0, %return.loopexit483 ], [ 0, %return.loopexit484 ], [ 0, %return.loopexit486 ], [ 0, %return.loopexit488 ], [ 0, %return.loopexit489 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @read_restart_marker(%struct.jpeg_decompress_struct* %cinfo) #0 {
entry:
  %unread_marker = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 72
  %0 = load i32, i32* %unread_marker, align 4, !tbaa !2
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end2

if.then:                                          ; preds = %entry
  %call = tail call fastcc i32 @next_marker(%struct.jpeg_decompress_struct* nonnull %cinfo)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %if.then.if.end2_crit_edge

if.then.if.end2_crit_edge:                        ; preds = %if.then
  %.pre = load i32, i32* %unread_marker, align 4, !tbaa !2
  br label %if.end2

if.end2:                                          ; preds = %if.then.if.end2_crit_edge, %entry
  %1 = phi i32 [ %.pre, %if.then.if.end2_crit_edge ], [ %0, %entry ]
  %marker = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 78
  %2 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %next_restart_num = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %2, i64 0, i32 7
  %3 = load i32, i32* %next_restart_num, align 8, !tbaa !54
  %add = add nsw i32 %3, 208
  %cmp4 = icmp eq i32 %1, %add
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end2
  %err = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %4 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !10
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 5
  store i32 97, i32* %msg_code, align 8, !tbaa !11
  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 6, i32 0, i64 0
  store i32 %3, i32* %arrayidx, align 4, !tbaa !14
  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 1
  %5 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !15
  %6 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %5(%struct.jpeg_common_struct* %6, i32 3) #4
  store i32 0, i32* %unread_marker, align 4, !tbaa !2
  br label %if.end18

if.else:                                          ; preds = %if.end2
  %src = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5
  %7 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align 8, !tbaa !16
  %resync_to_restart = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %7, i64 0, i32 5
  %resync_to_restart11 = bitcast {}** %resync_to_restart to i32 (%struct.jpeg_decompress_struct*, i32)**
  %8 = load i32 (%struct.jpeg_decompress_struct*, i32)*, i32 (%struct.jpeg_decompress_struct*, i32)** %resync_to_restart11, align 8, !tbaa !59
  %call14 = tail call i32 %8(%struct.jpeg_decompress_struct* nonnull %cinfo, i32 %3) #4
  %tobool15 = icmp eq i32 %call14, 0
  br i1 %tobool15, label %return, label %if.end18

if.end18:                                         ; preds = %if.else, %if.then5
  %9 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %next_restart_num20 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %9, i64 0, i32 7
  %10 = load i32, i32* %next_restart_num20, align 8, !tbaa !54
  %add21 = add nsw i32 %10, 1
  %and = and i32 %add21, 7
  store i32 %and, i32* %next_restart_num20, align 8, !tbaa !54
  br label %return

return:                                           ; preds = %if.else, %if.then, %if.end18
  %retval.0 = phi i32 [ 1, %if.end18 ], [ 0, %if.then ], [ 0, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @skip_variable(%struct.jpeg_decompress_struct* %cinfo) #0 {
entry:
  %src = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5
  %0 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align 8, !tbaa !16
  %next_input_byte1 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 0
  %bytes_in_buffer2 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 1
  %1 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  %cmp = icmp eq i64 %1, 0
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %fill_input_buffer = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 3
  %2 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer, align 8, !tbaa !20
  %call = tail call i32 %2(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end6

if.end6:                                          ; preds = %if.end, %entry
  %bytes_in_buffer.0 = phi i64 [ %3, %if.end ], [ %1, %entry ]
  %next_input_byte.0 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %dec = add i64 %bytes_in_buffer.0, -1
  %incdec.ptr = getelementptr inbounds i8, i8* %next_input_byte.0, i64 1
  %4 = load i8, i8* %next_input_byte.0, align 1, !tbaa !21
  %conv = zext i8 %4 to i64
  %shl = shl nuw nsw i64 %conv, 8
  %cmp8 = icmp eq i64 %dec, 0
  br i1 %cmp8, label %if.then10, label %if.end18

if.then10:                                        ; preds = %if.end6
  %fill_input_buffer11 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 3
  %5 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer11, align 8, !tbaa !20
  %call12 = tail call i32 %5(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool13 = icmp eq i32 %call12, 0
  br i1 %tobool13, label %cleanup, label %if.end15

if.end15:                                         ; preds = %if.then10
  %6 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %7 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end18

if.end18:                                         ; preds = %if.end15, %if.end6
  %next_input_byte.1 = phi i8* [ %6, %if.end15 ], [ %incdec.ptr, %if.end6 ]
  %bytes_in_buffer.1 = phi i64 [ %7, %if.end15 ], [ %dec, %if.end6 ]
  %dec19 = add i64 %bytes_in_buffer.1, -1
  %incdec.ptr20 = getelementptr inbounds i8, i8* %next_input_byte.1, i64 1
  %8 = load i8, i8* %next_input_byte.1, align 1, !tbaa !21
  %conv21 = zext i8 %8 to i64
  %add = or i64 %conv21, %shl
  %err = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !10
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 5
  store i32 90, i32* %msg_code, align 8, !tbaa !11
  %unread_marker = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 72
  %10 = load i32, i32* %unread_marker, align 4, !tbaa !2
  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 0
  store i32 %10, i32* %arrayidx, align 4, !tbaa !14
  %conv23 = trunc i64 %add to i32
  %arrayidx27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 1
  store i32 %conv23, i32* %arrayidx27, align 4, !tbaa !14
  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 1
  %11 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !15
  %12 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %11(%struct.jpeg_common_struct* %12, i32 1) #4
  store i8* %incdec.ptr20, i8** %next_input_byte1, align 8, !tbaa !17
  store i64 %dec19, i64* %bytes_in_buffer2, align 8, !tbaa !19
  %13 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align 8, !tbaa !16
  %skip_input_data = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %13, i64 0, i32 4
  %14 = load void (%struct.jpeg_decompress_struct*, i64)*, void (%struct.jpeg_decompress_struct*, i64)** %skip_input_data, align 8, !tbaa !58
  %sub = add nsw i64 %add, -2
  tail call void %14(%struct.jpeg_decompress_struct* nonnull %cinfo, i64 %sub) #4
  br label %cleanup

cleanup:                                          ; preds = %if.then10, %if.then, %if.end18
  %retval.0 = phi i32 [ 1, %if.end18 ], [ 0, %if.then ], [ 0, %if.then10 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @get_app0(%struct.jpeg_decompress_struct* %cinfo) #0 {
entry:
  %b = alloca [14 x i8], align 1
  %0 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 0
  call void @llvm.lifetime.start(i64 14, i8* %0) #4
  %src = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5
  %1 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align 8, !tbaa !16
  %next_input_byte1 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1, i64 0, i32 0
  %bytes_in_buffer2 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1, i64 0, i32 1
  %2 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  %cmp = icmp eq i64 %2, 0
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %fill_input_buffer = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1, i64 0, i32 3
  %3 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer, align 8, !tbaa !20
  %call = tail call i32 %3(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %if.then
  %4 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end6

if.end6:                                          ; preds = %if.end, %entry
  %bytes_in_buffer.0 = phi i64 [ %4, %if.end ], [ %2, %entry ]
  %next_input_byte.0 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %dec = add i64 %bytes_in_buffer.0, -1
  %incdec.ptr = getelementptr inbounds i8, i8* %next_input_byte.0, i64 1
  %5 = load i8, i8* %next_input_byte.0, align 1, !tbaa !21
  %conv = zext i8 %5 to i64
  %shl = shl nuw nsw i64 %conv, 8
  %cmp8 = icmp eq i64 %dec, 0
  br i1 %cmp8, label %if.then10, label %if.end18

if.then10:                                        ; preds = %if.end6
  %fill_input_buffer11 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1, i64 0, i32 3
  %6 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer11, align 8, !tbaa !20
  %call12 = tail call i32 %6(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool13 = icmp eq i32 %call12, 0
  br i1 %tobool13, label %cleanup, label %if.end15

if.end15:                                         ; preds = %if.then10
  %7 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %8 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end18

if.end18:                                         ; preds = %if.end15, %if.end6
  %next_input_byte.1 = phi i8* [ %7, %if.end15 ], [ %incdec.ptr, %if.end6 ]
  %bytes_in_buffer.1 = phi i64 [ %8, %if.end15 ], [ %dec, %if.end6 ]
  %dec19 = add i64 %bytes_in_buffer.1, -1
  %incdec.ptr20 = getelementptr inbounds i8, i8* %next_input_byte.1, i64 1
  %9 = load i8, i8* %next_input_byte.1, align 1, !tbaa !21
  %conv21 = zext i8 %9 to i64
  %add = or i64 %conv21, %shl
  %sub = add nsw i64 %add, -2
  %cmp22 = icmp sgt i64 %sub, 13
  br i1 %cmp22, label %for.cond.preheader, label %if.else194

for.cond.preheader:                               ; preds = %if.end18
  %fill_input_buffer31 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1, i64 0, i32 3
  br label %do.body27

do.body27:                                        ; preds = %for.cond.preheader, %if.end38
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %if.end38 ]
  %bytes_in_buffer.2305 = phi i64 [ %dec19, %for.cond.preheader ], [ %dec39, %if.end38 ]
  %next_input_byte.2304 = phi i8* [ %incdec.ptr20, %for.cond.preheader ], [ %incdec.ptr40, %if.end38 ]
  %cmp28 = icmp eq i64 %bytes_in_buffer.2305, 0
  br i1 %cmp28, label %if.then30, label %if.end38

if.then30:                                        ; preds = %do.body27
  %10 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer31, align 8, !tbaa !20
  %call32 = tail call i32 %10(%struct.jpeg_decompress_struct* %cinfo) #4
  %tobool33 = icmp eq i32 %call32, 0
  br i1 %tobool33, label %cleanup.loopexit, label %if.end35

if.end35:                                         ; preds = %if.then30
  %11 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %12 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end38

if.end38:                                         ; preds = %if.end35, %do.body27
  %next_input_byte.3 = phi i8* [ %11, %if.end35 ], [ %next_input_byte.2304, %do.body27 ]
  %bytes_in_buffer.3 = phi i64 [ %12, %if.end35 ], [ %bytes_in_buffer.2305, %do.body27 ]
  %dec39 = add i64 %bytes_in_buffer.3, -1
  %incdec.ptr40 = getelementptr inbounds i8, i8* %next_input_byte.3, i64 1
  %13 = load i8, i8* %next_input_byte.3, align 1, !tbaa !21
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 %indvars.iv
  store i8 %13, i8* %arrayidx, align 1, !tbaa !21
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp25 = icmp slt i64 %indvars.iv.next, 14
  br i1 %cmp25, label %do.body27, label %for.end

for.end:                                          ; preds = %if.end38
  %incdec.ptr40.lcssa = phi i8* [ %incdec.ptr40, %if.end38 ]
  %dec39.lcssa = phi i64 [ %dec39, %if.end38 ]
  %sub43 = add nsw i64 %add, -16
  %14 = load i8, i8* %0, align 1, !tbaa !21
  %cmp46 = icmp eq i8 %14, 74
  br i1 %cmp46, label %land.lhs.true, label %if.else182

land.lhs.true:                                    ; preds = %for.end
  %arrayidx48 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 1
  %15 = load i8, i8* %arrayidx48, align 1, !tbaa !21
  %cmp50 = icmp eq i8 %15, 70
  br i1 %cmp50, label %land.lhs.true52, label %if.else182

land.lhs.true52:                                  ; preds = %land.lhs.true
  %arrayidx53 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 2
  %16 = load i8, i8* %arrayidx53, align 1, !tbaa !21
  %cmp55 = icmp eq i8 %16, 73
  br i1 %cmp55, label %land.lhs.true57, label %if.else182

land.lhs.true57:                                  ; preds = %land.lhs.true52
  %arrayidx58 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 3
  %17 = load i8, i8* %arrayidx58, align 1, !tbaa !21
  %cmp60 = icmp eq i8 %17, 70
  br i1 %cmp60, label %land.lhs.true62, label %if.else182

land.lhs.true62:                                  ; preds = %land.lhs.true57
  %arrayidx63 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 4
  %18 = load i8, i8* %arrayidx63, align 1, !tbaa !21
  %cmp65 = icmp eq i8 %18, 0
  br i1 %cmp65, label %if.then67, label %if.else182

if.then67:                                        ; preds = %land.lhs.true62
  %arrayidx68 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 5
  %19 = load i8, i8* %arrayidx68, align 1, !tbaa !21
  %cmp70 = icmp eq i8 %19, 1
  br i1 %cmp70, label %if.else, label %if.then72

if.then72:                                        ; preds = %if.then67
  %err = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !10
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i64 0, i32 5
  store i32 115, i32* %msg_code, align 8, !tbaa !11
  %conv74 = zext i8 %19 to i32
  %arrayidx76 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i64 0, i32 6, i32 0, i64 0
  store i32 %conv74, i32* %arrayidx76, align 4, !tbaa !14
  %arrayidx77 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 6
  %21 = load i8, i8* %arrayidx77, align 1, !tbaa !21
  %conv78 = zext i8 %21 to i32
  %arrayidx82 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i64 0, i32 6, i32 0, i64 1
  store i32 %conv78, i32* %arrayidx82, align 4, !tbaa !14
  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i64 0, i32 1
  %22 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !15
  %23 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %22(%struct.jpeg_common_struct* %23, i32 -1) #4
  br label %if.end106

if.else:                                          ; preds = %if.then67
  %arrayidx84 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 6
  %24 = load i8, i8* %arrayidx84, align 1, !tbaa !21
  %cmp86 = icmp ugt i8 %24, 2
  %err89 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  br i1 %cmp86, label %if.then88, label %if.else.if.end106_crit_edge

if.else.if.end106_crit_edge:                      ; preds = %if.else
  %.pre306 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  br label %if.end106

if.then88:                                        ; preds = %if.else
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err89, align 8, !tbaa !10
  %msg_code90 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 5
  store i32 88, i32* %msg_code90, align 8, !tbaa !11
  %arrayidx96 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 6, i32 0, i64 0
  store i32 1, i32* %arrayidx96, align 4, !tbaa !14
  %conv98 = zext i8 %24 to i32
  %arrayidx102 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 6, i32 0, i64 1
  store i32 %conv98, i32* %arrayidx102, align 4, !tbaa !14
  %emit_message104 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 1
  %26 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message104, align 8, !tbaa !15
  %27 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %26(%struct.jpeg_common_struct* %27, i32 1) #4
  br label %if.end106

if.end106:                                        ; preds = %if.else.if.end106_crit_edge, %if.then88, %if.then72
  %.pre-phi = phi %struct.jpeg_common_struct* [ %.pre306, %if.else.if.end106_crit_edge ], [ %27, %if.then88 ], [ %23, %if.then72 ]
  %err123.pre-phi = phi %struct.jpeg_error_mgr** [ %err89, %if.else.if.end106_crit_edge ], [ %err89, %if.then88 ], [ %err, %if.then72 ]
  %saw_JFIF_marker = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 50
  store i32 1, i32* %saw_JFIF_marker, align 4, !tbaa !38
  %arrayidx107 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 7
  %28 = load i8, i8* %arrayidx107, align 1, !tbaa !21
  %density_unit = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 51
  store i8 %28, i8* %density_unit, align 8, !tbaa !39
  %arrayidx108 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 8
  %29 = load i8, i8* %arrayidx108, align 1, !tbaa !21
  %conv109 = zext i8 %29 to i16
  %shl110 = shl nuw i16 %conv109, 8
  %arrayidx111 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 9
  %30 = load i8, i8* %arrayidx111, align 1, !tbaa !21
  %conv112 = zext i8 %30 to i16
  %add113 = or i16 %shl110, %conv112
  %X_density = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 52
  store i16 %add113, i16* %X_density, align 2, !tbaa !40
  %arrayidx115 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 10
  %31 = load i8, i8* %arrayidx115, align 1, !tbaa !21
  %conv116 = zext i8 %31 to i16
  %shl117 = shl nuw i16 %conv116, 8
  %arrayidx118 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 11
  %32 = load i8, i8* %arrayidx118, align 1, !tbaa !21
  %conv119 = zext i8 %32 to i16
  %add120 = or i16 %shl117, %conv119
  %Y_density = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 53
  store i16 %add120, i16* %Y_density, align 4, !tbaa !41
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err123.pre-phi, align 8, !tbaa !10
  %arraydecay = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i64 0, i32 6, i32 0, i64 0
  %conv127 = zext i16 %add113 to i32
  store i32 %conv127, i32* %arraydecay, align 4, !tbaa !14
  %conv130 = zext i16 %add120 to i32
  %arrayidx131 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i64 0, i32 6, i32 0, i64 1
  store i32 %conv130, i32* %arrayidx131, align 4, !tbaa !14
  %conv133 = zext i8 %28 to i32
  %arrayidx134 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i64 0, i32 6, i32 0, i64 2
  store i32 %conv133, i32* %arrayidx134, align 4, !tbaa !14
  %msg_code136 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i64 0, i32 5
  store i32 86, i32* %msg_code136, align 8, !tbaa !11
  %emit_message138 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i64 0, i32 1
  %34 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message138, align 8, !tbaa !15
  tail call void %34(%struct.jpeg_common_struct* %.pre-phi, i32 1) #4
  %arrayidx141 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 12
  %35 = load i8, i8* %arrayidx141, align 1, !tbaa !21
  %arrayidx143 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 13
  %36 = load i8, i8* %arrayidx143, align 1, !tbaa !21
  %or300 = or i8 %36, %35
  %tobool145 = icmp eq i8 %or300, 0
  br i1 %tobool145, label %if.end163, label %if.then146

if.then146:                                       ; preds = %if.end106
  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err123.pre-phi, align 8, !tbaa !10
  %msg_code148 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 5
  store i32 89, i32* %msg_code148, align 8, !tbaa !11
  %conv150 = zext i8 %35 to i32
  %arrayidx154 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 6, i32 0, i64 0
  store i32 %conv150, i32* %arrayidx154, align 4, !tbaa !14
  %conv156 = zext i8 %36 to i32
  %arrayidx160 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 6, i32 0, i64 1
  store i32 %conv156, i32* %arrayidx160, align 4, !tbaa !14
  %emit_message162 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 1
  %38 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message162, align 8, !tbaa !15
  tail call void %38(%struct.jpeg_common_struct* %.pre-phi, i32 1) #4
  br label %if.end163

if.end163:                                        ; preds = %if.end106, %if.then146
  %conv165 = zext i8 %35 to i64
  %conv167 = zext i8 %36 to i64
  %mul = mul nuw nsw i64 %conv165, 3
  %mul168 = mul nuw nsw i64 %mul, %conv167
  %cmp169 = icmp eq i64 %sub43, %mul168
  br i1 %cmp169, label %if.end204, label %if.then171

if.then171:                                       ; preds = %if.end163
  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err123.pre-phi, align 8, !tbaa !10
  %msg_code173 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 5
  store i32 87, i32* %msg_code173, align 8, !tbaa !11
  %conv174 = trunc i64 %sub43 to i32
  %arrayidx178 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 6, i32 0, i64 0
  store i32 %conv174, i32* %arrayidx178, align 4, !tbaa !14
  %emit_message180 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 1
  %40 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message180, align 8, !tbaa !15
  tail call void %40(%struct.jpeg_common_struct* %.pre-phi, i32 1) #4
  br label %if.end204

if.else182:                                       ; preds = %land.lhs.true62, %land.lhs.true57, %land.lhs.true52, %land.lhs.true, %for.end
  %err183 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %41 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err183, align 8, !tbaa !10
  %msg_code184 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %41, i64 0, i32 5
  store i32 76, i32* %msg_code184, align 8, !tbaa !11
  %conv185 = trunc i64 %sub43 to i32
  %add186 = add nsw i32 %conv185, 14
  %arrayidx190 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %41, i64 0, i32 6, i32 0, i64 0
  store i32 %add186, i32* %arrayidx190, align 4, !tbaa !14
  %emit_message192 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %41, i64 0, i32 1
  %42 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message192, align 8, !tbaa !15
  %43 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %42(%struct.jpeg_common_struct* %43, i32 1) #4
  br label %if.end204

if.else194:                                       ; preds = %if.end18
  %err195 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %44 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err195, align 8, !tbaa !10
  %msg_code196 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %44, i64 0, i32 5
  store i32 76, i32* %msg_code196, align 8, !tbaa !11
  %conv197 = trunc i64 %sub to i32
  %arrayidx201 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %44, i64 0, i32 6, i32 0, i64 0
  store i32 %conv197, i32* %arrayidx201, align 4, !tbaa !14
  %emit_message203 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %44, i64 0, i32 1
  %45 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message203, align 8, !tbaa !15
  %46 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %45(%struct.jpeg_common_struct* %46, i32 1) #4
  br label %if.end204

if.end204:                                        ; preds = %if.end163, %if.else182, %if.then171, %if.else194
  %length.0 = phi i64 [ %sub43, %if.then171 ], [ %sub43, %if.end163 ], [ %sub43, %if.else182 ], [ %sub, %if.else194 ]
  %next_input_byte.4 = phi i8* [ %incdec.ptr40.lcssa, %if.then171 ], [ %incdec.ptr40.lcssa, %if.end163 ], [ %incdec.ptr40.lcssa, %if.else182 ], [ %incdec.ptr20, %if.else194 ]
  %bytes_in_buffer.4 = phi i64 [ %dec39.lcssa, %if.then171 ], [ %dec39.lcssa, %if.end163 ], [ %dec39.lcssa, %if.else182 ], [ %dec19, %if.else194 ]
  store i8* %next_input_byte.4, i8** %next_input_byte1, align 8, !tbaa !17
  store i64 %bytes_in_buffer.4, i64* %bytes_in_buffer2, align 8, !tbaa !19
  %cmp207 = icmp sgt i64 %length.0, 0
  br i1 %cmp207, label %if.then209, label %cleanup

if.then209:                                       ; preds = %if.end204
  %47 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align 8, !tbaa !16
  %skip_input_data = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %47, i64 0, i32 4
  %48 = load void (%struct.jpeg_decompress_struct*, i64)*, void (%struct.jpeg_decompress_struct*, i64)** %skip_input_data, align 8, !tbaa !58
  tail call void %48(%struct.jpeg_decompress_struct* nonnull %cinfo, i64 %length.0) #4
  br label %cleanup

cleanup.loopexit:                                 ; preds = %if.then30
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.end204, %if.then209, %if.then10, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then10 ], [ 1, %if.then209 ], [ 1, %if.end204 ], [ 0, %cleanup.loopexit ]
  call void @llvm.lifetime.end(i64 14, i8* %0) #4
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @get_app14(%struct.jpeg_decompress_struct* %cinfo) #0 {
entry:
  %b = alloca [12 x i8], align 1
  %0 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 0
  call void @llvm.lifetime.start(i64 12, i8* %0) #4
  %src = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5
  %1 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align 8, !tbaa !16
  %next_input_byte1 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1, i64 0, i32 0
  %bytes_in_buffer2 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1, i64 0, i32 1
  %2 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  %cmp = icmp eq i64 %2, 0
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %fill_input_buffer = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1, i64 0, i32 3
  %3 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer, align 8, !tbaa !20
  %call = tail call i32 %3(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %if.then
  %4 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end6

if.end6:                                          ; preds = %if.end, %entry
  %bytes_in_buffer.0 = phi i64 [ %4, %if.end ], [ %2, %entry ]
  %next_input_byte.0 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %dec = add i64 %bytes_in_buffer.0, -1
  %incdec.ptr = getelementptr inbounds i8, i8* %next_input_byte.0, i64 1
  %5 = load i8, i8* %next_input_byte.0, align 1, !tbaa !21
  %conv = zext i8 %5 to i64
  %shl = shl nuw nsw i64 %conv, 8
  %cmp8 = icmp eq i64 %dec, 0
  br i1 %cmp8, label %if.then10, label %if.end18

if.then10:                                        ; preds = %if.end6
  %fill_input_buffer11 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1, i64 0, i32 3
  %6 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer11, align 8, !tbaa !20
  %call12 = tail call i32 %6(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool13 = icmp eq i32 %call12, 0
  br i1 %tobool13, label %cleanup, label %if.end15

if.end15:                                         ; preds = %if.then10
  %7 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %8 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end18

if.end18:                                         ; preds = %if.end15, %if.end6
  %next_input_byte.1 = phi i8* [ %7, %if.end15 ], [ %incdec.ptr, %if.end6 ]
  %bytes_in_buffer.1 = phi i64 [ %8, %if.end15 ], [ %dec, %if.end6 ]
  %dec19 = add i64 %bytes_in_buffer.1, -1
  %incdec.ptr20 = getelementptr inbounds i8, i8* %next_input_byte.1, i64 1
  %9 = load i8, i8* %next_input_byte.1, align 1, !tbaa !21
  %conv21 = zext i8 %9 to i64
  %add = or i64 %conv21, %shl
  %sub = add nsw i64 %add, -2
  %cmp22 = icmp sgt i64 %sub, 11
  br i1 %cmp22, label %for.cond.preheader, label %if.else109

for.cond.preheader:                               ; preds = %if.end18
  %fill_input_buffer31 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1, i64 0, i32 3
  br label %do.body27

do.body27:                                        ; preds = %for.cond.preheader, %if.end38
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %if.end38 ]
  %bytes_in_buffer.2203 = phi i64 [ %dec19, %for.cond.preheader ], [ %dec39, %if.end38 ]
  %next_input_byte.2202 = phi i8* [ %incdec.ptr20, %for.cond.preheader ], [ %incdec.ptr40, %if.end38 ]
  %cmp28 = icmp eq i64 %bytes_in_buffer.2203, 0
  br i1 %cmp28, label %if.then30, label %if.end38

if.then30:                                        ; preds = %do.body27
  %10 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer31, align 8, !tbaa !20
  %call32 = tail call i32 %10(%struct.jpeg_decompress_struct* %cinfo) #4
  %tobool33 = icmp eq i32 %call32, 0
  br i1 %tobool33, label %cleanup.loopexit, label %if.end35

if.end35:                                         ; preds = %if.then30
  %11 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %12 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end38

if.end38:                                         ; preds = %if.end35, %do.body27
  %next_input_byte.3 = phi i8* [ %11, %if.end35 ], [ %next_input_byte.2202, %do.body27 ]
  %bytes_in_buffer.3 = phi i64 [ %12, %if.end35 ], [ %bytes_in_buffer.2203, %do.body27 ]
  %dec39 = add i64 %bytes_in_buffer.3, -1
  %incdec.ptr40 = getelementptr inbounds i8, i8* %next_input_byte.3, i64 1
  %13 = load i8, i8* %next_input_byte.3, align 1, !tbaa !21
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 %indvars.iv
  store i8 %13, i8* %arrayidx, align 1, !tbaa !21
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp25 = icmp slt i64 %indvars.iv.next, 12
  br i1 %cmp25, label %do.body27, label %for.end

for.end:                                          ; preds = %if.end38
  %incdec.ptr40.lcssa = phi i8* [ %incdec.ptr40, %if.end38 ]
  %dec39.lcssa = phi i64 [ %dec39, %if.end38 ]
  %sub43 = add nsw i64 %add, -14
  %14 = load i8, i8* %0, align 1, !tbaa !21
  %cmp46 = icmp eq i8 %14, 65
  br i1 %cmp46, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %for.end
  %arrayidx48 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 1
  %15 = load i8, i8* %arrayidx48, align 1, !tbaa !21
  %cmp50 = icmp eq i8 %15, 100
  br i1 %cmp50, label %land.lhs.true52, label %if.else

land.lhs.true52:                                  ; preds = %land.lhs.true
  %arrayidx53 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 2
  %16 = load i8, i8* %arrayidx53, align 1, !tbaa !21
  %cmp55 = icmp eq i8 %16, 111
  br i1 %cmp55, label %land.lhs.true57, label %if.else

land.lhs.true57:                                  ; preds = %land.lhs.true52
  %arrayidx58 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 3
  %17 = load i8, i8* %arrayidx58, align 1, !tbaa !21
  %cmp60 = icmp eq i8 %17, 98
  br i1 %cmp60, label %land.lhs.true62, label %if.else

land.lhs.true62:                                  ; preds = %land.lhs.true57
  %arrayidx63 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 4
  %18 = load i8, i8* %arrayidx63, align 1, !tbaa !21
  %cmp65 = icmp eq i8 %18, 101
  br i1 %cmp65, label %if.then67, label %if.else

if.then67:                                        ; preds = %land.lhs.true62
  %arrayidx68 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 5
  %19 = load i8, i8* %arrayidx68, align 1, !tbaa !21
  %conv69 = zext i8 %19 to i32
  %shl70 = shl nuw nsw i32 %conv69, 8
  %arrayidx71 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 6
  %20 = load i8, i8* %arrayidx71, align 1, !tbaa !21
  %conv72 = zext i8 %20 to i32
  %add73 = or i32 %shl70, %conv72
  %arrayidx74 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 7
  %21 = load i8, i8* %arrayidx74, align 1, !tbaa !21
  %conv75 = zext i8 %21 to i32
  %shl76 = shl nuw nsw i32 %conv75, 8
  %arrayidx77 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 8
  %22 = load i8, i8* %arrayidx77, align 1, !tbaa !21
  %conv78 = zext i8 %22 to i32
  %add79 = or i32 %shl76, %conv78
  %arrayidx80 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 9
  %23 = load i8, i8* %arrayidx80, align 1, !tbaa !21
  %conv81 = zext i8 %23 to i32
  %shl82 = shl nuw nsw i32 %conv81, 8
  %arrayidx83 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 10
  %24 = load i8, i8* %arrayidx83, align 1, !tbaa !21
  %conv84 = zext i8 %24 to i32
  %add85 = or i32 %shl82, %conv84
  %arrayidx86 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 11
  %25 = load i8, i8* %arrayidx86, align 1, !tbaa !21
  %conv87 = zext i8 %25 to i32
  %err = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !10
  %arraydecay = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 6, i32 0, i64 0
  store i32 %add73, i32* %arraydecay, align 4, !tbaa !14
  %arrayidx90 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 6, i32 0, i64 1
  store i32 %add79, i32* %arrayidx90, align 4, !tbaa !14
  %arrayidx91 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 6, i32 0, i64 2
  store i32 %add85, i32* %arrayidx91, align 4, !tbaa !14
  %arrayidx92 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 6, i32 0, i64 3
  store i32 %conv87, i32* %arrayidx92, align 4, !tbaa !14
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 5
  store i32 75, i32* %msg_code, align 8, !tbaa !11
  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 1
  %27 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !15
  %28 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %27(%struct.jpeg_common_struct* %28, i32 1) #4
  %saw_Adobe_marker = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 54
  store i32 1, i32* %saw_Adobe_marker, align 8, !tbaa !42
  %Adobe_transform = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 55
  store i8 %25, i8* %Adobe_transform, align 4, !tbaa !43
  br label %if.end119

if.else:                                          ; preds = %land.lhs.true62, %land.lhs.true57, %land.lhs.true52, %land.lhs.true, %for.end
  %err98 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err98, align 8, !tbaa !10
  %msg_code99 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 5
  store i32 77, i32* %msg_code99, align 8, !tbaa !11
  %conv100 = trunc i64 %sub43 to i32
  %add101 = add nsw i32 %conv100, 12
  %arrayidx105 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 6, i32 0, i64 0
  store i32 %add101, i32* %arrayidx105, align 4, !tbaa !14
  %emit_message107 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 1
  %30 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message107, align 8, !tbaa !15
  %31 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %30(%struct.jpeg_common_struct* %31, i32 1) #4
  br label %if.end119

if.else109:                                       ; preds = %if.end18
  %err110 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %32 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err110, align 8, !tbaa !10
  %msg_code111 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %32, i64 0, i32 5
  store i32 77, i32* %msg_code111, align 8, !tbaa !11
  %conv112 = trunc i64 %sub to i32
  %arrayidx116 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %32, i64 0, i32 6, i32 0, i64 0
  store i32 %conv112, i32* %arrayidx116, align 4, !tbaa !14
  %emit_message118 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %32, i64 0, i32 1
  %33 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message118, align 8, !tbaa !15
  %34 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %33(%struct.jpeg_common_struct* %34, i32 1) #4
  br label %if.end119

if.end119:                                        ; preds = %if.then67, %if.else, %if.else109
  %length.0 = phi i64 [ %sub43, %if.then67 ], [ %sub43, %if.else ], [ %sub, %if.else109 ]
  %next_input_byte.4 = phi i8* [ %incdec.ptr40.lcssa, %if.then67 ], [ %incdec.ptr40.lcssa, %if.else ], [ %incdec.ptr20, %if.else109 ]
  %bytes_in_buffer.4 = phi i64 [ %dec39.lcssa, %if.then67 ], [ %dec39.lcssa, %if.else ], [ %dec19, %if.else109 ]
  store i8* %next_input_byte.4, i8** %next_input_byte1, align 8, !tbaa !17
  store i64 %bytes_in_buffer.4, i64* %bytes_in_buffer2, align 8, !tbaa !19
  %cmp122 = icmp sgt i64 %length.0, 0
  br i1 %cmp122, label %if.then124, label %cleanup

if.then124:                                       ; preds = %if.end119
  %35 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align 8, !tbaa !16
  %skip_input_data = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %35, i64 0, i32 4
  %36 = load void (%struct.jpeg_decompress_struct*, i64)*, void (%struct.jpeg_decompress_struct*, i64)** %skip_input_data, align 8, !tbaa !58
  tail call void %36(%struct.jpeg_decompress_struct* nonnull %cinfo, i64 %length.0) #4
  br label %cleanup

cleanup.loopexit:                                 ; preds = %if.then30
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.end119, %if.then124, %if.then10, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then10 ], [ 1, %if.then124 ], [ 1, %if.end119 ], [ 0, %cleanup.loopexit ]
  call void @llvm.lifetime.end(i64 12, i8* %0) #4
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_sof(%struct.jpeg_decompress_struct* %cinfo, i32 %is_prog, i32 %is_arith) unnamed_addr #0 {
entry:
  %src = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5
  %0 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align 8, !tbaa !16
  %next_input_byte1 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 0
  %1 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %bytes_in_buffer2 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 1
  %2 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  %progressive_mode = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 44
  store i32 %is_prog, i32* %progressive_mode, align 8, !tbaa !60
  %arith_code = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 45
  store i32 %is_arith, i32* %arith_code, align 4, !tbaa !61
  %cmp = icmp eq i64 %2, 0
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %fill_input_buffer = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 3
  %3 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer, align 8, !tbaa !20
  %call = tail call i32 %3(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %if.then
  %4 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %5 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end6

if.end6:                                          ; preds = %if.end, %entry
  %next_input_byte.0 = phi i8* [ %4, %if.end ], [ %1, %entry ]
  %bytes_in_buffer.0 = phi i64 [ %5, %if.end ], [ %2, %entry ]
  %dec = add i64 %bytes_in_buffer.0, -1
  %incdec.ptr = getelementptr inbounds i8, i8* %next_input_byte.0, i64 1
  %6 = load i8, i8* %next_input_byte.0, align 1, !tbaa !21
  %conv = zext i8 %6 to i64
  %shl = shl nuw nsw i64 %conv, 8
  %cmp8 = icmp eq i64 %dec, 0
  br i1 %cmp8, label %if.then10, label %if.end18

if.then10:                                        ; preds = %if.end6
  %fill_input_buffer11 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 3
  %7 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer11, align 8, !tbaa !20
  %call12 = tail call i32 %7(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool13 = icmp eq i32 %call12, 0
  br i1 %tobool13, label %cleanup, label %if.end15

if.end15:                                         ; preds = %if.then10
  %8 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %9 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end18

if.end18:                                         ; preds = %if.end15, %if.end6
  %next_input_byte.1 = phi i8* [ %8, %if.end15 ], [ %incdec.ptr, %if.end6 ]
  %bytes_in_buffer.1 = phi i64 [ %9, %if.end15 ], [ %dec, %if.end6 ]
  %dec19 = add i64 %bytes_in_buffer.1, -1
  %incdec.ptr20 = getelementptr inbounds i8, i8* %next_input_byte.1, i64 1
  %10 = load i8, i8* %next_input_byte.1, align 1, !tbaa !21
  %conv21 = zext i8 %10 to i64
  %add = or i64 %conv21, %shl
  %cmp23 = icmp eq i64 %dec19, 0
  br i1 %cmp23, label %if.then25, label %if.end33

if.then25:                                        ; preds = %if.end18
  %fill_input_buffer26 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 3
  %11 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer26, align 8, !tbaa !20
  %call27 = tail call i32 %11(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool28 = icmp eq i32 %call27, 0
  br i1 %tobool28, label %cleanup, label %if.end30

if.end30:                                         ; preds = %if.then25
  %12 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %13 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end33

if.end33:                                         ; preds = %if.end30, %if.end18
  %next_input_byte.2 = phi i8* [ %12, %if.end30 ], [ %incdec.ptr20, %if.end18 ]
  %bytes_in_buffer.2 = phi i64 [ %13, %if.end30 ], [ %dec19, %if.end18 ]
  %dec34 = add i64 %bytes_in_buffer.2, -1
  %incdec.ptr35 = getelementptr inbounds i8, i8* %next_input_byte.2, i64 1
  %14 = load i8, i8* %next_input_byte.2, align 1, !tbaa !21
  %conv36 = zext i8 %14 to i32
  %data_precision = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 42
  store i32 %conv36, i32* %data_precision, align 8, !tbaa !62
  %cmp40 = icmp eq i64 %dec34, 0
  br i1 %cmp40, label %if.then42, label %if.end50

if.then42:                                        ; preds = %if.end33
  %fill_input_buffer43 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 3
  %15 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer43, align 8, !tbaa !20
  %call44 = tail call i32 %15(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool45 = icmp eq i32 %call44, 0
  br i1 %tobool45, label %cleanup, label %if.end47

if.end47:                                         ; preds = %if.then42
  %16 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %17 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end50

if.end50:                                         ; preds = %if.end47, %if.end33
  %next_input_byte.3 = phi i8* [ %16, %if.end47 ], [ %incdec.ptr35, %if.end33 ]
  %bytes_in_buffer.3 = phi i64 [ %17, %if.end47 ], [ %dec34, %if.end33 ]
  %dec51 = add i64 %bytes_in_buffer.3, -1
  %incdec.ptr52 = getelementptr inbounds i8, i8* %next_input_byte.3, i64 1
  %18 = load i8, i8* %next_input_byte.3, align 1, !tbaa !21
  %conv53 = zext i8 %18 to i32
  %shl54 = shl nuw nsw i32 %conv53, 8
  %image_height = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 7
  store i32 %shl54, i32* %image_height, align 4, !tbaa !63
  %cmp55 = icmp eq i64 %dec51, 0
  br i1 %cmp55, label %if.then57, label %if.end65

if.then57:                                        ; preds = %if.end50
  %fill_input_buffer58 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 3
  %19 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer58, align 8, !tbaa !20
  %call59 = tail call i32 %19(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool60 = icmp eq i32 %call59, 0
  br i1 %tobool60, label %cleanup, label %if.end62

if.end62:                                         ; preds = %if.then57
  %20 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %21 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  %.pre = load i32, i32* %image_height, align 4, !tbaa !63
  br label %if.end65

if.end65:                                         ; preds = %if.end62, %if.end50
  %22 = phi i32 [ %.pre, %if.end62 ], [ %shl54, %if.end50 ]
  %next_input_byte.4 = phi i8* [ %20, %if.end62 ], [ %incdec.ptr52, %if.end50 ]
  %bytes_in_buffer.4 = phi i64 [ %21, %if.end62 ], [ %dec51, %if.end50 ]
  %dec66 = add i64 %bytes_in_buffer.4, -1
  %incdec.ptr67 = getelementptr inbounds i8, i8* %next_input_byte.4, i64 1
  %23 = load i8, i8* %next_input_byte.4, align 1, !tbaa !21
  %conv68 = zext i8 %23 to i32
  %add70 = add i32 %22, %conv68
  store i32 %add70, i32* %image_height, align 4, !tbaa !63
  %cmp74 = icmp eq i64 %dec66, 0
  br i1 %cmp74, label %if.then76, label %if.end84

if.then76:                                        ; preds = %if.end65
  %fill_input_buffer77 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 3
  %24 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer77, align 8, !tbaa !20
  %call78 = tail call i32 %24(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool79 = icmp eq i32 %call78, 0
  br i1 %tobool79, label %cleanup, label %if.end81

if.end81:                                         ; preds = %if.then76
  %25 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %26 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end84

if.end84:                                         ; preds = %if.end81, %if.end65
  %next_input_byte.5 = phi i8* [ %25, %if.end81 ], [ %incdec.ptr67, %if.end65 ]
  %bytes_in_buffer.5 = phi i64 [ %26, %if.end81 ], [ %dec66, %if.end65 ]
  %dec85 = add i64 %bytes_in_buffer.5, -1
  %incdec.ptr86 = getelementptr inbounds i8, i8* %next_input_byte.5, i64 1
  %27 = load i8, i8* %next_input_byte.5, align 1, !tbaa !21
  %conv87 = zext i8 %27 to i32
  %shl88 = shl nuw nsw i32 %conv87, 8
  %image_width = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 6
  store i32 %shl88, i32* %image_width, align 8, !tbaa !64
  %cmp89 = icmp eq i64 %dec85, 0
  br i1 %cmp89, label %if.then91, label %if.end99

if.then91:                                        ; preds = %if.end84
  %fill_input_buffer92 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 3
  %28 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer92, align 8, !tbaa !20
  %call93 = tail call i32 %28(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool94 = icmp eq i32 %call93, 0
  br i1 %tobool94, label %cleanup, label %if.end96

if.end96:                                         ; preds = %if.then91
  %29 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %30 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  %.pre427 = load i32, i32* %image_width, align 8, !tbaa !64
  br label %if.end99

if.end99:                                         ; preds = %if.end96, %if.end84
  %31 = phi i32 [ %.pre427, %if.end96 ], [ %shl88, %if.end84 ]
  %next_input_byte.6 = phi i8* [ %29, %if.end96 ], [ %incdec.ptr86, %if.end84 ]
  %bytes_in_buffer.6 = phi i64 [ %30, %if.end96 ], [ %dec85, %if.end84 ]
  %dec100 = add i64 %bytes_in_buffer.6, -1
  %incdec.ptr101 = getelementptr inbounds i8, i8* %next_input_byte.6, i64 1
  %32 = load i8, i8* %next_input_byte.6, align 1, !tbaa !21
  %conv102 = zext i8 %32 to i32
  %add104 = add i32 %31, %conv102
  store i32 %add104, i32* %image_width, align 8, !tbaa !64
  %cmp108 = icmp eq i64 %dec100, 0
  br i1 %cmp108, label %if.then110, label %if.end118

if.then110:                                       ; preds = %if.end99
  %fill_input_buffer111 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 3
  %33 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer111, align 8, !tbaa !20
  %call112 = tail call i32 %33(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool113 = icmp eq i32 %call112, 0
  br i1 %tobool113, label %cleanup, label %if.end115

if.end115:                                        ; preds = %if.then110
  %34 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %35 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end118

if.end118:                                        ; preds = %if.end115, %if.end99
  %next_input_byte.7 = phi i8* [ %34, %if.end115 ], [ %incdec.ptr101, %if.end99 ]
  %bytes_in_buffer.7 = phi i64 [ %35, %if.end115 ], [ %dec100, %if.end99 ]
  %36 = load i8, i8* %next_input_byte.7, align 1, !tbaa !21
  %conv121 = zext i8 %36 to i32
  %num_components = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8
  store i32 %conv121, i32* %num_components, align 8, !tbaa !45
  %sub = add nsw i64 %add, -8
  %err = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !10
  %arraydecay = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 6, i32 0, i64 0
  %unread_marker = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 72
  %38 = load i32, i32* %unread_marker, align 4, !tbaa !2
  store i32 %38, i32* %arraydecay, align 4, !tbaa !14
  %39 = load i32, i32* %image_width, align 8, !tbaa !64
  %arrayidx126 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 6, i32 0, i64 1
  store i32 %39, i32* %arrayidx126, align 4, !tbaa !14
  %40 = load i32, i32* %image_height, align 4, !tbaa !63
  %arrayidx128 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 6, i32 0, i64 2
  store i32 %40, i32* %arrayidx128, align 4, !tbaa !14
  %41 = load i32, i32* %num_components, align 8, !tbaa !45
  %arrayidx130 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 6, i32 0, i64 3
  store i32 %41, i32* %arrayidx130, align 4, !tbaa !14
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 5
  store i32 99, i32* %msg_code, align 8, !tbaa !11
  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 1
  %42 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !15
  %43 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %42(%struct.jpeg_common_struct* %43, i32 1) #4
  %marker = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 78
  %44 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %saw_SOF = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %44, i64 0, i32 6
  %45 = load i32, i32* %saw_SOF, align 4, !tbaa !33
  %tobool135 = icmp eq i32 %45, 0
  br i1 %tobool135, label %if.end140, label %if.then136

if.then136:                                       ; preds = %if.end118
  %46 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !10
  %msg_code138 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %46, i64 0, i32 5
  store i32 57, i32* %msg_code138, align 8, !tbaa !11
  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %46, i64 0, i32 0
  %47 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !34
  tail call void %47(%struct.jpeg_common_struct* %43) #4
  br label %if.end140

if.end140:                                        ; preds = %if.end118, %if.then136
  %48 = load i32, i32* %image_height, align 4, !tbaa !63
  %cmp142 = icmp eq i32 %48, 0
  br i1 %cmp142, label %if.then151, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end140
  %49 = load i32, i32* %image_width, align 8, !tbaa !64
  %cmp145 = icmp eq i32 %49, 0
  br i1 %cmp145, label %if.then151, label %lor.lhs.false147

lor.lhs.false147:                                 ; preds = %lor.lhs.false
  %50 = load i32, i32* %num_components, align 8, !tbaa !45
  %cmp149 = icmp slt i32 %50, 1
  br i1 %cmp149, label %if.then151, label %if.end156

if.then151:                                       ; preds = %lor.lhs.false147, %lor.lhs.false, %if.end140
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !10
  %msg_code153 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 5
  store i32 31, i32* %msg_code153, align 8, !tbaa !11
  %error_exit155 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 0
  %52 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit155, align 8, !tbaa !34
  tail call void %52(%struct.jpeg_common_struct* nonnull %43) #4
  %.pre428 = load i32, i32* %num_components, align 8, !tbaa !45
  br label %if.end156

if.end156:                                        ; preds = %if.then151, %lor.lhs.false147
  %53 = phi i32 [ %.pre428, %if.then151 ], [ %50, %lor.lhs.false147 ]
  %mul = mul nsw i32 %53, 3
  %conv158 = sext i32 %mul to i64
  %cmp159 = icmp eq i64 %sub, %conv158
  br i1 %cmp159, label %if.end166, label %if.then161

if.then161:                                       ; preds = %if.end156
  %54 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !10
  %msg_code163 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %54, i64 0, i32 5
  store i32 9, i32* %msg_code163, align 8, !tbaa !11
  %error_exit165 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %54, i64 0, i32 0
  %55 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit165, align 8, !tbaa !34
  tail call void %55(%struct.jpeg_common_struct* nonnull %43) #4
  br label %if.end166

if.end166:                                        ; preds = %if.end156, %if.then161
  %comp_info = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43
  %56 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info, align 8, !tbaa !30
  %cmp167 = icmp eq %struct.jpeg_component_info* %56, null
  br i1 %cmp167, label %if.then169, label %if.end175

if.then169:                                       ; preds = %if.end166
  %mem = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1
  %57 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !25
  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %57, i64 0, i32 0
  %58 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !26
  %59 = load i32, i32* %num_components, align 8, !tbaa !45
  %conv171 = sext i32 %59 to i64
  %mul172 = mul nsw i64 %conv171, 96
  %call173 = tail call i8* %58(%struct.jpeg_common_struct* nonnull %43, i32 1, i64 %mul172) #4
  %60 = bitcast %struct.jpeg_component_info** %comp_info to i8**
  store i8* %call173, i8** %60, align 8, !tbaa !30
  %61 = bitcast i8* %call173 to %struct.jpeg_component_info*
  br label %if.end175

if.end175:                                        ; preds = %if.then169, %if.end166
  %62 = phi %struct.jpeg_component_info* [ %61, %if.then169 ], [ %56, %if.end166 ]
  %next_input_byte.8417 = getelementptr inbounds i8, i8* %next_input_byte.7, i64 1
  %bytes_in_buffer.8418 = add i64 %bytes_in_buffer.7, -1
  %63 = load i32, i32* %num_components, align 8, !tbaa !45
  %cmp178419 = icmp sgt i32 %63, 0
  br i1 %cmp178419, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end175
  %fill_input_buffer184 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %0, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end226
  %bytes_in_buffer.8423 = phi i64 [ %bytes_in_buffer.8418, %for.body.lr.ph ], [ %bytes_in_buffer.8, %if.end226 ]
  %next_input_byte.8422 = phi i8* [ %next_input_byte.8417, %for.body.lr.ph ], [ %next_input_byte.8, %if.end226 ]
  %ci.0421 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end226 ]
  %compptr.0420 = phi %struct.jpeg_component_info* [ %62, %for.body.lr.ph ], [ %incdec.ptr252, %if.end226 ]
  %component_index = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0420, i64 0, i32 1
  store i32 %ci.0421, i32* %component_index, align 4, !tbaa !65
  %cmp181 = icmp eq i64 %bytes_in_buffer.8423, 0
  br i1 %cmp181, label %if.then183, label %if.end191

if.then183:                                       ; preds = %for.body
  %64 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer184, align 8, !tbaa !20
  %call185 = tail call i32 %64(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool186 = icmp eq i32 %call185, 0
  br i1 %tobool186, label %cleanup.loopexit, label %if.end188

if.end188:                                        ; preds = %if.then183
  %65 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %66 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end191

if.end191:                                        ; preds = %if.end188, %for.body
  %next_input_byte.9 = phi i8* [ %65, %if.end188 ], [ %next_input_byte.8422, %for.body ]
  %bytes_in_buffer.9 = phi i64 [ %66, %if.end188 ], [ %bytes_in_buffer.8423, %for.body ]
  %dec192 = add i64 %bytes_in_buffer.9, -1
  %incdec.ptr193 = getelementptr inbounds i8, i8* %next_input_byte.9, i64 1
  %67 = load i8, i8* %next_input_byte.9, align 1, !tbaa !21
  %conv194 = zext i8 %67 to i32
  %component_id = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0420, i64 0, i32 0
  store i32 %conv194, i32* %component_id, align 8, !tbaa !46
  %cmp198 = icmp eq i64 %dec192, 0
  br i1 %cmp198, label %if.then200, label %if.end208

if.then200:                                       ; preds = %if.end191
  %68 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer184, align 8, !tbaa !20
  %call202 = tail call i32 %68(%struct.jpeg_decompress_struct* nonnull %cinfo) #4
  %tobool203 = icmp eq i32 %call202, 0
  br i1 %tobool203, label %cleanup.loopexit, label %if.end205

if.end205:                                        ; preds = %if.then200
  %69 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %70 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end208

if.end208:                                        ; preds = %if.end205, %if.end191
  %next_input_byte.10 = phi i8* [ %69, %if.end205 ], [ %incdec.ptr193, %if.end191 ]
  %bytes_in_buffer.10 = phi i64 [ %70, %if.end205 ], [ %dec192, %if.end191 ]
  %dec209 = add i64 %bytes_in_buffer.10, -1
  %incdec.ptr210 = getelementptr inbounds i8, i8* %next_input_byte.10, i64 1
  %71 = load i8, i8* %next_input_byte.10, align 1, !tbaa !21
  %conv211 = zext i8 %71 to i32
  %shr414 = lshr i32 %conv211, 4
  %h_samp_factor = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0420, i64 0, i32 2
  store i32 %shr414, i32* %h_samp_factor, align 8, !tbaa !66
  %and214 = and i32 %conv211, 15
  %v_samp_factor = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0420, i64 0, i32 3
  store i32 %and214, i32* %v_samp_factor, align 4, !tbaa !67
  %cmp216 = icmp eq i64 %dec209, 0
  br i1 %cmp216, label %if.then218, label %if.end226

if.then218:                                       ; preds = %if.end208
  %72 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %fill_input_buffer184, align 8, !tbaa !20
  %call220 = tail call i32 %72(%struct.jpeg_decompress_struct* %cinfo) #4
  %tobool221 = icmp eq i32 %call220, 0
  br i1 %tobool221, label %cleanup.loopexit, label %if.end223

if.end223:                                        ; preds = %if.then218
  %73 = load i8*, i8** %next_input_byte1, align 8, !tbaa !17
  %74 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %if.end226

if.end226:                                        ; preds = %if.end223, %if.end208
  %next_input_byte.11 = phi i8* [ %73, %if.end223 ], [ %incdec.ptr210, %if.end208 ]
  %bytes_in_buffer.11 = phi i64 [ %74, %if.end223 ], [ %dec209, %if.end208 ]
  %75 = load i8, i8* %next_input_byte.11, align 1, !tbaa !21
  %conv229 = zext i8 %75 to i32
  %quant_tbl_no = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0420, i64 0, i32 4
  store i32 %conv229, i32* %quant_tbl_no, align 8, !tbaa !68
  %76 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !10
  %arraydecay237 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %76, i64 0, i32 6, i32 0, i64 0
  %77 = load i32, i32* %component_id, align 8, !tbaa !46
  store i32 %77, i32* %arraydecay237, align 4, !tbaa !14
  %78 = load i32, i32* %h_samp_factor, align 8, !tbaa !66
  %arrayidx241 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %76, i64 0, i32 6, i32 0, i64 1
  store i32 %78, i32* %arrayidx241, align 4, !tbaa !14
  %79 = load i32, i32* %v_samp_factor, align 4, !tbaa !67
  %arrayidx243 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %76, i64 0, i32 6, i32 0, i64 2
  store i32 %79, i32* %arrayidx243, align 4, !tbaa !14
  %80 = load i32, i32* %quant_tbl_no, align 8, !tbaa !68
  %arrayidx245 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %76, i64 0, i32 6, i32 0, i64 3
  store i32 %80, i32* %arrayidx245, align 4, !tbaa !14
  %msg_code247 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %76, i64 0, i32 5
  store i32 100, i32* %msg_code247, align 8, !tbaa !11
  %emit_message249 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %76, i64 0, i32 1
  %81 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %emit_message249, align 8, !tbaa !15
  tail call void %81(%struct.jpeg_common_struct* nonnull %43, i32 1) #4
  %inc = add nuw nsw i32 %ci.0421, 1
  %incdec.ptr252 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0420, i64 1
  %next_input_byte.8 = getelementptr inbounds i8, i8* %next_input_byte.11, i64 1
  %bytes_in_buffer.8 = add i64 %bytes_in_buffer.11, -1
  %82 = load i32, i32* %num_components, align 8, !tbaa !45
  %cmp178 = icmp slt i32 %inc, %82
  br i1 %cmp178, label %for.body, label %for.end.loopexit

for.end.loopexit:                                 ; preds = %if.end226
  %bytes_in_buffer.8.lcssa436 = phi i64 [ %bytes_in_buffer.8, %if.end226 ]
  %next_input_byte.8.lcssa435 = phi i8* [ %next_input_byte.8, %if.end226 ]
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.end175
  %bytes_in_buffer.8.lcssa = phi i64 [ %bytes_in_buffer.8418, %if.end175 ], [ %bytes_in_buffer.8.lcssa436, %for.end.loopexit ]
  %next_input_byte.8.lcssa = phi i8* [ %next_input_byte.8417, %if.end175 ], [ %next_input_byte.8.lcssa435, %for.end.loopexit ]
  %83 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker, align 8, !tbaa !22
  %saw_SOF254 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %83, i64 0, i32 6
  store i32 1, i32* %saw_SOF254, align 4, !tbaa !33
  store i8* %next_input_byte.8.lcssa, i8** %next_input_byte1, align 8, !tbaa !17
  store i64 %bytes_in_buffer.8.lcssa, i64* %bytes_in_buffer2, align 8, !tbaa !19
  br label %cleanup

cleanup.loopexit:                                 ; preds = %if.then183, %if.then200, %if.then218
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.then110, %if.then91, %if.then76, %if.then57, %if.then42, %if.then25, %if.then10, %if.then, %for.end
  %retval.0 = phi i32 [ 1, %for.end ], [ 0, %if.then ], [ 0, %if.then10 ], [ 0, %if.then25 ], [ 0, %if.then42 ], [ 0, %if.then57 ], [ 0, %if.then76 ], [ 0, %if.then91 ], [ 0, %if.then110 ], [ 0, %cleanup.loopexit ]
  ret i32 %retval.0
}

declare %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct*) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"MaxFunctionCount", i32 150581}
!1 = !{!"clang version 3.8.0 (trunk 257473)"}
!2 = !{!3, !7, i64 524}
!3 = !{!"jpeg_decompress_struct", !4, i64 0, !4, i64 8, !4, i64 16, !7, i64 24, !7, i64 28, !4, i64 32, !7, i64 40, !7, i64 44, !7, i64 48, !5, i64 52, !5, i64 56, !7, i64 60, !7, i64 64, !8, i64 72, !7, i64 80, !7, i64 84, !5, i64 88, !7, i64 92, !7, i64 96, !7, i64 100, !5, i64 104, !7, i64 108, !7, i64 112, !7, i64 116, !7, i64 120, !7, i64 124, !7, i64 128, !7, i64 132, !7, i64 136, !7, i64 140, !7, i64 144, !7, i64 148, !4, i64 152, !7, i64 160, !7, i64 164, !7, i64 168, !7, i64 172, !7, i64 176, !4, i64 184, !5, i64 192, !5, i64 224, !5, i64 256, !7, i64 288, !4, i64 296, !7, i64 304, !7, i64 308, !5, i64 312, !5, i64 328, !5, i64 344, !7, i64 360, !7, i64 364, !5, i64 368, !9, i64 370, !9, i64 372, !7, i64 376, !5, i64 380, !7, i64 384, !7, i64 388, !7, i64 392, !7, i64 396, !7, i64 400, !4, i64 408, !7, i64 416, !5, i64 424, !7, i64 456, !7, i64 460, !7, i64 464, !5, i64 468, !7, i64 508, !7, i64 512, !7, i64 516, !7, i64 520, !7, i64 524, !4, i64 528, !4, i64 536, !4, i64 544, !4, i64 552, !4, i64 560, !4, i64 568, !4, i64 576, !4, i64 584, !4, i64 592, !4, i64 600, !4, i64 608}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
!7 = !{!"int", !5, i64 0}
!8 = !{!"double", !5, i64 0}
!9 = !{!"short", !5, i64 0}
!10 = !{!3, !4, i64 0}
!11 = !{!12, !7, i64 40}
!12 = !{!"jpeg_error_mgr", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !7, i64 40, !5, i64 44, !7, i64 124, !13, i64 128, !4, i64 136, !7, i64 144, !4, i64 152, !7, i64 160, !7, i64 164}
!13 = !{!"long", !5, i64 0}
!14 = !{!7, !7, i64 0}
!15 = !{!12, !4, i64 8}
!16 = !{!3, !4, i64 32}
!17 = !{!18, !4, i64 0}
!18 = !{!"jpeg_source_mgr", !4, i64 0, !13, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48}
!19 = !{!18, !13, i64 8}
!20 = !{!18, !4, i64 24}
!21 = !{!5, !5, i64 0}
!22 = !{!3, !4, i64 568}
!23 = !{!24, !7, i64 172}
!24 = !{!"jpeg_marker_reader", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !5, i64 32, !7, i64 160, !7, i64 164, !7, i64 168, !7, i64 172}
!25 = !{!3, !4, i64 8}
!26 = !{!27, !4, i64 0}
!27 = !{!"jpeg_memory_mgr", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !4, i64 56, !4, i64 64, !4, i64 72, !4, i64 80, !13, i64 88}
!28 = !{!24, !4, i64 0}
!29 = !{!4, !4, i64 0}
!30 = !{!3, !4, i64 296}
!31 = !{!3, !7, i64 164}
!32 = !{!24, !7, i64 160}
!33 = !{!24, !7, i64 164}
!34 = !{!12, !4, i64 0}
!35 = !{!3, !7, i64 360}
!36 = !{!3, !5, i64 52}
!37 = !{!3, !7, i64 384}
!38 = !{!3, !7, i64 364}
!39 = !{!3, !5, i64 368}
!40 = !{!3, !9, i64 370}
!41 = !{!3, !9, i64 372}
!42 = !{!3, !7, i64 376}
!43 = !{!3, !5, i64 380}
!44 = !{!3, !7, i64 416}
!45 = !{!3, !7, i64 48}
!46 = !{!47, !7, i64 0}
!47 = !{!"", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !7, i64 48, !7, i64 52, !7, i64 56, !7, i64 60, !7, i64 64, !7, i64 68, !7, i64 72, !4, i64 80, !4, i64 88}
!48 = !{!47, !7, i64 20}
!49 = !{!47, !7, i64 24}
!50 = !{!3, !7, i64 508}
!51 = !{!3, !7, i64 512}
!52 = !{!3, !7, i64 516}
!53 = !{!3, !7, i64 520}
!54 = !{!24, !7, i64 168}
!55 = !{!9, !9, i64 0}
!56 = !{!12, !7, i64 124}
!57 = !{!24, !4, i64 24}
!58 = !{!18, !4, i64 32}
!59 = !{!18, !4, i64 40}
!60 = !{!3, !7, i64 304}
!61 = !{!3, !7, i64 308}
!62 = !{!3, !7, i64 288}
!63 = !{!3, !7, i64 44}
!64 = !{!3, !7, i64 40}
!65 = !{!47, !7, i64 4}
!66 = !{!47, !7, i64 8}
!67 = !{!47, !7, i64 12}
!68 = !{!47, !7, i64 16}
