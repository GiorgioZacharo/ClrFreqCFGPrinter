digraph "CFG for 'h2v2_downsample' function" {
	label="CFG for 'h2v2_downsample' function";

	Node0x58e87c0 [shape=record, style = filled, fillcolor = turquoise, label="{entry:\l  %width_in_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr, i64 0, i32 7\l  %0 = load i32, i32* %width_in_blocks, align 4, !tbaa !3\l  %mul = shl i32 %0, 3\l  %max_v_samp_factor = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 39\l  %1 = load i32, i32* %max_v_samp_factor, align 4, !tbaa !9\l  %image_width = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 6\l  %2 = load i32, i32* %image_width, align 8, !tbaa !13\l  %mul1 = shl i32 %0, 4\l  %sub.i = sub i32 %mul1, %2\l  %cmp.i = icmp sgt i32 %sub.i, 0\l  %cmp121.i = icmp sgt i32 %1, 0\l  %or.cond.i = and i1 %cmp121.i, %cmp.i\l  br i1 %or.cond.i, label %for.body.us.preheader.i, label %for.cond.preheader\l|{<s0>T|<s1>F}}"];
	Node0x58e87c0:s0 -> Node0x58eb900;
	Node0x58e87c0:s1 -> Node0x58eba00;
	Node0x58eb900 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us.preheader.i:                          \l  %idx.ext.i = zext i32 %2 to i64\l  %3 = xor i32 %mul1, -1\l  %4 = add i32 %2, %3\l  %5 = icmp sgt i32 %4, -2\l  %smax.i = select i1 %5, i32 %4, i32 -2\l  %6 = or i32 %mul1, 1\l  %7 = sub i32 %6, %2\l  %8 = add i32 %7, %smax.i\l  %9 = zext i32 %8 to i64\l  %10 = add nuw nsw i64 %9, 1\l  %11 = add i32 %1, -1\l  %xtraiter69 = and i32 %1, 3\l  %lcmp.mod70 = icmp eq i32 %xtraiter69, 0\l  br i1 %lcmp.mod70, label %for.body.us.preheader.i.split, label\l... %for.body.us.i.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x58eb900:s0 -> Node0x58ebc90;
	Node0x58eb900:s1 -> Node0x58ec390;
	Node0x58ec390 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us.i.prol.preheader:                     \l  br label %for.body.us.i.prol\l}"];
	Node0x58ec390 -> Node0x58ec540;
	Node0x58ec540 [shape=record, style = filled, fillcolor = green, label="{for.body.us.i.prol:                               \l  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body.us.i.prol\l... ], [ 0, %for.body.us.i.prol.preheader ]\l  %prol.iter71 = phi i32 [ %prol.iter71.sub, %for.body.us.i.prol ], [\l... %xtraiter69, %for.body.us.i.prol.preheader ]\l  %arrayidx.us.i.prol = getelementptr inbounds i8*, i8** %input_data, i64\l... %indvars.iv.i.prol\l  %12 = load i8*, i8** %arrayidx.us.i.prol, align 8, !tbaa !14\l  %add.ptr.us.i.prol = getelementptr inbounds i8, i8* %12, i64 %idx.ext.i\l  %arrayidx2.us.i.prol = getelementptr inbounds i8, i8* %add.ptr.us.i.prol,\l... i64 -1\l  %13 = load i8, i8* %arrayidx2.us.i.prol, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i.prol, i8 %13, i64\l... %10, i32 1, i1 false) #5\l  %indvars.iv.next.i.prol = add nuw nsw i64 %indvars.iv.i.prol, 1\l  %prol.iter71.sub = add i32 %prol.iter71, -1\l  %prol.iter71.cmp = icmp eq i32 %prol.iter71.sub, 0\l  br i1 %prol.iter71.cmp, label %for.body.us.preheader.i.split.loopexit, label\l... %for.body.us.i.prol, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x58ec540:s0 -> Node0x58ed110;
	Node0x58ec540:s1 -> Node0x58ec540;
	Node0x58ed110 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us.preheader.i.split.loopexit:           \l  %indvars.iv.next.i.prol.lcssa = phi i64 [ %indvars.iv.next.i.prol,\l... %for.body.us.i.prol ]\l  br label %for.body.us.preheader.i.split\l}"];
	Node0x58ed110 -> Node0x58ebc90;
	Node0x58ebc90 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us.preheader.i.split:                    \l  %indvars.iv.i.unr = phi i64 [ 0, %for.body.us.preheader.i ], [\l... %indvars.iv.next.i.prol.lcssa, %for.body.us.preheader.i.split.loopexit ]\l  %14 = icmp ult i32 %11, 3\l  br i1 %14, label %for.cond.preheader.loopexit, label\l... %for.body.us.preheader.i.split.split\l|{<s0>T|<s1>F}}"];
	Node0x58ebc90:s0 -> Node0x58ed400;
	Node0x58ebc90:s1 -> Node0x58ed520;
	Node0x58ed520 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us.preheader.i.split.split:              \l  br label %for.body.us.i\l}"];
	Node0x58ed520 -> Node0x58ed6d0;
	Node0x58ed6d0 [shape=record, style = filled, fillcolor = green, label="{for.body.us.i:                                    \l  %indvars.iv.i = phi i64 [ %indvars.iv.i.unr,\l... %for.body.us.preheader.i.split.split ], [ %indvars.iv.next.i.3,\l... %for.body.us.i ]\l  %arrayidx.us.i = getelementptr inbounds i8*, i8** %input_data, i64\l... %indvars.iv.i\l  %15 = load i8*, i8** %arrayidx.us.i, align 8, !tbaa !14\l  %add.ptr.us.i = getelementptr inbounds i8, i8* %15, i64 %idx.ext.i\l  %arrayidx2.us.i = getelementptr inbounds i8, i8* %add.ptr.us.i, i64 -1\l  %16 = load i8, i8* %arrayidx2.us.i, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i, i8 %16, i64 %10, i32\l... 1, i1 false) #5\l  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1\l  %arrayidx.us.i.1 = getelementptr inbounds i8*, i8** %input_data, i64\l... %indvars.iv.next.i\l  %17 = load i8*, i8** %arrayidx.us.i.1, align 8, !tbaa !14\l  %add.ptr.us.i.1 = getelementptr inbounds i8, i8* %17, i64 %idx.ext.i\l  %arrayidx2.us.i.1 = getelementptr inbounds i8, i8* %add.ptr.us.i.1, i64 -1\l  %18 = load i8, i8* %arrayidx2.us.i.1, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i.1, i8 %18, i64 %10,\l... i32 1, i1 false) #5\l  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2\l  %arrayidx.us.i.2 = getelementptr inbounds i8*, i8** %input_data, i64\l... %indvars.iv.next.i.1\l  %19 = load i8*, i8** %arrayidx.us.i.2, align 8, !tbaa !14\l  %add.ptr.us.i.2 = getelementptr inbounds i8, i8* %19, i64 %idx.ext.i\l  %arrayidx2.us.i.2 = getelementptr inbounds i8, i8* %add.ptr.us.i.2, i64 -1\l  %20 = load i8, i8* %arrayidx2.us.i.2, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i.2, i8 %20, i64 %10,\l... i32 1, i1 false) #5\l  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3\l  %arrayidx.us.i.3 = getelementptr inbounds i8*, i8** %input_data, i64\l... %indvars.iv.next.i.2\l  %21 = load i8*, i8** %arrayidx.us.i.3, align 8, !tbaa !14\l  %add.ptr.us.i.3 = getelementptr inbounds i8, i8* %21, i64 %idx.ext.i\l  %arrayidx2.us.i.3 = getelementptr inbounds i8, i8* %add.ptr.us.i.3, i64 -1\l  %22 = load i8, i8* %arrayidx2.us.i.3, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i.3, i8 %22, i64 %10,\l... i32 1, i1 false) #5\l  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4\l  %lftr.wideiv.3 = trunc i64 %indvars.iv.next.i.3 to i32\l  %exitcond61.3 = icmp eq i32 %lftr.wideiv.3, %1\l  br i1 %exitcond61.3, label %for.cond.preheader.loopexit.unr-lcssa, label\l... %for.body.us.i\l|{<s0>T|<s1>F}}"];
	Node0x58ed6d0:s0 -> Node0x58cc8e0;
	Node0x58ed6d0:s1 -> Node0x58ed6d0;
	Node0x58cc8e0 [shape=record, style = filled, fillcolor = cyan, label="{for.cond.preheader.loopexit.unr-lcssa:            \l  br label %for.cond.preheader.loopexit\l}"];
	Node0x58cc8e0 -> Node0x58ed400;
	Node0x58ed400 [shape=record, style = filled, fillcolor = cyan, label="{for.cond.preheader.loopexit:                      \l  br label %for.cond.preheader\l}"];
	Node0x58ed400 -> Node0x58eba00;
	Node0x58eba00 [shape=record, style = filled, fillcolor = turquoise, label="{for.cond.preheader:                               \l  %v_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr, i64 0, i32 3\l  %23 = load i32, i32* %v_samp_factor, align 4, !tbaa !18\l  %cmp54 = icmp sgt i32 %23, 0\l  br i1 %cmp54, label %for.body.lr.ph, label %for.end23, !prof !19\l|{<s0>T|<s1>F}}"];
	Node0x58eba00:s0 -> Node0x58ccb70;
	Node0x58eba00:s1 -> Node0x58ccc20;
	Node0x58ccb70 [shape=record, style = filled, fillcolor = cyan, label="{for.body.lr.ph:                                   \l  %cmp748 = icmp eq i32 %mul, 0\l  br i1 %cmp748, label %for.body.preheader, label %for.body.us.preheader,\l... !prof !20\l|{<s0>T|<s1>F}}"];
	Node0x58ccb70:s0 -> Node0x58cceb0;
	Node0x58ccb70:s1 -> Node0x58ccf30;
	Node0x58ccf30 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us.preheader:                            \l  br label %for.body.us\l}"];
	Node0x58ccf30 -> Node0x58cd1f0;
	Node0x58cceb0 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader:                               \l  %min.iters.check = icmp ult i32 %23, 32\l  br i1 %min.iters.check, label %for.body.preheader67, label %min.iters.checked\l|{<s0>T|<s1>F}}"];
	Node0x58cceb0:s0 -> Node0x58cd3b0;
	Node0x58cceb0:s1 -> Node0x58cd430;
	Node0x58cd3b0 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader67:                             \l  %outrow.055.ph = phi i32 [ 0, %min.iters.checked ], [ 0, %for.body.preheader\l... ], [ %n.vec, %middle.block ]\l  br label %for.body\l}"];
	Node0x58cd3b0 -> Node0x58cd790;
	Node0x58cd430 [shape=record, style = filled, fillcolor = blue, label="{min.iters.checked:                                \l  %n.vec = and i32 %23, -32\l  %cmp.zero = icmp eq i32 %n.vec, 0\l  br i1 %cmp.zero, label %for.body.preheader67, label %vector.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x58cd430:s0 -> Node0x58cd3b0;
	Node0x58cd430:s1 -> Node0x58cda30;
	Node0x58cda30 [shape=record, style = filled, fillcolor = blue, label="{vector.body.preheader:                            \l  %24 = add i32 %23, -32\l  %25 = lshr i32 %24, 5\l  %26 = add nuw nsw i32 %25, 1\l  %xtraiter = and i32 %26, 7\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %vector.body.preheader.split, label\l... %vector.body.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x58cda30:s0 -> Node0x58cde20;
	Node0x58cda30:s1 -> Node0x58cdea0;
	Node0x58cdea0 [shape=record, style = filled, fillcolor = blue, label="{vector.body.prol.preheader:                       \l  br label %vector.body.prol\l}"];
	Node0x58cdea0 -> Node0x58cdff0;
	Node0x58cdff0 [shape=record, style = filled, fillcolor = skyblue, label="{vector.body.prol:                                 \l  %index.prol = phi i32 [ %index.next.prol, %vector.body.prol ], [ 0,\l... %vector.body.prol.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %vector.body.prol ], [ %xtraiter,\l... %vector.body.prol.preheader ]\l  %index.next.prol = add i32 %index.prol, 32\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %vector.body.preheader.split.loopexit, label\l... %vector.body.prol, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x58cdff0:s0 -> Node0x58ce550;
	Node0x58cdff0:s1 -> Node0x58cdff0;
	Node0x58ce550 [shape=record, style = filled, fillcolor = blue, label="{vector.body.preheader.split.loopexit:             \l  %index.next.prol.lcssa = phi i32 [ %index.next.prol, %vector.body.prol ]\l  br label %vector.body.preheader.split\l}"];
	Node0x58ce550 -> Node0x58cde20;
	Node0x58cde20 [shape=record, style = filled, fillcolor = blue, label="{vector.body.preheader.split:                      \l  %index.unr = phi i32 [ 0, %vector.body.preheader ], [\l... %index.next.prol.lcssa, %vector.body.preheader.split.loopexit ]\l  %27 = icmp ult i32 %24, 224\l  br i1 %27, label %middle.block, label %vector.body.preheader.split.split\l|{<s0>T|<s1>F}}"];
	Node0x58cde20:s0 -> Node0x58cd5e0;
	Node0x58cde20:s1 -> Node0x58ce860;
	Node0x58ce860 [shape=record, style = filled, fillcolor = blue, label="{vector.body.preheader.split.split:                \l  br label %vector.body\l}"];
	Node0x58ce860 -> Node0x58ce9e0;
	Node0x58ce9e0 [shape=record, style = filled, fillcolor = skyblue, label="{vector.body:                                      \l  %index = phi i32 [ %index.unr, %vector.body.preheader.split.split ], [\l... %index.next.7, %vector.body ]\l  %index.next.7 = add i32 %index, 256\l  %28 = icmp eq i32 %index.next.7, %n.vec\l  br i1 %28, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x58ce9e0:s0 -> Node0x58ceca0;
	Node0x58ce9e0:s1 -> Node0x58ce9e0;
	Node0x58ceca0 [shape=record, style = filled, fillcolor = blue, label="{middle.block.unr-lcssa:                           \l  br label %middle.block\l}"];
	Node0x58ceca0 -> Node0x58cd5e0;
	Node0x58cd5e0 [shape=record, style = filled, fillcolor = blue, label="{middle.block:                                     \l  %cmp.n = icmp eq i32 %23, %n.vec\l  br i1 %cmp.n, label %for.end23, label %for.body.preheader67\l|{<s0>T|<s1>F}}"];
	Node0x58cd5e0:s0 -> Node0x58ccc20;
	Node0x58cd5e0:s1 -> Node0x58cd3b0;
	Node0x58cd1f0 [shape=record, style = filled, fillcolor = turquoise, label="{for.body.us:                                      \l  %indvars.iv59 = phi i64 [ %indvars.iv.next60,\l... %for.cond6.for.end_crit_edge.us ], [ 0, %for.body.us.preheader ]\l  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond6.for.end_crit_edge.us ],\l... [ 0, %for.body.us.preheader ]\l  %arrayidx.us = getelementptr inbounds i8*, i8** %output_data, i64\l... %indvars.iv59\l  %29 = load i8*, i8** %arrayidx.us, align 8, !tbaa !14\l  %arrayidx3.us = getelementptr inbounds i8*, i8** %input_data, i64 %indvars.iv\l  %30 = load i8*, i8** %arrayidx3.us, align 8, !tbaa !14\l  %31 = or i64 %indvars.iv, 1\l  %arrayidx5.us = getelementptr inbounds i8*, i8** %input_data, i64 %31\l  %32 = load i8*, i8** %arrayidx5.us, align 8, !tbaa !14\l  br label %for.body8.us\l}"];
	Node0x58cd1f0 -> Node0x58f5d60;
	Node0x58f5d60 [shape=record, style = filled, fillcolor = orange, label="{for.body8.us:                                     \l  %bias.053.us = phi i32 [ 1, %for.body.us ], [ %xor.us, %for.body8.us ]\l  %outptr.052.us = phi i8* [ %29, %for.body.us ], [ %incdec.ptr.us,\l... %for.body8.us ]\l  %inptr1.051.us = phi i8* [ %32, %for.body.us ], [ %add.ptr19.us,\l... %for.body8.us ]\l  %inptr0.050.us = phi i8* [ %30, %for.body.us ], [ %add.ptr.us, %for.body8.us\l... ]\l  %outcol.049.us = phi i32 [ 0, %for.body.us ], [ %inc.us, %for.body8.us ]\l  %33 = load i8, i8* %inptr0.050.us, align 1, !tbaa !15\l  %conv.us = zext i8 %33 to i32\l  %arrayidx9.us = getelementptr inbounds i8, i8* %inptr0.050.us, i64 1\l  %34 = load i8, i8* %arrayidx9.us, align 1, !tbaa !15\l  %conv10.us = zext i8 %34 to i32\l  %35 = load i8, i8* %inptr1.051.us, align 1, !tbaa !15\l  %conv12.us = zext i8 %35 to i32\l  %arrayidx14.us = getelementptr inbounds i8, i8* %inptr1.051.us, i64 1\l  %36 = load i8, i8* %arrayidx14.us, align 1, !tbaa !15\l  %conv15.us = zext i8 %36 to i32\l  %add11.us = add i32 %conv.us, %bias.053.us\l  %add13.us = add i32 %add11.us, %conv10.us\l  %add16.us = add i32 %add13.us, %conv12.us\l  %add17.us = add i32 %add16.us, %conv15.us\l  %shr47.us = lshr i32 %add17.us, 2\l  %conv18.us = trunc i32 %shr47.us to i8\l  %incdec.ptr.us = getelementptr inbounds i8, i8* %outptr.052.us, i64 1\l  store i8 %conv18.us, i8* %outptr.052.us, align 1, !tbaa !15\l  %xor.us = xor i32 %bias.053.us, 3\l  %add.ptr.us = getelementptr inbounds i8, i8* %inptr0.050.us, i64 2\l  %add.ptr19.us = getelementptr inbounds i8, i8* %inptr1.051.us, i64 2\l  %inc.us = add nuw i32 %outcol.049.us, 1\l  %exitcond = icmp eq i32 %inc.us, %mul\l  br i1 %exitcond, label %for.cond6.for.end_crit_edge.us, label %for.body8.us,\l... !prof !20\l|{<s0>T|<s1>F}}"];
	Node0x58f5d60:s0 -> Node0x58cf060;
	Node0x58f5d60:s1 -> Node0x58f5d60;
	Node0x58cf060 [shape=record, style = filled, fillcolor = turquoise, label="{for.cond6.for.end_crit_edge.us:                   \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 2\l  %indvars.iv.next60 = add nuw nsw i64 %indvars.iv59, 1\l  %37 = load i32, i32* %v_samp_factor, align 4, !tbaa !18\l  %38 = sext i32 %37 to i64\l  %cmp.us = icmp slt i64 %indvars.iv.next60, %38\l  br i1 %cmp.us, label %for.body.us, label %for.end23.loopexit68, !prof !19\l|{<s0>T|<s1>F}}"];
	Node0x58cf060:s0 -> Node0x58cd1f0;
	Node0x58cf060:s1 -> Node0x58e4370;
	Node0x58cd790 [shape=record, style = filled, fillcolor = skyblue, label="{for.body:                                         \l  %outrow.055 = phi i32 [ %inc22, %for.body ], [ %outrow.055.ph,\l... %for.body.preheader67 ]\l  %inc22 = add nuw nsw i32 %outrow.055, 1\l  %cmp = icmp slt i32 %inc22, %23\l  br i1 %cmp, label %for.body, label %for.end23.loopexit, !prof !19,\l... !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x58cd790:s0 -> Node0x58cd790;
	Node0x58cd790:s1 -> Node0x58d8730;
	Node0x58d8730 [shape=record, style = filled, fillcolor = blue, label="{for.end23.loopexit:                               \l  br label %for.end23\l}"];
	Node0x58d8730 -> Node0x58ccc20;
	Node0x58e4370 [shape=record, style = filled, fillcolor = cyan, label="{for.end23.loopexit68:                             \l  br label %for.end23\l}"];
	Node0x58e4370 -> Node0x58ccc20;
	Node0x58ccc20 [shape=record, style = filled, fillcolor = turquoise, label="{for.end23:                                        \l  ret void\l}"];
}
