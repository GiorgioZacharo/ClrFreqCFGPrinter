digraph "CFG for 'encode_mcu_AC_first' function" {
	label="CFG for 'encode_mcu_AC_first' function";

	Node0x55e28a0 [shape=record, style = filled, fillcolor = yellow, label="{entry:\l  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59\l  %0 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to\l... %struct.phuff_entropy_encoder**\l  %1 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder**\l... %0, align 8, !tbaa !3\l  %Se2 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 48\l  %2 = load i32, i32* %Se2, align 8, !tbaa !11\l  %Al3 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 50\l  %3 = load i32, i32* %Al3, align 8, !tbaa !12\l  %dest = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 5\l  %4 = bitcast %struct.jpeg_destination_mgr** %dest to \<2 x i64\>**\l  %5 = load \<2 x i64\>*, \<2 x i64\>** %4, align 8, !tbaa !13\l  %next_output_byte4 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 2\l  %6 = load \<2 x i64\>, \<2 x i64\>* %5, align 8, !tbaa !14\l  %free_in_buffer6 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 3\l  %7 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  store \<2 x i64\> %6, \<2 x i64\>* %7, align 8, !tbaa !14\l  %restart_interval = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 29\l  %8 = load i32, i32* %restart_interval, align 8, !tbaa !15\l  %tobool = icmp eq i32 %8, 0\l  br i1 %tobool, label %if.end8, label %if.then, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x55e28a0:s0 -> Node0x55cfb90;
	Node0x55e28a0:s1 -> Node0x55d0230;
	Node0x55d0230 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %restarts_to_go = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 12\l  %9 = bitcast i32* %restarts_to_go to i64*\l  %10 = load i64, i64* %9, align 8\l  %11 = trunc i64 %10 to i32\l  %cmp = icmp eq i32 %11, 0\l  br i1 %cmp, label %if.then7, label %if.end8\l|{<s0>T|<s1>F}}"];
	Node0x55d0230:s0 -> Node0x55d0780;
	Node0x55d0230:s1 -> Node0x55cfb90;
	Node0x55d0780 [shape=record, style = filled, fillcolor = blue, label="{if.then7:                                         \l  %12 = lshr i64 %10, 32\l  %13 = trunc i64 %12 to i32\l  tail call fastcc void @emit_restart(%struct.phuff_entropy_encoder* nonnull\l... %1, i32 %13)\l  br label %if.end8\l}"];
	Node0x55d0780 -> Node0x55cfb90;
	Node0x55cfb90 [shape=record, style = filled, fillcolor = yellow, label="{if.end8:                                          \l  %14 = load [64 x i16]*, [64 x i16]** %MCU_data, align 8, !tbaa !17\l  %Ss = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 47\l  %15 = load i32, i32* %Ss, align 4, !tbaa !18\l  %cmp9811 = icmp sgt i32 %15, %2\l  br i1 %cmp9811, label %if.end52, label %for.body.lr.ph, !prof !19\l|{<s0>T|<s1>F}}"];
	Node0x55cfb90:s0 -> Node0x55d0c50;
	Node0x55cfb90:s1 -> Node0x55d0d30;
	Node0x55d0d30 [shape=record, style = filled, fillcolor = yellow, label="{for.body.lr.ph:                                   \l  %EOBRUN = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 9\l  %ac_tbl_no40 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 8\l  %gather_statistics.i172 = getelementptr inbounds\l... %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 1\l  %put_bits1.i188 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 5\l  %cinfo.i190 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 6\l  %put_buffer11.i206 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 4\l  %BE.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 10\l  %bit_buffer.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 11\l  %16 = sext i32 %15 to i64\l  %17 = sext i32 %2 to i64\l  %18 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %19 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %20 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %21 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %22 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %23 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %24 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %25 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %26 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %27 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %28 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %29 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  br label %for.body\l}"];
	Node0x55d0d30 -> Node0x55d1d80;
	Node0x55d1d80 [shape=record, style = filled, fillcolor = red, label="{for.body:                                         \l  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %16, %for.body.lr.ph\l... ]\l  %r.0812 = phi i32 [ %r.2, %for.inc ], [ 0, %for.body.lr.ph ]\l  %arrayidx10 = getelementptr inbounds [0 x i32], [0 x i32]*\l... @jpeg_natural_order, i64 0, i64 %indvars.iv\l  %30 = load i32, i32* %arrayidx10, align 4, !tbaa !20\l  %idxprom11 = sext i32 %30 to i64\l  %arrayidx12 = getelementptr inbounds [64 x i16], [64 x i16]* %14, i64 0, i64\l... %idxprom11\l  %31 = load i16, i16* %arrayidx12, align 2, !tbaa !21\l  %conv = sext i16 %31 to i32\l  %cmp13 = icmp eq i16 %31, 0\l  br i1 %cmp13, label %if.then15, label %if.end16, !prof !22\l|{<s0>T|<s1>F}}"];
	Node0x55d1d80:s0 -> Node0x55f3100;
	Node0x55d1d80:s1 -> Node0x55f31e0;
	Node0x55f3100 [shape=record, style = filled, fillcolor = red, label="{if.then15:                                        \l  %inc = add nsw i32 %r.0812, 1\l  br label %for.inc\l}"];
	Node0x55f3100 -> Node0x55d1ed0;
	Node0x55f31e0 [shape=record, style = filled, fillcolor = yellow, label="{if.end16:                                         \l  %cmp17 = icmp slt i16 %31, 0\l  br i1 %cmp17, label %if.then19, label %if.else, !prof !23\l|{<s0>T|<s1>F}}"];
	Node0x55f31e0:s0 -> Node0x55f35c0;
	Node0x55f31e0:s1 -> Node0x55f3640;
	Node0x55f35c0 [shape=record, style = filled, fillcolor = yellow, label="{if.then19:                                        \l  %sub = sub nsw i32 0, %conv\l  %shr = ashr i32 %sub, %3\l  %neg = xor i32 %shr, -1\l  br label %if.end21\l}"];
	Node0x55f35c0 -> Node0x55d6f40;
	Node0x55f3640 [shape=record, style = filled, fillcolor = yellow, label="{if.else:                                          \l  %shr20 = ashr i32 %conv, %3\l  br label %if.end21\l}"];
	Node0x55f3640 -> Node0x55d6f40;
	Node0x55d6f40 [shape=record, style = filled, fillcolor = yellow, label="{if.end21:                                         \l  %temp2.0 = phi i32 [ %neg, %if.then19 ], [ %shr20, %if.else ]\l  %temp.0 = phi i32 [ %shr, %if.then19 ], [ %shr20, %if.else ]\l  %cmp22 = icmp eq i32 %temp.0, 0\l  br i1 %cmp22, label %if.then24, label %if.end26, !prof !24\l|{<s0>T|<s1>F}}"];
	Node0x55d6f40:s0 -> Node0x55d1570;
	Node0x55d6f40:s1 -> Node0x55d1650;
	Node0x55d1570 [shape=record, style = filled, fillcolor = yellow, label="{if.then24:                                        \l  %inc25 = add nsw i32 %r.0812, 1\l  br label %for.inc\l}"];
	Node0x55d1570 -> Node0x55d1ed0;
	Node0x55d1650 [shape=record, style = filled, fillcolor = yellow, label="{if.end26:                                         \l  %32 = load i32, i32* %EOBRUN, align 4, !tbaa !25\l  %cmp27 = icmp eq i32 %32, 0\l  br i1 %cmp27, label %while.cond.preheader, label %while.cond.i.preheader,\l... !prof !29\l|{<s0>T|<s1>F}}"];
	Node0x55d1650:s0 -> Node0x55d16d0;
	Node0x55d1650:s1 -> Node0x55d7ca0;
	Node0x55d7ca0 [shape=record, style = filled, fillcolor = green, label="{while.cond.i.preheader:                           \l  br label %while.cond.i\l}"];
	Node0x55d7ca0 -> Node0x55d7f60;
	Node0x55d7f60 [shape=record, style = filled, fillcolor = green, label="{while.cond.i:                                     \l  %temp.0.i = phi i32 [ %shr.i, %while.cond.i ], [ %32,\l... %while.cond.i.preheader ]\l  %nbits.0.i = phi i32 [ %inc.i, %while.cond.i ], [ 0, %while.cond.i.preheader\l... ]\l  %shr.i = ashr i32 %temp.0.i, 1\l  %tobool.i = icmp eq i32 %shr.i, 0\l  %inc.i = add nuw nsw i32 %nbits.0.i, 1\l  br i1 %tobool.i, label %while.end.i, label %while.cond.i, !prof !30\l|{<s0>T|<s1>F}}"];
	Node0x55d7f60:s0 -> Node0x55d8480;
	Node0x55d7f60:s1 -> Node0x55d7f60;
	Node0x55d8480 [shape=record, style = filled, fillcolor = green, label="{while.end.i:                                      \l  %nbits.0.i.lcssa = phi i32 [ %nbits.0.i, %while.cond.i ]\l  %33 = load i32, i32* %ac_tbl_no40, align 8, !tbaa !31\l  %shl.i = shl i32 %nbits.0.i.lcssa, 4\l  %34 = load i32, i32* %gather_statistics.i172, align 8, !tbaa !32\l  %tobool.i.i = icmp eq i32 %34, 0\l  br i1 %tobool.i.i, label %if.else.i.i, label %if.then.i.i, !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x55d8480:s0 -> Node0x55d8850;
	Node0x55d8480:s1 -> Node0x55d8930;
	Node0x55d8930 [shape=record, style = filled, fillcolor = green, label="{if.then.i.i:                                      \l  %idxprom.i.i = sext i32 %shl.i to i64\l  %idxprom1.i.i = sext i32 %33 to i64\l  %arrayidx.i.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i.i\l  %35 = load i64*, i64** %arrayidx.i.i, align 8, !tbaa !17\l  %arrayidx2.i.i = getelementptr inbounds i64, i64* %35, i64 %idxprom.i.i\l  %36 = load i64, i64* %arrayidx2.i.i, align 8, !tbaa !34\l  %inc.i.i = add nsw i64 %36, 1\l  store i64 %inc.i.i, i64* %arrayidx2.i.i, align 8, !tbaa !34\l  br label %emit_symbol.exit.i\l}"];
	Node0x55d8930 -> Node0x55f80c0;
	Node0x55d8850 [shape=record, style = filled, fillcolor = green, label="{if.else.i.i:                                      \l  %idxprom3.i.i = sext i32 %33 to i64\l  %arrayidx4.i.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i.i\l  %37 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i.i,\l... align 8, !tbaa !17\l  %idxprom5.i.i = sext i32 %shl.i to i64\l  %arrayidx6.i.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %37, i64 0, i32 0, i64 %idxprom5.i.i\l  %38 = load i32, i32* %arrayidx6.i.i, align 4, !tbaa !20\l  %arrayidx8.i.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %37, i64 0, i32 1, i64 %idxprom5.i.i\l  %39 = load i8, i8* %arrayidx8.i.i, align 1, !tbaa !14\l  %conv.i.i = sext i8 %39 to i32\l  %conv.i416 = zext i32 %38 to i64\l  %40 = load i32, i32* %put_bits1.i188, align 8, !tbaa !35\l  %cmp.i418 = icmp eq i8 %39, 0\l  br i1 %cmp.i418, label %if.end.i426, label %if.end7.i438, !prof !36\l|{<s0>T|<s1>F}}"];
	Node0x55d8850:s0 -> Node0x55f88b0;
	Node0x55d8850:s1 -> Node0x55f8990;
	Node0x55f88b0 [shape=record, style = filled, fillcolor = blue, label="{if.end.i426:                                      \l  %41 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i420 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %41, i64 0, i32 0\l  %42 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i420,\l... align 8, !tbaa !38\l  %msg_code.i421 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %42, i64 0, i32 5\l  store i32 39, i32* %msg_code.i421, align 8, !tbaa !39\l  %error_exit.i422 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %42, i64 0, i32 0\l  %43 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i422, align 8, !tbaa !41\l  %44 = bitcast %struct.jpeg_compress_struct* %41 to\l... %struct.jpeg_common_struct*\l  tail call void %43(%struct.jpeg_common_struct* %44) #3\l  %.pre = load i32, i32* %gather_statistics.i172, align 8, !tbaa !32\l  %tobool.i425 = icmp eq i32 %.pre, 0\l  br i1 %tobool.i425, label %if.end7.i438, label %emit_symbol.exit.i, !prof !42\l|{<s0>T|<s1>F}}"];
	Node0x55f88b0:s0 -> Node0x55f8990;
	Node0x55f88b0:s1 -> Node0x55f80c0;
	Node0x55f8990 [shape=record, style = filled, fillcolor = green, label="{if.end7.i438:                                     \l  %sh_prom.i427 = zext i32 %conv.i.i to i64\l  %shl.i428 = shl i64 1, %sh_prom.i427\l  %sub.i429 = add i64 %shl.i428, 4294967295\l  %and.i430 = and i64 %sub.i429, %conv.i416\l  %add.i431 = add i32 %40, %conv.i.i\l  %sub8.i432 = sub nsw i32 24, %add.i431\l  %sh_prom9.i433 = zext i32 %sub8.i432 to i64\l  %shl10.i434 = shl i64 %and.i430, %sh_prom9.i433\l  %45 = load i64, i64* %put_buffer11.i206, align 8, !tbaa !43\l  %or.i436 = or i64 %45, %shl10.i434\l  %cmp1267.i437 = icmp sgt i32 %add.i431, 7\l  br i1 %cmp1267.i437, label %while.body.i449.preheader, label\l... %while.end.i466, !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x55f8990:s0 -> Node0x55d73c0;
	Node0x55f8990:s1 -> Node0x55d74e0;
	Node0x55d73c0 [shape=record, style = filled, fillcolor = cyan, label="{while.body.i449.preheader:                        \l  br label %while.body.i449\l}"];
	Node0x55d73c0 -> Node0x55d7650;
	Node0x55d7650 [shape=record, style = filled, fillcolor = turquoise, label="{while.body.i449:                                  \l  %put_buffer.069.i442 = phi i64 [ %shl33.i459, %if.end32.i462 ], [ %or.i436,\l... %while.body.i449.preheader ]\l  %put_bits.068.i443 = phi i32 [ %sub34.i460, %if.end32.i462 ], [ %add.i431,\l... %while.body.i449.preheader ]\l  %shr66.i444 = lshr i64 %put_buffer.069.i442, 16\l  %conv16.i445 = trunc i64 %shr66.i444 to i8\l  %46 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr.i446 = getelementptr inbounds i8, i8* %46, i64 1\l  store i8* %incdec.ptr.i446, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 %conv16.i445, i8* %46, align 1, !tbaa !14\l  %47 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec.i447 = add i64 %47, -1\l  store i64 %dec.i447, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp17.i448 = icmp eq i64 %dec.i447, 0\l  br i1 %cmp17.i448, label %if.then19.i450, label %if.end20.i453, !prof !47\l|{<s0>T|<s1>F}}"];
	Node0x55d7650:s0 -> Node0x55fb780;
	Node0x55d7650:s1 -> Node0x55fb860;
	Node0x55fb780 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i450:                                   \l  %48 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %dest1.i751 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %48, i64 0, i32 5\l  %49 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i751, align 8, !tbaa !13\l  %empty_output_buffer.i752 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %49, i64 0, i32 3\l  %50 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i752, align 8, !tbaa\l... !48\l  %call.i753 = tail call i32 %50(%struct.jpeg_compress_struct* %48) #3\l  %tobool.i754 = icmp eq i32 %call.i753, 0\l  br i1 %tobool.i754, label %if.then.i758, label %dump_buffer.exit763, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x55fb780:s0 -> Node0x55fbe40;
	Node0x55fb780:s1 -> Node0x55fbf50;
	Node0x55fbe40 [shape=record, style = filled, fillcolor = blue, label="{if.then.i758:                                     \l  %51 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i755 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %51, i64 0, i32 0\l  %52 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i755,\l... align 8, !tbaa !38\l  %msg_code.i756 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %52, i64 0, i32 5\l  store i32 22, i32* %msg_code.i756, align 8, !tbaa !39\l  %error_exit.i757 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %52, i64 0, i32 0\l  %53 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i757, align 8, !tbaa !41\l  %54 = bitcast %struct.jpeg_compress_struct* %51 to\l... %struct.jpeg_common_struct*\l  tail call void %53(%struct.jpeg_common_struct* %54) #3\l  br label %dump_buffer.exit763\l}"];
	Node0x55fbe40 -> Node0x55fbf50;
	Node0x55fbf50 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit763:                              \l  %55 = bitcast %struct.jpeg_destination_mgr* %49 to \<2 x i64\>*\l  %56 = load \<2 x i64\>, \<2 x i64\>* %55, align 8, !tbaa !14\l  store \<2 x i64\> %56, \<2 x i64\>* %24, align 8, !tbaa !14\l  br label %if.end20.i453\l}"];
	Node0x55fbf50 -> Node0x55fb860;
	Node0x55fb860 [shape=record, style = filled, fillcolor = turquoise, label="{if.end20.i453:                                    \l  %conv15.i451 = and i64 %shr66.i444, 255\l  %cmp21.i452 = icmp eq i64 %conv15.i451, 255\l  br i1 %cmp21.i452, label %if.then23.i457, label %if.end32.i462, !prof !51\l|{<s0>T|<s1>F}}"];
	Node0x55fb860:s0 -> Node0x55fc890;
	Node0x55fb860:s1 -> Node0x55fae70;
	Node0x55fc890 [shape=record, style = filled, fillcolor = skyblue, label="{if.then23.i457:                                   \l  %57 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr25.i454 = getelementptr inbounds i8, i8* %57, i64 1\l  store i8* %incdec.ptr25.i454, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 0, i8* %57, align 1, !tbaa !14\l  %58 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec27.i455 = add i64 %58, -1\l  store i64 %dec27.i455, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp28.i456 = icmp eq i64 %dec27.i455, 0\l  br i1 %cmp28.i456, label %if.then30.i458, label %if.end32.i462, !prof !52\l|{<s0>T|<s1>F}}"];
	Node0x55fc890:s0 -> Node0x55fcdd0;
	Node0x55fc890:s1 -> Node0x55fae70;
	Node0x55fcdd0 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i458:                                   \l  %59 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %dest1.i469 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %59, i64 0, i32 5\l  %60 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i469, align 8, !tbaa !13\l  %empty_output_buffer.i470 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %60, i64 0, i32 3\l  %61 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i470, align 8, !tbaa\l... !48\l  %call.i471 = tail call i32 %61(%struct.jpeg_compress_struct* %59) #3\l  %tobool.i472 = icmp eq i32 %call.i471, 0\l  br i1 %tobool.i472, label %if.then.i476, label %dump_buffer.exit481, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x55fcdd0:s0 -> Node0x55fd370;
	Node0x55fcdd0:s1 -> Node0x55fd480;
	Node0x55fd370 [shape=record, style = filled, fillcolor = blue, label="{if.then.i476:                                     \l  %62 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i473 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %62, i64 0, i32 0\l  %63 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i473,\l... align 8, !tbaa !38\l  %msg_code.i474 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %63, i64 0, i32 5\l  store i32 22, i32* %msg_code.i474, align 8, !tbaa !39\l  %error_exit.i475 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %63, i64 0, i32 0\l  %64 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i475, align 8, !tbaa !41\l  %65 = bitcast %struct.jpeg_compress_struct* %62 to\l... %struct.jpeg_common_struct*\l  tail call void %64(%struct.jpeg_common_struct* %65) #3\l  br label %dump_buffer.exit481\l}"];
	Node0x55fd370 -> Node0x55fd480;
	Node0x55fd480 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit481:                              \l  %66 = bitcast %struct.jpeg_destination_mgr* %60 to \<2 x i64\>*\l  %67 = load \<2 x i64\>, \<2 x i64\>* %66, align 8, !tbaa !14\l  store \<2 x i64\> %67, \<2 x i64\>* %25, align 8, !tbaa !14\l  br label %if.end32.i462\l}"];
	Node0x55fd480 -> Node0x55fae70;
	Node0x55fae70 [shape=record, style = filled, fillcolor = turquoise, label="{if.end32.i462:                                    \l  %shl33.i459 = shl i64 %put_buffer.069.i442, 8\l  %sub34.i460 = add nsw i32 %put_bits.068.i443, -8\l  %cmp12.i461 = icmp sgt i32 %sub34.i460, 7\l  br i1 %cmp12.i461, label %while.body.i449, label %while.end.loopexit.i463,\l... !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x55fae70:s0 -> Node0x55d7650;
	Node0x55fae70:s1 -> Node0x55d7700;
	Node0x55d7700 [shape=record, style = filled, fillcolor = cyan, label="{while.end.loopexit.i463:                          \l  %shl33.i459.lcssa = phi i64 [ %shl33.i459, %if.end32.i462 ]\l  %68 = and i32 %add.i431, 7\l  br label %while.end.i466\l}"];
	Node0x55d7700 -> Node0x55d74e0;
	Node0x55d74e0 [shape=record, style = filled, fillcolor = green, label="{while.end.i466:                                   \l  %put_buffer.0.lcssa.i464 = phi i64 [ %or.i436, %if.end7.i438 ], [\l... %shl33.i459.lcssa, %while.end.loopexit.i463 ]\l  %put_bits.0.lcssa.i465 = phi i32 [ %add.i431, %if.end7.i438 ], [ %68,\l... %while.end.loopexit.i463 ]\l  store i64 %put_buffer.0.lcssa.i464, i64* %put_buffer11.i206, align 8, !tbaa\l... !43\l  store i32 %put_bits.0.lcssa.i465, i32* %put_bits1.i188, align 8, !tbaa !35\l  br label %emit_symbol.exit.i\l}"];
	Node0x55d74e0 -> Node0x55f80c0;
	Node0x55f80c0 [shape=record, style = filled, fillcolor = green, label="{emit_symbol.exit.i:                               \l  %tobool2.i = icmp eq i32 %nbits.0.i.lcssa, 0\l  br i1 %tobool2.i, label %if.end.i, label %if.end.i492, !prof !53\l|{<s0>T|<s1>F}}"];
	Node0x55f80c0:s0 -> Node0x55fe4f0;
	Node0x55f80c0:s1 -> Node0x55fe570;
	Node0x55fe570 [shape=record, style = filled, fillcolor = turquoise, label="{if.end.i492:                                      \l  %69 = load i32, i32* %gather_statistics.i172, align 8, !tbaa !32\l  %tobool.i491 = icmp eq i32 %69, 0\l  br i1 %tobool.i491, label %if.end7.i504, label %if.end.i, !prof !54\l|{<s0>T|<s1>F}}"];
	Node0x55fe570:s0 -> Node0x55fe830;
	Node0x55fe570:s1 -> Node0x55fe4f0;
	Node0x55fe830 [shape=record, style = filled, fillcolor = turquoise, label="{if.end7.i504:                                     \l  %70 = load i32, i32* %put_bits1.i188, align 8, !tbaa !35\l  %71 = load i32, i32* %EOBRUN, align 4, !tbaa !25\l  %conv.i482 = zext i32 %71 to i64\l  %sh_prom.i493 = zext i32 %nbits.0.i.lcssa to i64\l  %shl.i494 = shl i64 1, %sh_prom.i493\l  %sub.i495 = add i64 %shl.i494, 4294967295\l  %and.i496 = and i64 %conv.i482, %sub.i495\l  %add.i497 = add i32 %70, %nbits.0.i.lcssa\l  %sub8.i498 = sub nsw i32 24, %add.i497\l  %sh_prom9.i499 = zext i32 %sub8.i498 to i64\l  %shl10.i500 = shl i64 %and.i496, %sh_prom9.i499\l  %72 = load i64, i64* %put_buffer11.i206, align 8, !tbaa !43\l  %or.i502 = or i64 %shl10.i500, %72\l  %cmp1267.i503 = icmp sgt i32 %add.i497, 7\l  br i1 %cmp1267.i503, label %while.body.i515.preheader, label\l... %while.end.i532, !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x55fe830:s0 -> Node0x55ff7a0;
	Node0x55fe830:s1 -> Node0x55ff8c0;
	Node0x55ff7a0 [shape=record, style = filled, fillcolor = cyan, label="{while.body.i515.preheader:                        \l  br label %while.body.i515\l}"];
	Node0x55ff7a0 -> Node0x55ffa30;
	Node0x55ffa30 [shape=record, style = filled, fillcolor = cyan, label="{while.body.i515:                                  \l  %put_buffer.069.i508 = phi i64 [ %shl33.i525, %if.end32.i528 ], [ %or.i502,\l... %while.body.i515.preheader ]\l  %put_bits.068.i509 = phi i32 [ %sub34.i526, %if.end32.i528 ], [ %add.i497,\l... %while.body.i515.preheader ]\l  %shr66.i510 = lshr i64 %put_buffer.069.i508, 16\l  %conv16.i511 = trunc i64 %shr66.i510 to i8\l  %73 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr.i512 = getelementptr inbounds i8, i8* %73, i64 1\l  store i8* %incdec.ptr.i512, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 %conv16.i511, i8* %73, align 1, !tbaa !14\l  %74 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec.i513 = add i64 %74, -1\l  store i64 %dec.i513, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp17.i514 = icmp eq i64 %dec.i513, 0\l  br i1 %cmp17.i514, label %if.then19.i516, label %if.end20.i519, !prof !47\l|{<s0>T|<s1>F}}"];
	Node0x55ffa30:s0 -> Node0x5600460;
	Node0x55ffa30:s1 -> Node0x5600540;
	Node0x5600460 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i516:                                   \l  %75 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %dest1.i765 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %75, i64 0, i32 5\l  %76 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i765, align 8, !tbaa !13\l  %empty_output_buffer.i766 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %76, i64 0, i32 3\l  %77 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i766, align 8, !tbaa\l... !48\l  %call.i767 = tail call i32 %77(%struct.jpeg_compress_struct* %75) #3\l  %tobool.i768 = icmp eq i32 %call.i767, 0\l  br i1 %tobool.i768, label %if.then.i772, label %dump_buffer.exit777, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x5600460:s0 -> Node0x5600b00;
	Node0x5600460:s1 -> Node0x5600c10;
	Node0x5600b00 [shape=record, style = filled, fillcolor = blue, label="{if.then.i772:                                     \l  %78 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i769 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %78, i64 0, i32 0\l  %79 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i769,\l... align 8, !tbaa !38\l  %msg_code.i770 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %79, i64 0, i32 5\l  store i32 22, i32* %msg_code.i770, align 8, !tbaa !39\l  %error_exit.i771 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %79, i64 0, i32 0\l  %80 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i771, align 8, !tbaa !41\l  %81 = bitcast %struct.jpeg_compress_struct* %78 to\l... %struct.jpeg_common_struct*\l  tail call void %80(%struct.jpeg_common_struct* %81) #3\l  br label %dump_buffer.exit777\l}"];
	Node0x5600b00 -> Node0x5600c10;
	Node0x5600c10 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit777:                              \l  %82 = bitcast %struct.jpeg_destination_mgr* %76 to \<2 x i64\>*\l  %83 = load \<2 x i64\>, \<2 x i64\>* %82, align 8, !tbaa !14\l  store \<2 x i64\> %83, \<2 x i64\>* %28, align 8, !tbaa !14\l  br label %if.end20.i519\l}"];
	Node0x5600c10 -> Node0x5600540;
	Node0x5600540 [shape=record, style = filled, fillcolor = cyan, label="{if.end20.i519:                                    \l  %conv15.i517 = and i64 %shr66.i510, 255\l  %cmp21.i518 = icmp eq i64 %conv15.i517, 255\l  br i1 %cmp21.i518, label %if.then23.i523, label %if.end32.i528, !prof !51\l|{<s0>T|<s1>F}}"];
	Node0x5600540:s0 -> Node0x5601550;
	Node0x5600540:s1 -> Node0x55ffb50;
	Node0x5601550 [shape=record, style = filled, fillcolor = blue, label="{if.then23.i523:                                   \l  %84 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr25.i520 = getelementptr inbounds i8, i8* %84, i64 1\l  store i8* %incdec.ptr25.i520, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 0, i8* %84, align 1, !tbaa !14\l  %85 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec27.i521 = add i64 %85, -1\l  store i64 %dec27.i521, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp28.i522 = icmp eq i64 %dec27.i521, 0\l  br i1 %cmp28.i522, label %if.then30.i524, label %if.end32.i528, !prof !52\l|{<s0>T|<s1>F}}"];
	Node0x5601550:s0 -> Node0x5601a90;
	Node0x5601550:s1 -> Node0x55ffb50;
	Node0x5601a90 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i524:                                   \l  %86 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %dest1.i535 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %86, i64 0, i32 5\l  %87 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i535, align 8, !tbaa !13\l  %empty_output_buffer.i536 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %87, i64 0, i32 3\l  %88 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i536, align 8, !tbaa\l... !48\l  %call.i537 = tail call i32 %88(%struct.jpeg_compress_struct* %86) #3\l  %tobool.i538 = icmp eq i32 %call.i537, 0\l  br i1 %tobool.i538, label %if.then.i542, label %dump_buffer.exit547, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x5601a90:s0 -> Node0x55fa2d0;
	Node0x5601a90:s1 -> Node0x55fa3e0;
	Node0x55fa2d0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i542:                                     \l  %89 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i539 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %89, i64 0, i32 0\l  %90 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i539,\l... align 8, !tbaa !38\l  %msg_code.i540 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %90, i64 0, i32 5\l  store i32 22, i32* %msg_code.i540, align 8, !tbaa !39\l  %error_exit.i541 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %90, i64 0, i32 0\l  %91 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i541, align 8, !tbaa !41\l  %92 = bitcast %struct.jpeg_compress_struct* %89 to\l... %struct.jpeg_common_struct*\l  tail call void %91(%struct.jpeg_common_struct* %92) #3\l  br label %dump_buffer.exit547\l}"];
	Node0x55fa2d0 -> Node0x55fa3e0;
	Node0x55fa3e0 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit547:                              \l  %93 = bitcast %struct.jpeg_destination_mgr* %87 to \<2 x i64\>*\l  %94 = load \<2 x i64\>, \<2 x i64\>* %93, align 8, !tbaa !14\l  store \<2 x i64\> %94, \<2 x i64\>* %29, align 8, !tbaa !14\l  br label %if.end32.i528\l}"];
	Node0x55fa3e0 -> Node0x55ffb50;
	Node0x55ffb50 [shape=record, style = filled, fillcolor = cyan, label="{if.end32.i528:                                    \l  %shl33.i525 = shl i64 %put_buffer.069.i508, 8\l  %sub34.i526 = add nsw i32 %put_bits.068.i509, -8\l  %cmp12.i527 = icmp sgt i32 %sub34.i526, 7\l  br i1 %cmp12.i527, label %while.body.i515, label %while.end.loopexit.i529,\l... !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x55ffb50:s0 -> Node0x55ffa30;
	Node0x55ffb50:s1 -> Node0x55fada0;
	Node0x55fada0 [shape=record, style = filled, fillcolor = cyan, label="{while.end.loopexit.i529:                          \l  %shl33.i525.lcssa = phi i64 [ %shl33.i525, %if.end32.i528 ]\l  %95 = and i32 %add.i497, 7\l  br label %while.end.i532\l}"];
	Node0x55fada0 -> Node0x55ff8c0;
	Node0x55ff8c0 [shape=record, style = filled, fillcolor = turquoise, label="{while.end.i532:                                   \l  %put_buffer.0.lcssa.i530 = phi i64 [ %or.i502, %if.end7.i504 ], [\l... %shl33.i525.lcssa, %while.end.loopexit.i529 ]\l  %put_bits.0.lcssa.i531 = phi i32 [ %add.i497, %if.end7.i504 ], [ %95,\l... %while.end.loopexit.i529 ]\l  store i64 %put_buffer.0.lcssa.i530, i64* %put_buffer11.i206, align 8, !tbaa\l... !43\l  store i32 %put_bits.0.lcssa.i531, i32* %put_bits1.i188, align 8, !tbaa !35\l  br label %if.end.i\l}"];
	Node0x55ff8c0 -> Node0x55fe4f0;
	Node0x55fe4f0 [shape=record, style = filled, fillcolor = green, label="{if.end.i:                                         \l  store i32 0, i32* %EOBRUN, align 4, !tbaa !25\l  %96 = load i32, i32* %BE.i, align 8, !tbaa !55\l  %97 = load i32, i32* %gather_statistics.i172, align 8, !tbaa !32\l  %tobool.i131 = icmp eq i32 %97, 0\l  %cmp.i132 = icmp ne i32 %96, 0\l  %or.cond.i = and i1 %cmp.i132, %tobool.i131\l  br i1 %or.cond.i, label %while.body.preheader.i, label %emit_eobrun.exit,\l... !prof !56\l|{<s0>T|<s1>F}}"];
	Node0x55fe4f0:s0 -> Node0x5603e60;
	Node0x55fe4f0:s1 -> Node0x5603f40;
	Node0x5603e60 [shape=record, style = filled, fillcolor = turquoise, label="{while.body.preheader.i:                           \l  %98 = load i8*, i8** %bit_buffer.i, align 8, !tbaa !57\l  br label %while.body.i\l}"];
	Node0x5603e60 -> Node0x5604140;
	Node0x5604140 [shape=record, style = filled, fillcolor = turquoise, label="{while.body.i:                                     \l  %99 = phi i32 [ %.pre.i, %emit_bits.exit.while.body_crit_edge.i ], [ 0,\l... %while.body.preheader.i ]\l  %bufstart.addr.0.i = phi i8* [ %incdec.ptr.i,\l... %emit_bits.exit.while.body_crit_edge.i ], [ %98, %while.body.preheader.i ]\l  %nbits.addr.0.i = phi i32 [ %dec.i, %emit_bits.exit.while.body_crit_edge.i\l... ], [ %96, %while.body.preheader.i ]\l  %tobool.i.i133 = icmp eq i32 %99, 0\l  br i1 %tobool.i.i133, label %if.end7.i.i, label %emit_bits.exit.i, !prof !54\l|{<s0>T|<s1>F}}"];
	Node0x5604140:s0 -> Node0x5604890;
	Node0x5604140:s1 -> Node0x56049a0;
	Node0x5604890 [shape=record, style = filled, fillcolor = turquoise, label="{if.end7.i.i:                                      \l  %100 = load i32, i32* %put_bits1.i188, align 8, !tbaa !35\l  %101 = load i8, i8* %bufstart.addr.0.i, align 1, !tbaa !14\l  %conv5.i = zext i8 %101 to i64\l  %and.i.i = and i64 %conv5.i, 1\l  %add.i.i = add i32 %100, 1\l  %sub8.i.i = sub i32 23, %100\l  %sh_prom9.i.i = zext i32 %sub8.i.i to i64\l  %shl10.i.i = shl i64 %and.i.i, %sh_prom9.i.i\l  %102 = load i64, i64* %put_buffer11.i206, align 8, !tbaa !43\l  %or.i.i = or i64 %shl10.i.i, %102\l  %cmp1267.i.i = icmp sgt i32 %add.i.i, 7\l  br i1 %cmp1267.i.i, label %while.body.i.i.preheader, label %while.end.i.i,\l... !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x5604890:s0 -> Node0x5605100;
	Node0x5604890:s1 -> Node0x5605220;
	Node0x5605100 [shape=record, style = filled, fillcolor = cyan, label="{while.body.i.i.preheader:                         \l  br label %while.body.i.i\l}"];
	Node0x5605100 -> Node0x5605390;
	Node0x5605390 [shape=record, style = filled, fillcolor = cyan, label="{while.body.i.i:                                   \l  %put_buffer.069.i.i = phi i64 [ %shl33.i.i, %if.end32.i.i ], [ %or.i.i,\l... %while.body.i.i.preheader ]\l  %put_bits.068.i.i = phi i32 [ %sub34.i.i, %if.end32.i.i ], [ %add.i.i,\l... %while.body.i.i.preheader ]\l  %shr66.i.i = lshr i64 %put_buffer.069.i.i, 16\l  %conv16.i.i = trunc i64 %shr66.i.i to i8\l  %103 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr.i.i = getelementptr inbounds i8, i8* %103, i64 1\l  store i8* %incdec.ptr.i.i, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 %conv16.i.i, i8* %103, align 1, !tbaa !14\l  %104 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec.i.i = add i64 %104, -1\l  store i64 %dec.i.i, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp17.i.i = icmp eq i64 %dec.i.i, 0\l  br i1 %cmp17.i.i, label %if.then19.i.i, label %if.end20.i.i, !prof !47\l|{<s0>T|<s1>F}}"];
	Node0x5605390:s0 -> Node0x55e2d00;
	Node0x5605390:s1 -> Node0x55e2de0;
	Node0x55e2d00 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i.i:                                    \l  %105 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %dest1.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %105, i64 0, i32 5\l  %106 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i, align 8, !tbaa !13\l  %empty_output_buffer.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %106, i64 0, i32 3\l  %107 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i, align 8, !tbaa !48\l  %call.i = tail call i32 %107(%struct.jpeg_compress_struct* %105) #3\l  %tobool.i135 = icmp eq i32 %call.i, 0\l  br i1 %tobool.i135, label %if.then.i, label %dump_buffer.exit, !prof !50\l|{<s0>T|<s1>F}}"];
	Node0x55e2d00:s0 -> Node0x5606c40;
	Node0x55e2d00:s1 -> Node0x5606d50;
	Node0x5606c40 [shape=record, style = filled, fillcolor = blue, label="{if.then.i:                                        \l  %108 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %108, i64 0, i32 0\l  %109 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align\l... 8, !tbaa !38\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %109, i64 0, i32 5\l  store i32 22, i32* %msg_code.i, align 8, !tbaa !39\l  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %109, i64 0, i32 0\l  %110 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !41\l  %111 = bitcast %struct.jpeg_compress_struct* %108 to\l... %struct.jpeg_common_struct*\l  tail call void %110(%struct.jpeg_common_struct* %111) #3\l  br label %dump_buffer.exit\l}"];
	Node0x5606c40 -> Node0x5606d50;
	Node0x5606d50 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit:                                 \l  %112 = bitcast %struct.jpeg_destination_mgr* %106 to \<2 x i64\>*\l  %113 = load \<2 x i64\>, \<2 x i64\>* %112, align 8, !tbaa !14\l  store \<2 x i64\> %113, \<2 x i64\>* %26, align 8, !tbaa !14\l  br label %if.end20.i.i\l}"];
	Node0x5606d50 -> Node0x55e2de0;
	Node0x55e2de0 [shape=record, style = filled, fillcolor = cyan, label="{if.end20.i.i:                                     \l  %conv15.i.i = and i64 %shr66.i.i, 255\l  %cmp21.i.i = icmp eq i64 %conv15.i.i, 255\l  br i1 %cmp21.i.i, label %if.then23.i.i, label %if.end32.i.i, !prof !51\l|{<s0>T|<s1>F}}"];
	Node0x55e2de0:s0 -> Node0x56076a0;
	Node0x55e2de0:s1 -> Node0x56054b0;
	Node0x56076a0 [shape=record, style = filled, fillcolor = blue, label="{if.then23.i.i:                                    \l  %114 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr25.i.i = getelementptr inbounds i8, i8* %114, i64 1\l  store i8* %incdec.ptr25.i.i, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 0, i8* %114, align 1, !tbaa !14\l  %115 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec27.i.i = add i64 %115, -1\l  store i64 %dec27.i.i, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp28.i.i = icmp eq i64 %dec27.i.i, 0\l  br i1 %cmp28.i.i, label %if.then30.i.i, label %if.end32.i.i, !prof !52\l|{<s0>T|<s1>F}}"];
	Node0x56076a0:s0 -> Node0x5607be0;
	Node0x56076a0:s1 -> Node0x56054b0;
	Node0x5607be0 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i.i:                                    \l  %116 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %dest1.i549 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %116, i64 0, i32 5\l  %117 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i549, align 8, !tbaa !13\l  %empty_output_buffer.i550 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %117, i64 0, i32 3\l  %118 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i550, align 8, !tbaa\l... !48\l  %call.i551 = tail call i32 %118(%struct.jpeg_compress_struct* %116) #3\l  %tobool.i552 = icmp eq i32 %call.i551, 0\l  br i1 %tobool.i552, label %if.then.i556, label %dump_buffer.exit561, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x5607be0:s0 -> Node0x5608180;
	Node0x5607be0:s1 -> Node0x5608290;
	Node0x5608180 [shape=record, style = filled, fillcolor = blue, label="{if.then.i556:                                     \l  %119 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i553 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %119, i64 0, i32 0\l  %120 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i553,\l... align 8, !tbaa !38\l  %msg_code.i554 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %120, i64 0, i32 5\l  store i32 22, i32* %msg_code.i554, align 8, !tbaa !39\l  %error_exit.i555 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %120, i64 0, i32 0\l  %121 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i555, align 8, !tbaa !41\l  %122 = bitcast %struct.jpeg_compress_struct* %119 to\l... %struct.jpeg_common_struct*\l  tail call void %121(%struct.jpeg_common_struct* %122) #3\l  br label %dump_buffer.exit561\l}"];
	Node0x5608180 -> Node0x5608290;
	Node0x5608290 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit561:                              \l  %123 = bitcast %struct.jpeg_destination_mgr* %117 to \<2 x i64\>*\l  %124 = load \<2 x i64\>, \<2 x i64\>* %123, align 8, !tbaa !14\l  store \<2 x i64\> %124, \<2 x i64\>* %27, align 8, !tbaa !14\l  br label %if.end32.i.i\l}"];
	Node0x5608290 -> Node0x56054b0;
	Node0x56054b0 [shape=record, style = filled, fillcolor = cyan, label="{if.end32.i.i:                                     \l  %shl33.i.i = shl i64 %put_buffer.069.i.i, 8\l  %sub34.i.i = add nsw i32 %put_bits.068.i.i, -8\l  %cmp12.i.i = icmp sgt i32 %sub34.i.i, 7\l  br i1 %cmp12.i.i, label %while.body.i.i, label %while.end.loopexit.i.i,\l... !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x56054b0:s0 -> Node0x5605390;
	Node0x56054b0:s1 -> Node0x5608c50;
	Node0x5608c50 [shape=record, style = filled, fillcolor = cyan, label="{while.end.loopexit.i.i:                           \l  %shl33.i.i.lcssa = phi i64 [ %shl33.i.i, %if.end32.i.i ]\l  %125 = and i32 %add.i.i, 7\l  br label %while.end.i.i\l}"];
	Node0x5608c50 -> Node0x5605220;
	Node0x5605220 [shape=record, style = filled, fillcolor = turquoise, label="{while.end.i.i:                                    \l  %put_buffer.0.lcssa.i.i = phi i64 [ %or.i.i, %if.end7.i.i ], [\l... %shl33.i.i.lcssa, %while.end.loopexit.i.i ]\l  %put_bits.0.lcssa.i.i = phi i32 [ %add.i.i, %if.end7.i.i ], [ %125,\l... %while.end.loopexit.i.i ]\l  store i64 %put_buffer.0.lcssa.i.i, i64* %put_buffer11.i206, align 8, !tbaa\l... !43\l  store i32 %put_bits.0.lcssa.i.i, i32* %put_bits1.i188, align 8, !tbaa !35\l  br label %emit_bits.exit.i\l}"];
	Node0x5605220 -> Node0x56049a0;
	Node0x56049a0 [shape=record, style = filled, fillcolor = turquoise, label="{emit_bits.exit.i:                                 \l  %dec.i = add i32 %nbits.addr.0.i, -1\l  %cmp.old.i = icmp eq i32 %dec.i, 0\l  br i1 %cmp.old.i, label %emit_eobrun.exit.loopexit, label\l... %emit_bits.exit.while.body_crit_edge.i, !prof !58\l|{<s0>T|<s1>F}}"];
	Node0x56049a0:s0 -> Node0x5609200;
	Node0x56049a0:s1 -> Node0x56042c0;
	Node0x56042c0 [shape=record, style = filled, fillcolor = turquoise, label="{emit_bits.exit.while.body_crit_edge.i:            \l  %incdec.ptr.i = getelementptr inbounds i8, i8* %bufstart.addr.0.i, i64 1\l  %.pre.i = load i32, i32* %gather_statistics.i172, align 8, !tbaa !32\l  br label %while.body.i\l}"];
	Node0x56042c0 -> Node0x5604140;
	Node0x5609200 [shape=record, style = filled, fillcolor = turquoise, label="{emit_eobrun.exit.loopexit:                        \l  br label %emit_eobrun.exit\l}"];
	Node0x5609200 -> Node0x5603f40;
	Node0x5603f40 [shape=record, style = filled, fillcolor = green, label="{emit_eobrun.exit:                                 \l  store i32 0, i32* %BE.i, align 8, !tbaa !55\l  br label %while.cond.preheader\l}"];
	Node0x5603f40 -> Node0x55d16d0;
	Node0x55d16d0 [shape=record, style = filled, fillcolor = yellow, label="{while.cond.preheader:                             \l  %cmp31809 = icmp sgt i32 %r.0812, 15\l  br i1 %cmp31809, label %while.body.preheader, label %while.cond34.preheader,\l... !prof !59\l|{<s0>T|<s1>F}}"];
	Node0x55d16d0:s0 -> Node0x5609530;
	Node0x55d16d0:s1 -> Node0x5609580;
	Node0x5609530 [shape=record, style = filled, fillcolor = skyblue, label="{while.body.preheader:                             \l  br label %while.body\l}"];
	Node0x5609530 -> Node0x5609720;
	Node0x5609770 [shape=record, style = filled, fillcolor = skyblue, label="{while.cond34.preheader.loopexit:                  \l  %126 = and i32 %r.0812, 15\l  br label %while.cond34.preheader\l}"];
	Node0x5609770 -> Node0x5609580;
	Node0x5609580 [shape=record, style = filled, fillcolor = yellow, label="{while.cond34.preheader:                           \l  %r.1.lcssa = phi i32 [ %r.0812, %while.cond.preheader ], [ %126,\l... %while.cond34.preheader.loopexit ]\l  br label %while.cond34\l}"];
	Node0x5609580 -> Node0x5609960;
	Node0x5609720 [shape=record, style = filled, fillcolor = skyblue, label="{while.body:                                       \l  %r.1810 = phi i32 [ %sub33, %emit_symbol.exit ], [ %r.0812,\l... %while.body.preheader ]\l  %127 = load i32, i32* %ac_tbl_no40, align 8, !tbaa !31\l  %128 = load i32, i32* %gather_statistics.i172, align 8, !tbaa !32\l  %tobool.i138 = icmp eq i32 %128, 0\l  %idxprom3.i = sext i32 %127 to i64\l  br i1 %tobool.i138, label %if.else.i, label %if.then.i140, !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x5609720:s0 -> Node0x55fda50;
	Node0x5609720:s1 -> Node0x55fdb30;
	Node0x55fdb30 [shape=record, style = filled, fillcolor = skyblue, label="{if.then.i140:                                     \l  %arrayidx.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom3.i\l  %129 = load i64*, i64** %arrayidx.i, align 8, !tbaa !17\l  %arrayidx2.i = getelementptr inbounds i64, i64* %129, i64 240\l  %130 = load i64, i64* %arrayidx2.i, align 8, !tbaa !34\l  %inc.i139 = add nsw i64 %130, 1\l  store i64 %inc.i139, i64* %arrayidx2.i, align 8, !tbaa !34\l  br label %emit_symbol.exit\l}"];
	Node0x55fdb30 -> Node0x5609ae0;
	Node0x55fda50 [shape=record, style = filled, fillcolor = skyblue, label="{if.else.i:                                        \l  %arrayidx4.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i\l  %131 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i,\l... align 8, !tbaa !17\l  %arrayidx6.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %131, i64 0, i32 0, i64 240\l  %132 = load i32, i32* %arrayidx6.i, align 4, !tbaa !20\l  %arrayidx8.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %131, i64 0, i32 1, i64 240\l  %133 = load i8, i8* %arrayidx8.i, align 1, !tbaa !14\l  %conv.i = sext i8 %133 to i32\l  %conv.i142 = zext i32 %132 to i64\l  %134 = load i32, i32* %put_bits1.i188, align 8, !tbaa !35\l  %cmp.i143 = icmp eq i8 %133, 0\l  br i1 %cmp.i143, label %if.end.i151, label %if.end7.i, !prof !36\l|{<s0>T|<s1>F}}"];
	Node0x55fda50:s0 -> Node0x560ae30;
	Node0x55fda50:s1 -> Node0x560af10;
	Node0x560ae30 [shape=record, style = filled, fillcolor = blue, label="{if.end.i151:                                      \l  %135 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i145 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %135, i64 0, i32 0\l  %136 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i145,\l... align 8, !tbaa !38\l  %msg_code.i146 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %136, i64 0, i32 5\l  store i32 39, i32* %msg_code.i146, align 8, !tbaa !39\l  %error_exit.i147 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %136, i64 0, i32 0\l  %137 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i147, align 8, !tbaa !41\l  %138 = bitcast %struct.jpeg_compress_struct* %135 to\l... %struct.jpeg_common_struct*\l  tail call void %137(%struct.jpeg_common_struct* %138) #3\l  %.pre815 = load i32, i32* %gather_statistics.i172, align 8, !tbaa !32\l  %tobool.i150 = icmp eq i32 %.pre815, 0\l  br i1 %tobool.i150, label %if.end7.i, label %emit_symbol.exit, !prof !42\l|{<s0>T|<s1>F}}"];
	Node0x560ae30:s0 -> Node0x560af10;
	Node0x560ae30:s1 -> Node0x5609ae0;
	Node0x560af10 [shape=record, style = filled, fillcolor = skyblue, label="{if.end7.i:                                        \l  %sh_prom.i = zext i32 %conv.i to i64\l  %shl.i152 = shl i64 1, %sh_prom.i\l  %sub.i = add i64 %shl.i152, 4294967295\l  %and.i = and i64 %sub.i, %conv.i142\l  %add.i = add i32 %134, %conv.i\l  %sub8.i = sub nsw i32 24, %add.i\l  %sh_prom9.i = zext i32 %sub8.i to i64\l  %shl10.i = shl i64 %and.i, %sh_prom9.i\l  %139 = load i64, i64* %put_buffer11.i206, align 8, !tbaa !43\l  %or.i = or i64 %139, %shl10.i\l  %cmp1267.i = icmp sgt i32 %add.i, 7\l  br i1 %cmp1267.i, label %while.body.i156.preheader, label %while.end.i157,\l... !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x560af10:s0 -> Node0x55e79d0;
	Node0x560af10:s1 -> Node0x55e7af0;
	Node0x55e79d0 [shape=record, style = filled, fillcolor = skyblue, label="{while.body.i156.preheader:                        \l  br label %while.body.i156\l}"];
	Node0x55e79d0 -> Node0x55e7c60;
	Node0x55e7c60 [shape=record, style = filled, fillcolor = skyblue, label="{while.body.i156:                                  \l  %put_buffer.069.i = phi i64 [ %shl33.i, %if.end32.i ], [ %or.i,\l... %while.body.i156.preheader ]\l  %put_bits.068.i = phi i32 [ %sub34.i, %if.end32.i ], [ %add.i,\l... %while.body.i156.preheader ]\l  %shr66.i = lshr i64 %put_buffer.069.i, 16\l  %conv16.i = trunc i64 %shr66.i to i8\l  %140 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr.i154 = getelementptr inbounds i8, i8* %140, i64 1\l  store i8* %incdec.ptr.i154, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 %conv16.i, i8* %140, align 1, !tbaa !14\l  %141 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec.i155 = add i64 %141, -1\l  store i64 %dec.i155, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp17.i = icmp eq i64 %dec.i155, 0\l  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i, !prof !47\l|{<s0>T|<s1>F}}"];
	Node0x55e7c60:s0 -> Node0x55e8650;
	Node0x55e7c60:s1 -> Node0x55e8730;
	Node0x55e8650 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i:                                      \l  %142 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %dest1.i563 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %142, i64 0, i32 5\l  %143 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i563, align 8, !tbaa !13\l  %empty_output_buffer.i564 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %143, i64 0, i32 3\l  %144 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i564, align 8, !tbaa\l... !48\l  %call.i565 = tail call i32 %144(%struct.jpeg_compress_struct* %142) #3\l  %tobool.i566 = icmp eq i32 %call.i565, 0\l  br i1 %tobool.i566, label %if.then.i570, label %dump_buffer.exit575, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x55e8650:s0 -> Node0x55e8d10;
	Node0x55e8650:s1 -> Node0x55e8e20;
	Node0x55e8d10 [shape=record, style = filled, fillcolor = blue, label="{if.then.i570:                                     \l  %145 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i567 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %145, i64 0, i32 0\l  %146 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i567,\l... align 8, !tbaa !38\l  %msg_code.i568 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %146, i64 0, i32 5\l  store i32 22, i32* %msg_code.i568, align 8, !tbaa !39\l  %error_exit.i569 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %146, i64 0, i32 0\l  %147 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i569, align 8, !tbaa !41\l  %148 = bitcast %struct.jpeg_compress_struct* %145 to\l... %struct.jpeg_common_struct*\l  tail call void %147(%struct.jpeg_common_struct* %148) #3\l  br label %dump_buffer.exit575\l}"];
	Node0x55e8d10 -> Node0x55e8e20;
	Node0x55e8e20 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit575:                              \l  %149 = bitcast %struct.jpeg_destination_mgr* %143 to \<2 x i64\>*\l  %150 = load \<2 x i64\>, \<2 x i64\>* %149, align 8, !tbaa !14\l  store \<2 x i64\> %150, \<2 x i64\>* %22, align 8, !tbaa !14\l  br label %if.end20.i\l}"];
	Node0x55e8e20 -> Node0x55e8730;
	Node0x55e8730 [shape=record, style = filled, fillcolor = skyblue, label="{if.end20.i:                                       \l  %conv15.i = and i64 %shr66.i, 255\l  %cmp21.i = icmp eq i64 %conv15.i, 255\l  br i1 %cmp21.i, label %if.then23.i, label %if.end32.i, !prof !51\l|{<s0>T|<s1>F}}"];
	Node0x55e8730:s0 -> Node0x55e9730;
	Node0x55e8730:s1 -> Node0x55e7d70;
	Node0x55e9730 [shape=record, style = filled, fillcolor = blue, label="{if.then23.i:                                      \l  %151 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr25.i = getelementptr inbounds i8, i8* %151, i64 1\l  store i8* %incdec.ptr25.i, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 0, i8* %151, align 1, !tbaa !14\l  %152 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec27.i = add i64 %152, -1\l  store i64 %dec27.i, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp28.i = icmp eq i64 %dec27.i, 0\l  br i1 %cmp28.i, label %if.then30.i, label %if.end32.i, !prof !52\l|{<s0>T|<s1>F}}"];
	Node0x55e9730:s0 -> Node0x55e9c30;
	Node0x55e9730:s1 -> Node0x55e7d70;
	Node0x55e9c30 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i:                                      \l  %153 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %dest1.i159 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %153, i64 0, i32 5\l  %154 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i159, align 8, !tbaa !13\l  %empty_output_buffer.i160 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %154, i64 0, i32 3\l  %155 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i160, align 8, !tbaa\l... !48\l  %call.i161 = tail call i32 %155(%struct.jpeg_compress_struct* %153) #3\l  %tobool.i162 = icmp eq i32 %call.i161, 0\l  br i1 %tobool.i162, label %if.then.i166, label %dump_buffer.exit171, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x55e9c30:s0 -> Node0x55ea210;
	Node0x55e9c30:s1 -> Node0x55ea320;
	Node0x55ea210 [shape=record, style = filled, fillcolor = blue, label="{if.then.i166:                                     \l  %156 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i163 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %156, i64 0, i32 0\l  %157 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i163,\l... align 8, !tbaa !38\l  %msg_code.i164 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %157, i64 0, i32 5\l  store i32 22, i32* %msg_code.i164, align 8, !tbaa !39\l  %error_exit.i165 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %157, i64 0, i32 0\l  %158 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i165, align 8, !tbaa !41\l  %159 = bitcast %struct.jpeg_compress_struct* %156 to\l... %struct.jpeg_common_struct*\l  tail call void %158(%struct.jpeg_common_struct* %159) #3\l  br label %dump_buffer.exit171\l}"];
	Node0x55ea210 -> Node0x55ea320;
	Node0x55ea320 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit171:                              \l  %160 = bitcast %struct.jpeg_destination_mgr* %154 to \<2 x i64\>*\l  %161 = load \<2 x i64\>, \<2 x i64\>* %160, align 8, !tbaa !14\l  store \<2 x i64\> %161, \<2 x i64\>* %23, align 8, !tbaa !14\l  br label %if.end32.i\l}"];
	Node0x55ea320 -> Node0x55e7d70;
	Node0x55e7d70 [shape=record, style = filled, fillcolor = skyblue, label="{if.end32.i:                                       \l  %shl33.i = shl i64 %put_buffer.069.i, 8\l  %sub34.i = add nsw i32 %put_bits.068.i, -8\l  %cmp12.i = icmp sgt i32 %sub34.i, 7\l  br i1 %cmp12.i, label %while.body.i156, label %while.end.loopexit.i, !prof\l... !44\l|{<s0>T|<s1>F}}"];
	Node0x55e7d70:s0 -> Node0x55e7c60;
	Node0x55e7d70:s1 -> Node0x55eacb0;
	Node0x55eacb0 [shape=record, style = filled, fillcolor = skyblue, label="{while.end.loopexit.i:                             \l  %shl33.i.lcssa = phi i64 [ %shl33.i, %if.end32.i ]\l  %162 = and i32 %add.i, 7\l  br label %while.end.i157\l}"];
	Node0x55eacb0 -> Node0x55e7af0;
	Node0x55e7af0 [shape=record, style = filled, fillcolor = skyblue, label="{while.end.i157:                                   \l  %put_buffer.0.lcssa.i = phi i64 [ %or.i, %if.end7.i ], [ %shl33.i.lcssa,\l... %while.end.loopexit.i ]\l  %put_bits.0.lcssa.i = phi i32 [ %add.i, %if.end7.i ], [ %162,\l... %while.end.loopexit.i ]\l  store i64 %put_buffer.0.lcssa.i, i64* %put_buffer11.i206, align 8, !tbaa !43\l  store i32 %put_bits.0.lcssa.i, i32* %put_bits1.i188, align 8, !tbaa !35\l  br label %emit_symbol.exit\l}"];
	Node0x55e7af0 -> Node0x5609ae0;
	Node0x5609ae0 [shape=record, style = filled, fillcolor = skyblue, label="{emit_symbol.exit:                                 \l  %sub33 = add nsw i32 %r.1810, -16\l  %cmp31 = icmp sgt i32 %sub33, 15\l  br i1 %cmp31, label %while.body, label %while.cond34.preheader.loopexit,\l... !prof !59\l|{<s0>T|<s1>F}}"];
	Node0x5609ae0:s0 -> Node0x5609720;
	Node0x5609ae0:s1 -> Node0x5609770;
	Node0x5609960 [shape=record, style = filled, fillcolor = yellow, label="{while.cond34:                                     \l  %nbits.0 = phi i32 [ %inc38, %while.cond34 ], [ 1, %while.cond34.preheader ]\l  %temp.1 = phi i32 [ %shr35, %while.cond34 ], [ %temp.0,\l... %while.cond34.preheader ]\l  %shr35 = ashr i32 %temp.1, 1\l  %tobool36 = icmp eq i32 %shr35, 0\l  %inc38 = add nuw nsw i32 %nbits.0, 1\l  br i1 %tobool36, label %while.end39, label %while.cond34, !prof !60\l|{<s0>T|<s1>F}}"];
	Node0x5609960:s0 -> Node0x55ebba0;
	Node0x5609960:s1 -> Node0x5609960;
	Node0x55ebba0 [shape=record, style = filled, fillcolor = yellow, label="{while.end39:                                      \l  %nbits.0.lcssa = phi i32 [ %nbits.0, %while.cond34 ]\l  %163 = load i32, i32* %ac_tbl_no40, align 8, !tbaa !31\l  %shl = shl i32 %r.1.lcssa, 4\l  %add = add nsw i32 %nbits.0.lcssa, %shl\l  %164 = load i32, i32* %gather_statistics.i172, align 8, !tbaa !32\l  %tobool.i173 = icmp eq i32 %164, 0\l  br i1 %tobool.i173, label %if.else.i184, label %emit_symbol.exit186.thread,\l... !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x55ebba0:s0 -> Node0x55ec010;
	Node0x55ebba0:s1 -> Node0x55ec120;
	Node0x55ec120 [shape=record, style = filled, fillcolor = green, label="{emit_symbol.exit186.thread:                       \l  %idxprom.i = sext i32 %add to i64\l  %idxprom1.i174 = sext i32 %163 to i64\l  %arrayidx.i175 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i174\l  %165 = load i64*, i64** %arrayidx.i175, align 8, !tbaa !17\l  %arrayidx2.i176 = getelementptr inbounds i64, i64* %165, i64 %idxprom.i\l  %166 = load i64, i64* %arrayidx2.i176, align 8, !tbaa !34\l  %inc.i177 = add nsw i64 %166, 1\l  store i64 %inc.i177, i64* %arrayidx2.i176, align 8, !tbaa !34\l  br label %for.inc\l}"];
	Node0x55ec120 -> Node0x55d1ed0;
	Node0x55ec010 [shape=record, style = filled, fillcolor = green, label="{if.else.i184:                                     \l  %idxprom3.i179 = sext i32 %163 to i64\l  %arrayidx4.i180 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i179\l  %167 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i180,\l... align 8, !tbaa !17\l  %idxprom5.i = sext i32 %add to i64\l  %arrayidx6.i181 = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %167, i64 0, i32 0, i64 %idxprom5.i\l  %168 = load i32, i32* %arrayidx6.i181, align 4, !tbaa !20\l  %arrayidx8.i182 = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %167, i64 0, i32 1, i64 %idxprom5.i\l  %169 = load i8, i8* %arrayidx8.i182, align 1, !tbaa !14\l  %conv.i183 = sext i8 %169 to i32\l  %conv.i187 = zext i32 %168 to i64\l  %170 = load i32, i32* %put_bits1.i188, align 8, !tbaa !35\l  %cmp.i189 = icmp eq i8 %169, 0\l  br i1 %cmp.i189, label %if.end.i197, label %if.end7.i209, !prof !36\l|{<s0>T|<s1>F}}"];
	Node0x55ec010:s0 -> Node0x5602120;
	Node0x55ec010:s1 -> Node0x5602200;
	Node0x5602120 [shape=record, style = filled, fillcolor = blue, label="{if.end.i197:                                      \l  %171 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i191 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %171, i64 0, i32 0\l  %172 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i191,\l... align 8, !tbaa !38\l  %msg_code.i192 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %172, i64 0, i32 5\l  store i32 39, i32* %msg_code.i192, align 8, !tbaa !39\l  %error_exit.i193 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %172, i64 0, i32 0\l  %173 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i193, align 8, !tbaa !41\l  %174 = bitcast %struct.jpeg_compress_struct* %171 to\l... %struct.jpeg_common_struct*\l  tail call void %173(%struct.jpeg_common_struct* %174) #3\l  %.pre816 = load i32, i32* %gather_statistics.i172, align 8, !tbaa !32\l  %tobool.i196 = icmp eq i32 %.pre816, 0\l  br i1 %tobool.i196, label %if.end7.i209, label %for.inc, !prof !42\l|{<s0>T|<s1>F}}"];
	Node0x5602120:s0 -> Node0x5602200;
	Node0x5602120:s1 -> Node0x55d1ed0;
	Node0x5602200 [shape=record, style = filled, fillcolor = green, label="{if.end7.i209:                                     \l  %sh_prom.i198 = zext i32 %conv.i183 to i64\l  %shl.i199 = shl i64 1, %sh_prom.i198\l  %sub.i200 = add i64 %shl.i199, 4294967295\l  %and.i201 = and i64 %sub.i200, %conv.i187\l  %add.i202 = add i32 %170, %conv.i183\l  %sub8.i203 = sub nsw i32 24, %add.i202\l  %sh_prom9.i204 = zext i32 %sub8.i203 to i64\l  %shl10.i205 = shl i64 %and.i201, %sh_prom9.i204\l  %175 = load i64, i64* %put_buffer11.i206, align 8, !tbaa !43\l  %or.i207 = or i64 %175, %shl10.i205\l  %cmp1267.i208 = icmp sgt i32 %add.i202, 7\l  br i1 %cmp1267.i208, label %while.body.i220.preheader, label\l... %emit_symbol.exit186.thread826, !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x5602200:s0 -> Node0x5603100;
	Node0x5602200:s1 -> Node0x5603220;
	Node0x5603100 [shape=record, style = filled, fillcolor = turquoise, label="{while.body.i220.preheader:                        \l  br label %while.body.i220\l}"];
	Node0x5603100 -> Node0x56033d0;
	Node0x5603220 [shape=record, style = filled, fillcolor = green, label="{emit_symbol.exit186.thread826:                    \l  store i64 %or.i207, i64* %put_buffer11.i206, align 8, !tbaa !43\l  store i32 %add.i202, i32* %put_bits1.i188, align 8, !tbaa !35\l  br label %if.end7.i269\l}"];
	Node0x5603220 -> Node0x5603580;
	Node0x56033d0 [shape=record, style = filled, fillcolor = green, label="{while.body.i220:                                  \l  %put_buffer.069.i213 = phi i64 [ %shl33.i230, %if.end32.i233 ], [ %or.i207,\l... %while.body.i220.preheader ]\l  %put_bits.068.i214 = phi i32 [ %sub34.i231, %if.end32.i233 ], [ %add.i202,\l... %while.body.i220.preheader ]\l  %shr66.i215 = lshr i64 %put_buffer.069.i213, 16\l  %conv16.i216 = trunc i64 %shr66.i215 to i8\l  %176 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr.i217 = getelementptr inbounds i8, i8* %176, i64 1\l  store i8* %incdec.ptr.i217, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 %conv16.i216, i8* %176, align 1, !tbaa !14\l  %177 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec.i218 = add i64 %177, -1\l  store i64 %dec.i218, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp17.i219 = icmp eq i64 %dec.i218, 0\l  br i1 %cmp17.i219, label %if.then19.i221, label %if.end20.i224, !prof !47\l|{<s0>T|<s1>F}}"];
	Node0x56033d0:s0 -> Node0x55ee0b0;
	Node0x56033d0:s1 -> Node0x55ee190;
	Node0x55ee0b0 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i221:                                   \l  %178 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %dest1.i577 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %178, i64 0, i32 5\l  %179 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i577, align 8, !tbaa !13\l  %empty_output_buffer.i578 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %179, i64 0, i32 3\l  %180 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i578, align 8, !tbaa\l... !48\l  %call.i579 = tail call i32 %180(%struct.jpeg_compress_struct* %178) #3\l  %tobool.i580 = icmp eq i32 %call.i579, 0\l  br i1 %tobool.i580, label %if.then.i584, label %dump_buffer.exit589, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x55ee0b0:s0 -> Node0x55ee750;
	Node0x55ee0b0:s1 -> Node0x55ee860;
	Node0x55ee750 [shape=record, style = filled, fillcolor = blue, label="{if.then.i584:                                     \l  %181 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i581 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %181, i64 0, i32 0\l  %182 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i581,\l... align 8, !tbaa !38\l  %msg_code.i582 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %182, i64 0, i32 5\l  store i32 22, i32* %msg_code.i582, align 8, !tbaa !39\l  %error_exit.i583 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %182, i64 0, i32 0\l  %183 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i583, align 8, !tbaa !41\l  %184 = bitcast %struct.jpeg_compress_struct* %181 to\l... %struct.jpeg_common_struct*\l  tail call void %183(%struct.jpeg_common_struct* %184) #3\l  br label %dump_buffer.exit589\l}"];
	Node0x55ee750 -> Node0x55ee860;
	Node0x55ee860 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit589:                              \l  %185 = bitcast %struct.jpeg_destination_mgr* %179 to \<2 x i64\>*\l  %186 = load \<2 x i64\>, \<2 x i64\>* %185, align 8, !tbaa !14\l  store \<2 x i64\> %186, \<2 x i64\>* %20, align 8, !tbaa !14\l  br label %if.end20.i224\l}"];
	Node0x55ee860 -> Node0x55ee190;
	Node0x55ee190 [shape=record, style = filled, fillcolor = green, label="{if.end20.i224:                                    \l  %conv15.i222 = and i64 %shr66.i215, 255\l  %cmp21.i223 = icmp eq i64 %conv15.i222, 255\l  br i1 %cmp21.i223, label %if.then23.i228, label %if.end32.i233, !prof !51\l|{<s0>T|<s1>F}}"];
	Node0x55ee190:s0 -> Node0x55ef1a0;
	Node0x55ee190:s1 -> Node0x56036a0;
	Node0x55ef1a0 [shape=record, style = filled, fillcolor = skyblue, label="{if.then23.i228:                                   \l  %187 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr25.i225 = getelementptr inbounds i8, i8* %187, i64 1\l  store i8* %incdec.ptr25.i225, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 0, i8* %187, align 1, !tbaa !14\l  %188 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec27.i226 = add i64 %188, -1\l  store i64 %dec27.i226, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp28.i227 = icmp eq i64 %dec27.i226, 0\l  br i1 %cmp28.i227, label %if.then30.i229, label %if.end32.i233, !prof !52\l|{<s0>T|<s1>F}}"];
	Node0x55ef1a0:s0 -> Node0x55ef6e0;
	Node0x55ef1a0:s1 -> Node0x56036a0;
	Node0x55ef6e0 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i229:                                   \l  %189 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %dest1.i240 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %189, i64 0, i32 5\l  %190 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i240, align 8, !tbaa !13\l  %empty_output_buffer.i241 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %190, i64 0, i32 3\l  %191 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i241, align 8, !tbaa\l... !48\l  %call.i242 = tail call i32 %191(%struct.jpeg_compress_struct* %189) #3\l  %tobool.i243 = icmp eq i32 %call.i242, 0\l  br i1 %tobool.i243, label %if.then.i247, label %dump_buffer.exit252, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x55ef6e0:s0 -> Node0x55f3c40;
	Node0x55ef6e0:s1 -> Node0x55f3d50;
	Node0x55f3c40 [shape=record, style = filled, fillcolor = blue, label="{if.then.i247:                                     \l  %192 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i244 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %192, i64 0, i32 0\l  %193 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i244,\l... align 8, !tbaa !38\l  %msg_code.i245 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %193, i64 0, i32 5\l  store i32 22, i32* %msg_code.i245, align 8, !tbaa !39\l  %error_exit.i246 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %193, i64 0, i32 0\l  %194 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i246, align 8, !tbaa !41\l  %195 = bitcast %struct.jpeg_compress_struct* %192 to\l... %struct.jpeg_common_struct*\l  tail call void %194(%struct.jpeg_common_struct* %195) #3\l  br label %dump_buffer.exit252\l}"];
	Node0x55f3c40 -> Node0x55f3d50;
	Node0x55f3d50 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit252:                              \l  %196 = bitcast %struct.jpeg_destination_mgr* %190 to \<2 x i64\>*\l  %197 = load \<2 x i64\>, \<2 x i64\>* %196, align 8, !tbaa !14\l  store \<2 x i64\> %197, \<2 x i64\>* %21, align 8, !tbaa !14\l  br label %if.end32.i233\l}"];
	Node0x55f3d50 -> Node0x56036a0;
	Node0x56036a0 [shape=record, style = filled, fillcolor = green, label="{if.end32.i233:                                    \l  %shl33.i230 = shl i64 %put_buffer.069.i213, 8\l  %sub34.i231 = add nsw i32 %put_bits.068.i214, -8\l  %cmp12.i232 = icmp sgt i32 %sub34.i231, 7\l  br i1 %cmp12.i232, label %while.body.i220, label %emit_symbol.exit186, !prof\l... !44\l|{<s0>T|<s1>F}}"];
	Node0x56036a0:s0 -> Node0x56033d0;
	Node0x56036a0:s1 -> Node0x55f4710;
	Node0x55f4710 [shape=record, style = filled, fillcolor = turquoise, label="{emit_symbol.exit186:                              \l  %shl33.i230.lcssa = phi i64 [ %shl33.i230, %if.end32.i233 ]\l  %198 = and i32 %add.i202, 7\l  %.pr.pre.pre = load i32, i32* %gather_statistics.i172, align 8, !tbaa !32\l  store i64 %shl33.i230.lcssa, i64* %put_buffer11.i206, align 8, !tbaa !43\l  store i32 %198, i32* %put_bits1.i188, align 8, !tbaa !35\l  %tobool.i256 = icmp eq i32 %.pr.pre.pre, 0\l  br i1 %tobool.i256, label %if.end7.i269, label %for.inc, !prof !61\l|{<s0>T|<s1>F}}"];
	Node0x55f4710:s0 -> Node0x5603580;
	Node0x55f4710:s1 -> Node0x55d1ed0;
	Node0x5603580 [shape=record, style = filled, fillcolor = green, label="{if.end7.i269:                                     \l  %199 = load i32, i32* %put_bits1.i188, align 8, !tbaa !35\l  %conv.i253 = zext i32 %temp2.0 to i64\l  %sh_prom.i258 = zext i32 %nbits.0.lcssa to i64\l  %shl.i259 = shl i64 1, %sh_prom.i258\l  %sub.i260 = add i64 %shl.i259, 4294967295\l  %and.i261 = and i64 %sub.i260, %conv.i253\l  %add.i262 = add i32 %199, %nbits.0.lcssa\l  %sub8.i263 = sub nsw i32 24, %add.i262\l  %sh_prom9.i264 = zext i32 %sub8.i263 to i64\l  %shl10.i265 = shl i64 %and.i261, %sh_prom9.i264\l  %200 = load i64, i64* %put_buffer11.i206, align 8, !tbaa !43\l  %or.i267 = or i64 %shl10.i265, %200\l  %cmp1267.i268 = icmp sgt i32 %add.i262, 7\l  br i1 %cmp1267.i268, label %while.body.i280.preheader, label\l... %while.end.i297, !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x5603580:s0 -> Node0x55f5300;
	Node0x5603580:s1 -> Node0x55f5420;
	Node0x55f5300 [shape=record, style = filled, fillcolor = turquoise, label="{while.body.i280.preheader:                        \l  br label %while.body.i280\l}"];
	Node0x55f5300 -> Node0x55f5590;
	Node0x55f5590 [shape=record, style = filled, fillcolor = green, label="{while.body.i280:                                  \l  %put_buffer.069.i273 = phi i64 [ %shl33.i290, %if.end32.i293 ], [ %or.i267,\l... %while.body.i280.preheader ]\l  %put_bits.068.i274 = phi i32 [ %sub34.i291, %if.end32.i293 ], [ %add.i262,\l... %while.body.i280.preheader ]\l  %shr66.i275 = lshr i64 %put_buffer.069.i273, 16\l  %conv16.i276 = trunc i64 %shr66.i275 to i8\l  %201 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr.i277 = getelementptr inbounds i8, i8* %201, i64 1\l  store i8* %incdec.ptr.i277, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 %conv16.i276, i8* %201, align 1, !tbaa !14\l  %202 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec.i278 = add i64 %202, -1\l  store i64 %dec.i278, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp17.i279 = icmp eq i64 %dec.i278, 0\l  br i1 %cmp17.i279, label %if.then19.i281, label %if.end20.i284, !prof !47\l|{<s0>T|<s1>F}}"];
	Node0x55f5590:s0 -> Node0x55f5fc0;
	Node0x55f5590:s1 -> Node0x55f60a0;
	Node0x55f5fc0 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i281:                                   \l  %203 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %dest1.i591 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %203, i64 0, i32 5\l  %204 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i591, align 8, !tbaa !13\l  %empty_output_buffer.i592 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %204, i64 0, i32 3\l  %205 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i592, align 8, !tbaa\l... !48\l  %call.i593 = tail call i32 %205(%struct.jpeg_compress_struct* %203) #3\l  %tobool.i594 = icmp eq i32 %call.i593, 0\l  br i1 %tobool.i594, label %if.then.i598, label %dump_buffer.exit603, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x55f5fc0:s0 -> Node0x55f6680;
	Node0x55f5fc0:s1 -> Node0x55f6790;
	Node0x55f6680 [shape=record, style = filled, fillcolor = blue, label="{if.then.i598:                                     \l  %206 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i595 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %206, i64 0, i32 0\l  %207 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i595,\l... align 8, !tbaa !38\l  %msg_code.i596 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %207, i64 0, i32 5\l  store i32 22, i32* %msg_code.i596, align 8, !tbaa !39\l  %error_exit.i597 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %207, i64 0, i32 0\l  %208 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i597, align 8, !tbaa !41\l  %209 = bitcast %struct.jpeg_compress_struct* %206 to\l... %struct.jpeg_common_struct*\l  tail call void %208(%struct.jpeg_common_struct* %209) #3\l  br label %dump_buffer.exit603\l}"];
	Node0x55f6680 -> Node0x55f6790;
	Node0x55f6790 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit603:                              \l  %210 = bitcast %struct.jpeg_destination_mgr* %204 to \<2 x i64\>*\l  %211 = load \<2 x i64\>, \<2 x i64\>* %210, align 8, !tbaa !14\l  store \<2 x i64\> %211, \<2 x i64\>* %18, align 8, !tbaa !14\l  br label %if.end20.i284\l}"];
	Node0x55f6790 -> Node0x55f60a0;
	Node0x55f60a0 [shape=record, style = filled, fillcolor = green, label="{if.end20.i284:                                    \l  %conv15.i282 = and i64 %shr66.i275, 255\l  %cmp21.i283 = icmp eq i64 %conv15.i282, 255\l  br i1 %cmp21.i283, label %if.then23.i288, label %if.end32.i293, !prof !51\l|{<s0>T|<s1>F}}"];
	Node0x55f60a0:s0 -> Node0x55f70d0;
	Node0x55f60a0:s1 -> Node0x55f56b0;
	Node0x55f70d0 [shape=record, style = filled, fillcolor = skyblue, label="{if.then23.i288:                                   \l  %212 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr25.i285 = getelementptr inbounds i8, i8* %212, i64 1\l  store i8* %incdec.ptr25.i285, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 0, i8* %212, align 1, !tbaa !14\l  %213 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec27.i286 = add i64 %213, -1\l  store i64 %dec27.i286, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp28.i287 = icmp eq i64 %dec27.i286, 0\l  br i1 %cmp28.i287, label %if.then30.i289, label %if.end32.i293, !prof !52\l|{<s0>T|<s1>F}}"];
	Node0x55f70d0:s0 -> Node0x55f7610;
	Node0x55f70d0:s1 -> Node0x55f56b0;
	Node0x55f7610 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i289:                                   \l  %214 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %dest1.i300 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %214, i64 0, i32 5\l  %215 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i300, align 8, !tbaa !13\l  %empty_output_buffer.i301 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %215, i64 0, i32 3\l  %216 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i301, align 8, !tbaa\l... !48\l  %call.i302 = tail call i32 %216(%struct.jpeg_compress_struct* %214) #3\l  %tobool.i303 = icmp eq i32 %call.i302, 0\l  br i1 %tobool.i303, label %if.then.i307, label %dump_buffer.exit312, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x55f7610:s0 -> Node0x5627000;
	Node0x55f7610:s1 -> Node0x5627110;
	Node0x5627000 [shape=record, style = filled, fillcolor = blue, label="{if.then.i307:                                     \l  %217 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i190, align 8, !tbaa !37\l  %err.i304 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %217, i64 0, i32 0\l  %218 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i304,\l... align 8, !tbaa !38\l  %msg_code.i305 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %218, i64 0, i32 5\l  store i32 22, i32* %msg_code.i305, align 8, !tbaa !39\l  %error_exit.i306 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %218, i64 0, i32 0\l  %219 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i306, align 8, !tbaa !41\l  %220 = bitcast %struct.jpeg_compress_struct* %217 to\l... %struct.jpeg_common_struct*\l  tail call void %219(%struct.jpeg_common_struct* %220) #3\l  br label %dump_buffer.exit312\l}"];
	Node0x5627000 -> Node0x5627110;
	Node0x5627110 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit312:                              \l  %221 = bitcast %struct.jpeg_destination_mgr* %215 to \<2 x i64\>*\l  %222 = load \<2 x i64\>, \<2 x i64\>* %221, align 8, !tbaa !14\l  store \<2 x i64\> %222, \<2 x i64\>* %19, align 8, !tbaa !14\l  br label %if.end32.i293\l}"];
	Node0x5627110 -> Node0x55f56b0;
	Node0x55f56b0 [shape=record, style = filled, fillcolor = green, label="{if.end32.i293:                                    \l  %shl33.i290 = shl i64 %put_buffer.069.i273, 8\l  %sub34.i291 = add nsw i32 %put_bits.068.i274, -8\l  %cmp12.i292 = icmp sgt i32 %sub34.i291, 7\l  br i1 %cmp12.i292, label %while.body.i280, label %while.end.loopexit.i294,\l... !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x55f56b0:s0 -> Node0x55f5590;
	Node0x55f56b0:s1 -> Node0x5627ad0;
	Node0x5627ad0 [shape=record, style = filled, fillcolor = turquoise, label="{while.end.loopexit.i294:                          \l  %shl33.i290.lcssa = phi i64 [ %shl33.i290, %if.end32.i293 ]\l  %223 = and i32 %add.i262, 7\l  br label %while.end.i297\l}"];
	Node0x5627ad0 -> Node0x55f5420;
	Node0x55f5420 [shape=record, style = filled, fillcolor = green, label="{while.end.i297:                                   \l  %put_buffer.0.lcssa.i295 = phi i64 [ %or.i267, %if.end7.i269 ], [\l... %shl33.i290.lcssa, %while.end.loopexit.i294 ]\l  %put_bits.0.lcssa.i296 = phi i32 [ %add.i262, %if.end7.i269 ], [ %223,\l... %while.end.loopexit.i294 ]\l  store i64 %put_buffer.0.lcssa.i295, i64* %put_buffer11.i206, align 8, !tbaa\l... !43\l  store i32 %put_bits.0.lcssa.i296, i32* %put_bits1.i188, align 8, !tbaa !35\l  br label %for.inc\l}"];
	Node0x55f5420 -> Node0x55d1ed0;
	Node0x55d1ed0 [shape=record, style = filled, fillcolor = red, label="{for.inc:                                          \l  %r.2 = phi i32 [ %inc, %if.then15 ], [ %inc25, %if.then24 ], [ 0,\l... %emit_symbol.exit186 ], [ 0, %while.end.i297 ], [ 0, %if.end.i197 ], [ 0,\l... %emit_symbol.exit186.thread ]\l  %cmp9 = icmp slt i64 %indvars.iv, %17\l  %indvars.iv.next = add nsw i64 %indvars.iv, 1\l  br i1 %cmp9, label %for.body, label %for.end, !prof !62\l|{<s0>T|<s1>F}}"];
	Node0x55d1ed0:s0 -> Node0x55d1d80;
	Node0x55d1ed0:s1 -> Node0x5628120;
	Node0x5628120 [shape=record, style = filled, fillcolor = yellow, label="{for.end:                                          \l  %r.2.lcssa = phi i32 [ %r.2, %for.inc ]\l  %cmp42 = icmp sgt i32 %r.2.lcssa, 0\l  br i1 %cmp42, label %if.then44, label %if.end52, !prof !63\l|{<s0>T|<s1>F}}"];
	Node0x5628120:s0 -> Node0x5628350;
	Node0x5628120:s1 -> Node0x55d0c50;
	Node0x5628350 [shape=record, style = filled, fillcolor = yellow, label="{if.then44:                                        \l  %EOBRUN45 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 9\l  %224 = load i32, i32* %EOBRUN45, align 4, !tbaa !25\l  %inc46 = add i32 %224, 1\l  store i32 %inc46, i32* %EOBRUN45, align 4, !tbaa !25\l  %cmp48 = icmp eq i32 %inc46, 32767\l  br i1 %cmp48, label %while.cond.i320.preheader, label %if.end52, !prof !64\l|{<s0>T|<s1>F}}"];
	Node0x5628350:s0 -> Node0x5628810;
	Node0x5628350:s1 -> Node0x55d0c50;
	Node0x5628810 [shape=record, style = filled, fillcolor = blue, label="{while.cond.i320.preheader:                        \l  br label %while.cond.i320\l}"];
	Node0x5628810 -> Node0x5628af0;
	Node0x5628af0 [shape=record, style = filled, fillcolor = skyblue, label="{while.cond.i320:                                  \l  %temp.0.i315 = phi i32 [ %shr.i317, %while.cond.i320 ], [ 32767,\l... %while.cond.i320.preheader ]\l  %nbits.0.i316 = phi i32 [ %inc.i319, %while.cond.i320 ], [ 0,\l... %while.cond.i320.preheader ]\l  %shr.i317 = ashr i32 %temp.0.i315, 1\l  %tobool.i318 = icmp eq i32 %shr.i317, 0\l  %inc.i319 = add nuw nsw i32 %nbits.0.i316, 1\l  br i1 %tobool.i318, label %while.end.i325, label %while.cond.i320, !prof !30\l|{<s0>T|<s1>F}}"];
	Node0x5628af0:s0 -> Node0x5629020;
	Node0x5628af0:s1 -> Node0x5628af0;
	Node0x5629020 [shape=record, style = filled, fillcolor = blue, label="{while.end.i325:                                   \l  %nbits.0.i316.lcssa = phi i32 [ %nbits.0.i316, %while.cond.i320 ]\l  %ac_tbl_no.i321 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 8\l  %225 = load i32, i32* %ac_tbl_no.i321, align 8, !tbaa !31\l  %shl.i322 = shl i32 %nbits.0.i316.lcssa, 4\l  %gather_statistics.i.i323 = getelementptr inbounds\l... %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 1\l  %226 = load i32, i32* %gather_statistics.i.i323, align 8, !tbaa !32\l  %tobool.i.i324 = icmp eq i32 %226, 0\l  br i1 %tobool.i.i324, label %if.else.i.i338, label %if.then.i.i331, !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x5629020:s0 -> Node0x5629ae0;
	Node0x5629020:s1 -> Node0x5629bc0;
	Node0x5629bc0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i.i331:                                   \l  %idxprom.i.i326 = sext i32 %shl.i322 to i64\l  %idxprom1.i.i327 = sext i32 %225 to i64\l  %arrayidx.i.i328 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i.i327\l  %227 = load i64*, i64** %arrayidx.i.i328, align 8, !tbaa !17\l  %arrayidx2.i.i329 = getelementptr inbounds i64, i64* %227, i64\l... %idxprom.i.i326\l  %228 = load i64, i64* %arrayidx2.i.i329, align 8, !tbaa !34\l  %inc.i.i330 = add nsw i64 %228, 1\l  store i64 %inc.i.i330, i64* %arrayidx2.i.i329, align 8, !tbaa !34\l  br label %emit_symbol.exit.i340\l}"];
	Node0x5629bc0 -> Node0x55b2e00;
	Node0x5629ae0 [shape=record, style = filled, fillcolor = blue, label="{if.else.i.i338:                                   \l  %idxprom3.i.i332 = sext i32 %225 to i64\l  %arrayidx4.i.i333 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i.i332\l  %229 = load %struct.c_derived_tbl*, %struct.c_derived_tbl**\l... %arrayidx4.i.i333, align 8, !tbaa !17\l  %idxprom5.i.i334 = sext i32 %shl.i322 to i64\l  %arrayidx6.i.i335 = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %229, i64 0, i32 0, i64 %idxprom5.i.i334\l  %230 = load i32, i32* %arrayidx6.i.i335, align 4, !tbaa !20\l  %arrayidx8.i.i336 = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %229, i64 0, i32 1, i64 %idxprom5.i.i334\l  %231 = load i8, i8* %arrayidx8.i.i336, align 1, !tbaa !14\l  %conv.i.i337 = sext i8 %231 to i32\l  %conv.i604 = zext i32 %230 to i64\l  %put_bits1.i605 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 5\l  %232 = load i32, i32* %put_bits1.i605, align 8, !tbaa !35\l  %cmp.i606 = icmp eq i8 %231, 0\l  br i1 %cmp.i606, label %if.end.i614, label %if.end7.i626, !prof !36\l|{<s0>T|<s1>F}}"];
	Node0x5629ae0:s0 -> Node0x562aaf0;
	Node0x5629ae0:s1 -> Node0x562abd0;
	Node0x562aaf0 [shape=record, style = filled, fillcolor = blue, label="{if.end.i614:                                      \l  %cinfo.i607 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 6\l  %233 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i607, align 8, !tbaa !37\l  %err.i608 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %233, i64 0, i32 0\l  %234 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i608,\l... align 8, !tbaa !38\l  %msg_code.i609 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %234, i64 0, i32 5\l  store i32 39, i32* %msg_code.i609, align 8, !tbaa !39\l  %error_exit.i610 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %234, i64 0, i32 0\l  %235 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i610, align 8, !tbaa !41\l  %236 = bitcast %struct.jpeg_compress_struct* %233 to\l... %struct.jpeg_common_struct*\l  tail call void %235(%struct.jpeg_common_struct* %236) #3\l  %.pre818 = load i32, i32* %gather_statistics.i.i323, align 8, !tbaa !32\l  %tobool.i613 = icmp eq i32 %.pre818, 0\l  br i1 %tobool.i613, label %if.end7.i626, label %emit_symbol.exit.i340, !prof\l... !42\l|{<s0>T|<s1>F}}"];
	Node0x562aaf0:s0 -> Node0x562abd0;
	Node0x562aaf0:s1 -> Node0x55b2e00;
	Node0x562abd0 [shape=record, style = filled, fillcolor = blue, label="{if.end7.i626:                                     \l  %sh_prom.i615 = zext i32 %conv.i.i337 to i64\l  %shl.i616 = shl i64 1, %sh_prom.i615\l  %sub.i617 = add i64 %shl.i616, 4294967295\l  %and.i618 = and i64 %sub.i617, %conv.i604\l  %add.i619 = add i32 %232, %conv.i.i337\l  %sub8.i620 = sub nsw i32 24, %add.i619\l  %sh_prom9.i621 = zext i32 %sub8.i620 to i64\l  %shl10.i622 = shl i64 %and.i618, %sh_prom9.i621\l  %put_buffer11.i623 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 4\l  %237 = load i64, i64* %put_buffer11.i623, align 8, !tbaa !43\l  %or.i624 = or i64 %237, %shl10.i622\l  %cmp1267.i625 = icmp sgt i32 %add.i619, 7\l  br i1 %cmp1267.i625, label %while.body.i637.preheader, label\l... %while.end.i654, !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x562abd0:s0 -> Node0x562bc50;
	Node0x562abd0:s1 -> Node0x562bd30;
	Node0x562bc50 [shape=record, style = filled, fillcolor = blue, label="{while.body.i637.preheader:                        \l  %cinfo.i778 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 6\l  %238 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %239 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  br label %while.body.i637\l}"];
	Node0x562bc50 -> Node0x562bfa0;
	Node0x562bfa0 [shape=record, style = filled, fillcolor = blue, label="{while.body.i637:                                  \l  %put_buffer.069.i630 = phi i64 [ %shl33.i647, %if.end32.i650 ], [ %or.i624,\l... %while.body.i637.preheader ]\l  %put_bits.068.i631 = phi i32 [ %sub34.i648, %if.end32.i650 ], [ %add.i619,\l... %while.body.i637.preheader ]\l  %shr66.i632 = lshr i64 %put_buffer.069.i630, 16\l  %conv16.i633 = trunc i64 %shr66.i632 to i8\l  %240 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr.i634 = getelementptr inbounds i8, i8* %240, i64 1\l  store i8* %incdec.ptr.i634, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 %conv16.i633, i8* %240, align 1, !tbaa !14\l  %241 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec.i635 = add i64 %241, -1\l  store i64 %dec.i635, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp17.i636 = icmp eq i64 %dec.i635, 0\l  br i1 %cmp17.i636, label %if.then19.i638, label %if.end20.i641, !prof !47\l|{<s0>T|<s1>F}}"];
	Node0x562bfa0:s0 -> Node0x562ca30;
	Node0x562bfa0:s1 -> Node0x562cb10;
	Node0x562ca30 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i638:                                   \l  %242 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i778, align 8, !tbaa !37\l  %dest1.i779 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %242, i64 0, i32 5\l  %243 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i779, align 8, !tbaa !13\l  %empty_output_buffer.i780 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %243, i64 0, i32 3\l  %244 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i780, align 8, !tbaa\l... !48\l  %call.i781 = tail call i32 %244(%struct.jpeg_compress_struct* %242) #3\l  %tobool.i782 = icmp eq i32 %call.i781, 0\l  br i1 %tobool.i782, label %if.then.i786, label %dump_buffer.exit791, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x562ca30:s0 -> Node0x562d0f0;
	Node0x562ca30:s1 -> Node0x562d200;
	Node0x562d0f0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i786:                                     \l  %245 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i778, align 8, !tbaa !37\l  %err.i783 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %245, i64 0, i32 0\l  %246 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i783,\l... align 8, !tbaa !38\l  %msg_code.i784 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %246, i64 0, i32 5\l  store i32 22, i32* %msg_code.i784, align 8, !tbaa !39\l  %error_exit.i785 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %246, i64 0, i32 0\l  %247 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i785, align 8, !tbaa !41\l  %248 = bitcast %struct.jpeg_compress_struct* %245 to\l... %struct.jpeg_common_struct*\l  tail call void %247(%struct.jpeg_common_struct* %248) #3\l  br label %dump_buffer.exit791\l}"];
	Node0x562d0f0 -> Node0x562d200;
	Node0x562d200 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit791:                              \l  %249 = bitcast %struct.jpeg_destination_mgr* %243 to \<2 x i64\>*\l  %250 = load \<2 x i64\>, \<2 x i64\>* %249, align 8, !tbaa !14\l  store \<2 x i64\> %250, \<2 x i64\>* %238, align 8, !tbaa !14\l  br label %if.end20.i641\l}"];
	Node0x562d200 -> Node0x562cb10;
	Node0x562cb10 [shape=record, style = filled, fillcolor = blue, label="{if.end20.i641:                                    \l  %conv15.i639 = and i64 %shr66.i632, 255\l  %cmp21.i640 = icmp eq i64 %conv15.i639, 255\l  br i1 %cmp21.i640, label %if.then23.i645, label %if.end32.i650, !prof !51\l|{<s0>T|<s1>F}}"];
	Node0x562cb10:s0 -> Node0x562db40;
	Node0x562cb10:s1 -> Node0x562c120;
	Node0x562db40 [shape=record, style = filled, fillcolor = blue, label="{if.then23.i645:                                   \l  %251 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr25.i642 = getelementptr inbounds i8, i8* %251, i64 1\l  store i8* %incdec.ptr25.i642, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 0, i8* %251, align 1, !tbaa !14\l  %252 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec27.i643 = add i64 %252, -1\l  store i64 %dec27.i643, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp28.i644 = icmp eq i64 %dec27.i643, 0\l  br i1 %cmp28.i644, label %if.then30.i646, label %if.end32.i650, !prof !52\l|{<s0>T|<s1>F}}"];
	Node0x562db40:s0 -> Node0x562e080;
	Node0x562db40:s1 -> Node0x562c120;
	Node0x562e080 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i646:                                   \l  %253 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i778, align 8, !tbaa !37\l  %dest1.i657 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %253, i64 0, i32 5\l  %254 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i657, align 8, !tbaa !13\l  %empty_output_buffer.i658 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %254, i64 0, i32 3\l  %255 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i658, align 8, !tbaa\l... !48\l  %call.i659 = tail call i32 %255(%struct.jpeg_compress_struct* %253) #3\l  %tobool.i660 = icmp eq i32 %call.i659, 0\l  br i1 %tobool.i660, label %if.then.i664, label %dump_buffer.exit669, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x562e080:s0 -> Node0x562e620;
	Node0x562e080:s1 -> Node0x562e730;
	Node0x562e620 [shape=record, style = filled, fillcolor = blue, label="{if.then.i664:                                     \l  %256 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i778, align 8, !tbaa !37\l  %err.i661 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %256, i64 0, i32 0\l  %257 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i661,\l... align 8, !tbaa !38\l  %msg_code.i662 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %257, i64 0, i32 5\l  store i32 22, i32* %msg_code.i662, align 8, !tbaa !39\l  %error_exit.i663 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %257, i64 0, i32 0\l  %258 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i663, align 8, !tbaa !41\l  %259 = bitcast %struct.jpeg_compress_struct* %256 to\l... %struct.jpeg_common_struct*\l  tail call void %258(%struct.jpeg_common_struct* %259) #3\l  br label %dump_buffer.exit669\l}"];
	Node0x562e620 -> Node0x562e730;
	Node0x562e730 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit669:                              \l  %260 = bitcast %struct.jpeg_destination_mgr* %254 to \<2 x i64\>*\l  %261 = load \<2 x i64\>, \<2 x i64\>* %260, align 8, !tbaa !14\l  store \<2 x i64\> %261, \<2 x i64\>* %239, align 8, !tbaa !14\l  br label %if.end32.i650\l}"];
	Node0x562e730 -> Node0x562c120;
	Node0x562c120 [shape=record, style = filled, fillcolor = blue, label="{if.end32.i650:                                    \l  %shl33.i647 = shl i64 %put_buffer.069.i630, 8\l  %sub34.i648 = add nsw i32 %put_bits.068.i631, -8\l  %cmp12.i649 = icmp sgt i32 %sub34.i648, 7\l  br i1 %cmp12.i649, label %while.body.i637, label %while.end.loopexit.i651,\l... !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x562c120:s0 -> Node0x562bfa0;
	Node0x562c120:s1 -> Node0x562f930;
	Node0x562f930 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit.i651:                          \l  %shl33.i647.lcssa = phi i64 [ %shl33.i647, %if.end32.i650 ]\l  %262 = and i32 %add.i619, 7\l  br label %while.end.i654\l}"];
	Node0x562f930 -> Node0x562bd30;
	Node0x562bd30 [shape=record, style = filled, fillcolor = blue, label="{while.end.i654:                                   \l  %put_buffer.0.lcssa.i652 = phi i64 [ %or.i624, %if.end7.i626 ], [\l... %shl33.i647.lcssa, %while.end.loopexit.i651 ]\l  %put_bits.0.lcssa.i653 = phi i32 [ %add.i619, %if.end7.i626 ], [ %262,\l... %while.end.loopexit.i651 ]\l  store i64 %put_buffer.0.lcssa.i652, i64* %put_buffer11.i623, align 8, !tbaa\l... !43\l  store i32 %put_bits.0.lcssa.i653, i32* %put_bits1.i605, align 8, !tbaa !35\l  br label %emit_symbol.exit.i340\l}"];
	Node0x562bd30 -> Node0x55b2e00;
	Node0x55b2e00 [shape=record, style = filled, fillcolor = blue, label="{emit_symbol.exit.i340:                            \l  %tobool2.i339 = icmp eq i32 %nbits.0.i316.lcssa, 0\l  br i1 %tobool2.i339, label %if.end.i344, label %if.end.i680, !prof !53\l|{<s0>T|<s1>F}}"];
	Node0x55b2e00:s0 -> Node0x562fe00;
	Node0x55b2e00:s1 -> Node0x562fe80;
	Node0x562fe80 [shape=record, style = filled, fillcolor = blue, label="{if.end.i680:                                      \l  %put_bits1.i671 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 5\l  %263 = load i32, i32* %gather_statistics.i.i323, align 8, !tbaa !32\l  %tobool.i679 = icmp eq i32 %263, 0\l  br i1 %tobool.i679, label %if.end7.i692, label %if.end.i344, !prof !54\l|{<s0>T|<s1>F}}"];
	Node0x562fe80:s0 -> Node0x5630720;
	Node0x562fe80:s1 -> Node0x562fe00;
	Node0x5630720 [shape=record, style = filled, fillcolor = blue, label="{if.end7.i692:                                     \l  %264 = load i32, i32* %put_bits1.i671, align 8, !tbaa !35\l  %265 = load i32, i32* %EOBRUN45, align 4, !tbaa !25\l  %conv.i670 = zext i32 %265 to i64\l  %sh_prom.i681 = zext i32 %nbits.0.i316.lcssa to i64\l  %shl.i682 = shl i64 1, %sh_prom.i681\l  %sub.i683 = add i64 %shl.i682, 4294967295\l  %and.i684 = and i64 %conv.i670, %sub.i683\l  %add.i685 = add i32 %264, %nbits.0.i316.lcssa\l  %sub8.i686 = sub nsw i32 24, %add.i685\l  %sh_prom9.i687 = zext i32 %sub8.i686 to i64\l  %shl10.i688 = shl i64 %and.i684, %sh_prom9.i687\l  %put_buffer11.i689 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 4\l  %266 = load i64, i64* %put_buffer11.i689, align 8, !tbaa !43\l  %or.i690 = or i64 %shl10.i688, %266\l  %cmp1267.i691 = icmp sgt i32 %add.i685, 7\l  br i1 %cmp1267.i691, label %while.body.i703.preheader, label\l... %while.end.i720, !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x5630720:s0 -> Node0x5631180;
	Node0x5630720:s1 -> Node0x5631260;
	Node0x5631180 [shape=record, style = filled, fillcolor = blue, label="{while.body.i703.preheader:                        \l  %cinfo.i792 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 6\l  %267 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %268 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  br label %while.body.i703\l}"];
	Node0x5631180 -> Node0x56314d0;
	Node0x56314d0 [shape=record, style = filled, fillcolor = blue, label="{while.body.i703:                                  \l  %put_buffer.069.i696 = phi i64 [ %shl33.i713, %if.end32.i716 ], [ %or.i690,\l... %while.body.i703.preheader ]\l  %put_bits.068.i697 = phi i32 [ %sub34.i714, %if.end32.i716 ], [ %add.i685,\l... %while.body.i703.preheader ]\l  %shr66.i698 = lshr i64 %put_buffer.069.i696, 16\l  %conv16.i699 = trunc i64 %shr66.i698 to i8\l  %269 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr.i700 = getelementptr inbounds i8, i8* %269, i64 1\l  store i8* %incdec.ptr.i700, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 %conv16.i699, i8* %269, align 1, !tbaa !14\l  %270 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec.i701 = add i64 %270, -1\l  store i64 %dec.i701, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp17.i702 = icmp eq i64 %dec.i701, 0\l  br i1 %cmp17.i702, label %if.then19.i704, label %if.end20.i707, !prof !47\l|{<s0>T|<s1>F}}"];
	Node0x56314d0:s0 -> Node0x5631f60;
	Node0x56314d0:s1 -> Node0x5632040;
	Node0x5631f60 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i704:                                   \l  %271 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i792, align 8, !tbaa !37\l  %dest1.i793 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %271, i64 0, i32 5\l  %272 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i793, align 8, !tbaa !13\l  %empty_output_buffer.i794 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %272, i64 0, i32 3\l  %273 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i794, align 8, !tbaa\l... !48\l  %call.i795 = tail call i32 %273(%struct.jpeg_compress_struct* %271) #3\l  %tobool.i796 = icmp eq i32 %call.i795, 0\l  br i1 %tobool.i796, label %if.then.i800, label %dump_buffer.exit805, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x5631f60:s0 -> Node0x56325e0;
	Node0x5631f60:s1 -> Node0x56326f0;
	Node0x56325e0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i800:                                     \l  %274 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i792, align 8, !tbaa !37\l  %err.i797 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %274, i64 0, i32 0\l  %275 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i797,\l... align 8, !tbaa !38\l  %msg_code.i798 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %275, i64 0, i32 5\l  store i32 22, i32* %msg_code.i798, align 8, !tbaa !39\l  %error_exit.i799 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %275, i64 0, i32 0\l  %276 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i799, align 8, !tbaa !41\l  %277 = bitcast %struct.jpeg_compress_struct* %274 to\l... %struct.jpeg_common_struct*\l  tail call void %276(%struct.jpeg_common_struct* %277) #3\l  br label %dump_buffer.exit805\l}"];
	Node0x56325e0 -> Node0x56326f0;
	Node0x56326f0 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit805:                              \l  %278 = bitcast %struct.jpeg_destination_mgr* %272 to \<2 x i64\>*\l  %279 = load \<2 x i64\>, \<2 x i64\>* %278, align 8, !tbaa !14\l  store \<2 x i64\> %279, \<2 x i64\>* %267, align 8, !tbaa !14\l  br label %if.end20.i707\l}"];
	Node0x56326f0 -> Node0x5632040;
	Node0x5632040 [shape=record, style = filled, fillcolor = blue, label="{if.end20.i707:                                    \l  %conv15.i705 = and i64 %shr66.i698, 255\l  %cmp21.i706 = icmp eq i64 %conv15.i705, 255\l  br i1 %cmp21.i706, label %if.then23.i711, label %if.end32.i716, !prof !51\l|{<s0>T|<s1>F}}"];
	Node0x5632040:s0 -> Node0x5633030;
	Node0x5632040:s1 -> Node0x5631650;
	Node0x5633030 [shape=record, style = filled, fillcolor = blue, label="{if.then23.i711:                                   \l  %280 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr25.i708 = getelementptr inbounds i8, i8* %280, i64 1\l  store i8* %incdec.ptr25.i708, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 0, i8* %280, align 1, !tbaa !14\l  %281 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec27.i709 = add i64 %281, -1\l  store i64 %dec27.i709, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp28.i710 = icmp eq i64 %dec27.i709, 0\l  br i1 %cmp28.i710, label %if.then30.i712, label %if.end32.i716, !prof !52\l|{<s0>T|<s1>F}}"];
	Node0x5633030:s0 -> Node0x5633570;
	Node0x5633030:s1 -> Node0x5631650;
	Node0x5633570 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i712:                                   \l  %282 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i792, align 8, !tbaa !37\l  %dest1.i723 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %282, i64 0, i32 5\l  %283 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i723, align 8, !tbaa !13\l  %empty_output_buffer.i724 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %283, i64 0, i32 3\l  %284 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i724, align 8, !tbaa\l... !48\l  %call.i725 = tail call i32 %284(%struct.jpeg_compress_struct* %282) #3\l  %tobool.i726 = icmp eq i32 %call.i725, 0\l  br i1 %tobool.i726, label %if.then.i730, label %dump_buffer.exit735, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x5633570:s0 -> Node0x55d6000;
	Node0x5633570:s1 -> Node0x55d6110;
	Node0x55d6000 [shape=record, style = filled, fillcolor = blue, label="{if.then.i730:                                     \l  %285 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i792, align 8, !tbaa !37\l  %err.i727 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %285, i64 0, i32 0\l  %286 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i727,\l... align 8, !tbaa !38\l  %msg_code.i728 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %286, i64 0, i32 5\l  store i32 22, i32* %msg_code.i728, align 8, !tbaa !39\l  %error_exit.i729 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %286, i64 0, i32 0\l  %287 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i729, align 8, !tbaa !41\l  %288 = bitcast %struct.jpeg_compress_struct* %285 to\l... %struct.jpeg_common_struct*\l  tail call void %287(%struct.jpeg_common_struct* %288) #3\l  br label %dump_buffer.exit735\l}"];
	Node0x55d6000 -> Node0x55d6110;
	Node0x55d6110 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit735:                              \l  %289 = bitcast %struct.jpeg_destination_mgr* %283 to \<2 x i64\>*\l  %290 = load \<2 x i64\>, \<2 x i64\>* %289, align 8, !tbaa !14\l  store \<2 x i64\> %290, \<2 x i64\>* %268, align 8, !tbaa !14\l  br label %if.end32.i716\l}"];
	Node0x55d6110 -> Node0x5631650;
	Node0x5631650 [shape=record, style = filled, fillcolor = blue, label="{if.end32.i716:                                    \l  %shl33.i713 = shl i64 %put_buffer.069.i696, 8\l  %sub34.i714 = add nsw i32 %put_bits.068.i697, -8\l  %cmp12.i715 = icmp sgt i32 %sub34.i714, 7\l  br i1 %cmp12.i715, label %while.body.i703, label %while.end.loopexit.i717,\l... !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x5631650:s0 -> Node0x56314d0;
	Node0x5631650:s1 -> Node0x56345e0;
	Node0x56345e0 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit.i717:                          \l  %shl33.i713.lcssa = phi i64 [ %shl33.i713, %if.end32.i716 ]\l  %291 = and i32 %add.i685, 7\l  br label %while.end.i720\l}"];
	Node0x56345e0 -> Node0x5631260;
	Node0x5631260 [shape=record, style = filled, fillcolor = blue, label="{while.end.i720:                                   \l  %put_buffer.0.lcssa.i718 = phi i64 [ %or.i690, %if.end7.i692 ], [\l... %shl33.i713.lcssa, %while.end.loopexit.i717 ]\l  %put_bits.0.lcssa.i719 = phi i32 [ %add.i685, %if.end7.i692 ], [ %291,\l... %while.end.loopexit.i717 ]\l  store i64 %put_buffer.0.lcssa.i718, i64* %put_buffer11.i689, align 8, !tbaa\l... !43\l  store i32 %put_bits.0.lcssa.i719, i32* %put_bits1.i671, align 8, !tbaa !35\l  br label %if.end.i344\l}"];
	Node0x5631260 -> Node0x562fe00;
	Node0x562fe00 [shape=record, style = filled, fillcolor = blue, label="{if.end.i344:                                      \l  store i32 0, i32* %EOBRUN45, align 4, !tbaa !25\l  %BE.i343 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 10\l  %292 = load i32, i32* %BE.i343, align 8, !tbaa !55\l  %293 = load i32, i32* %gather_statistics.i.i323, align 8, !tbaa !32\l  %tobool.i348 = icmp eq i32 %293, 0\l  %cmp.i349 = icmp ne i32 %292, 0\l  %or.cond.i350 = and i1 %cmp.i349, %tobool.i348\l  br i1 %or.cond.i350, label %while.body.preheader.i355, label\l... %emit_eobrun.exit346, !prof !56\l|{<s0>T|<s1>F}}"];
	Node0x562fe00:s0 -> Node0x5634dc0;
	Node0x562fe00:s1 -> Node0x5634ea0;
	Node0x5634dc0 [shape=record, style = filled, fillcolor = blue, label="{while.body.preheader.i355:                        \l  %bit_buffer.i342 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 11\l  %294 = load i8*, i8** %bit_buffer.i342, align 8, !tbaa !57\l  %put_bits1.i.i351 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 5\l  %put_buffer11.i.i352 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 4\l  %cinfo.i402 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 6\l  %295 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %296 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  br label %while.body.i359\l}"];
	Node0x5634dc0 -> Node0x5635a20;
	Node0x5635a20 [shape=record, style = filled, fillcolor = blue, label="{while.body.i359:                                  \l  %297 = phi i32 [ %.pre.i398, %emit_bits.exit.while.body_crit_edge.i399 ], [\l... 0, %while.body.preheader.i355 ]\l  %bufstart.addr.0.i356 = phi i8* [ %incdec.ptr.i397,\l... %emit_bits.exit.while.body_crit_edge.i399 ], [ %294,\l... %while.body.preheader.i355 ]\l  %nbits.addr.0.i357 = phi i32 [ %dec.i394,\l... %emit_bits.exit.while.body_crit_edge.i399 ], [ %292,\l... %while.body.preheader.i355 ]\l  %tobool.i.i358 = icmp eq i32 %297, 0\l  br i1 %tobool.i.i358, label %if.end7.i.i368, label %emit_bits.exit.i396,\l... !prof !54\l|{<s0>T|<s1>F}}"];
	Node0x5635a20:s0 -> Node0x56361a0;
	Node0x5635a20:s1 -> Node0x56362b0;
	Node0x56361a0 [shape=record, style = filled, fillcolor = blue, label="{if.end7.i.i368:                                   \l  %298 = load i32, i32* %put_bits1.i.i351, align 8, !tbaa !35\l  %299 = load i8, i8* %bufstart.addr.0.i356, align 1, !tbaa !14\l  %conv5.i360 = zext i8 %299 to i64\l  %and.i.i361 = and i64 %conv5.i360, 1\l  %add.i.i362 = add i32 %298, 1\l  %sub8.i.i363 = sub i32 23, %298\l  %sh_prom9.i.i364 = zext i32 %sub8.i.i363 to i64\l  %shl10.i.i365 = shl i64 %and.i.i361, %sh_prom9.i.i364\l  %300 = load i64, i64* %put_buffer11.i.i352, align 8, !tbaa !43\l  %or.i.i366 = or i64 %shl10.i.i365, %300\l  %cmp1267.i.i367 = icmp sgt i32 %add.i.i362, 7\l  br i1 %cmp1267.i.i367, label %while.body.i.i376.preheader, label\l... %while.end.i.i393, !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x56361a0:s0 -> Node0x5636a10;
	Node0x56361a0:s1 -> Node0x5636af0;
	Node0x5636a10 [shape=record, style = filled, fillcolor = blue, label="{while.body.i.i376.preheader:                      \l  br label %while.body.i.i376\l}"];
	Node0x5636a10 -> Node0x5636c80;
	Node0x5636c80 [shape=record, style = filled, fillcolor = blue, label="{while.body.i.i376:                                \l  %put_buffer.069.i.i369 = phi i64 [ %shl33.i.i386, %if.end32.i.i389 ], [\l... %or.i.i366, %while.body.i.i376.preheader ]\l  %put_bits.068.i.i370 = phi i32 [ %sub34.i.i387, %if.end32.i.i389 ], [\l... %add.i.i362, %while.body.i.i376.preheader ]\l  %shr66.i.i371 = lshr i64 %put_buffer.069.i.i369, 16\l  %conv16.i.i372 = trunc i64 %shr66.i.i371 to i8\l  %301 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr.i.i373 = getelementptr inbounds i8, i8* %301, i64 1\l  store i8* %incdec.ptr.i.i373, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 %conv16.i.i372, i8* %301, align 1, !tbaa !14\l  %302 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec.i.i374 = add i64 %302, -1\l  store i64 %dec.i.i374, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp17.i.i375 = icmp eq i64 %dec.i.i374, 0\l  br i1 %cmp17.i.i375, label %if.then19.i.i377, label %if.end20.i.i380, !prof\l... !47\l|{<s0>T|<s1>F}}"];
	Node0x5636c80:s0 -> Node0x5637730;
	Node0x5636c80:s1 -> Node0x5637810;
	Node0x5637730 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i.i377:                                 \l  %303 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i402, align 8, !tbaa !37\l  %dest1.i403 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %303, i64 0, i32 5\l  %304 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i403, align 8, !tbaa !13\l  %empty_output_buffer.i404 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %304, i64 0, i32 3\l  %305 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i404, align 8, !tbaa\l... !48\l  %call.i405 = tail call i32 %305(%struct.jpeg_compress_struct* %303) #3\l  %tobool.i406 = icmp eq i32 %call.i405, 0\l  br i1 %tobool.i406, label %if.then.i410, label %dump_buffer.exit415, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x5637730:s0 -> Node0x5633b30;
	Node0x5637730:s1 -> Node0x5633c40;
	Node0x5633b30 [shape=record, style = filled, fillcolor = blue, label="{if.then.i410:                                     \l  %306 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i402, align 8, !tbaa !37\l  %err.i407 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %306, i64 0, i32 0\l  %307 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i407,\l... align 8, !tbaa !38\l  %msg_code.i408 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %307, i64 0, i32 5\l  store i32 22, i32* %msg_code.i408, align 8, !tbaa !39\l  %error_exit.i409 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %307, i64 0, i32 0\l  %308 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i409, align 8, !tbaa !41\l  %309 = bitcast %struct.jpeg_compress_struct* %306 to\l... %struct.jpeg_common_struct*\l  tail call void %308(%struct.jpeg_common_struct* %309) #3\l  br label %dump_buffer.exit415\l}"];
	Node0x5633b30 -> Node0x5633c40;
	Node0x5633c40 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit415:                              \l  %310 = bitcast %struct.jpeg_destination_mgr* %304 to \<2 x i64\>*\l  %311 = load \<2 x i64\>, \<2 x i64\>* %310, align 8, !tbaa !14\l  store \<2 x i64\> %311, \<2 x i64\>* %295, align 8, !tbaa !14\l  br label %if.end20.i.i380\l}"];
	Node0x5633c40 -> Node0x5637810;
	Node0x5637810 [shape=record, style = filled, fillcolor = blue, label="{if.end20.i.i380:                                  \l  %conv15.i.i378 = and i64 %shr66.i.i371, 255\l  %cmp21.i.i379 = icmp eq i64 %conv15.i.i378, 255\l  br i1 %cmp21.i.i379, label %if.then23.i.i384, label %if.end32.i.i389, !prof\l... !51\l|{<s0>T|<s1>F}}"];
	Node0x5637810:s0 -> Node0x5638dd0;
	Node0x5637810:s1 -> Node0x5636df0;
	Node0x5638dd0 [shape=record, style = filled, fillcolor = blue, label="{if.then23.i.i384:                                 \l  %312 = load i8*, i8** %next_output_byte4, align 8, !tbaa !45\l  %incdec.ptr25.i.i381 = getelementptr inbounds i8, i8* %312, i64 1\l  store i8* %incdec.ptr25.i.i381, i8** %next_output_byte4, align 8, !tbaa !45\l  store i8 0, i8* %312, align 1, !tbaa !14\l  %313 = load i64, i64* %free_in_buffer6, align 8, !tbaa !46\l  %dec27.i.i382 = add i64 %313, -1\l  store i64 %dec27.i.i382, i64* %free_in_buffer6, align 8, !tbaa !46\l  %cmp28.i.i383 = icmp eq i64 %dec27.i.i382, 0\l  br i1 %cmp28.i.i383, label %if.then30.i.i385, label %if.end32.i.i389, !prof\l... !52\l|{<s0>T|<s1>F}}"];
	Node0x5638dd0:s0 -> Node0x55da0a0;
	Node0x5638dd0:s1 -> Node0x5636df0;
	Node0x55da0a0 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i.i385:                                 \l  %314 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i402, align 8, !tbaa !37\l  %dest1.i737 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %314, i64 0, i32 5\l  %315 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i737, align 8, !tbaa !13\l  %empty_output_buffer.i738 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %315, i64 0, i32 3\l  %316 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i738, align 8, !tbaa\l... !48\l  %call.i739 = tail call i32 %316(%struct.jpeg_compress_struct* %314) #3\l  %tobool.i740 = icmp eq i32 %call.i739, 0\l  br i1 %tobool.i740, label %if.then.i744, label %dump_buffer.exit749, !prof\l... !50\l|{<s0>T|<s1>F}}"];
	Node0x55da0a0:s0 -> Node0x55db520;
	Node0x55da0a0:s1 -> Node0x55db630;
	Node0x55db520 [shape=record, style = filled, fillcolor = blue, label="{if.then.i744:                                     \l  %317 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i402, align 8, !tbaa !37\l  %err.i741 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %317, i64 0, i32 0\l  %318 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i741,\l... align 8, !tbaa !38\l  %msg_code.i742 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %318, i64 0, i32 5\l  store i32 22, i32* %msg_code.i742, align 8, !tbaa !39\l  %error_exit.i743 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %318, i64 0, i32 0\l  %319 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i743, align 8, !tbaa !41\l  %320 = bitcast %struct.jpeg_compress_struct* %317 to\l... %struct.jpeg_common_struct*\l  tail call void %319(%struct.jpeg_common_struct* %320) #3\l  br label %dump_buffer.exit749\l}"];
	Node0x55db520 -> Node0x55db630;
	Node0x55db630 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit749:                              \l  %321 = bitcast %struct.jpeg_destination_mgr* %315 to \<2 x i64\>*\l  %322 = load \<2 x i64\>, \<2 x i64\>* %321, align 8, !tbaa !14\l  store \<2 x i64\> %322, \<2 x i64\>* %296, align 8, !tbaa !14\l  br label %if.end32.i.i389\l}"];
	Node0x55db630 -> Node0x5636df0;
	Node0x5636df0 [shape=record, style = filled, fillcolor = blue, label="{if.end32.i.i389:                                  \l  %shl33.i.i386 = shl i64 %put_buffer.069.i.i369, 8\l  %sub34.i.i387 = add nsw i32 %put_bits.068.i.i370, -8\l  %cmp12.i.i388 = icmp sgt i32 %sub34.i.i387, 7\l  br i1 %cmp12.i.i388, label %while.body.i.i376, label\l... %while.end.loopexit.i.i390, !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x5636df0:s0 -> Node0x5636c80;
	Node0x5636df0:s1 -> Node0x5606810;
	Node0x5606810 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit.i.i390:                        \l  %shl33.i.i386.lcssa = phi i64 [ %shl33.i.i386, %if.end32.i.i389 ]\l  %323 = and i32 %add.i.i362, 7\l  br label %while.end.i.i393\l}"];
	Node0x5606810 -> Node0x5636af0;
	Node0x5636af0 [shape=record, style = filled, fillcolor = blue, label="{while.end.i.i393:                                 \l  %put_buffer.0.lcssa.i.i391 = phi i64 [ %or.i.i366, %if.end7.i.i368 ], [\l... %shl33.i.i386.lcssa, %while.end.loopexit.i.i390 ]\l  %put_bits.0.lcssa.i.i392 = phi i32 [ %add.i.i362, %if.end7.i.i368 ], [ %323,\l... %while.end.loopexit.i.i390 ]\l  store i64 %put_buffer.0.lcssa.i.i391, i64* %put_buffer11.i.i352, align 8,\l... !tbaa !43\l  store i32 %put_bits.0.lcssa.i.i392, i32* %put_bits1.i.i351, align 8, !tbaa\l... !35\l  br label %emit_bits.exit.i396\l}"];
	Node0x5636af0 -> Node0x56362b0;
	Node0x56362b0 [shape=record, style = filled, fillcolor = blue, label="{emit_bits.exit.i396:                              \l  %dec.i394 = add i32 %nbits.addr.0.i357, -1\l  %cmp.old.i395 = icmp eq i32 %dec.i394, 0\l  br i1 %cmp.old.i395, label %emit_eobrun.exit346.loopexit, label\l... %emit_bits.exit.while.body_crit_edge.i399, !prof !58\l|{<s0>T|<s1>F}}"];
	Node0x56362b0:s0 -> Node0x563b910;
	Node0x56362b0:s1 -> Node0x5635b70;
	Node0x5635b70 [shape=record, style = filled, fillcolor = blue, label="{emit_bits.exit.while.body_crit_edge.i399:         \l  %incdec.ptr.i397 = getelementptr inbounds i8, i8* %bufstart.addr.0.i356, i64\l... 1\l  %.pre.i398 = load i32, i32* %gather_statistics.i.i323, align 8, !tbaa !32\l  br label %while.body.i359\l}"];
	Node0x5635b70 -> Node0x5635a20;
	Node0x563b910 [shape=record, style = filled, fillcolor = blue, label="{emit_eobrun.exit346.loopexit:                     \l  br label %emit_eobrun.exit346\l}"];
	Node0x563b910 -> Node0x5634ea0;
	Node0x5634ea0 [shape=record, style = filled, fillcolor = blue, label="{emit_eobrun.exit346:                              \l  store i32 0, i32* %BE.i343, align 8, !tbaa !55\l  br label %if.end52\l}"];
	Node0x5634ea0 -> Node0x55d0c50;
	Node0x55d0c50 [shape=record, style = filled, fillcolor = yellow, label="{if.end52:                                         \l  %324 = bitcast %struct.jpeg_destination_mgr** %dest to \<2 x i64\>**\l  %325 = load \<2 x i64\>*, \<2 x i64\>** %324, align 8, !tbaa !13\l  %326 = bitcast i8** %next_output_byte4 to \<2 x i64\>*\l  %327 = load \<2 x i64\>, \<2 x i64\>* %326, align 8, !tbaa !14\l  store \<2 x i64\> %327, \<2 x i64\>* %325, align 8, !tbaa !14\l  %328 = load i32, i32* %restart_interval, align 8, !tbaa !15\l  %tobool60 = icmp eq i32 %328, 0\l  br i1 %tobool60, label %if.end73, label %if.then61, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x55d0c50:s0 -> Node0x563c320;
	Node0x55d0c50:s1 -> Node0x563c3d0;
	Node0x563c3d0 [shape=record, style = filled, fillcolor = blue, label="{if.then61:                                        \l  %restarts_to_go62 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 12\l  %329 = bitcast i32* %restarts_to_go62 to i64*\l  %330 = load i64, i64* %329, align 8\l  %331 = trunc i64 %330 to i32\l  %cmp63 = icmp eq i32 %331, 0\l  br i1 %cmp63, label %if.then65, label %if.end71\l|{<s0>T|<s1>F}}"];
	Node0x563c3d0:s0 -> Node0x563cd00;
	Node0x563c3d0:s1 -> Node0x563cdb0;
	Node0x563cd00 [shape=record, style = filled, fillcolor = blue, label="{if.then65:                                        \l  %332 = lshr i64 %330, 32\l  %333 = trunc i64 %332 to i32\l  store i32 %328, i32* %restarts_to_go62, align 8, !tbaa !65\l  %next_restart_num68 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 13\l  %inc69 = add nsw i32 %333, 1\l  %and = and i32 %inc69, 7\l  store i32 %and, i32* %next_restart_num68, align 4, !tbaa !66\l  br label %if.end71\l}"];
	Node0x563cd00 -> Node0x563cdb0;
	Node0x563cdb0 [shape=record, style = filled, fillcolor = blue, label="{if.end71:                                         \l  %334 = phi i32 [ %328, %if.then65 ], [ %331, %if.then61 ]\l  %dec = add i32 %334, -1\l  store i32 %dec, i32* %restarts_to_go62, align 8, !tbaa !65\l  br label %if.end73\l}"];
	Node0x563cdb0 -> Node0x563c320;
	Node0x563c320 [shape=record, style = filled, fillcolor = yellow, label="{if.end73:                                         \l  ret i32 1\l}"];
}
