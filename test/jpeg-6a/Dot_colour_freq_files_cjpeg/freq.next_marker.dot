digraph "CFG for 'next_marker' function" {
	label="CFG for 'next_marker' function";

	Node0x6913450 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %src = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5\l  %0 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align 8,\l... !tbaa !2\l  %next_input_byte1 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %0, i64 0, i32 0\l  %1 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %bytes_in_buffer2 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %0, i64 0, i32 1\l  %2 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  %fill_input_buffer = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %0, i64 0, i32 3\l  %marker58 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 78\l  br label %do.body\l}"];
	Node0x6913450 -> Node0x6913d00;
	Node0x6913d00 [shape=record, style = filled, fillcolor = blue, label="{do.body:                                          \l  %next_input_byte.0 = phi i8* [ %1, %entry ], [ %incdec.ptr42.lcssa,\l... %if.end53 ]\l  %bytes_in_buffer.0 = phi i64 [ %2, %entry ], [ %dec41.lcssa, %if.end53 ]\l  %cmp = icmp eq i64 %bytes_in_buffer.0, 0\l  br i1 %cmp, label %if.then, label %while.cond.preheader\l|{<s0>T|<s1>F}}"];
	Node0x6913d00:s0 -> Node0x69142e0;
	Node0x6913d00:s1 -> Node0x69133b0;
	Node0x69142e0 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %3 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer, align 8, !tbaa !14\l  %call = tail call i32 %3(%struct.jpeg_decompress_struct* nonnull %cinfo) #4\l  %tobool = icmp eq i32 %call, 0\l  br i1 %tobool, label %cleanup.loopexit152, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x69142e0:s0 -> Node0x69148f0;
	Node0x69142e0:s1 -> Node0x69149c0;
	Node0x69149c0 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %4 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %5 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  br label %while.cond.preheader\l}"];
	Node0x69149c0 -> Node0x69133b0;
	Node0x69133b0 [shape=record, style = filled, fillcolor = blue, label="{while.cond.preheader:                             \l  %c.0.in.in.ph = phi i8* [ %next_input_byte.0, %do.body ], [ %4, %if.end ]\l  %bytes_in_buffer.2.in.ph = phi i64 [ %bytes_in_buffer.0, %do.body ], [ %5,\l... %if.end ]\l  %c.0.in134 = load i8, i8* %c.0.in.in.ph, align 1, !tbaa !15\l  %next_input_byte.2135 = getelementptr inbounds i8, i8* %c.0.in.in.ph, i64 1\l  %bytes_in_buffer.2136 = add i64 %bytes_in_buffer.2.in.ph, -1\l  %cmp7137 = icmp eq i8 %c.0.in134, -1\l  br i1 %cmp7137, label %do.body29.preheader, label %while.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x69133b0:s0 -> Node0x6915e10;
	Node0x69133b0:s1 -> Node0x69143d0;
	Node0x69143d0 [shape=record, style = filled, fillcolor = blue, label="{while.body.preheader:                             \l  br label %while.body\l}"];
	Node0x69143d0 -> Node0x6916240;
	Node0x6916240 [shape=record, style = filled, fillcolor = blue, label="{while.body:                                       \l  %bytes_in_buffer.2139 = phi i64 [ %bytes_in_buffer.2, %while.cond.backedge\l... ], [ %bytes_in_buffer.2136, %while.body.preheader ]\l  %next_input_byte.2138 = phi i8* [ %next_input_byte.2, %while.cond.backedge\l... ], [ %next_input_byte.2135, %while.body.preheader ]\l  %6 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader**\l... %marker58, align 8, !tbaa !16\l  %discarded_bytes = getelementptr inbounds %struct.jpeg_marker_reader,\l... %struct.jpeg_marker_reader* %6, i64 0, i32 8\l  %7 = load i32, i32* %discarded_bytes, align 4, !tbaa !17\l  %inc = add i32 %7, 1\l  store i32 %inc, i32* %discarded_bytes, align 4, !tbaa !17\l  store i8* %next_input_byte.2138, i8** %next_input_byte1, align 8, !tbaa !10\l  store i64 %bytes_in_buffer.2139, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  %cmp12 = icmp eq i64 %bytes_in_buffer.2139, 0\l  br i1 %cmp12, label %if.then14, label %while.cond.backedge\l|{<s0>T|<s1>F}}"];
	Node0x6916240:s0 -> Node0x6917c30;
	Node0x6916240:s1 -> Node0x6916360;
	Node0x6917c30 [shape=record, style = filled, fillcolor = blue, label="{if.then14:                                        \l  %8 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer, align 8, !tbaa !14\l  %call16 = tail call i32 %8(%struct.jpeg_decompress_struct* nonnull %cinfo) #4\l  %tobool17 = icmp eq i32 %call16, 0\l  br i1 %tobool17, label %cleanup.loopexit151, label %if.end19\l|{<s0>T|<s1>F}}"];
	Node0x6917c30:s0 -> Node0x6918550;
	Node0x6917c30:s1 -> Node0x6918650;
	Node0x6918650 [shape=record, style = filled, fillcolor = blue, label="{if.end19:                                         \l  %9 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %10 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  br label %while.cond.backedge\l}"];
	Node0x6918650 -> Node0x6916360;
	Node0x6916360 [shape=record, style = filled, fillcolor = blue, label="{while.cond.backedge:                              \l  %c.0.in.in.be = phi i8* [ %9, %if.end19 ], [ %next_input_byte.2138,\l... %while.body ]\l  %bytes_in_buffer.2.in.be = phi i64 [ %10, %if.end19 ], [\l... %bytes_in_buffer.2139, %while.body ]\l  %c.0.in = load i8, i8* %c.0.in.in.be, align 1, !tbaa !15\l  %next_input_byte.2 = getelementptr inbounds i8, i8* %c.0.in.in.be, i64 1\l  %bytes_in_buffer.2 = add i64 %bytes_in_buffer.2.in.be, -1\l  %cmp7 = icmp eq i8 %c.0.in, -1\l  br i1 %cmp7, label %do.body29.preheader.loopexit, label %while.body\l|{<s0>T|<s1>F}}"];
	Node0x6916360:s0 -> Node0x6919240;
	Node0x6916360:s1 -> Node0x6916240;
	Node0x6919240 [shape=record, style = filled, fillcolor = blue, label="{do.body29.preheader.loopexit:                     \l  %bytes_in_buffer.2.lcssa = phi i64 [ %bytes_in_buffer.2,\l... %while.cond.backedge ]\l  %next_input_byte.2.lcssa = phi i8* [ %next_input_byte.2,\l... %while.cond.backedge ]\l  br label %do.body29.preheader\l}"];
	Node0x6919240 -> Node0x6915e10;
	Node0x6915e10 [shape=record, style = filled, fillcolor = blue, label="{do.body29.preheader:                              \l  %next_input_byte.4.ph = phi i8* [ %next_input_byte.2135,\l... %while.cond.preheader ], [ %next_input_byte.2.lcssa,\l... %do.body29.preheader.loopexit ]\l  %bytes_in_buffer.4.ph = phi i64 [ %bytes_in_buffer.2136,\l... %while.cond.preheader ], [ %bytes_in_buffer.2.lcssa,\l... %do.body29.preheader.loopexit ]\l  br label %do.body29\l}"];
	Node0x6915e10 -> Node0x6915e90;
	Node0x6915e90 [shape=record, style = filled, fillcolor = blue, label="{do.body29:                                        \l  %next_input_byte.4 = phi i8* [ %incdec.ptr42, %if.end40 ], [\l... %next_input_byte.4.ph, %do.body29.preheader ]\l  %bytes_in_buffer.4 = phi i64 [ %dec41, %if.end40 ], [ %bytes_in_buffer.4.ph,\l... %do.body29.preheader ]\l  %cmp30 = icmp eq i64 %bytes_in_buffer.4, 0\l  br i1 %cmp30, label %if.then32, label %if.end40\l|{<s0>T|<s1>F}}"];
	Node0x6915e90:s0 -> Node0x6919dc0;
	Node0x6915e90:s1 -> Node0x6915fd0;
	Node0x6919dc0 [shape=record, style = filled, fillcolor = blue, label="{if.then32:                                        \l  %11 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer, align 8, !tbaa !14\l  %call34 = tail call i32 %11(%struct.jpeg_decompress_struct* %cinfo) #4\l  %tobool35 = icmp eq i32 %call34, 0\l  br i1 %tobool35, label %cleanup.loopexit, label %if.end37\l|{<s0>T|<s1>F}}"];
	Node0x6919dc0:s0 -> Node0x691a0b0;
	Node0x6919dc0:s1 -> Node0x691a1b0;
	Node0x691a1b0 [shape=record, style = filled, fillcolor = blue, label="{if.end37:                                         \l  %12 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %13 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  br label %if.end40\l}"];
	Node0x691a1b0 -> Node0x6915fd0;
	Node0x6915fd0 [shape=record, style = filled, fillcolor = blue, label="{if.end40:                                         \l  %next_input_byte.5 = phi i8* [ %12, %if.end37 ], [ %next_input_byte.4,\l... %do.body29 ]\l  %bytes_in_buffer.5 = phi i64 [ %13, %if.end37 ], [ %bytes_in_buffer.4,\l... %do.body29 ]\l  %dec41 = add i64 %bytes_in_buffer.5, -1\l  %incdec.ptr42 = getelementptr inbounds i8, i8* %next_input_byte.5, i64 1\l  %14 = load i8, i8* %next_input_byte.5, align 1, !tbaa !15\l  %cmp47 = icmp eq i8 %14, -1\l  br i1 %cmp47, label %do.body29, label %do.end49\l|{<s0>T|<s1>F}}"];
	Node0x6915fd0:s0 -> Node0x6915e90;
	Node0x6915fd0:s1 -> Node0x691a720;
	Node0x691a720 [shape=record, style = filled, fillcolor = blue, label="{do.end49:                                         \l  %.lcssa = phi i8 [ %14, %if.end40 ]\l  %incdec.ptr42.lcssa = phi i8* [ %incdec.ptr42, %if.end40 ]\l  %dec41.lcssa = phi i64 [ %dec41, %if.end40 ]\l  %cmp50 = icmp eq i8 %.lcssa, 0\l  %15 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader**\l... %marker58, align 8, !tbaa !16\l  %discarded_bytes59 = getelementptr inbounds %struct.jpeg_marker_reader,\l... %struct.jpeg_marker_reader* %15, i64 0, i32 8\l  %16 = load i32, i32* %discarded_bytes59, align 4, !tbaa !17\l  br i1 %cmp50, label %if.end53, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x691a720:s0 -> Node0x6913ed0;
	Node0x691a720:s1 -> Node0x6918380;
	Node0x6913ed0 [shape=record, style = filled, fillcolor = blue, label="{if.end53:                                         \l  %add = add i32 %16, 2\l  store i32 %add, i32* %discarded_bytes59, align 4, !tbaa !17\l  store i8* %incdec.ptr42.lcssa, i8** %next_input_byte1, align 8, !tbaa !10\l  store i64 %dec41.lcssa, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  br label %do.body\l}"];
	Node0x6913ed0 -> Node0x6913d00;
	Node0x6918380 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %.lcssa154 = phi i32 [ %16, %do.end49 ]\l  %.lcssa.lcssa = phi i8 [ %.lcssa, %do.end49 ]\l  %incdec.ptr42.lcssa.lcssa = phi i8* [ %incdec.ptr42.lcssa, %do.end49 ]\l  %dec41.lcssa.lcssa = phi i64 [ %dec41.lcssa, %do.end49 ]\l  %conv43.le.le = zext i8 %.lcssa.lcssa to i32\l  %cmp60 = icmp eq i32 %.lcssa154, 0\l  br i1 %cmp60, label %if.end73, label %if.then62\l|{<s0>T|<s1>F}}"];
	Node0x6918380:s0 -> Node0x690b270;
	Node0x6918380:s1 -> Node0x690b350;
	Node0x690b350 [shape=record, style = filled, fillcolor = blue, label="{if.then62:                                        \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %17 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !19\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %17, i64 0, i32 5\l  store i32 112, i32* %msg_code, align 8, !tbaa !20\l  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %17, i64 0, i32 6, i32 0, i64 0\l  store i32 %.lcssa154, i32* %arrayidx, align 4, !tbaa !22\l  %arrayidx69 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %17, i64 0, i32 6, i32 0, i64 1\l  store i32 %conv43.le.le, i32* %arrayidx69, align 4, !tbaa !22\l  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %17, i64 0, i32 1\l  %18 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !23\l  %19 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %18(%struct.jpeg_common_struct* %19, i32 -1) #4\l  %20 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader**\l... %marker58, align 8, !tbaa !16\l  %discarded_bytes72 = getelementptr inbounds %struct.jpeg_marker_reader,\l... %struct.jpeg_marker_reader* %20, i64 0, i32 8\l  store i32 0, i32* %discarded_bytes72, align 4, !tbaa !17\l  br label %if.end73\l}"];
	Node0x690b350 -> Node0x690b270;
	Node0x690b270 [shape=record, style = filled, fillcolor = blue, label="{if.end73:                                         \l  %unread_marker = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 72\l  store i32 %conv43.le.le, i32* %unread_marker, align 4, !tbaa !24\l  store i8* %incdec.ptr42.lcssa.lcssa, i8** %next_input_byte1, align 8, !tbaa\l... !10\l  store i64 %dec41.lcssa.lcssa, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  br label %cleanup\l}"];
	Node0x690b270 -> Node0x691d730;
	Node0x691a0b0 [shape=record, style = filled, fillcolor = blue, label="{cleanup.loopexit:                                 \l  br label %cleanup\l}"];
	Node0x691a0b0 -> Node0x691d730;
	Node0x6918550 [shape=record, style = filled, fillcolor = blue, label="{cleanup.loopexit151:                              \l  br label %cleanup\l}"];
	Node0x6918550 -> Node0x691d730;
	Node0x69148f0 [shape=record, style = filled, fillcolor = blue, label="{cleanup.loopexit152:                              \l  br label %cleanup\l}"];
	Node0x69148f0 -> Node0x691d730;
	Node0x691d730 [shape=record, style = filled, fillcolor = blue, label="{cleanup:                                          \l  %retval.0 = phi i32 [ 1, %if.end73 ], [ 0, %cleanup.loopexit ], [ 0,\l... %cleanup.loopexit151 ], [ 0, %cleanup.loopexit152 ]\l  ret i32 %retval.0\l}"];
}
