digraph "CFG for 'encode_mcu_gather' function" {
	label="CFG for 'encode_mcu_gather' function";

	Node0x6412770 [shape=record,label="{entry:\l  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59\l  %0 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to\l... %struct.huff_entropy_encoder**\l  %1 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %0,\l... align 8, !tbaa !3\l  %restart_interval = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 29\l  %2 = load i32, i32* %restart_interval, align 8, !tbaa !11\l  %tobool = icmp eq i32 %2, 0\l  br i1 %tobool, label %for.cond8.preheader, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x6412770:s0 -> Node0x63fa390;
	Node0x6412770:s1 -> Node0x63fa470;
	Node0x63fa470 [shape=record,label="{if.then:                                          \l  %restarts_to_go = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 2\l  %3 = load i32, i32* %restarts_to_go, align 8, !tbaa !12\l  %cmp = icmp eq i32 %3, 0\l  br i1 %cmp, label %for.cond.preheader, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x63fa470:s0 -> Node0x64167e0;
	Node0x63fa470:s1 -> Node0x64168e0;
	Node0x64167e0 [shape=record,label="{for.cond.preheader:                               \l  %comps_in_scan = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 41\l  %4 = load i32, i32* %comps_in_scan, align 4, !tbaa !17\l  %cmp367 = icmp sgt i32 %4, 0\l  br i1 %cmp367, label %for.body.preheader, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x64167e0:s0 -> Node0x6416cb0;
	Node0x64167e0:s1 -> Node0x6416db0;
	Node0x6416cb0 [shape=record,label="{for.body.preheader:                               \l  br label %for.body\l}"];
	Node0x6416cb0 -> Node0x6416f10;
	Node0x6416f10 [shape=record,label="{for.body:                                         \l  %indvars.iv69 = phi i64 [ %indvars.iv.next70, %for.body ], [ 0,\l... %for.body.preheader ]\l  %arrayidx = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 1, i32 2, i64 %indvars.iv69\l  store i32 0, i32* %arrayidx, align 4, !tbaa !18\l  %indvars.iv.next70 = add nuw nsw i64 %indvars.iv69, 1\l  %5 = load i32, i32* %comps_in_scan, align 4, !tbaa !17\l  %6 = sext i32 %5 to i64\l  %cmp3 = icmp slt i64 %indvars.iv.next70, %6\l  br i1 %cmp3, label %for.body, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6416f10:s0 -> Node0x6416f10;
	Node0x6416f10:s1 -> Node0x6417420;
	Node0x6417420 [shape=record,label="{for.end.loopexit:                                 \l  %.pre = load i32, i32* %restart_interval, align 8, !tbaa !11\l  br label %for.end\l}"];
	Node0x6417420 -> Node0x6416db0;
	Node0x6416db0 [shape=record,label="{for.end:                                          \l  %7 = phi i32 [ %.pre, %for.end.loopexit ], [ %2, %for.cond.preheader ]\l  store i32 %7, i32* %restarts_to_go, align 8, !tbaa !12\l  br label %if.end\l}"];
	Node0x6416db0 -> Node0x64168e0;
	Node0x64168e0 [shape=record,label="{if.end:                                           \l  %8 = phi i32 [ %7, %for.end ], [ %3, %if.then ]\l  %dec = add i32 %8, -1\l  store i32 %dec, i32* %restarts_to_go, align 8, !tbaa !12\l  br label %for.cond8.preheader\l}"];
	Node0x64168e0 -> Node0x63fa390;
	Node0x63fa390 [shape=record,label="{for.cond8.preheader:                              \l  %blocks_in_MCU = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 45\l  %9 = load i32, i32* %blocks_in_MCU, align 8, !tbaa !19\l  %cmp965 = icmp sgt i32 %9, 0\l  br i1 %cmp965, label %for.body10.preheader, label %for.end36\l|{<s0>T|<s1>F}}"];
	Node0x63fa390:s0 -> Node0x6415010;
	Node0x63fa390:s1 -> Node0x6417e60;
	Node0x6415010 [shape=record,label="{for.body10.preheader:                             \l  br label %for.body10\l}"];
	Node0x6415010 -> Node0x6417fa0;
	Node0x6417fa0 [shape=record,label="{for.body10:                                       \l  %indvars.iv = phi i64 [ %indvars.iv.next, %htest_one_block.exit ], [ 0,\l... %for.body10.preheader ]\l  %arrayidx12 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 46, i64 %indvars.iv\l  %10 = load i32, i32* %arrayidx12, align 4, !tbaa !18\l  %idxprom13 = sext i32 %10 to i64\l  %arrayidx14 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %idxprom13\l  %11 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx14, align 8, !tbaa !20\l  %arrayidx16 = getelementptr inbounds [64 x i16]*, [64 x i16]** %MCU_data,\l... i64 %indvars.iv\l  %12 = load [64 x i16]*, [64 x i16]** %arrayidx16, align 8, !tbaa !20\l  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %12, i64 0, i64\l... 0\l  %arrayidx21 = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 1, i32 2, i64 %idxprom13\l  %13 = load i32, i32* %arrayidx21, align 4, !tbaa !18\l  %dc_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %11, i64 0, i32 5\l  %14 = load i32, i32* %dc_tbl_no, align 4, !tbaa !21\l  %idxprom22 = sext i32 %14 to i64\l  %arrayidx23 = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 6, i64 %idxprom22\l  %15 = load i64*, i64** %arrayidx23, align 8, !tbaa !20\l  %ac_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %11, i64 0, i32 6\l  %16 = load i32, i32* %ac_tbl_no, align 8, !tbaa !23\l  %idxprom24 = sext i32 %16 to i64\l  %arrayidx25 = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 7, i64 %idxprom24\l  %17 = load i64*, i64** %arrayidx25, align 8, !tbaa !20\l  %18 = load i16, i16* %arraydecay, align 2, !tbaa !24\l  %conv.i = sext i16 %18 to i32\l  %sub.i = sub nsw i32 %conv.i, %13\l  %cmp.i = icmp slt i32 %sub.i, 0\l  %sub2.i = sub nsw i32 0, %sub.i\l  %sub2.sub.i = select i1 %cmp.i, i32 %sub2.i, i32 %sub.i\l  %tobool71.i = icmp eq i32 %sub2.sub.i, 0\l  br i1 %tobool71.i, label %while.end.i, label %while.body.i.preheader\l|{<s0>T|<s1>F}}"];
	Node0x6417fa0:s0 -> Node0x6417a40;
	Node0x6417fa0:s1 -> Node0x6417b50;
	Node0x6417b50 [shape=record,label="{while.body.i.preheader:                           \l  br label %while.body.i\l}"];
	Node0x6417b50 -> Node0x6417ce0;
	Node0x6417ce0 [shape=record,label="{while.body.i:                                     \l  %nbits.073.i = phi i32 [ %inc.i, %while.body.i ], [ 0,\l... %while.body.i.preheader ]\l  %temp.172.i = phi i32 [ %shr.i, %while.body.i ], [ %sub2.sub.i,\l... %while.body.i.preheader ]\l  %inc.i = add nuw nsw i32 %nbits.073.i, 1\l  %shr.i = ashr i32 %temp.172.i, 1\l  %tobool.i = icmp eq i32 %shr.i, 0\l  br i1 %tobool.i, label %while.end.loopexit.i, label %while.body.i\l|{<s0>T|<s1>F}}"];
	Node0x6417ce0:s0 -> Node0x641a030;
	Node0x6417ce0:s1 -> Node0x6417ce0;
	Node0x641a030 [shape=record,label="{while.end.loopexit.i:                             \l  %inc.i.lcssa = phi i32 [ %inc.i, %while.body.i ]\l  %phitmp.i = sext i32 %inc.i.lcssa to i64\l  br label %while.end.i\l}"];
	Node0x641a030 -> Node0x6417a40;
	Node0x6417a40 [shape=record,label="{while.end.i:                                      \l  %nbits.0.lcssa.i = phi i64 [ 0, %for.body10 ], [ %phitmp.i,\l... %while.end.loopexit.i ]\l  %arrayidx3.i = getelementptr inbounds i64, i64* %15, i64 %nbits.0.lcssa.i\l  %19 = load i64, i64* %arrayidx3.i, align 8, !tbaa !25\l  %inc4.i = add nsw i64 %19, 1\l  store i64 %inc4.i, i64* %arrayidx3.i, align 8, !tbaa !25\l  %arrayidx20.i = getelementptr inbounds i64, i64* %17, i64 240\l  br label %for.body.i\l}"];
	Node0x6417a40 -> Node0x641a580;
	Node0x641a580 [shape=record,label="{for.body.i:                                       \l  %indvars.iv.i = phi i64 [ 1, %while.end.i ], [ %indvars.iv.next.i,\l... %for.inc.i ]\l  %r.070.i = phi i32 [ 0, %while.end.i ], [ %r.2.i, %for.inc.i ]\l  %arrayidx8.i = getelementptr inbounds [0 x i32], [0 x i32]*\l... @jpeg_natural_order, i64 0, i64 %indvars.iv.i\l  %20 = load i32, i32* %arrayidx8.i, align 4, !tbaa !18\l  %idxprom9.i = sext i32 %20 to i64\l  %arrayidx10.i = getelementptr inbounds [64 x i16], [64 x i16]* %12, i64 0,\l... i64 %idxprom9.i\l  %21 = load i16, i16* %arrayidx10.i, align 2, !tbaa !24\l  %conv11.i = sext i16 %21 to i32\l  %cmp12.i = icmp eq i16 %21, 0\l  br i1 %cmp12.i, label %if.then14.i, label %while.cond16.preheader.i\l|{<s0>T|<s1>F}}"];
	Node0x641a580:s0 -> Node0x641b4d0;
	Node0x641a580:s1 -> Node0x641b5e0;
	Node0x641b5e0 [shape=record,label="{while.cond16.preheader.i:                         \l  %cmp1767.i = icmp sgt i32 %r.070.i, 15\l  br i1 %cmp1767.i, label %while.body19.lr.ph.i, label %while.end23.i\l|{<s0>T|<s1>F}}"];
	Node0x641b5e0:s0 -> Node0x641b880;
	Node0x641b5e0:s1 -> Node0x641b920;
	Node0x641b880 [shape=record,label="{while.body19.lr.ph.i:                             \l  %arrayidx20.promoted.i = load i64, i64* %arrayidx20.i, align 8, !tbaa !25\l  %22 = add i32 %r.070.i, -16\l  %23 = lshr i32 %22, 4\l  %24 = shl nuw i32 %23, 4\l  %25 = sub i32 %22, %24\l  %26 = zext i32 %23 to i64\l  %27 = add nuw nsw i64 %26, 1\l  %28 = add i64 %27, %arrayidx20.promoted.i\l  store i64 %28, i64* %arrayidx20.i, align 8, !tbaa !25\l  br label %while.end23.i\l}"];
	Node0x641b880 -> Node0x641b920;
	Node0x641b4d0 [shape=record,label="{if.then14.i:                                      \l  %inc15.i = add nsw i32 %r.070.i, 1\l  br label %for.inc.i\l}"];
	Node0x641b4d0 -> Node0x641a740;
	Node0x641b920 [shape=record,label="{while.end23.i:                                    \l  %r.1.lcssa.i = phi i32 [ %25, %while.body19.lr.ph.i ], [ %r.070.i,\l... %while.cond16.preheader.i ]\l  %cmp24.i = icmp slt i16 %21, 0\l  %sub27.i = sub nsw i32 0, %conv11.i\l  %sub27.conv11.i = select i1 %cmp24.i, i32 %sub27.i, i32 %conv11.i\l  br label %while.cond29.i\l}"];
	Node0x641b920 -> Node0x641c210;
	Node0x641c210 [shape=record,label="{while.cond29.i:                                   \l  %temp.3.i = phi i32 [ %sub27.conv11.i, %while.end23.i ], [ %shr30.i,\l... %while.cond29.i ]\l  %nbits.1.i = phi i32 [ 1, %while.end23.i ], [ %inc33.i, %while.cond29.i ]\l  %shr30.i = ashr i32 %temp.3.i, 1\l  %tobool31.i = icmp eq i32 %shr30.i, 0\l  %inc33.i = add nuw nsw i32 %nbits.1.i, 1\l  br i1 %tobool31.i, label %while.end34.i, label %while.cond29.i\l|{<s0>T|<s1>F}}"];
	Node0x641c210:s0 -> Node0x641c7b0;
	Node0x641c210:s1 -> Node0x641c210;
	Node0x641c7b0 [shape=record,label="{while.end34.i:                                    \l  %nbits.1.i.lcssa = phi i32 [ %nbits.1.i, %while.cond29.i ]\l  %shl.i = shl i32 %r.1.lcssa.i, 4\l  %add.i = add nsw i32 %nbits.1.i.lcssa, %shl.i\l  %idxprom35.i = sext i32 %add.i to i64\l  %arrayidx36.i = getelementptr inbounds i64, i64* %17, i64 %idxprom35.i\l  %29 = load i64, i64* %arrayidx36.i, align 8, !tbaa !25\l  %inc37.i = add nsw i64 %29, 1\l  store i64 %inc37.i, i64* %arrayidx36.i, align 8, !tbaa !25\l  br label %for.inc.i\l}"];
	Node0x641c7b0 -> Node0x641a740;
	Node0x641a740 [shape=record,label="{for.inc.i:                                        \l  %r.2.i = phi i32 [ %inc15.i, %if.then14.i ], [ 0, %while.end34.i ]\l  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1\l  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 64\l  br i1 %exitcond.i, label %for.end.i, label %for.body.i\l|{<s0>T|<s1>F}}"];
	Node0x641a740:s0 -> Node0x64197d0;
	Node0x641a740:s1 -> Node0x641a580;
	Node0x64197d0 [shape=record,label="{for.end.i:                                        \l  %r.2.i.lcssa = phi i32 [ %r.2.i, %for.inc.i ]\l  %cmp40.i = icmp sgt i32 %r.2.i.lcssa, 0\l  br i1 %cmp40.i, label %if.then42.i, label %htest_one_block.exit\l|{<s0>T|<s1>F}}"];
	Node0x64197d0:s0 -> Node0x6419990;
	Node0x64197d0:s1 -> Node0x64180f0;
	Node0x6419990 [shape=record,label="{if.then42.i:                                      \l  %30 = load i64, i64* %17, align 8, !tbaa !25\l  %inc44.i = add nsw i64 %30, 1\l  store i64 %inc44.i, i64* %17, align 8, !tbaa !25\l  br label %htest_one_block.exit\l}"];
	Node0x6419990 -> Node0x64180f0;
	Node0x64180f0 [shape=record,label="{htest_one_block.exit:                             \l  store i32 %conv.i, i32* %arrayidx21, align 4, !tbaa !18\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %31 = load i32, i32* %blocks_in_MCU, align 8, !tbaa !19\l  %32 = sext i32 %31 to i64\l  %cmp9 = icmp slt i64 %indvars.iv.next, %32\l  br i1 %cmp9, label %for.body10, label %for.end36.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x64180f0:s0 -> Node0x6417fa0;
	Node0x64180f0:s1 -> Node0x6418e30;
	Node0x6418e30 [shape=record,label="{for.end36.loopexit:                               \l  br label %for.end36\l}"];
	Node0x6418e30 -> Node0x6417e60;
	Node0x6417e60 [shape=record,label="{for.end36:                                        \l  ret i32 1\l}"];
}
