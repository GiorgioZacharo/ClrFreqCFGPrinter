digraph "CFG for 'parse_switches' function" {
	label="CFG for 'parse_switches' function";

	Node0x529f700 [shape=record,label="{entry:\l  %lval = alloca i64, align 8\l  %ch = alloca i8, align 1\l  %lval72 = alloca i64, align 8\l  %ch73 = alloca i8, align 1\l  store i8* null, i8** @outfilename, align 8, !tbaa !2\l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %0 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !6\l  %trace_level = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %0, i64 0, i32 7\l  store i32 0, i32* %trace_level, align 4, !tbaa !11\l  %cmp28 = icmp sgt i32 %argc, 1\l  br i1 %cmp28, label %for.body.lr.ph, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x529f700:s0 -> Node0x5295810;
	Node0x529f700:s1 -> Node0x529f5e0;
	Node0x5295810 [shape=record,label="{for.body.lr.ph:                                   \l  %1 = bitcast i64* %lval72 to i8*\l  %restart_in_rows104 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 30\l  %restart_interval = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 29\l  %optimize_coding = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 25\l  %2 = bitcast i64* %lval to i8*\l  %mem = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1\l  br label %for.body\l}"];
	Node0x5295810 -> Node0x52a0930;
	Node0x52a0930 [shape=record,label="{for.body:                                         \l  %scansarg.031 = phi i8* [ null, %for.body.lr.ph ], [ %scansarg.1, %for.inc ]\l  %simple_progressive.030 = phi i32 [ 0, %for.body.lr.ph ], [\l... %simple_progressive.1, %for.inc ]\l  %argn.029 = phi i32 [ 1, %for.body.lr.ph ], [ %inc126, %for.inc ]\l  %idxprom = sext i32 %argn.029 to i64\l  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 %idxprom\l  %3 = load i8*, i8** %arrayidx, align 8, !tbaa !2\l  %4 = load i8, i8* %3, align 1, !tbaa !14\l  %cmp1 = icmp eq i8 %4, 45\l  br i1 %cmp1, label %if.end6, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x52a0930:s0 -> Node0x52a1ac0;
	Node0x52a0930:s1 -> Node0x52a1b70;
	Node0x52a1b70 [shape=record,label="{if.then:                                          \l  %cmp3 = icmp slt i32 %argn.029, 1\l  br i1 %cmp3, label %if.then5, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x52a1b70:s0 -> Node0x52a1d70;
	Node0x52a1b70:s1 -> Node0x52a1dc0;
	Node0x52a1d70 [shape=record,label="{if.then5:                                         \l  store i8* null, i8** @outfilename, align 8, !tbaa !2\l  br label %for.inc\l}"];
	Node0x52a1d70 -> Node0x52a0a80;
	Node0x52a1ac0 [shape=record,label="{if.end6:                                          \l  %incdec.ptr = getelementptr inbounds i8, i8* %3, i64 1\l  %call = call i32 @keymatch(i8* %incdec.ptr, i8* nonnull getelementptr\l... inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i32 1) #6\l  %tobool = icmp eq i32 %call, 0\l  br i1 %tobool, label %if.else, label %if.then7\l|{<s0>T|<s1>F}}"];
	Node0x52a1ac0:s0 -> Node0x52a2430;
	Node0x52a1ac0:s1 -> Node0x52a2500;
	Node0x52a2500 [shape=record,label="{if.then7:                                         \l  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !2\l  %6 = load i8*, i8** @progname, align 8, !tbaa !2\l  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %5, i8* nonnull getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0,\l... i64 0), i8* %6) #7\l  call void @exit(i32 1) #8\l  unreachable\l}"];
	Node0x52a2430 [shape=record,label="{if.else:                                          \l  %call9 = call i32 @keymatch(i8* %incdec.ptr, i8* nonnull getelementptr\l... inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i32 1) #6\l  %tobool10 = icmp eq i32 %call9, 0\l  br i1 %tobool10, label %lor.lhs.false, label %if.then13\l|{<s0>T|<s1>F}}"];
	Node0x52a2430:s0 -> Node0x52a2c90;
	Node0x52a2430:s1 -> Node0x52a2d10;
	Node0x52a2c90 [shape=record,label="{lor.lhs.false:                                    \l  %call11 = call i32 @keymatch(i8* %incdec.ptr, i8* nonnull getelementptr\l... inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i32 1) #6\l  %tobool12 = icmp eq i32 %call11, 0\l  br i1 %tobool12, label %if.else20, label %if.then13\l|{<s0>T|<s1>F}}"];
	Node0x52a2c90:s0 -> Node0x52a3100;
	Node0x52a2c90:s1 -> Node0x52a2d10;
	Node0x52a2d10 [shape=record,label="{if.then13:                                        \l  %.b = load i1, i1* @parse_switches.printed_version, align 1\l  br i1 %.b, label %if.end17, label %if.then15\l|{<s0>T|<s1>F}}"];
	Node0x52a2d10:s0 -> Node0x52a3240;
	Node0x52a2d10:s1 -> Node0x52a32f0;
	Node0x52a32f0 [shape=record,label="{if.then15:                                        \l  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !2\l  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %7, i8* nonnull getelementptr inbounds ([50 x i8], [50 x i8]* @.str.9, i64 0,\l... i64 0), i8* nonnull getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10,\l... i64 0, i64 0), i8* nonnull getelementptr inbounds ([35 x i8], [35 x i8]*\l... @.str.11, i64 0, i64 0)) #7\l  store i1 true, i1* @parse_switches.printed_version, align 1\l  br label %if.end17\l}"];
	Node0x52a32f0 -> Node0x52a3240;
	Node0x52a3240 [shape=record,label="{if.end17:                                         \l  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !6\l  %trace_level19 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 7\l  %9 = load i32, i32* %trace_level19, align 4, !tbaa !11\l  %inc = add nsw i32 %9, 1\l  store i32 %inc, i32* %trace_level19, align 4, !tbaa !11\l  br label %for.inc\l}"];
	Node0x52a3240 -> Node0x52a0a80;
	Node0x52a3100 [shape=record,label="{if.else20:                                        \l  %call21 = call i32 @keymatch(i8* %incdec.ptr, i8* nonnull getelementptr\l... inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i32 3) #6\l  %tobool22 = icmp eq i32 %call21, 0\l  br i1 %tobool22, label %if.else46, label %if.then23\l|{<s0>T|<s1>F}}"];
	Node0x52a3100:s0 -> Node0x52a41f0;
	Node0x52a3100:s1 -> Node0x52a4270;
	Node0x52a4270 [shape=record,label="{if.then23:                                        \l  call void @llvm.lifetime.start(i64 8, i8* %2) #6\l  call void @llvm.lifetime.start(i64 1, i8* nonnull %ch) #6\l  store i8 120, i8* %ch, align 1, !tbaa !14\l  %inc24 = add nsw i32 %argn.029, 1\l  %cmp25 = icmp slt i32 %inc24, %argc\l  br i1 %cmp25, label %if.end28, label %if.then27\l|{<s0>T|<s1>F}}"];
	Node0x52a4270:s0 -> Node0x52a4810;
	Node0x52a4270:s1 -> Node0x52a4860;
	Node0x52a4860 [shape=record,label="{if.then27:                                        \l  call fastcc void @usage()\l  unreachable\l}"];
	Node0x52a4810 [shape=record,label="{if.end28:                                         \l  %idxprom29 = sext i32 %inc24 to i64\l  %arrayidx30 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom29\l  %10 = load i8*, i8** %arrayidx30, align 8, !tbaa !2\l  %call31 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %10, i8* nonnull\l... getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i64*\l... nonnull %lval, i8* nonnull %ch) #6\l  %cmp32 = icmp slt i32 %call31, 1\l  br i1 %cmp32, label %if.then34, label %if.end35\l|{<s0>T|<s1>F}}"];
	Node0x52a4810:s0 -> Node0x529ae70;
	Node0x52a4810:s1 -> Node0x529af50;
	Node0x529ae70 [shape=record,label="{if.then34:                                        \l  call fastcc void @usage()\l  unreachable\l}"];
	Node0x529af50 [shape=record,label="{if.end35:                                         \l  %11 = load i8, i8* %ch, align 1, !tbaa !14\l  switch i8 %11, label %if.end35.if.end44_crit_edge [\l    i8 109, label %if.then43\l    i8 77, label %if.then43\l  ]\l|{<s0>def|<s1>109|<s2>77}}"];
	Node0x529af50:s0 -> Node0x529b200;
	Node0x529af50:s1 -> Node0x529b300;
	Node0x529af50:s2 -> Node0x529b300;
	Node0x529b200 [shape=record,label="{if.end35.if.end44_crit_edge:                      \l  %.pre = load i64, i64* %lval, align 8, !tbaa !15\l  br label %if.end44\l}"];
	Node0x529b200 -> Node0x529b670;
	Node0x529b300 [shape=record,label="{if.then43:                                        \l  %12 = load i64, i64* %lval, align 8, !tbaa !15\l  %mul = mul nsw i64 %12, 1000\l  store i64 %mul, i64* %lval, align 8, !tbaa !15\l  br label %if.end44\l}"];
	Node0x529b300 -> Node0x529b670;
	Node0x529b670 [shape=record,label="{if.end44:                                         \l  %13 = phi i64 [ %.pre, %if.end35.if.end44_crit_edge ], [ %mul, %if.then43 ]\l  %mul45 = mul nsw i64 %13, 1000\l  %14 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !16\l  %max_memory_to_use = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %14, i64 0, i32 11\l  store i64 %mul45, i64* %max_memory_to_use, align 8, !tbaa !17\l  call void @llvm.lifetime.end(i64 1, i8* nonnull %ch) #6\l  call void @llvm.lifetime.end(i64 8, i8* nonnull %2) #6\l  br label %for.inc\l}"];
	Node0x529b670 -> Node0x52a0a80;
	Node0x52a41f0 [shape=record,label="{if.else46:                                        \l  %call47 = call i32 @keymatch(i8* %incdec.ptr, i8* nonnull getelementptr\l... inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i32 1) #6\l  %tobool48 = icmp eq i32 %call47, 0\l  br i1 %tobool48, label %lor.lhs.false49, label %if.then52\l|{<s0>T|<s1>F}}"];
	Node0x52a41f0:s0 -> Node0x52a8020;
	Node0x52a41f0:s1 -> Node0x52a8070;
	Node0x52a8020 [shape=record,label="{lor.lhs.false49:                                  \l  %call50 = call i32 @keymatch(i8* %incdec.ptr, i8* nonnull getelementptr\l... inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i32 1) #6\l  %tobool51 = icmp eq i32 %call50, 0\l  br i1 %tobool51, label %if.else53, label %if.then52\l|{<s0>T|<s1>F}}"];
	Node0x52a8020:s0 -> Node0x52a8460;
	Node0x52a8020:s1 -> Node0x52a8070;
	Node0x52a8070 [shape=record,label="{if.then52:                                        \l  store i32 1, i32* %optimize_coding, align 8, !tbaa !19\l  br label %for.inc\l}"];
	Node0x52a8070 -> Node0x52a0a80;
	Node0x52a8460 [shape=record,label="{if.else53:                                        \l  %call54 = call i32 @keymatch(i8* %incdec.ptr, i8* nonnull getelementptr\l... inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i32 4) #6\l  %tobool55 = icmp eq i32 %call54, 0\l  br i1 %tobool55, label %if.else64, label %if.then56\l|{<s0>T|<s1>F}}"];
	Node0x52a8460:s0 -> Node0x52a89e0;
	Node0x52a8460:s1 -> Node0x52a8a60;
	Node0x52a8a60 [shape=record,label="{if.then56:                                        \l  %inc57 = add nsw i32 %argn.029, 1\l  %cmp58 = icmp slt i32 %inc57, %argc\l  br i1 %cmp58, label %if.end61, label %if.then60\l|{<s0>T|<s1>F}}"];
	Node0x52a8a60:s0 -> Node0x52a8cf0;
	Node0x52a8a60:s1 -> Node0x52a8d70;
	Node0x52a8d70 [shape=record,label="{if.then60:                                        \l  call fastcc void @usage()\l  unreachable\l}"];
	Node0x52a8cf0 [shape=record,label="{if.end61:                                         \l  %idxprom62 = sext i32 %inc57 to i64\l  %arrayidx63 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom62\l  %15 = bitcast i8** %arrayidx63 to i64*\l  %16 = load i64, i64* %15, align 8, !tbaa !2\l  store i64 %16, i64* bitcast (i8** @outfilename to i64*), align 8, !tbaa !2\l  br label %for.inc\l}"];
	Node0x52a8cf0 -> Node0x52a0a80;
	Node0x52a89e0 [shape=record,label="{if.else64:                                        \l  %call65 = call i32 @keymatch(i8* %incdec.ptr, i8* nonnull getelementptr\l... inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i32 1) #6\l  %tobool66 = icmp eq i32 %call65, 0\l  br i1 %tobool66, label %if.else68, label %for.inc\l|{<s0>T|<s1>F}}"];
	Node0x52a89e0:s0 -> Node0x5292e10;
	Node0x52a89e0:s1 -> Node0x52a0a80;
	Node0x5292e10 [shape=record,label="{if.else68:                                        \l  %call69 = call i32 @keymatch(i8* %incdec.ptr, i8* nonnull getelementptr\l... inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i32 1) #6\l  %tobool70 = icmp eq i32 %call69, 0\l  br i1 %tobool70, label %if.else106, label %if.then71\l|{<s0>T|<s1>F}}"];
	Node0x5292e10:s0 -> Node0x52931a0;
	Node0x5292e10:s1 -> Node0x5293220;
	Node0x5293220 [shape=record,label="{if.then71:                                        \l  call void @llvm.lifetime.start(i64 8, i8* %1) #6\l  call void @llvm.lifetime.start(i64 1, i8* nonnull %ch73) #6\l  store i8 120, i8* %ch73, align 1, !tbaa !14\l  %inc74 = add nsw i32 %argn.029, 1\l  %cmp75 = icmp slt i32 %inc74, %argc\l  br i1 %cmp75, label %if.end78, label %if.then77\l|{<s0>T|<s1>F}}"];
	Node0x5293220:s0 -> Node0x52932a0;
	Node0x5293220:s1 -> Node0x52937e0;
	Node0x52937e0 [shape=record,label="{if.then77:                                        \l  call fastcc void @usage()\l  unreachable\l}"];
	Node0x52932a0 [shape=record,label="{if.end78:                                         \l  %idxprom79 = sext i32 %inc74 to i64\l  %arrayidx80 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom79\l  %17 = load i8*, i8** %arrayidx80, align 8, !tbaa !2\l  %call81 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %17, i8* nonnull\l... getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i64*\l... nonnull %lval72, i8* nonnull %ch73) #6\l  %cmp82 = icmp slt i32 %call81, 1\l  br i1 %cmp82, label %if.then84, label %if.end85\l|{<s0>T|<s1>F}}"];
	Node0x52932a0:s0 -> Node0x52a3db0;
	Node0x52932a0:s1 -> Node0x52a3e90;
	Node0x52a3db0 [shape=record,label="{if.then84:                                        \l  call fastcc void @usage()\l  unreachable\l}"];
	Node0x52a3e90 [shape=record,label="{if.end85:                                         \l  %18 = load i64, i64* %lval72, align 8, !tbaa !15\l  %19 = icmp ugt i64 %18, 65535\l  br i1 %19, label %if.then91, label %if.end92\l|{<s0>T|<s1>F}}"];
	Node0x52a3e90:s0 -> Node0x52abef0;
	Node0x52a3e90:s1 -> Node0x52abf70;
	Node0x52abef0 [shape=record,label="{if.then91:                                        \l  call fastcc void @usage()\l  unreachable\l}"];
	Node0x52abf70 [shape=record,label="{if.end92:                                         \l  %20 = load i8, i8* %ch73, align 1, !tbaa !14\l  switch i8 %20, label %if.else102 [\l    i8 98, label %if.then100\l    i8 66, label %if.then100\l  ]\l|{<s0>def|<s1>98|<s2>66}}"];
	Node0x52abf70:s0 -> Node0x52ac1f0;
	Node0x52abf70:s1 -> Node0x52ac2b0;
	Node0x52abf70:s2 -> Node0x52ac2b0;
	Node0x52ac2b0 [shape=record,label="{if.then100:                                       \l  %conv101 = trunc i64 %18 to i32\l  store i32 %conv101, i32* %restart_interval, align 8, !tbaa !20\l  br label %if.end105\l}"];
	Node0x52ac2b0 -> Node0x52ac6d0;
	Node0x52ac1f0 [shape=record,label="{if.else102:                                       \l  %conv103 = trunc i64 %18 to i32\l  br label %if.end105\l}"];
	Node0x52ac1f0 -> Node0x52ac6d0;
	Node0x52ac6d0 [shape=record,label="{if.end105:                                        \l  %storemerge = phi i32 [ 0, %if.then100 ], [ %conv103, %if.else102 ]\l  store i32 %storemerge, i32* %restart_in_rows104, align 4, !tbaa !21\l  call void @llvm.lifetime.end(i64 1, i8* nonnull %ch73) #6\l  call void @llvm.lifetime.end(i64 8, i8* nonnull %1) #6\l  br label %for.inc\l}"];
	Node0x52ac6d0 -> Node0x52a0a80;
	Node0x52931a0 [shape=record,label="{if.else106:                                       \l  %call107 = call i32 @keymatch(i8* %incdec.ptr, i8* nonnull getelementptr\l... inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i32 2) #6\l  %tobool108 = icmp eq i32 %call107, 0\l  br i1 %tobool108, label %if.else117, label %if.then109\l|{<s0>T|<s1>F}}"];
	Node0x52931a0:s0 -> Node0x52acfb0;
	Node0x52931a0:s1 -> Node0x52ad030;
	Node0x52ad030 [shape=record,label="{if.then109:                                       \l  %inc110 = add nsw i32 %argn.029, 1\l  %cmp111 = icmp slt i32 %inc110, %argc\l  br i1 %cmp111, label %if.end114, label %if.then113\l|{<s0>T|<s1>F}}"];
	Node0x52ad030:s0 -> Node0x52ad2c0;
	Node0x52ad030:s1 -> Node0x52ad340;
	Node0x52ad340 [shape=record,label="{if.then113:                                       \l  call fastcc void @usage()\l  unreachable\l}"];
	Node0x52ad2c0 [shape=record,label="{if.end114:                                        \l  %idxprom115 = sext i32 %inc110 to i64\l  %arrayidx116 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom115\l  %21 = load i8*, i8** %arrayidx116, align 8, !tbaa !2\l  br label %for.inc\l}"];
	Node0x52ad2c0 -> Node0x52a0a80;
	Node0x52acfb0 [shape=record,label="{if.else117:                                       \l  call fastcc void @usage()\l  unreachable\l}"];
	Node0x52a0a80 [shape=record,label="{for.inc:                                          \l  %argn.1 = phi i32 [ %argn.029, %if.then5 ], [ %argn.029, %if.end17 ], [\l... %inc24, %if.end44 ], [ %argn.029, %if.then52 ], [ %inc57, %if.end61 ], [\l... %inc74, %if.end105 ], [ %inc110, %if.end114 ], [ %argn.029, %if.else64 ]\l  %simple_progressive.1 = phi i32 [ %simple_progressive.030, %if.then5 ], [\l... %simple_progressive.030, %if.end17 ], [ %simple_progressive.030, %if.end44 ],\l... [ %simple_progressive.030, %if.then52 ], [ %simple_progressive.030, %if.end61\l... ], [ %simple_progressive.030, %if.end105 ], [ %simple_progressive.030,\l... %if.end114 ], [ 1, %if.else64 ]\l  %scansarg.1 = phi i8* [ %scansarg.031, %if.then5 ], [ %scansarg.031,\l... %if.end17 ], [ %scansarg.031, %if.end44 ], [ %scansarg.031, %if.then52 ], [\l... %scansarg.031, %if.end61 ], [ %scansarg.031, %if.end105 ], [ %21, %if.end114\l... ], [ %scansarg.031, %if.else64 ]\l  %inc126 = add nsw i32 %argn.1, 1\l  %cmp = icmp slt i32 %inc126, %argc\l  br i1 %cmp, label %for.body, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x52a0a80:s0 -> Node0x52a0930;
	Node0x52a0a80:s1 -> Node0x52a1dc0;
	Node0x52a1dc0 [shape=record,label="{for.end.loopexit:                                 \l  %scansarg.0.lcssa.ph = phi i8* [ %scansarg.031, %if.then ], [ %scansarg.1,\l... %for.inc ]\l  %simple_progressive.0.lcssa.ph = phi i32 [ %simple_progressive.030, %if.then\l... ], [ %simple_progressive.1, %for.inc ]\l  %argn.0.lcssa.ph = phi i32 [ %argn.029, %if.then ], [ %inc126, %for.inc ]\l  br label %for.end\l}"];
	Node0x52a1dc0 -> Node0x529f5e0;
	Node0x529f5e0 [shape=record,label="{for.end:                                          \l  %scansarg.0.lcssa = phi i8* [ null, %entry ], [ %scansarg.0.lcssa.ph,\l... %for.end.loopexit ]\l  %simple_progressive.0.lcssa = phi i32 [ 0, %entry ], [\l... %simple_progressive.0.lcssa.ph, %for.end.loopexit ]\l  %argn.0.lcssa = phi i32 [ 1, %entry ], [ %argn.0.lcssa.ph, %for.end.loopexit\l... ]\l  %tobool127 = icmp eq i32 %for_real, 0\l  br i1 %tobool127, label %if.end140, label %if.then128\l|{<s0>T|<s1>F}}"];
	Node0x529f5e0:s0 -> Node0x52ae200;
	Node0x529f5e0:s1 -> Node0x52ae2e0;
	Node0x52ae2e0 [shape=record,label="{if.then128:                                       \l  %tobool129 = icmp eq i32 %simple_progressive.0.lcssa, 0\l  br i1 %tobool129, label %if.end131, label %if.then130\l|{<s0>T|<s1>F}}"];
	Node0x52ae2e0:s0 -> Node0x52ae4d0;
	Node0x52ae2e0:s1 -> Node0x52ae550;
	Node0x52ae550 [shape=record,label="{if.then130:                                       \l  call void @jpeg_simple_progression(%struct.jpeg_compress_struct* %cinfo) #6\l  br label %if.end131\l}"];
	Node0x52ae550 -> Node0x52ae4d0;
	Node0x52ae4d0 [shape=record,label="{if.end131:                                        \l  %cmp132 = icmp eq i8* %scansarg.0.lcssa, null\l  br i1 %cmp132, label %if.end140, label %if.then134\l|{<s0>T|<s1>F}}"];
	Node0x52ae4d0:s0 -> Node0x52ae200;
	Node0x52ae4d0:s1 -> Node0x52aea10;
	Node0x52aea10 [shape=record,label="{if.then134:                                       \l  %call135 = call i32 @read_scan_script(%struct.jpeg_compress_struct* %cinfo,\l... i8* nonnull %scansarg.0.lcssa) #6\l  %tobool136 = icmp eq i32 %call135, 0\l  br i1 %tobool136, label %if.then137, label %if.end140\l|{<s0>T|<s1>F}}"];
	Node0x52aea10:s0 -> Node0x52aee10;
	Node0x52aea10:s1 -> Node0x52ae200;
	Node0x52aee10 [shape=record,label="{if.then137:                                       \l  call fastcc void @usage()\l  unreachable\l}"];
	Node0x52ae200 [shape=record,label="{if.end140:                                        \l  ret i32 %argn.0.lcssa\l}"];
}
