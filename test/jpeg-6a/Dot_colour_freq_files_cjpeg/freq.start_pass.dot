digraph "CFG for 'start_pass' function" {
	label="CFG for 'start_pass' function";

	Node0x585fbe0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %idct1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 80\l  %0 = bitcast %struct.jpeg_inverse_dct** %idct1 to\l... %struct.my_idct_controller**\l  %1 = load %struct.my_idct_controller*, %struct.my_idct_controller** %0,\l... align 8, !tbaa !2\l  %num_components = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %2 = load i32, i32* %num_components, align 8, !tbaa !10\l  %cmp161 = icmp sgt i32 %2, 0\l  br i1 %cmp161, label %for.body.lr.ph, label %for.end93\l|{<s0>T|<s1>F}}"];
	Node0x585fbe0:s0 -> Node0x58604e0;
	Node0x585fbe0:s1 -> Node0x5860590;
	Node0x58604e0 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  %comp_info = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43\l  %3 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !11\l  %err10 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %4 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %dct_method = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 16\l  br label %for.body\l}"];
	Node0x58604e0 -> Node0x5861030;
	Node0x5861030 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %indvars.iv181 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next182,\l... %for.inc91 ]\l  %compptr.0164 = phi %struct.jpeg_component_info* [ %3, %for.body.lr.ph ], [\l... %incdec.ptr, %for.inc91 ]\l  %method.0163 = phi i32 [ 0, %for.body.lr.ph ], [ %method.1, %for.inc91 ]\l  %method_ptr.0162 = phi void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i16*, i8**, i32)* [ null, %for.body.lr.ph ], [\l... %method_ptr.1, %for.inc91 ]\l  %DCT_scaled_size = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0164, i64 0, i32 9\l  %5 = load i32, i32* %DCT_scaled_size, align 4, !tbaa !12\l  switch i32 %5, label %sw.default9 [\l    i32 1, label %sw.epilog17\l    i32 2, label %sw.bb2\l    i32 4, label %sw.bb3\l    i32 8, label %sw.bb4\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>4|<s4>8}}"];
	Node0x5861030:s0 -> Node0x5862480;
	Node0x5861030:s1 -> Node0x5862560;
	Node0x5861030:s2 -> Node0x5862680;
	Node0x5861030:s3 -> Node0x5862790;
	Node0x5861030:s4 -> Node0x5862860;
	Node0x5862680 [shape=record, style = filled, fillcolor = blue, label="{sw.bb2:                                           \l  br label %sw.epilog17\l}"];
	Node0x5862680 -> Node0x5862560;
	Node0x5862790 [shape=record, style = filled, fillcolor = blue, label="{sw.bb3:                                           \l  br label %sw.epilog17\l}"];
	Node0x5862790 -> Node0x5862560;
	Node0x5862860 [shape=record, style = filled, fillcolor = blue, label="{sw.bb4:                                           \l  %6 = load i32, i32* %dct_method, align 8, !tbaa !14\l  %7 = icmp ult i32 %6, 3\l  br i1 %7, label %switch.lookup, label %sw.default\l|{<s0>T|<s1>F}}"];
	Node0x5862860:s0 -> Node0x5862c80;
	Node0x5862860:s1 -> Node0x5862d60;
	Node0x5862d60 [shape=record, style = filled, fillcolor = blue, label="{sw.default:                                       \l  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err10, align 8,\l... !tbaa !15\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 5\l  store i32 47, i32* %msg_code, align 8, !tbaa !16\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 0\l  %9 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !19\l  tail call void %9(%struct.jpeg_common_struct* nonnull %4) #3\l  br label %sw.epilog17\l}"];
	Node0x5862d60 -> Node0x5862560;
	Node0x5862480 [shape=record, style = filled, fillcolor = blue, label="{sw.default9:                                      \l  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err10, align\l... 8, !tbaa !15\l  %msg_code11 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %10, i64 0, i32 5\l  store i32 6, i32* %msg_code11, align 8, !tbaa !16\l  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %10, i64 0, i32 6, i32 0, i64 0\l  store i32 %5, i32* %arrayidx, align 4, !tbaa !20\l  %error_exit16 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %10, i64 0, i32 0\l  %11 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit16, align 8, !tbaa !19\l  tail call void %11(%struct.jpeg_common_struct* %4) #3\l  br label %sw.epilog17\l}"];
	Node0x5862480 -> Node0x5862560;
	Node0x5862c80 [shape=record, style = filled, fillcolor = blue, label="{switch.lookup:                                    \l  %12 = sext i32 %6 to i64\l  %switch.gep = getelementptr inbounds [3 x void\l... (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i16*, i8**,\l... i32)*], [3 x void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i16*, i8**, i32)*]* @switch.table, i64 0, i64\l... %12\l  %switch.load = load void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i16*, i8**, i32)*, void\l... (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i16*, i8**,\l... i32)** %switch.gep, align 8\l  br label %sw.epilog17\l}"];
	Node0x5862c80 -> Node0x5862560;
	Node0x5862560 [shape=record, style = filled, fillcolor = blue, label="{sw.epilog17:                                      \l  %method_ptr.1 = phi void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i16*, i8**, i32)* [ %method_ptr.0162,\l... %sw.default9 ], [ %method_ptr.0162, %sw.default ], [ @jpeg_idct_4x4, %sw.bb3\l... ], [ @jpeg_idct_2x2, %sw.bb2 ], [ @jpeg_idct_1x1, %for.body ], [\l... %switch.load, %switch.lookup ]\l  %method.1 = phi i32 [ %method.0163, %sw.default9 ], [ %method.0163,\l... %sw.default ], [ 0, %sw.bb3 ], [ 0, %sw.bb2 ], [ 0, %for.body ], [ %6,\l... %switch.lookup ]\l  %arrayidx18 = getelementptr inbounds %struct.my_idct_controller,\l... %struct.my_idct_controller* %1, i64 0, i32 0, i32 1, i64 %indvars.iv181\l  store void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*,\l... i16*, i8**, i32)* %method_ptr.1, void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i16*, i8**, i32)** %arrayidx18, align 8, !tbaa\l... !21\l  %component_needed = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0164, i64 0, i32 12\l  %13 = load i32, i32* %component_needed, align 8, !tbaa !22\l  %tobool = icmp eq i32 %13, 0\l  br i1 %tobool, label %for.inc91, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x5862560:s0 -> Node0x5861230;
	Node0x5862560:s1 -> Node0x58669c0;
	Node0x58669c0 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false:                                    \l  %arrayidx20 = getelementptr inbounds %struct.my_idct_controller,\l... %struct.my_idct_controller* %1, i64 0, i32 1, i64 %indvars.iv181\l  %14 = load i32, i32* %arrayidx20, align 4, !tbaa !20\l  %cmp21 = icmp eq i32 %14, %method.1\l  br i1 %cmp21, label %for.inc91, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x58669c0:s0 -> Node0x5861230;
	Node0x58669c0:s1 -> Node0x5866c60;
	Node0x5866c60 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %quant_table = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0164, i64 0, i32 19\l  %15 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %quant_table, align 8,\l... !tbaa !23\l  %cmp22 = icmp eq %struct.JQUANT_TBL* %15, null\l  br i1 %cmp22, label %for.inc91, label %if.end24\l|{<s0>T|<s1>F}}"];
	Node0x5866c60:s0 -> Node0x5861230;
	Node0x5866c60:s1 -> Node0x58670d0;
	Node0x58670d0 [shape=record, style = filled, fillcolor = blue, label="{if.end24:                                         \l  store i32 %method.1, i32* %arrayidx20, align 4, !tbaa !20\l  switch i32 %method.1, label %sw.default85 [\l    i32 0, label %sw.bb28\l    i32 1, label %sw.bb36\l    i32 2, label %sw.bb55\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2}}"];
	Node0x58670d0:s0 -> Node0x58672c0;
	Node0x58670d0:s1 -> Node0x5867340;
	Node0x58670d0:s2 -> Node0x5867410;
	Node0x58670d0:s3 -> Node0x58674e0;
	Node0x5867340 [shape=record, style = filled, fillcolor = blue, label="{sw.bb28:                                          \l  %dct_table = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0164, i64 0, i32 20\l  %16 = bitcast i8** %dct_table to i32**\l  %17 = load i32*, i32** %16, align 8, !tbaa !24\l  br label %vector.body\l}"];
	Node0x5867340 -> Node0x5867ed0;
	Node0x5867ed0 [shape=record, style = filled, fillcolor = blue, label="{vector.body:                                      \l  %18 = bitcast %struct.JQUANT_TBL* %15 to \<4 x i16\>*\l  %wide.load = load \<4 x i16\>, \<4 x i16\>* %18, align 2, !tbaa !25\l  %19 = zext \<4 x i16\> %wide.load to \<4 x i32\>\l  %20 = bitcast i32* %17 to \<4 x i32\>*\l  store \<4 x i32\> %19, \<4 x i32\>* %20, align 4, !tbaa !20\l  %21 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 4\l  %22 = bitcast i16* %21 to \<4 x i16\>*\l  %wide.load.1 = load \<4 x i16\>, \<4 x i16\>* %22, align 2, !tbaa !25\l  %23 = zext \<4 x i16\> %wide.load.1 to \<4 x i32\>\l  %24 = getelementptr inbounds i32, i32* %17, i64 4\l  %25 = bitcast i32* %24 to \<4 x i32\>*\l  store \<4 x i32\> %23, \<4 x i32\>* %25, align 4, !tbaa !20\l  %26 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 8\l  %27 = bitcast i16* %26 to \<4 x i16\>*\l  %wide.load.2 = load \<4 x i16\>, \<4 x i16\>* %27, align 2, !tbaa !25\l  %28 = zext \<4 x i16\> %wide.load.2 to \<4 x i32\>\l  %29 = getelementptr inbounds i32, i32* %17, i64 8\l  %30 = bitcast i32* %29 to \<4 x i32\>*\l  store \<4 x i32\> %28, \<4 x i32\>* %30, align 4, !tbaa !20\l  %31 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 12\l  %32 = bitcast i16* %31 to \<4 x i16\>*\l  %wide.load.3 = load \<4 x i16\>, \<4 x i16\>* %32, align 2, !tbaa !25\l  %33 = zext \<4 x i16\> %wide.load.3 to \<4 x i32\>\l  %34 = getelementptr inbounds i32, i32* %17, i64 12\l  %35 = bitcast i32* %34 to \<4 x i32\>*\l  store \<4 x i32\> %33, \<4 x i32\>* %35, align 4, !tbaa !20\l  %36 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 16\l  %37 = bitcast i16* %36 to \<4 x i16\>*\l  %wide.load.4 = load \<4 x i16\>, \<4 x i16\>* %37, align 2, !tbaa !25\l  %38 = zext \<4 x i16\> %wide.load.4 to \<4 x i32\>\l  %39 = getelementptr inbounds i32, i32* %17, i64 16\l  %40 = bitcast i32* %39 to \<4 x i32\>*\l  store \<4 x i32\> %38, \<4 x i32\>* %40, align 4, !tbaa !20\l  %41 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 20\l  %42 = bitcast i16* %41 to \<4 x i16\>*\l  %wide.load.5 = load \<4 x i16\>, \<4 x i16\>* %42, align 2, !tbaa !25\l  %43 = zext \<4 x i16\> %wide.load.5 to \<4 x i32\>\l  %44 = getelementptr inbounds i32, i32* %17, i64 20\l  %45 = bitcast i32* %44 to \<4 x i32\>*\l  store \<4 x i32\> %43, \<4 x i32\>* %45, align 4, !tbaa !20\l  %46 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 24\l  %47 = bitcast i16* %46 to \<4 x i16\>*\l  %wide.load.6 = load \<4 x i16\>, \<4 x i16\>* %47, align 2, !tbaa !25\l  %48 = zext \<4 x i16\> %wide.load.6 to \<4 x i32\>\l  %49 = getelementptr inbounds i32, i32* %17, i64 24\l  %50 = bitcast i32* %49 to \<4 x i32\>*\l  store \<4 x i32\> %48, \<4 x i32\>* %50, align 4, !tbaa !20\l  %51 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 28\l  %52 = bitcast i16* %51 to \<4 x i16\>*\l  %wide.load.7 = load \<4 x i16\>, \<4 x i16\>* %52, align 2, !tbaa !25\l  %53 = zext \<4 x i16\> %wide.load.7 to \<4 x i32\>\l  %54 = getelementptr inbounds i32, i32* %17, i64 28\l  %55 = bitcast i32* %54 to \<4 x i32\>*\l  store \<4 x i32\> %53, \<4 x i32\>* %55, align 4, !tbaa !20\l  %56 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 32\l  %57 = bitcast i16* %56 to \<4 x i16\>*\l  %wide.load.8 = load \<4 x i16\>, \<4 x i16\>* %57, align 2, !tbaa !25\l  %58 = zext \<4 x i16\> %wide.load.8 to \<4 x i32\>\l  %59 = getelementptr inbounds i32, i32* %17, i64 32\l  %60 = bitcast i32* %59 to \<4 x i32\>*\l  store \<4 x i32\> %58, \<4 x i32\>* %60, align 4, !tbaa !20\l  %61 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 36\l  %62 = bitcast i16* %61 to \<4 x i16\>*\l  %wide.load.9 = load \<4 x i16\>, \<4 x i16\>* %62, align 2, !tbaa !25\l  %63 = zext \<4 x i16\> %wide.load.9 to \<4 x i32\>\l  %64 = getelementptr inbounds i32, i32* %17, i64 36\l  %65 = bitcast i32* %64 to \<4 x i32\>*\l  store \<4 x i32\> %63, \<4 x i32\>* %65, align 4, !tbaa !20\l  %66 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 40\l  %67 = bitcast i16* %66 to \<4 x i16\>*\l  %wide.load.10 = load \<4 x i16\>, \<4 x i16\>* %67, align 2, !tbaa !25\l  %68 = zext \<4 x i16\> %wide.load.10 to \<4 x i32\>\l  %69 = getelementptr inbounds i32, i32* %17, i64 40\l  %70 = bitcast i32* %69 to \<4 x i32\>*\l  store \<4 x i32\> %68, \<4 x i32\>* %70, align 4, !tbaa !20\l  %71 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 44\l  %72 = bitcast i16* %71 to \<4 x i16\>*\l  %wide.load.11 = load \<4 x i16\>, \<4 x i16\>* %72, align 2, !tbaa !25\l  %73 = zext \<4 x i16\> %wide.load.11 to \<4 x i32\>\l  %74 = getelementptr inbounds i32, i32* %17, i64 44\l  %75 = bitcast i32* %74 to \<4 x i32\>*\l  store \<4 x i32\> %73, \<4 x i32\>* %75, align 4, !tbaa !20\l  %76 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 48\l  %77 = bitcast i16* %76 to \<4 x i16\>*\l  %wide.load.12 = load \<4 x i16\>, \<4 x i16\>* %77, align 2, !tbaa !25\l  %78 = zext \<4 x i16\> %wide.load.12 to \<4 x i32\>\l  %79 = getelementptr inbounds i32, i32* %17, i64 48\l  %80 = bitcast i32* %79 to \<4 x i32\>*\l  store \<4 x i32\> %78, \<4 x i32\>* %80, align 4, !tbaa !20\l  %81 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 52\l  %82 = bitcast i16* %81 to \<4 x i16\>*\l  %wide.load.13 = load \<4 x i16\>, \<4 x i16\>* %82, align 2, !tbaa !25\l  %83 = zext \<4 x i16\> %wide.load.13 to \<4 x i32\>\l  %84 = getelementptr inbounds i32, i32* %17, i64 52\l  %85 = bitcast i32* %84 to \<4 x i32\>*\l  store \<4 x i32\> %83, \<4 x i32\>* %85, align 4, !tbaa !20\l  %86 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 56\l  %87 = bitcast i16* %86 to \<4 x i16\>*\l  %wide.load.14 = load \<4 x i16\>, \<4 x i16\>* %87, align 2, !tbaa !25\l  %88 = zext \<4 x i16\> %wide.load.14 to \<4 x i32\>\l  %89 = getelementptr inbounds i32, i32* %17, i64 56\l  %90 = bitcast i32* %89 to \<4 x i32\>*\l  store \<4 x i32\> %88, \<4 x i32\>* %90, align 4, !tbaa !20\l  %91 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 60\l  %92 = bitcast i16* %91 to \<4 x i16\>*\l  %wide.load.15 = load \<4 x i16\>, \<4 x i16\>* %92, align 2, !tbaa !25\l  %93 = zext \<4 x i16\> %wide.load.15 to \<4 x i32\>\l  %94 = getelementptr inbounds i32, i32* %17, i64 60\l  %95 = bitcast i32* %94 to \<4 x i32\>*\l  store \<4 x i32\> %93, \<4 x i32\>* %95, align 4, !tbaa !20\l  br label %for.inc91\l}"];
	Node0x5867ed0 -> Node0x5861230;
	Node0x5867410 [shape=record, style = filled, fillcolor = blue, label="{sw.bb36:                                          \l  %dct_table37 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0164, i64 0, i32 20\l  %96 = bitcast i8** %dct_table37 to i32**\l  %97 = load i32*, i32** %96, align 8, !tbaa !24\l  br label %vector.body187\l}"];
	Node0x5867410 -> Node0x586e6f0;
	Node0x586e6f0 [shape=record, style = filled, fillcolor = blue, label="{vector.body187:                                   \l  %index192 = phi i64 [ 0, %sw.bb36 ], [ %index.next193.1, %vector.body187 ]\l  %98 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 %index192\l  %99 = bitcast i16* %98 to \<2 x i16\>*\l  %wide.load199 = load \<2 x i16\>, \<2 x i16\>* %99, align 2, !tbaa !25\l  %100 = zext \<2 x i16\> %wide.load199 to \<2 x i64\>\l  %101 = getelementptr inbounds [64 x i16], [64 x i16]* @start_pass.aanscales,\l... i64 0, i64 %index192\l  %102 = bitcast i16* %101 to \<2 x i16\>*\l  %wide.load200 = load \<2 x i16\>, \<2 x i16\>* %102, align 8, !tbaa !25\l  %103 = sext \<2 x i16\> %wide.load200 to \<2 x i64\>\l  %104 = mul nsw \<2 x i64\> %103, %100\l  %105 = add nsw \<2 x i64\> %104, \<i64 2048, i64 2048\>\l  %106 = lshr \<2 x i64\> %105, \<i64 12, i64 12\>\l  %107 = trunc \<2 x i64\> %106 to \<2 x i32\>\l  %108 = getelementptr inbounds i32, i32* %97, i64 %index192\l  %109 = bitcast i32* %108 to \<2 x i32\>*\l  store \<2 x i32\> %107, \<2 x i32\>* %109, align 4, !tbaa !20\l  %index.next193 = or i64 %index192, 2\l  %110 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15,\l... i64 0, i32 0, i64 %index.next193\l  %111 = bitcast i16* %110 to \<2 x i16\>*\l  %wide.load199.1 = load \<2 x i16\>, \<2 x i16\>* %111, align 2, !tbaa !25\l  %112 = zext \<2 x i16\> %wide.load199.1 to \<2 x i64\>\l  %113 = getelementptr inbounds [64 x i16], [64 x i16]* @start_pass.aanscales,\l... i64 0, i64 %index.next193\l  %114 = bitcast i16* %113 to \<2 x i16\>*\l  %wide.load200.1 = load \<2 x i16\>, \<2 x i16\>* %114, align 4, !tbaa !25\l  %115 = sext \<2 x i16\> %wide.load200.1 to \<2 x i64\>\l  %116 = mul nsw \<2 x i64\> %115, %112\l  %117 = add nsw \<2 x i64\> %116, \<i64 2048, i64 2048\>\l  %118 = lshr \<2 x i64\> %117, \<i64 12, i64 12\>\l  %119 = trunc \<2 x i64\> %118 to \<2 x i32\>\l  %120 = getelementptr inbounds i32, i32* %97, i64 %index.next193\l  %121 = bitcast i32* %120 to \<2 x i32\>*\l  store \<2 x i32\> %119, \<2 x i32\>* %121, align 4, !tbaa !20\l  %index.next193.1 = add nsw i64 %index192, 4\l  %122 = icmp eq i64 %index.next193.1, 64\l  br i1 %122, label %for.inc91.loopexit201, label %vector.body187, !llvm.loop\l... !26\l|{<s0>T|<s1>F}}"];
	Node0x586e6f0:s0 -> Node0x586ff70;
	Node0x586e6f0:s1 -> Node0x586e6f0;
	Node0x58674e0 [shape=record, style = filled, fillcolor = blue, label="{sw.bb55:                                          \l  %dct_table56 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0164, i64 0, i32 20\l  %123 = bitcast i8** %dct_table56 to float**\l  %124 = load float*, float** %123, align 8, !tbaa !24\l  br label %for.cond61.preheader\l}"];
	Node0x58674e0 -> Node0x5870300;
	Node0x5870300 [shape=record, style = filled, fillcolor = blue, label="{for.cond61.preheader:                             \l  %indvars.iv172 = phi i64 [ 0, %sw.bb55 ], [ %indvars.iv.next173,\l... %for.cond61.preheader ]\l  %indvars.iv170 = phi i64 [ 0, %sw.bb55 ], [ %indvars.iv.next171,\l... %for.cond61.preheader ]\l  %arrayidx70 = getelementptr inbounds [8 x double], [8 x double]*\l... @start_pass.aanscalefactor, i64 0, i64 %indvars.iv170\l  %125 = load double, double* %arrayidx70, align 8\l  %arrayidx67 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL*\l... %15, i64 0, i32 0, i64 %indvars.iv172\l  %126 = load i16, i16* %arrayidx67, align 2, !tbaa !25\l  %conv68 = uitofp i16 %126 to double\l  %mul71 = fmul double %conv68, %125\l  %conv75 = fptrunc double %mul71 to float\l  %arrayidx77 = getelementptr inbounds float, float* %124, i64 %indvars.iv172\l  store float %conv75, float* %arrayidx77, align 4, !tbaa !29\l  %indvars.iv.next169 = or i64 %indvars.iv172, 1\l  %arrayidx67.1 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %15, i64 0, i32 0, i64 %indvars.iv.next169\l  %127 = load i16, i16* %arrayidx67.1, align 2, !tbaa !25\l  %conv68.1 = uitofp i16 %127 to double\l  %mul71.1 = fmul double %conv68.1, %125\l  %mul74.1 = fmul double %mul71.1, 0x3FF63150B14861EF\l  %conv75.1 = fptrunc double %mul74.1 to float\l  %arrayidx77.1 = getelementptr inbounds float, float* %124, i64\l... %indvars.iv.next169\l  store float %conv75.1, float* %arrayidx77.1, align 4, !tbaa !29\l  %indvars.iv.next169.1 = add nsw i64 %indvars.iv.next169, 1\l  %arrayidx67.2 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %15, i64 0, i32 0, i64 %indvars.iv.next169.1\l  %128 = load i16, i16* %arrayidx67.2, align 2, !tbaa !25\l  %conv68.2 = uitofp i16 %128 to double\l  %mul71.2 = fmul double %conv68.2, %125\l  %mul74.2 = fmul double %mul71.2, 0x3FF4E7AE914D6FCA\l  %conv75.2 = fptrunc double %mul74.2 to float\l  %arrayidx77.2 = getelementptr inbounds float, float* %124, i64\l... %indvars.iv.next169.1\l  store float %conv75.2, float* %arrayidx77.2, align 4, !tbaa !29\l  %indvars.iv.next169.2 = or i64 %indvars.iv172, 3\l  %arrayidx67.3 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %15, i64 0, i32 0, i64 %indvars.iv.next169.2\l  %129 = load i16, i16* %arrayidx67.3, align 2, !tbaa !25\l  %conv68.3 = uitofp i16 %129 to double\l  %mul71.3 = fmul double %conv68.3, %125\l  %mul74.3 = fmul double %mul71.3, 0x3FF2D062EF6C11AA\l  %conv75.3 = fptrunc double %mul74.3 to float\l  %arrayidx77.3 = getelementptr inbounds float, float* %124, i64\l... %indvars.iv.next169.2\l  store float %conv75.3, float* %arrayidx77.3, align 4, !tbaa !29\l  %indvars.iv.next169.3 = add nsw i64 %indvars.iv.next169.2, 1\l  %arrayidx67.4 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %15, i64 0, i32 0, i64 %indvars.iv.next169.3\l  %130 = load i16, i16* %arrayidx67.4, align 2, !tbaa !25\l  %conv68.4 = uitofp i16 %130 to double\l  %mul71.4 = fmul double %conv68.4, %125\l  %conv75.4 = fptrunc double %mul71.4 to float\l  %arrayidx77.4 = getelementptr inbounds float, float* %124, i64\l... %indvars.iv.next169.3\l  store float %conv75.4, float* %arrayidx77.4, align 4, !tbaa !29\l  %indvars.iv.next169.4 = add nsw i64 %indvars.iv.next169.2, 2\l  %arrayidx67.5 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %15, i64 0, i32 0, i64 %indvars.iv.next169.4\l  %131 = load i16, i16* %arrayidx67.5, align 2, !tbaa !25\l  %conv68.5 = uitofp i16 %131 to double\l  %mul71.5 = fmul double %conv68.5, %125\l  %mul74.5 = fmul double %mul71.5, 0x3FE92469C0A7BF3B\l  %conv75.5 = fptrunc double %mul74.5 to float\l  %arrayidx77.5 = getelementptr inbounds float, float* %124, i64\l... %indvars.iv.next169.4\l  store float %conv75.5, float* %arrayidx77.5, align 4, !tbaa !29\l  %indvars.iv.next169.5 = add nsw i64 %indvars.iv.next169.2, 3\l  %arrayidx67.6 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %15, i64 0, i32 0, i64 %indvars.iv.next169.5\l  %132 = load i16, i16* %arrayidx67.6, align 2, !tbaa !25\l  %conv68.6 = uitofp i16 %132 to double\l  %mul71.6 = fmul double %conv68.6, %125\l  %mul74.6 = fmul double %mul71.6, 5.411961e-01\l  %conv75.6 = fptrunc double %mul74.6 to float\l  %arrayidx77.6 = getelementptr inbounds float, float* %124, i64\l... %indvars.iv.next169.5\l  store float %conv75.6, float* %arrayidx77.6, align 4, !tbaa !29\l  %indvars.iv.next169.6 = or i64 %indvars.iv172, 7\l  %arrayidx67.7 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %15, i64 0, i32 0, i64 %indvars.iv.next169.6\l  %133 = load i16, i16* %arrayidx67.7, align 2, !tbaa !25\l  %conv68.7 = uitofp i16 %133 to double\l  %mul71.7 = fmul double %conv68.7, %125\l  %mul74.7 = fmul double %mul71.7, 0x3FD1A855DE72AB5D\l  %conv75.7 = fptrunc double %mul74.7 to float\l  %arrayidx77.7 = getelementptr inbounds float, float* %124, i64\l... %indvars.iv.next169.6\l  store float %conv75.7, float* %arrayidx77.7, align 4, !tbaa !29\l  %indvars.iv.next171 = add nuw nsw i64 %indvars.iv170, 1\l  %indvars.iv.next173 = add nuw nsw i64 %indvars.iv172, 8\l  %exitcond174 = icmp eq i64 %indvars.iv.next171, 8\l  br i1 %exitcond174, label %for.inc91.loopexit202, label %for.cond61.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5870300:s0 -> Node0x5874770;
	Node0x5870300:s1 -> Node0x5870300;
	Node0x58672c0 [shape=record, style = filled, fillcolor = blue, label="{sw.default85:                                     \l  %134 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err10, align\l... 8, !tbaa !15\l  %msg_code87 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %134, i64 0, i32 5\l  store i32 47, i32* %msg_code87, align 8, !tbaa !16\l  %error_exit89 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %134, i64 0, i32 0\l  %135 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit89, align 8, !tbaa !19\l  tail call void %135(%struct.jpeg_common_struct* %4) #3\l  br label %for.inc91\l}"];
	Node0x58672c0 -> Node0x5861230;
	Node0x586ff70 [shape=record, style = filled, fillcolor = blue, label="{for.inc91.loopexit201:                            \l  br label %for.inc91\l}"];
	Node0x586ff70 -> Node0x5861230;
	Node0x5874770 [shape=record, style = filled, fillcolor = blue, label="{for.inc91.loopexit202:                            \l  br label %for.inc91\l}"];
	Node0x5874770 -> Node0x5861230;
	Node0x5861230 [shape=record, style = filled, fillcolor = blue, label="{for.inc91:                                        \l  %indvars.iv.next182 = add nuw nsw i64 %indvars.iv181, 1\l  %incdec.ptr = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0164, i64 1\l  %136 = load i32, i32* %num_components, align 8, !tbaa !10\l  %137 = sext i32 %136 to i64\l  %cmp = icmp slt i64 %indvars.iv.next182, %137\l  br i1 %cmp, label %for.body, label %for.end93.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5861230:s0 -> Node0x5861030;
	Node0x5861230:s1 -> Node0x5874d60;
	Node0x5874d60 [shape=record, style = filled, fillcolor = blue, label="{for.end93.loopexit:                               \l  br label %for.end93\l}"];
	Node0x5874d60 -> Node0x5860590;
	Node0x5860590 [shape=record, style = filled, fillcolor = blue, label="{for.end93:                                        \l  ret void\l}"];
}
