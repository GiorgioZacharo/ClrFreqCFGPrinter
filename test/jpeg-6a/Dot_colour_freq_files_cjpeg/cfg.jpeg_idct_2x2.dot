digraph "CFG for 'jpeg_idct_2x2' function" {
	label="CFG for 'jpeg_idct_2x2' function";

	Node0x657fca0 [shape=record,label="{entry:\l  %workspace = alloca [16 x i32], align 16\l  %sample_range_limit = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 61\l  %0 = load i8*, i8** %sample_range_limit, align 8, !tbaa !2\l  %1 = bitcast [16 x i32]* %workspace to i8*\l  call void @llvm.lifetime.start(i64 64, i8* %1) #2\l  %dct_table = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr, i64 0, i32 20\l  %2 = bitcast i8** %dct_table to i32**\l  %3 = load i32*, i32** %2, align 8, !tbaa !10\l  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %workspace, i64\l... 0, i64 0\l  br label %for.body\l}"];
	Node0x657fca0 -> Node0x6588930;
	Node0x6588a70 [shape=record,label="{for.cond65.preheader:                             \l  %add.ptr = getelementptr inbounds i8, i8* %0, i64 128\l  %idx.ext = zext i32 %output_col to i64\l  %4 = load i8*, i8** %output_buf, align 8, !tbaa !12\l  %add.ptr70 = getelementptr inbounds i8, i8* %4, i64 %idx.ext\l  %arrayidx71 = getelementptr inbounds [16 x i32], [16 x i32]* %workspace, i64\l... 0, i64 1\l  %5 = load i32, i32* %arrayidx71, align 4, !tbaa !13\l  %arrayidx72 = getelementptr inbounds [16 x i32], [16 x i32]* %workspace, i64\l... 0, i64 3\l  %6 = load i32, i32* %arrayidx72, align 4, !tbaa !13\l  %or73 = or i32 %6, %5\l  %arrayidx74 = getelementptr inbounds [16 x i32], [16 x i32]* %workspace, i64\l... 0, i64 5\l  %7 = load i32, i32* %arrayidx74, align 4, !tbaa !13\l  %or75 = or i32 %or73, %7\l  %arrayidx76 = getelementptr inbounds [16 x i32], [16 x i32]* %workspace, i64\l... 0, i64 7\l  %8 = load i32, i32* %arrayidx76, align 4, !tbaa !13\l  %or77 = or i32 %or75, %8\l  %cmp78 = icmp eq i32 %or77, 0\l  %9 = load i32, i32* %arraydecay, align 16, !tbaa !13\l  br i1 %cmp78, label %if.then80, label %if.end92\l|{<s0>T|<s1>F}}"];
	Node0x6588a70:s0 -> Node0x657ffa0;
	Node0x6588a70:s1 -> Node0x6579160;
	Node0x6588930 [shape=record,label="{for.body:                                         \l  %ctr.0217 = phi i32 [ 8, %entry ], [ %dec, %for.inc ]\l  %inptr.0216 = phi i16* [ %coef_block, %entry ], [ %incdec.ptr, %for.inc ]\l  %quantptr.0215 = phi i32* [ %3, %entry ], [ %incdec.ptr62, %for.inc ]\l  %wsptr.0214 = phi i32* [ %arraydecay, %entry ], [ %incdec.ptr63, %for.inc ]\l  %10 = or i32 %ctr.0217, 2\l  %11 = icmp eq i32 %10, 6\l  %cmp4 = icmp eq i32 %ctr.0217, 2\l  %or.cond130 = or i1 %cmp4, %11\l  br i1 %or.cond130, label %for.inc, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x6588930:s0 -> Node0x6588cb0;
	Node0x6588930:s1 -> Node0x658b900;
	Node0x658b900 [shape=record,label="{if.end:                                           \l  %arrayidx = getelementptr inbounds i16, i16* %inptr.0216, i64 8\l  %12 = load i16, i16* %arrayidx, align 2, !tbaa !14\l  %arrayidx5 = getelementptr inbounds i16, i16* %inptr.0216, i64 24\l  %13 = load i16, i16* %arrayidx5, align 2, !tbaa !14\l  %or206 = or i16 %13, %12\l  %arrayidx7 = getelementptr inbounds i16, i16* %inptr.0216, i64 40\l  %14 = load i16, i16* %arrayidx7, align 2, !tbaa !14\l  %or9207 = or i16 %or206, %14\l  %arrayidx10 = getelementptr inbounds i16, i16* %inptr.0216, i64 56\l  %15 = load i16, i16* %arrayidx10, align 2, !tbaa !14\l  %or12208 = or i16 %or9207, %15\l  %cmp13 = icmp eq i16 %or12208, 0\l  br i1 %cmp13, label %if.then15, label %if.end21\l|{<s0>T|<s1>F}}"];
	Node0x658b900:s0 -> Node0x658c100;
	Node0x658b900:s1 -> Node0x658c1e0;
	Node0x658c100 [shape=record,label="{if.then15:                                        \l  %16 = load i16, i16* %inptr.0216, align 2, !tbaa !14\l  %conv17 = sext i16 %16 to i32\l  %17 = load i32, i32* %quantptr.0215, align 4, !tbaa !13\l  %mul = shl i32 %17, 2\l  %shl = mul i32 %mul, %conv17\l  store i32 %shl, i32* %wsptr.0214, align 4, !tbaa !13\l  %arrayidx20 = getelementptr inbounds i32, i32* %wsptr.0214, i64 8\l  store i32 %shl, i32* %arrayidx20, align 4, !tbaa !13\l  br label %for.inc\l}"];
	Node0x658c100 -> Node0x6588cb0;
	Node0x658c1e0 [shape=record,label="{if.end21:                                         \l  %conv11 = sext i16 %15 to i32\l  %conv8 = sext i16 %14 to i32\l  %conv = sext i16 %12 to i32\l  %conv6 = sext i16 %13 to i32\l  %18 = load i16, i16* %inptr.0216, align 2, !tbaa !14\l  %conv23 = sext i16 %18 to i32\l  %19 = load i32, i32* %quantptr.0215, align 4, !tbaa !13\l  %mul25 = mul nsw i32 %conv23, %19\l  %conv26 = sext i32 %mul25 to i64\l  %shl27 = shl nsw i64 %conv26, 15\l  %arrayidx30 = getelementptr inbounds i32, i32* %quantptr.0215, i64 56\l  %20 = load i32, i32* %arrayidx30, align 4, !tbaa !13\l  %mul31 = mul nsw i32 %20, %conv11\l  %conv32 = sext i32 %mul31 to i64\l  %mul33 = mul nsw i64 %conv32, -5906\l  %arrayidx36 = getelementptr inbounds i32, i32* %quantptr.0215, i64 40\l  %21 = load i32, i32* %arrayidx36, align 4, !tbaa !13\l  %mul37 = mul nsw i32 %21, %conv8\l  %conv38 = sext i32 %mul37 to i64\l  %mul39 = mul nsw i64 %conv38, 6967\l  %add = add nsw i64 %mul39, %mul33\l  %arrayidx42 = getelementptr inbounds i32, i32* %quantptr.0215, i64 24\l  %22 = load i32, i32* %arrayidx42, align 4, !tbaa !13\l  %mul43 = mul nsw i32 %22, %conv6\l  %conv44 = sext i32 %mul43 to i64\l  %mul45 = mul nsw i64 %conv44, -10426\l  %add46 = add nsw i64 %add, %mul45\l  %arrayidx49 = getelementptr inbounds i32, i32* %quantptr.0215, i64 8\l  %23 = load i32, i32* %arrayidx49, align 4, !tbaa !13\l  %mul50 = mul nsw i32 %23, %conv\l  %conv51 = sext i32 %mul50 to i64\l  %mul52 = mul nsw i64 %conv51, 29692\l  %add53 = add nsw i64 %add46, %mul52\l  %add54 = or i64 %shl27, 4096\l  %add55 = add i64 %add54, %add53\l  %shr209 = lshr i64 %add55, 13\l  %conv56 = trunc i64 %shr209 to i32\l  store i32 %conv56, i32* %wsptr.0214, align 4, !tbaa !13\l  %add58 = sub i64 %add54, %add53\l  %shr59210 = lshr i64 %add58, 13\l  %conv60 = trunc i64 %shr59210 to i32\l  %arrayidx61 = getelementptr inbounds i32, i32* %wsptr.0214, i64 8\l  store i32 %conv60, i32* %arrayidx61, align 4, !tbaa !13\l  br label %for.inc\l}"];
	Node0x658c1e0 -> Node0x6588cb0;
	Node0x6588cb0 [shape=record,label="{for.inc:                                          \l  %incdec.ptr = getelementptr inbounds i16, i16* %inptr.0216, i64 1\l  %incdec.ptr62 = getelementptr inbounds i32, i32* %quantptr.0215, i64 1\l  %incdec.ptr63 = getelementptr inbounds i32, i32* %wsptr.0214, i64 1\l  %dec = add nsw i32 %ctr.0217, -1\l  %cmp = icmp sgt i32 %ctr.0217, 1\l  br i1 %cmp, label %for.body, label %for.cond65.preheader\l|{<s0>T|<s1>F}}"];
	Node0x6588cb0:s0 -> Node0x6588930;
	Node0x6588cb0:s1 -> Node0x6588a70;
	Node0x657ffa0 [shape=record,label="{if.then80:                                        \l  %conv83211 = zext i32 %9 to i64\l  %add84 = add nuw nsw i64 %conv83211, 16\l  %shr85204 = lshr i64 %add84, 5\l  %and = and i64 %shr85204, 1023\l  %arrayidx88 = getelementptr inbounds i8, i8* %add.ptr, i64 %and\l  %24 = load i8, i8* %arrayidx88, align 1, !tbaa !15\l  store i8 %24, i8* %add.ptr70, align 1, !tbaa !15\l  br label %for.inc128\l}"];
	Node0x657ffa0 -> Node0x658f610;
	Node0x6579160 [shape=record,label="{if.end92:                                         \l  %conv94 = sext i32 %9 to i64\l  %shl95 = shl nsw i64 %conv94, 15\l  %conv97 = sext i32 %8 to i64\l  %mul98 = mul nsw i64 %conv97, -5906\l  %conv100 = sext i32 %7 to i64\l  %mul101 = mul nsw i64 %conv100, 6967\l  %conv104 = sext i32 %6 to i64\l  %mul105 = mul nsw i64 %conv104, -10426\l  %conv108 = sext i32 %5 to i64\l  %mul109 = mul nsw i64 %conv108, 29692\l  %add102 = add i64 %mul105, %mul109\l  %add106 = add i64 %add102, %mul101\l  %add110 = add i64 %add106, %mul98\l  %add111 = add nsw i64 %shl95, 524288\l  %add112 = add i64 %add111, %add110\l  %shr113200 = lshr i64 %add112, 20\l  %and115 = and i64 %shr113200, 1023\l  %arrayidx117 = getelementptr inbounds i8, i8* %add.ptr, i64 %and115\l  %25 = load i8, i8* %arrayidx117, align 1, !tbaa !15\l  store i8 %25, i8* %add.ptr70, align 1, !tbaa !15\l  %add120 = sub i64 %add111, %add110\l  %shr121202 = lshr i64 %add120, 20\l  %and123 = and i64 %shr121202, 1023\l  %arrayidx125 = getelementptr inbounds i8, i8* %add.ptr, i64 %and123\l  %26 = load i8, i8* %arrayidx125, align 1, !tbaa !15\l  br label %for.inc128\l}"];
	Node0x6579160 -> Node0x658f610;
	Node0x658f610 [shape=record,label="{for.inc128:                                       \l  %.sink = phi i8 [ %26, %if.end92 ], [ %24, %if.then80 ]\l  %27 = getelementptr inbounds i8, i8* %add.ptr70, i64 1\l  store i8 %.sink, i8* %27, align 1\l  %wsptr.2 = getelementptr inbounds [16 x i32], [16 x i32]* %workspace, i64 0,\l... i64 8\l  %arrayidx69.1 = getelementptr inbounds i8*, i8** %output_buf, i64 1\l  %28 = load i8*, i8** %arrayidx69.1, align 8, !tbaa !12\l  %add.ptr70.1 = getelementptr inbounds i8, i8* %28, i64 %idx.ext\l  %arrayidx71.1 = getelementptr inbounds [16 x i32], [16 x i32]* %workspace,\l... i64 0, i64 9\l  %29 = load i32, i32* %arrayidx71.1, align 4, !tbaa !13\l  %arrayidx72.1 = getelementptr inbounds [16 x i32], [16 x i32]* %workspace,\l... i64 0, i64 11\l  %30 = load i32, i32* %arrayidx72.1, align 4, !tbaa !13\l  %or73.1 = or i32 %30, %29\l  %arrayidx74.1 = getelementptr inbounds [16 x i32], [16 x i32]* %workspace,\l... i64 0, i64 13\l  %31 = load i32, i32* %arrayidx74.1, align 4, !tbaa !13\l  %or75.1 = or i32 %or73.1, %31\l  %arrayidx76.1 = getelementptr inbounds [16 x i32], [16 x i32]* %workspace,\l... i64 0, i64 15\l  %32 = load i32, i32* %arrayidx76.1, align 4, !tbaa !13\l  %or77.1 = or i32 %or75.1, %32\l  %cmp78.1 = icmp eq i32 %or77.1, 0\l  %33 = load i32, i32* %wsptr.2, align 16, !tbaa !13\l  br i1 %cmp78.1, label %if.then80.1, label %if.end92.1\l|{<s0>T|<s1>F}}"];
	Node0x658f610:s0 -> Node0x658c410;
	Node0x658f610:s1 -> Node0x6591840;
	Node0x6591840 [shape=record,label="{if.end92.1:                                       \l  %conv94.1 = sext i32 %33 to i64\l  %shl95.1 = shl nsw i64 %conv94.1, 15\l  %conv97.1 = sext i32 %32 to i64\l  %mul98.1 = mul nsw i64 %conv97.1, -5906\l  %conv100.1 = sext i32 %31 to i64\l  %mul101.1 = mul nsw i64 %conv100.1, 6967\l  %conv104.1 = sext i32 %30 to i64\l  %mul105.1 = mul nsw i64 %conv104.1, -10426\l  %conv108.1 = sext i32 %29 to i64\l  %mul109.1 = mul nsw i64 %conv108.1, 29692\l  %add102.1 = add i64 %mul105.1, %mul109.1\l  %add106.1 = add i64 %add102.1, %mul101.1\l  %add110.1 = add i64 %add106.1, %mul98.1\l  %add111.1 = add nsw i64 %shl95.1, 524288\l  %add112.1 = add i64 %add111.1, %add110.1\l  %shr113200.1 = lshr i64 %add112.1, 20\l  %and115.1 = and i64 %shr113200.1, 1023\l  %arrayidx117.1 = getelementptr inbounds i8, i8* %add.ptr, i64 %and115.1\l  %34 = load i8, i8* %arrayidx117.1, align 1, !tbaa !15\l  store i8 %34, i8* %add.ptr70.1, align 1, !tbaa !15\l  %add120.1 = sub i64 %add111.1, %add110.1\l  %shr121202.1 = lshr i64 %add120.1, 20\l  %and123.1 = and i64 %shr121202.1, 1023\l  %arrayidx125.1 = getelementptr inbounds i8, i8* %add.ptr, i64 %and123.1\l  %35 = load i8, i8* %arrayidx125.1, align 1, !tbaa !15\l  br label %for.inc128.1\l}"];
	Node0x6591840 -> Node0x6592910;
	Node0x658c410 [shape=record,label="{if.then80.1:                                      \l  %conv83211.1 = zext i32 %33 to i64\l  %add84.1 = add nuw nsw i64 %conv83211.1, 16\l  %shr85204.1 = lshr i64 %add84.1, 5\l  %and.1 = and i64 %shr85204.1, 1023\l  %arrayidx88.1 = getelementptr inbounds i8, i8* %add.ptr, i64 %and.1\l  %36 = load i8, i8* %arrayidx88.1, align 1, !tbaa !15\l  store i8 %36, i8* %add.ptr70.1, align 1, !tbaa !15\l  br label %for.inc128.1\l}"];
	Node0x658c410 -> Node0x6592910;
	Node0x6592910 [shape=record,label="{for.inc128.1:                                     \l  %.sink218 = phi i8 [ %36, %if.then80.1 ], [ %35, %if.end92.1 ]\l  %37 = getelementptr inbounds i8, i8* %add.ptr70.1, i64 1\l  store i8 %.sink218, i8* %37, align 1\l  call void @llvm.lifetime.end(i64 64, i8* nonnull %1) #2\l  ret void\l}"];
}
