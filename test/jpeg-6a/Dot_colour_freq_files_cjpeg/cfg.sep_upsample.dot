digraph "CFG for 'sep_upsample' function" {
	label="CFG for 'sep_upsample' function";

	Node0x5cb9530 [shape=record,label="{entry:\l  %upsample1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 81\l  %0 = bitcast %struct.jpeg_upsampler** %upsample1 to %struct.my_upsampler**\l  %1 = load %struct.my_upsampler*, %struct.my_upsampler** %0, align 8, !tbaa !2\l  %next_row_out = getelementptr inbounds %struct.my_upsampler,\l... %struct.my_upsampler* %1, i64 0, i32 3\l  %2 = bitcast i32* %next_row_out to i64*\l  %3 = load i64, i64* %2, align 8\l  %4 = trunc i64 %3 to i32\l  %max_v_samp_factor = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 58\l  %5 = load i32, i32* %max_v_samp_factor, align 8, !tbaa !10\l  %cmp = icmp slt i32 %4, %5\l  br i1 %cmp, label %entry.if.end_crit_edge, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x5cb9530:s0 -> Node0x5ca7260;
	Node0x5cb9530:s1 -> Node0x5cb9840;
	Node0x5ca7260 [shape=record,label="{entry.if.end_crit_edge:                           \l  %6 = lshr i64 %3, 32\l  %7 = trunc i64 %6 to i32\l  %.pre80 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler*\l... %1, i64 0, i32 4\l  br label %if.end\l}"];
	Node0x5ca7260 -> Node0x5ca7690;
	Node0x5cb9840 [shape=record,label="{if.then:                                          \l  %num_components = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %8 = load i32, i32* %num_components, align 8, !tbaa !11\l  %cmp275 = icmp sgt i32 %8, 0\l  br i1 %cmp275, label %for.body.preheader, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5cb9840:s0 -> Node0x5ca7030;
	Node0x5cb9840:s1 -> Node0x5ca7a40;
	Node0x5ca7030 [shape=record,label="{for.body.preheader:                               \l  %comp_info = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43\l  %9 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !12\l  br label %for.body\l}"];
	Node0x5ca7030 -> Node0x5ca7c70;
	Node0x5ca7c70 [shape=record,label="{for.body:                                         \l  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next,\l... %for.body ]\l  %compptr.077 = phi %struct.jpeg_component_info* [ %9, %for.body.preheader ],\l... [ %incdec.ptr, %for.body ]\l  %arrayidx = getelementptr inbounds %struct.my_upsampler,\l... %struct.my_upsampler* %1, i64 0, i32 2, i64 %indvars.iv\l  %10 = load void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)*, void\l... (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i8**,\l... i8***)** %arrayidx, align 8, !tbaa !13\l  %arrayidx4 = getelementptr inbounds i8**, i8*** %input_buf, i64 %indvars.iv\l  %11 = load i8**, i8*** %arrayidx4, align 8, !tbaa !13\l  %12 = load i32, i32* %in_row_group_ctr, align 4, !tbaa !14\l  %arrayidx6 = getelementptr inbounds %struct.my_upsampler,\l... %struct.my_upsampler* %1, i64 0, i32 5, i64 %indvars.iv\l  %13 = load i32, i32* %arrayidx6, align 4, !tbaa !14\l  %mul = mul i32 %13, %12\l  %idx.ext = zext i32 %mul to i64\l  %add.ptr = getelementptr inbounds i8*, i8** %11, i64 %idx.ext\l  %add.ptr8 = getelementptr inbounds %struct.my_upsampler,\l... %struct.my_upsampler* %1, i64 0, i32 1, i64 %indvars.iv\l  tail call void %10(%struct.jpeg_decompress_struct* nonnull %cinfo,\l... %struct.jpeg_component_info* %compptr.077, i8** %add.ptr, i8*** %add.ptr8) #4\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %incdec.ptr = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.077, i64 1\l  %14 = load i32, i32* %num_components, align 8, !tbaa !11\l  %15 = sext i32 %14 to i64\l  %cmp2 = icmp slt i64 %indvars.iv.next, %15\l  br i1 %cmp2, label %for.body, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5ca7c70:s0 -> Node0x5ca7c70;
	Node0x5ca7c70:s1 -> Node0x5cbd4f0;
	Node0x5cbd4f0 [shape=record,label="{for.end.loopexit:                                 \l  %.pre.pre = load i32, i32* %max_v_samp_factor, align 8, !tbaa !10\l  br label %for.end\l}"];
	Node0x5cbd4f0 -> Node0x5ca7a40;
	Node0x5ca7a40 [shape=record,label="{for.end:                                          \l  %.pre = phi i32 [ %.pre.pre, %for.end.loopexit ], [ %5, %if.then ]\l  store i32 0, i32* %next_row_out, align 8, !tbaa !15\l  %rows_to_go.phi.trans.insert = getelementptr inbounds %struct.my_upsampler,\l... %struct.my_upsampler* %1, i64 0, i32 4\l  %.pre78 = load i32, i32* %rows_to_go.phi.trans.insert, align 4, !tbaa !18\l  br label %if.end\l}"];
	Node0x5ca7a40 -> Node0x5ca7690;
	Node0x5ca7690 [shape=record,label="{if.end:                                           \l  %rows_to_go.pre-phi = phi i32* [ %.pre80, %entry.if.end_crit_edge ], [\l... %rows_to_go.phi.trans.insert, %for.end ]\l  %16 = phi i32 [ %7, %entry.if.end_crit_edge ], [ %.pre78, %for.end ]\l  %17 = phi i32 [ %4, %entry.if.end_crit_edge ], [ 0, %for.end ]\l  %18 = phi i32 [ %5, %entry.if.end_crit_edge ], [ %.pre, %for.end ]\l  %sub = sub nsw i32 %18, %17\l  %cmp12 = icmp ugt i32 %sub, %16\l  %.sub = select i1 %cmp12, i32 %16, i32 %sub\l  %19 = load i32, i32* %out_row_ctr, align 4, !tbaa !14\l  %sub16 = sub i32 %out_rows_avail, %19\l  %cmp17 = icmp ugt i32 %.sub, %sub16\l  %num_rows.1 = select i1 %cmp17, i32 %sub16, i32 %.sub\l  %cconvert = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 82\l  %20 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter**\l... %cconvert, align 8, !tbaa !19\l  %color_convert = getelementptr inbounds %struct.jpeg_color_deconverter,\l... %struct.jpeg_color_deconverter* %20, i64 0, i32 1\l  %21 = load void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*,\l... void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)**\l... %color_convert, align 8, !tbaa !20\l  %arraydecay21 = getelementptr inbounds %struct.my_upsampler,\l... %struct.my_upsampler* %1, i64 0, i32 1, i64 0\l  %idx.ext23 = zext i32 %19 to i64\l  %add.ptr24 = getelementptr inbounds i8*, i8** %output_buf, i64 %idx.ext23\l  tail call void %21(%struct.jpeg_decompress_struct* nonnull %cinfo, i8***\l... %arraydecay21, i32 %17, i8** %add.ptr24, i32 %num_rows.1) #4\l  %22 = load i32, i32* %out_row_ctr, align 4, !tbaa !14\l  %add = add i32 %22, %num_rows.1\l  store i32 %add, i32* %out_row_ctr, align 4, !tbaa !14\l  %23 = load i32, i32* %rows_to_go.pre-phi, align 4, !tbaa !18\l  %sub26 = sub i32 %23, %num_rows.1\l  store i32 %sub26, i32* %rows_to_go.pre-phi, align 4, !tbaa !18\l  %24 = load i32, i32* %next_row_out, align 8, !tbaa !15\l  %add28 = add i32 %24, %num_rows.1\l  store i32 %add28, i32* %next_row_out, align 8, !tbaa !15\l  %25 = load i32, i32* %max_v_samp_factor, align 8, !tbaa !10\l  %cmp31 = icmp slt i32 %add28, %25\l  br i1 %cmp31, label %if.end34, label %if.then32\l|{<s0>T|<s1>F}}"];
	Node0x5ca7690:s0 -> Node0x5cc01f0;
	Node0x5ca7690:s1 -> Node0x5cc02a0;
	Node0x5cc02a0 [shape=record,label="{if.then32:                                        \l  %26 = load i32, i32* %in_row_group_ctr, align 4, !tbaa !14\l  %inc33 = add i32 %26, 1\l  store i32 %inc33, i32* %in_row_group_ctr, align 4, !tbaa !14\l  br label %if.end34\l}"];
	Node0x5cc02a0 -> Node0x5cc01f0;
	Node0x5cc01f0 [shape=record,label="{if.end34:                                         \l  ret void\l}"];
}
