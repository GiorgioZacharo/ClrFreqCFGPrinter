digraph "CFG for 'jpeg_calc_output_dimensions' function" {
	label="CFG for 'jpeg_calc_output_dimensions' function";

	Node0x60f0290 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %global_state = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 4\l  %0 = load i32, i32* %global_state, align 4, !tbaa !2\l  %cmp = icmp eq i32 %0, 202\l  br i1 %cmp, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x60f0290:s0 -> Node0x60f4f40;
	Node0x60f0290:s1 -> Node0x60f5010;
	Node0x60f5010 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %1 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !10\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 5\l  store i32 18, i32* %msg_code, align 8, !tbaa !11\l  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 6, i32 0, i64 0\l  store i32 %0, i32* %arrayidx, align 4, !tbaa !14\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 0\l  %2 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !15\l  %3 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %2(%struct.jpeg_common_struct* %3) #3\l  br label %if.end\l}"];
	Node0x60f5010 -> Node0x60f4f40;
	Node0x60f4f40 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %scale_num = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 11\l  %4 = load i32, i32* %scale_num, align 4, !tbaa !16\l  %mul = shl i32 %4, 3\l  %scale_denom = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 12\l  %5 = load i32, i32* %scale_denom, align 8, !tbaa !17\l  %cmp4 = icmp ugt i32 %mul, %5\l  br i1 %cmp4, label %if.else, label %if.then5\l|{<s0>T|<s1>F}}"];
	Node0x60f4f40:s0 -> Node0x60f6500;
	Node0x60f4f40:s1 -> Node0x60f65d0;
	Node0x60f65d0 [shape=record, style = filled, fillcolor = blue, label="{if.then5:                                         \l  %image_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 6\l  %6 = load i32, i32* %image_width, align 8, !tbaa !18\l  %conv = zext i32 %6 to i64\l  %call = tail call i64 @jdiv_round_up(i64 %conv, i64 8) #3\l  %conv6 = trunc i64 %call to i32\l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  store i32 %conv6, i32* %output_width, align 8, !tbaa !19\l  %image_height = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 7\l  %7 = load i32, i32* %image_height, align 4, !tbaa !20\l  %conv7 = zext i32 %7 to i64\l  %call8 = tail call i64 @jdiv_round_up(i64 %conv7, i64 8) #3\l  %conv9 = trunc i64 %call8 to i32\l  %output_height = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 27\l  store i32 %conv9, i32* %output_height, align 4, !tbaa !21\l  %min_DCT_scaled_size = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 59\l  store i32 1, i32* %min_DCT_scaled_size, align 4, !tbaa !22\l  br label %if.end53\l}"];
	Node0x60f65d0 -> Node0x60f7c70;
	Node0x60f6500 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %mul11 = shl i32 %4, 2\l  %cmp13 = icmp ugt i32 %mul11, %5\l  br i1 %cmp13, label %if.else27, label %if.then15\l|{<s0>T|<s1>F}}"];
	Node0x60f6500:s0 -> Node0x60f7f00;
	Node0x60f6500:s1 -> Node0x60f7f50;
	Node0x60f7f50 [shape=record, style = filled, fillcolor = blue, label="{if.then15:                                        \l  %image_width16 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 6\l  %8 = load i32, i32* %image_width16, align 8, !tbaa !18\l  %conv17 = zext i32 %8 to i64\l  %call18 = tail call i64 @jdiv_round_up(i64 %conv17, i64 4) #3\l  %conv19 = trunc i64 %call18 to i32\l  %output_width20 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  store i32 %conv19, i32* %output_width20, align 8, !tbaa !19\l  %image_height21 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 7\l  %9 = load i32, i32* %image_height21, align 4, !tbaa !20\l  %conv22 = zext i32 %9 to i64\l  %call23 = tail call i64 @jdiv_round_up(i64 %conv22, i64 4) #3\l  %conv24 = trunc i64 %call23 to i32\l  %output_height25 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 27\l  store i32 %conv24, i32* %output_height25, align 4, !tbaa !21\l  %min_DCT_scaled_size26 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 59\l  store i32 2, i32* %min_DCT_scaled_size26, align 4, !tbaa !22\l  br label %if.end53\l}"];
	Node0x60f7f50 -> Node0x60f7c70;
	Node0x60f7f00 [shape=record, style = filled, fillcolor = blue, label="{if.else27:                                        \l  %mul29 = shl i32 %4, 1\l  %cmp31 = icmp ugt i32 %mul29, %5\l  %image_width34 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 6\l  %10 = bitcast i32* %image_width34 to i64*\l  %11 = load i64, i64* %10, align 8\l  br i1 %cmp31, label %if.else45, label %if.then33\l|{<s0>T|<s1>F}}"];
	Node0x60f7f00:s0 -> Node0x60f3200;
	Node0x60f7f00:s1 -> Node0x60f32e0;
	Node0x60f32e0 [shape=record, style = filled, fillcolor = blue, label="{if.then33:                                        \l  %conv35 = and i64 %11, 4294967295\l  %call36 = tail call i64 @jdiv_round_up(i64 %conv35, i64 2) #3\l  %conv37 = trunc i64 %call36 to i32\l  %output_width38 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  store i32 %conv37, i32* %output_width38, align 8, !tbaa !19\l  %image_height39 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 7\l  %12 = load i32, i32* %image_height39, align 4, !tbaa !20\l  %conv40 = zext i32 %12 to i64\l  %call41 = tail call i64 @jdiv_round_up(i64 %conv40, i64 2) #3\l  %conv42 = trunc i64 %call41 to i32\l  %output_height43 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 27\l  store i32 %conv42, i32* %output_height43, align 4, !tbaa !21\l  %min_DCT_scaled_size44 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 59\l  store i32 4, i32* %min_DCT_scaled_size44, align 4, !tbaa !22\l  br label %if.end53\l}"];
	Node0x60f32e0 -> Node0x60f7c70;
	Node0x60f3200 [shape=record, style = filled, fillcolor = blue, label="{if.else45:                                        \l  %13 = trunc i64 %11 to i32\l  %14 = lshr i64 %11, 32\l  %15 = trunc i64 %14 to i32\l  %output_width47 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  store i32 %13, i32* %output_width47, align 8, !tbaa !19\l  %output_height49 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 27\l  store i32 %15, i32* %output_height49, align 4, !tbaa !21\l  %min_DCT_scaled_size50 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 59\l  store i32 8, i32* %min_DCT_scaled_size50, align 4, !tbaa !22\l  br label %if.end53\l}"];
	Node0x60f3200 -> Node0x60f7c70;
	Node0x60f7c70 [shape=record, style = filled, fillcolor = blue, label="{if.end53:                                         \l  %16 = phi i32 [ 2, %if.then15 ], [ 8, %if.else45 ], [ 4, %if.then33 ], [ 1,\l... %if.then5 ]\l  %comp_info = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43\l  %17 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !23\l  %num_components = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %18 = load i32, i32* %num_components, align 8, !tbaa !24\l  %cmp54202 = icmp sgt i32 %18, 0\l  br i1 %cmp54202, label %for.body.lr.ph, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x60f7c70:s0 -> Node0x60fccc0;
	Node0x60f7c70:s1 -> Node0x60fcda0;
	Node0x60fccc0 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  %min_DCT_scaled_size56 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 59\l  %cmp57197 = icmp ult i32 %16, 8\l  %max_h_samp_factor = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 57\l  %max_v_samp_factor = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 58\l  br i1 %cmp57197, label %for.body.us.preheader, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x60fccc0:s0 -> Node0x60fd300;
	Node0x60fccc0:s1 -> Node0x60fd3a0;
	Node0x60fd3a0 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader:                               \l  %19 = add i32 %18, -1\l  %xtraiter = and i32 %18, 7\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %for.body.preheader.split, label\l... %for.body.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x60fd3a0:s0 -> Node0x60fd750;
	Node0x60fd3a0:s1 -> Node0x60fd810;
	Node0x60fd810 [shape=record, style = filled, fillcolor = blue, label="{for.body.prol.preheader:                          \l  br label %for.body.prol\l}"];
	Node0x60fd810 -> Node0x60fd980;
	Node0x60fd980 [shape=record, style = filled, fillcolor = blue, label="{for.body.prol:                                    \l  %compptr.0204.prol = phi %struct.jpeg_component_info* [ %incdec.ptr.prol,\l... %for.body.prol ], [ %17, %for.body.prol.preheader ]\l  %ci.0203.prol = phi i32 [ %inc.prol, %for.body.prol ], [ 0,\l... %for.body.prol.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %for.body.prol ], [ %xtraiter,\l... %for.body.prol.preheader ]\l  %DCT_scaled_size.prol = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0204.prol, i64 0, i32 9\l  store i32 %16, i32* %DCT_scaled_size.prol, align 4, !tbaa !25\l  %inc.prol = add nuw nsw i32 %ci.0203.prol, 1\l  %incdec.ptr.prol = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0204.prol, i64 1\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %for.body.preheader.split.loopexit, label\l... %for.body.prol, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x60fd980:s0 -> Node0x60fe3f0;
	Node0x60fd980:s1 -> Node0x60fd980;
	Node0x60fe3f0 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader.split.loopexit:                \l  %incdec.ptr.prol.lcssa = phi %struct.jpeg_component_info* [\l... %incdec.ptr.prol, %for.body.prol ]\l  %inc.prol.lcssa = phi i32 [ %inc.prol, %for.body.prol ]\l  br label %for.body.preheader.split\l}"];
	Node0x60fe3f0 -> Node0x60fd750;
	Node0x60fd750 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader.split:                         \l  %compptr.0204.unr = phi %struct.jpeg_component_info* [ %17,\l... %for.body.preheader ], [ %incdec.ptr.prol.lcssa,\l... %for.body.preheader.split.loopexit ]\l  %ci.0203.unr = phi i32 [ 0, %for.body.preheader ], [ %inc.prol.lcssa,\l... %for.body.preheader.split.loopexit ]\l  %20 = icmp ult i32 %19, 7\l  br i1 %20, label %for.end.loopexit216, label %for.body.preheader.split.split\l|{<s0>T|<s1>F}}"];
	Node0x60fd750:s0 -> Node0x60fe880;
	Node0x60fd750:s1 -> Node0x60fe980;
	Node0x60fe980 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader.split.split:                   \l  br label %for.body\l}"];
	Node0x60fe980 -> Node0x60feb30;
	Node0x60fd300 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.preheader:                            \l  br label %for.body.us\l}"];
	Node0x60fd300 -> Node0x60febe0;
	Node0x60febe0 [shape=record, style = filled, fillcolor = blue, label="{for.body.us:                                      \l  %21 = phi i32 [ %.pre, %while.end.us.for.body.us_crit_edge ], [ %16,\l... %for.body.us.preheader ]\l  %compptr.0204.us = phi %struct.jpeg_component_info* [ %incdec.ptr.us,\l... %while.end.us.for.body.us_crit_edge ], [ %17, %for.body.us.preheader ]\l  %ci.0203.us = phi i32 [ %inc.us, %while.end.us.for.body.us_crit_edge ], [ 0,\l... %for.body.us.preheader ]\l  %h_samp_factor.us = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0204.us, i64 0, i32 2\l  %22 = bitcast i32* %h_samp_factor.us to i64*\l  %23 = load i64, i64* %22, align 8\l  %24 = trunc i64 %23 to i32\l  %25 = load i32, i32* %max_h_samp_factor, align 4\l  %mul62.us = mul nsw i32 %21, %25\l  %26 = lshr i64 %23, 32\l  %27 = trunc i64 %26 to i32\l  br label %land.lhs.true.us\l}"];
	Node0x60febe0 -> Node0x60fb600;
	Node0x60fb600 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true.us:                                 \l  %ssize.0198.us = phi i32 [ %16, %for.body.us ], [ %mul59.us, %while.body.us ]\l  %mul59.us = shl i32 %ssize.0198.us, 1\l  %mul60.us = mul i32 %mul59.us, %24\l  %cmp63.us = icmp sgt i32 %mul60.us, %mul62.us\l  br i1 %cmp63.us, label %while.end.us, label %land.rhs.us\l|{<s0>T|<s1>F}}"];
	Node0x60fb600:s0 -> Node0x6100910;
	Node0x60fb600:s1 -> Node0x6100990;
	Node0x6100990 [shape=record, style = filled, fillcolor = blue, label="{land.rhs.us:                                      \l  %mul66.us = mul i32 %mul59.us, %27\l  %28 = load i32, i32* %max_v_samp_factor, align 8, !tbaa !29\l  %mul68.us = mul nsw i32 %28, %21\l  %cmp69.us = icmp sgt i32 %mul66.us, %mul68.us\l  br i1 %cmp69.us, label %while.end.us, label %while.body.us\l|{<s0>T|<s1>F}}"];
	Node0x6100990:s0 -> Node0x6100910;
	Node0x6100990:s1 -> Node0x60fb7a0;
	Node0x60fb7a0 [shape=record, style = filled, fillcolor = blue, label="{while.body.us:                                    \l  %cmp57.us = icmp slt i32 %mul59.us, 8\l  br i1 %cmp57.us, label %land.lhs.true.us, label %while.end.us\l|{<s0>T|<s1>F}}"];
	Node0x60fb7a0:s0 -> Node0x60fb600;
	Node0x60fb7a0:s1 -> Node0x6100910;
	Node0x6100910 [shape=record, style = filled, fillcolor = blue, label="{while.end.us:                                     \l  %ssize.0.lcssa.us = phi i32 [ %ssize.0198.us, %land.rhs.us ], [ %mul59.us,\l... %while.body.us ], [ %ssize.0198.us, %land.lhs.true.us ]\l  %DCT_scaled_size.us = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0204.us, i64 0, i32 9\l  store i32 %ssize.0.lcssa.us, i32* %DCT_scaled_size.us, align 4, !tbaa !25\l  %inc.us = add nuw nsw i32 %ci.0203.us, 1\l  %cmp54.us = icmp slt i32 %inc.us, %18\l  br i1 %cmp54.us, label %while.end.us.for.body.us_crit_edge, label\l... %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6100910:s0 -> Node0x60fad00;
	Node0x6100910:s1 -> Node0x61018e0;
	Node0x60fad00 [shape=record, style = filled, fillcolor = blue, label="{while.end.us.for.body.us_crit_edge:               \l  %incdec.ptr.us = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0204.us, i64 1\l  %.pre = load i32, i32* %min_DCT_scaled_size56, align 4\l  br label %for.body.us\l}"];
	Node0x60fad00 -> Node0x60febe0;
	Node0x60feb30 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %compptr.0204 = phi %struct.jpeg_component_info* [ %compptr.0204.unr,\l... %for.body.preheader.split.split ], [ %incdec.ptr.7, %for.body ]\l  %ci.0203 = phi i32 [ %ci.0203.unr, %for.body.preheader.split.split ], [\l... %inc.7, %for.body ]\l  %DCT_scaled_size = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0204, i64 0, i32 9\l  store i32 %16, i32* %DCT_scaled_size, align 4, !tbaa !25\l  %DCT_scaled_size.1 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0204, i64 1, i32 9\l  store i32 %16, i32* %DCT_scaled_size.1, align 4, !tbaa !25\l  %DCT_scaled_size.2 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0204, i64 2, i32 9\l  store i32 %16, i32* %DCT_scaled_size.2, align 4, !tbaa !25\l  %DCT_scaled_size.3 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0204, i64 3, i32 9\l  store i32 %16, i32* %DCT_scaled_size.3, align 4, !tbaa !25\l  %DCT_scaled_size.4 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0204, i64 4, i32 9\l  store i32 %16, i32* %DCT_scaled_size.4, align 4, !tbaa !25\l  %DCT_scaled_size.5 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0204, i64 5, i32 9\l  store i32 %16, i32* %DCT_scaled_size.5, align 4, !tbaa !25\l  %DCT_scaled_size.6 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0204, i64 6, i32 9\l  store i32 %16, i32* %DCT_scaled_size.6, align 4, !tbaa !25\l  %DCT_scaled_size.7 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0204, i64 7, i32 9\l  store i32 %16, i32* %DCT_scaled_size.7, align 4, !tbaa !25\l  %inc.7 = add nsw i32 %ci.0203, 8\l  %incdec.ptr.7 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0204, i64 8\l  %cmp54.7 = icmp slt i32 %inc.7, %18\l  br i1 %cmp54.7, label %for.body, label %for.end.loopexit216.unr-lcssa\l|{<s0>T|<s1>F}}"];
	Node0x60feb30:s0 -> Node0x60feb30;
	Node0x60feb30:s1 -> Node0x6102930;
	Node0x61018e0 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  br label %for.end\l}"];
	Node0x61018e0 -> Node0x60fcda0;
	Node0x6102930 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit216.unr-lcssa:                    \l  br label %for.end.loopexit216\l}"];
	Node0x6102930 -> Node0x60fe880;
	Node0x60fe880 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit216:                              \l  br label %for.end\l}"];
	Node0x60fe880 -> Node0x60fcda0;
	Node0x60fcda0 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %29 = bitcast i32* %num_components to i64*\l  %30 = load i64, i64* %29, align 8\l  %31 = trunc i64 %30 to i32\l  %cmp75194 = icmp sgt i32 %31, 0\l  br i1 %cmp75194, label %for.body77.lr.ph, label %for.end105\l|{<s0>T|<s1>F}}"];
	Node0x60fcda0:s0 -> Node0x6102b20;
	Node0x60fcda0:s1 -> Node0x6102bd0;
	Node0x6102b20 [shape=record, style = filled, fillcolor = blue, label="{for.body77.lr.ph:                                 \l  %image_width78 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 6\l  %max_h_samp_factor85 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 57\l  %image_height90 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 7\l  %max_v_samp_factor97 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 58\l  br label %for.body77\l}"];
	Node0x6102b20 -> Node0x6102b70;
	Node0x6102b70 [shape=record, style = filled, fillcolor = blue, label="{for.body77:                                       \l  %compptr.1196 = phi %struct.jpeg_component_info* [ %17, %for.body77.lr.ph ],\l... [ %incdec.ptr104, %for.body77 ]\l  %ci.1195 = phi i32 [ 0, %for.body77.lr.ph ], [ %inc103, %for.body77 ]\l  %32 = load i32, i32* %image_width78, align 8, !tbaa !18\l  %conv79 = zext i32 %32 to i64\l  %h_samp_factor80 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1196, i64 0, i32 2\l  %33 = load i32, i32* %h_samp_factor80, align 8, !tbaa !30\l  %DCT_scaled_size81 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1196, i64 0, i32 9\l  %34 = load i32, i32* %DCT_scaled_size81, align 4, !tbaa !25\l  %mul82 = mul nsw i32 %34, %33\l  %conv83 = sext i32 %mul82 to i64\l  %mul84 = mul nsw i64 %conv83, %conv79\l  %35 = load i32, i32* %max_h_samp_factor85, align 4, !tbaa !31\l  %mul86 = shl nsw i32 %35, 3\l  %conv87 = sext i32 %mul86 to i64\l  %call88 = tail call i64 @jdiv_round_up(i64 %mul84, i64 %conv87) #3\l  %conv89 = trunc i64 %call88 to i32\l  %downsampled_width = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1196, i64 0, i32 10\l  store i32 %conv89, i32* %downsampled_width, align 8, !tbaa !32\l  %36 = load i32, i32* %image_height90, align 4, !tbaa !20\l  %conv91 = zext i32 %36 to i64\l  %v_samp_factor92 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1196, i64 0, i32 3\l  %37 = load i32, i32* %v_samp_factor92, align 4, !tbaa !33\l  %38 = load i32, i32* %DCT_scaled_size81, align 4, !tbaa !25\l  %mul94 = mul nsw i32 %38, %37\l  %conv95 = sext i32 %mul94 to i64\l  %mul96 = mul nsw i64 %conv95, %conv91\l  %39 = load i32, i32* %max_v_samp_factor97, align 8, !tbaa !29\l  %mul98 = shl nsw i32 %39, 3\l  %conv99 = sext i32 %mul98 to i64\l  %call100 = tail call i64 @jdiv_round_up(i64 %mul96, i64 %conv99) #3\l  %conv101 = trunc i64 %call100 to i32\l  %downsampled_height = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1196, i64 0, i32 11\l  store i32 %conv101, i32* %downsampled_height, align 4, !tbaa !34\l  %inc103 = add nuw nsw i32 %ci.1195, 1\l  %incdec.ptr104 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1196, i64 1\l  %40 = load i64, i64* %29, align 8\l  %41 = trunc i64 %40 to i32\l  %cmp75 = icmp slt i32 %inc103, %41\l  br i1 %cmp75, label %for.body77, label %for.end105.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6102b70:s0 -> Node0x6102b70;
	Node0x6102b70:s1 -> Node0x60f4000;
	Node0x60f4000 [shape=record, style = filled, fillcolor = blue, label="{for.end105.loopexit:                              \l  %.lcssa218 = phi i32 [ %41, %for.body77 ]\l  %.lcssa = phi i64 [ %40, %for.body77 ]\l  br label %for.end105\l}"];
	Node0x60f4000 -> Node0x6102bd0;
	Node0x6102bd0 [shape=record, style = filled, fillcolor = blue, label="{for.end105:                                       \l  %42 = phi i32 [ %31, %for.end ], [ %.lcssa218, %for.end105.loopexit ]\l  %.in.in = phi i64 [ %30, %for.end ], [ %.lcssa, %for.end105.loopexit ]\l  %out_color_space = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 10\l  %43 = load i32, i32* %out_color_space, align 8, !tbaa !35\l  switch i32 %43, label %sw.default [\l    i32 1, label %sw.bb\l    i32 2, label %sw.bb106\l    i32 3, label %sw.bb106\l    i32 4, label %sw.bb108\l    i32 5, label %sw.bb108\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5}}"];
	Node0x6102bd0:s0 -> Node0x60f4580;
	Node0x6102bd0:s1 -> Node0x60f4660;
	Node0x6102bd0:s2 -> Node0x60f4730;
	Node0x6102bd0:s3 -> Node0x60f4730;
	Node0x6102bd0:s4 -> Node0x60f4810;
	Node0x6102bd0:s5 -> Node0x60f4810;
	Node0x60f4660 [shape=record, style = filled, fillcolor = blue, label="{sw.bb:                                            \l  %out_color_components = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  store i32 1, i32* %out_color_components, align 8, !tbaa !36\l  br label %sw.epilog\l}"];
	Node0x60f4660 -> Node0x60f4da0;
	Node0x60f4730 [shape=record, style = filled, fillcolor = blue, label="{sw.bb106:                                         \l  %out_color_components107 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  store i32 3, i32* %out_color_components107, align 8, !tbaa !36\l  br label %sw.epilog\l}"];
	Node0x60f4730 -> Node0x60f4da0;
	Node0x60f4810 [shape=record, style = filled, fillcolor = blue, label="{sw.bb108:                                         \l  %out_color_components109 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  store i32 4, i32* %out_color_components109, align 8, !tbaa !36\l  br label %sw.epilog\l}"];
	Node0x60f4810 -> Node0x60f4da0;
	Node0x60f4580 [shape=record, style = filled, fillcolor = blue, label="{sw.default:                                       \l  %out_color_components111 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  store i32 %42, i32* %out_color_components111, align 8, !tbaa !36\l  br label %sw.epilog\l}"];
	Node0x60f4580 -> Node0x60f4da0;
	Node0x60f4da0 [shape=record, style = filled, fillcolor = blue, label="{sw.epilog:                                        \l  %44 = phi i32 [ %42, %sw.default ], [ 4, %sw.bb108 ], [ 3, %sw.bb106 ], [ 1,\l... %sw.bb ]\l  %quantize_colors = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 19\l  %45 = load i32, i32* %quantize_colors, align 4, !tbaa !37\l  %tobool = icmp eq i32 %45, 0\l  %. = select i1 %tobool, i32 %44, i32 1\l  %output_components = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 29\l  store i32 %., i32* %output_components, align 4, !tbaa !38\l  %do_fancy_upsampling.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 17\l  %46 = load i32, i32* %do_fancy_upsampling.i, align 4, !tbaa !39\l  %tobool.i = icmp eq i32 %46, 0\l  br i1 %tobool.i, label %lor.lhs.false.i, label %if.else117\l|{<s0>T|<s1>F}}"];
	Node0x60f4da0:s0 -> Node0x6108840;
	Node0x60f4da0:s1 -> Node0x6108920;
	Node0x6108840 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false.i:                                  \l  %CCIR601_sampling.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 56\l  %47 = load i32, i32* %CCIR601_sampling.i, align 8, !tbaa !40\l  %tobool1.i = icmp eq i32 %47, 0\l  %.in.mask = and i64 %.in.in, -4294967296\l  %cmp.i = icmp eq i64 %.in.mask, 12884901888\l  %or.cond = and i1 %tobool1.i, %cmp.i\l  %cmp3.i = icmp eq i32 %42, 3\l  %or.cond211 = and i1 %or.cond, %cmp3.i\l  %cmp5.i = icmp eq i32 %43, 2\l  %or.cond212 = and i1 %or.cond211, %cmp5.i\l  %cmp7.i = icmp eq i32 %44, 3\l  %or.cond213 = and i1 %or.cond212, %cmp7.i\l  br i1 %or.cond213, label %if.end9.i, label %if.else117\l|{<s0>T|<s1>F}}"];
	Node0x6108840:s0 -> Node0x60ff290;
	Node0x6108840:s1 -> Node0x6108920;
	Node0x60ff290 [shape=record, style = filled, fillcolor = blue, label="{if.end9.i:                                        \l  %48 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !23\l  %h_samp_factor.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %48, i64 0, i32 2\l  %49 = bitcast i32* %h_samp_factor.i to i64*\l  %50 = load i64, i64* %49, align 8\l  %51 = trunc i64 %50 to i32\l  %cmp10.i = icmp eq i32 %51, 2\l  %52 = lshr i64 %50, 32\l  %53 = trunc i64 %52 to i32\l  br i1 %cmp10.i, label %lor.lhs.false11.i, label %if.else117\l|{<s0>T|<s1>F}}"];
	Node0x60ff290:s0 -> Node0x60ffd80;
	Node0x60ff290:s1 -> Node0x6108920;
	Node0x60ffd80 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false11.i:                                \l  %h_samp_factor14.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %48, i64 1, i32 2\l  %54 = bitcast i32* %h_samp_factor14.i to i64*\l  %55 = load i64, i64* %54, align 8\l  %56 = trunc i64 %55 to i32\l  %cmp15.i = icmp eq i32 %56, 1\l  br i1 %cmp15.i, label %lor.lhs.false16.i, label %if.else117\l|{<s0>T|<s1>F}}"];
	Node0x60ffd80:s0 -> Node0x6100180;
	Node0x60ffd80:s1 -> Node0x6108920;
	Node0x6100180 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false16.i:                                \l  %h_samp_factor19.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %48, i64 2, i32 2\l  %57 = bitcast i32* %h_samp_factor19.i to i64*\l  %58 = load i64, i64* %57, align 8\l  %59 = trunc i64 %58 to i32\l  %notlhs.i = icmp eq i32 %59, 1\l  %notrhs.i = icmp slt i32 %53, 3\l  %or.cond.not.i = and i1 %notrhs.i, %notlhs.i\l  %.mask.i = and i64 %55, -4294967296\l  %cmp29.i = icmp eq i64 %.mask.i, 4294967296\l  %or.cond72.i = and i1 %cmp29.i, %or.cond.not.i\l  %.mask71.i = and i64 %58, -4294967296\l  %cmp34.i = icmp eq i64 %.mask71.i, 4294967296\l  %or.cond73.i = and i1 %cmp34.i, %or.cond72.i\l  br i1 %or.cond73.i, label %if.end36.i, label %if.else117\l|{<s0>T|<s1>F}}"];
	Node0x6100180:s0 -> Node0x610c7e0;
	Node0x6100180:s1 -> Node0x6108920;
	Node0x610c7e0 [shape=record, style = filled, fillcolor = blue, label="{if.end36.i:                                       \l  %DCT_scaled_size.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %48, i64 0, i32 9\l  %60 = load i32, i32* %DCT_scaled_size.i, align 4, !tbaa !25\l  %min_DCT_scaled_size.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 59\l  %61 = load i32, i32* %min_DCT_scaled_size.i, align 4, !tbaa !22\l  %cmp39.i = icmp eq i32 %60, %61\l  br i1 %cmp39.i, label %lor.lhs.false40.i, label %if.else117\l|{<s0>T|<s1>F}}"];
	Node0x610c7e0:s0 -> Node0x610cbf0;
	Node0x610c7e0:s1 -> Node0x6108920;
	Node0x610cbf0 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false40.i:                                \l  %DCT_scaled_size43.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %48, i64 1, i32 9\l  %62 = load i32, i32* %DCT_scaled_size43.i, align 4, !tbaa !25\l  %cmp45.i = icmp eq i32 %62, %60\l  br i1 %cmp45.i, label %use_merged_upsample.exit, label %if.else117\l|{<s0>T|<s1>F}}"];
	Node0x610cbf0:s0 -> Node0x610cf00;
	Node0x610cbf0:s1 -> Node0x6108920;
	Node0x610cf00 [shape=record, style = filled, fillcolor = blue, label="{use_merged_upsample.exit:                         \l  %DCT_scaled_size49.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %48, i64 2, i32 9\l  %63 = load i32, i32* %DCT_scaled_size49.i, align 4, !tbaa !25\l  %cmp51.i = icmp eq i32 %63, %60\l  br i1 %cmp51.i, label %if.then115, label %if.else117\l|{<s0>T|<s1>F}}"];
	Node0x610cf00:s0 -> Node0x610d1f0;
	Node0x610cf00:s1 -> Node0x6108920;
	Node0x610d1f0 [shape=record, style = filled, fillcolor = blue, label="{if.then115:                                       \l  %max_v_samp_factor116 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 58\l  %64 = load i32, i32* %max_v_samp_factor116, align 8, !tbaa !29\l  %rec_outbuf_height = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 30\l  store i32 %64, i32* %rec_outbuf_height, align 8, !tbaa !41\l  br label %if.end119\l}"];
	Node0x610d1f0 -> Node0x610d8d0;
	Node0x6108920 [shape=record, style = filled, fillcolor = blue, label="{if.else117:                                       \l  %rec_outbuf_height118 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 30\l  store i32 1, i32* %rec_outbuf_height118, align 8, !tbaa !41\l  br label %if.end119\l}"];
	Node0x6108920 -> Node0x610d8d0;
	Node0x610d8d0 [shape=record, style = filled, fillcolor = blue, label="{if.end119:                                        \l  ret void\l}"];
}
