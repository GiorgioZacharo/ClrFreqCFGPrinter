digraph "CFG for 'start_output_pass' function" {
	label="CFG for 'start_output_pass' function";

	Node0x584e900 [shape=record,label="{entry:\l  %coef1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 75\l  %0 = bitcast %struct.jpeg_d_coef_controller** %coef1 to\l... %struct.my_coef_controller**\l  %1 = load %struct.my_coef_controller*, %struct.my_coef_controller** %0,\l... align 8, !tbaa !2\l  %coef_arrays = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 0, i32 4\l  %2 = load %struct.jvirt_barray_control**, %struct.jvirt_barray_control***\l... %coef_arrays, align 8, !tbaa !10\l  %cmp = icmp eq %struct.jvirt_barray_control** %2, null\l  br i1 %cmp, label %if.end7, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x584e900:s0 -> Node0x58455a0;
	Node0x584e900:s1 -> Node0x5845650;
	Node0x5845650 [shape=record,label="{if.then:                                          \l  %do_block_smoothing = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 18\l  %3 = load i32, i32* %do_block_smoothing, align 8, !tbaa !13\l  %tobool = icmp eq i32 %3, 0\l  br i1 %tobool, label %if.else, label %land.lhs.true\l|{<s0>T|<s1>F}}"];
	Node0x5845650:s0 -> Node0x5845a80;
	Node0x5845650:s1 -> Node0x584f9c0;
	Node0x584f9c0 [shape=record,label="{land.lhs.true:                                    \l  %progressive_mode.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 44\l  %4 = load i32, i32* %progressive_mode.i, align 8, !tbaa !14\l  %tobool.i = icmp eq i32 %4, 0\l  br i1 %tobool.i, label %if.else, label %lor.lhs.false.i\l|{<s0>T|<s1>F}}"];
	Node0x584f9c0:s0 -> Node0x5845a80;
	Node0x584f9c0:s1 -> Node0x584e800;
	Node0x584e800 [shape=record,label="{lor.lhs.false.i:                                  \l  %coef_bits2.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 38\l  %5 = load [64 x i32]*, [64 x i32]** %coef_bits2.i, align 8, !tbaa !15\l  %cmp.i = icmp eq [64 x i32]* %5, null\l  br i1 %cmp.i, label %if.else, label %if.end.i\l|{<s0>T|<s1>F}}"];
	Node0x584e800:s0 -> Node0x5845a80;
	Node0x584e800:s1 -> Node0x583fac0;
	Node0x583fac0 [shape=record,label="{if.end.i:                                         \l  %coef_bits_latch3.i = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 6\l  %6 = load i32*, i32** %coef_bits_latch3.i, align 8, !tbaa !16\l  %cmp4.i = icmp eq i32* %6, null\l  br i1 %cmp4.i, label %if.then5.i, label %if.end.if.end7_crit_edge.i\l|{<s0>T|<s1>F}}"];
	Node0x583fac0:s0 -> Node0x583fe10;
	Node0x583fac0:s1 -> Node0x5852250;
	Node0x5852250 [shape=record,label="{if.end.if.end7_crit_edge.i:                       \l  %.pre.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  br label %if.end7.i\l}"];
	Node0x5852250 -> Node0x58524a0;
	Node0x583fe10 [shape=record,label="{if.then5.i:                                       \l  %mem.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %7 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem.i, align\l... 8, !tbaa !17\l  %alloc_small.i = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %7, i64 0, i32 0\l  %8 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small.i, align 8, !tbaa !18\l  %9 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %num_components.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %10 = load i32, i32* %num_components.i, align 8, !tbaa !21\l  %conv.i = sext i32 %10 to i64\l  %mul.i = mul nsw i64 %conv.i, 24\l  %call.i = tail call i8* %8(%struct.jpeg_common_struct* %9, i32 1, i64\l... %mul.i) #5\l  %11 = bitcast i32** %coef_bits_latch3.i to i8**\l  store i8* %call.i, i8** %11, align 8, !tbaa !16\l  %12 = bitcast i8* %call.i to i32*\l  br label %if.end7.i\l}"];
	Node0x583fe10 -> Node0x58524a0;
	Node0x58524a0 [shape=record,label="{if.end7.i:                                        \l  %num_components9.pre-phi.i = phi i32* [ %.pre.i, %if.end.if.end7_crit_edge.i\l... ], [ %num_components.i, %if.then5.i ]\l  %13 = phi i32* [ %6, %if.end.if.end7_crit_edge.i ], [ %12, %if.then5.i ]\l  %14 = load i32, i32* %num_components9.pre-phi.i, align 8, !tbaa !21\l  %cmp10117.i = icmp sgt i32 %14, 0\l  br i1 %cmp10117.i, label %for.body.preheader.i, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x58524a0:s0 -> Node0x5853720;
	Node0x58524a0:s1 -> Node0x5845a80;
	Node0x5853720 [shape=record,label="{for.body.preheader.i:                             \l  %comp_info.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43\l  %15 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info.i, align 8, !tbaa !22\l  br label %for.body.i\l}"];
	Node0x5853720 -> Node0x5853f40;
	Node0x5853f40 [shape=record,label="{for.body.i:                                       \l  %indvars.iv130.i = phi i64 [ 0, %for.body.preheader.i ], [\l... %indvars.iv.next131.i, %for.body61.preheader.i ]\l  %coef_bits_latch.0121.i = phi i32* [ %13, %for.body.preheader.i ], [\l... %add.ptr.i, %for.body61.preheader.i ]\l  %smoothing_useful.0120.i = phi i32 [ 0, %for.body.preheader.i ], [\l... %smoothing_useful.1..4.i, %for.body61.preheader.i ]\l  %compptr.0119.i = phi %struct.jpeg_component_info* [ %15,\l... %for.body.preheader.i ], [ %incdec.ptr.i, %for.body61.preheader.i ]\l  %quant_table.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0119.i, i64 0, i32 19\l  %16 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %quant_table.i, align\l... 8, !tbaa !23\l  %cmp12.i = icmp eq %struct.JQUANT_TBL* %16, null\l  br i1 %cmp12.i, label %if.else.loopexit, label %if.end15.i\l|{<s0>T|<s1>F}}"];
	Node0x5853f40:s0 -> Node0x5854c30;
	Node0x5853f40:s1 -> Node0x5854d30;
	Node0x5854d30 [shape=record,label="{if.end15.i:                                       \l  %17 = bitcast %struct.JQUANT_TBL* %16 to i32*\l  %18 = load i32, i32* %17, align 4\l  %19 = trunc i32 %18 to i16\l  %cmp17.i = icmp eq i16 %19, 0\l  %cmp23.i = icmp ult i32 %18, 65536\l  %or.cond.i = or i1 %cmp23.i, %cmp17.i\l  br i1 %or.cond.i, label %if.else.loopexit, label %lor.lhs.false25.i\l|{<s0>T|<s1>F}}"];
	Node0x5854d30:s0 -> Node0x5854c30;
	Node0x5854d30:s1 -> Node0x5855190;
	Node0x5855190 [shape=record,label="{lor.lhs.false25.i:                                \l  %arrayidx27.i = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %16, i64 0, i32 0, i64 8\l  %20 = bitcast i16* %arrayidx27.i to i32*\l  %21 = load i32, i32* %20, align 4\l  %22 = trunc i32 %21 to i16\l  %cmp29.i = icmp eq i16 %22, 0\l  br i1 %cmp29.i, label %if.else.loopexit, label %lor.lhs.false31.i\l|{<s0>T|<s1>F}}"];
	Node0x5855190:s0 -> Node0x5854c30;
	Node0x5855190:s1 -> Node0x58526e0;
	Node0x58526e0 [shape=record,label="{lor.lhs.false31.i:                                \l  %arrayidx33.i = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %16, i64 0, i32 0, i64 16\l  %23 = load i16, i16* %arrayidx33.i, align 4, !tbaa !25\l  %cmp35.i = icmp eq i16 %23, 0\l  %cmp41.i = icmp ult i32 %21, 65536\l  %or.cond133.i = or i1 %cmp41.i, %cmp35.i\l  br i1 %or.cond133.i, label %if.else.loopexit, label %lor.lhs.false43.i\l|{<s0>T|<s1>F}}"];
	Node0x58526e0:s0 -> Node0x5854c30;
	Node0x58526e0:s1 -> Node0x5855e00;
	Node0x5855e00 [shape=record,label="{lor.lhs.false43.i:                                \l  %arrayidx45.i = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %16, i64 0, i32 0, i64 2\l  %24 = load i16, i16* %arrayidx45.i, align 4, !tbaa !25\l  %cmp47.i = icmp eq i16 %24, 0\l  br i1 %cmp47.i, label %if.else.loopexit, label %if.end50.i\l|{<s0>T|<s1>F}}"];
	Node0x5855e00:s0 -> Node0x5854c30;
	Node0x5855e00:s1 -> Node0x5856750;
	Node0x5856750 [shape=record,label="{if.end50.i:                                       \l  %25 = load [64 x i32]*, [64 x i32]** %coef_bits2.i, align 8, !tbaa !15\l  %arraydecay.i = getelementptr inbounds [64 x i32], [64 x i32]* %25, i64\l... %indvars.iv130.i, i64 0\l  %26 = load i32, i32* %arraydecay.i, align 4, !tbaa !26\l  %cmp54.i = icmp slt i32 %26, 0\l  br i1 %cmp54.i, label %if.else.loopexit, label %for.body61.preheader.i\l|{<s0>T|<s1>F}}"];
	Node0x5856750:s0 -> Node0x5854c30;
	Node0x5856750:s1 -> Node0x58540f0;
	Node0x58540f0 [shape=record,label="{for.body61.preheader.i:                           \l  %arrayidx63.i = getelementptr inbounds [64 x i32], [64 x i32]* %25, i64\l... %indvars.iv130.i, i64 1\l  %27 = load i32, i32* %arrayidx63.i, align 4, !tbaa !26\l  %arrayidx65.i = getelementptr inbounds i32, i32* %coef_bits_latch.0121.i,\l... i64 1\l  store i32 %27, i32* %arrayidx65.i, align 4, !tbaa !26\l  %28 = load i32, i32* %arrayidx63.i, align 4, !tbaa !26\l  %arrayidx63.1.i = getelementptr inbounds [64 x i32], [64 x i32]* %25, i64\l... %indvars.iv130.i, i64 2\l  %29 = load i32, i32* %arrayidx63.1.i, align 4, !tbaa !26\l  %arrayidx65.1.i = getelementptr inbounds i32, i32* %coef_bits_latch.0121.i,\l... i64 2\l  store i32 %29, i32* %arrayidx65.1.i, align 4, !tbaa !26\l  %30 = load i32, i32* %arrayidx63.1.i, align 4, !tbaa !26\l  %31 = or i32 %30, %28\l  %arrayidx63.2.i = getelementptr inbounds [64 x i32], [64 x i32]* %25, i64\l... %indvars.iv130.i, i64 3\l  %32 = load i32, i32* %arrayidx63.2.i, align 4, !tbaa !26\l  %arrayidx65.2.i = getelementptr inbounds i32, i32* %coef_bits_latch.0121.i,\l... i64 3\l  store i32 %32, i32* %arrayidx65.2.i, align 4, !tbaa !26\l  %33 = load i32, i32* %arrayidx63.2.i, align 4, !tbaa !26\l  %34 = or i32 %31, %33\l  %arrayidx63.3.i = getelementptr inbounds [64 x i32], [64 x i32]* %25, i64\l... %indvars.iv130.i, i64 4\l  %35 = load i32, i32* %arrayidx63.3.i, align 4, !tbaa !26\l  %arrayidx65.3.i = getelementptr inbounds i32, i32* %coef_bits_latch.0121.i,\l... i64 4\l  store i32 %35, i32* %arrayidx65.3.i, align 4, !tbaa !26\l  %36 = load i32, i32* %arrayidx63.3.i, align 4, !tbaa !26\l  %37 = or i32 %34, %36\l  %arrayidx63.4.i = getelementptr inbounds [64 x i32], [64 x i32]* %25, i64\l... %indvars.iv130.i, i64 5\l  %38 = load i32, i32* %arrayidx63.4.i, align 4, !tbaa !26\l  %arrayidx65.4.i = getelementptr inbounds i32, i32* %coef_bits_latch.0121.i,\l... i64 5\l  store i32 %38, i32* %arrayidx65.4.i, align 4, !tbaa !26\l  %39 = load i32, i32* %arrayidx63.4.i, align 4, !tbaa !26\l  %40 = or i32 %37, %39\l  %41 = icmp eq i32 %40, 0\l  %smoothing_useful.1..4.i = select i1 %41, i32 %smoothing_useful.0120.i, i32 1\l  %add.ptr.i = getelementptr inbounds i32, i32* %coef_bits_latch.0121.i, i64 6\l  %indvars.iv.next131.i = add nuw nsw i64 %indvars.iv130.i, 1\l  %incdec.ptr.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0119.i, i64 1\l  %42 = load i32, i32* %num_components9.pre-phi.i, align 8, !tbaa !21\l  %43 = sext i32 %42 to i64\l  %cmp10.i = icmp slt i64 %indvars.iv.next131.i, %43\l  br i1 %cmp10.i, label %for.body.i, label %smoothing_ok.exit\l|{<s0>T|<s1>F}}"];
	Node0x58540f0:s0 -> Node0x5853f40;
	Node0x58540f0:s1 -> Node0x5859770;
	Node0x5859770 [shape=record,label="{smoothing_ok.exit:                                \l  %smoothing_useful.1..4.i.lcssa = phi i32 [ %smoothing_useful.1..4.i,\l... %for.body61.preheader.i ]\l  %tobool2 = icmp eq i32 %smoothing_useful.1..4.i.lcssa, 0\l  br i1 %tobool2, label %if.else, label %if.then3\l|{<s0>T|<s1>F}}"];
	Node0x5859770:s0 -> Node0x5845a80;
	Node0x5859770:s1 -> Node0x5859930;
	Node0x5859930 [shape=record,label="{if.then3:                                         \l  %decompress_data = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 0, i32 3\l  store i32 (%struct.jpeg_decompress_struct*, i8***)* @decompress_smooth_data,\l... i32 (%struct.jpeg_decompress_struct*, i8***)** %decompress_data, align 8,\l... !tbaa !27\l  br label %if.end7\l}"];
	Node0x5859930 -> Node0x58455a0;
	Node0x5854c30 [shape=record,label="{if.else.loopexit:                                 \l  br label %if.else\l}"];
	Node0x5854c30 -> Node0x5845a80;
	Node0x5845a80 [shape=record,label="{if.else:                                          \l  %decompress_data6 = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 0, i32 3\l  store i32 (%struct.jpeg_decompress_struct*, i8***)* @decompress_data, i32\l... (%struct.jpeg_decompress_struct*, i8***)** %decompress_data6, align 8, !tbaa\l... !27\l  br label %if.end7\l}"];
	Node0x5845a80 -> Node0x58455a0;
	Node0x58455a0 [shape=record,label="{if.end7:                                          \l  %output_iMCU_row = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 37\l  store i32 0, i32* %output_iMCU_row, align 8, !tbaa !28\l  ret void\l}"];
}
