digraph "CFG for 'post_process_1pass' function" {
	label="CFG for 'post_process_1pass' function";

	Node0x4dceed0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %num_rows = alloca i32, align 4\l  %post1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 76\l  %0 = bitcast %struct.jpeg_d_post_controller** %post1 to\l... %struct.my_post_controller**\l  %1 = load %struct.my_post_controller*, %struct.my_post_controller** %0,\l... align 8, !tbaa !2\l  %2 = bitcast i32* %num_rows to i8*\l  call void @llvm.lifetime.start(i64 4, i8* %2) #3\l  %3 = load i32, i32* %out_row_ctr, align 4, !tbaa !10\l  %sub = sub i32 %out_rows_avail, %3\l  %strip_height = getelementptr inbounds %struct.my_post_controller,\l... %struct.my_post_controller* %1, i64 0, i32 3\l  %4 = load i32, i32* %strip_height, align 8, !tbaa !11\l  %cmp = icmp ugt i32 %sub, %4\l  %.sub = select i1 %cmp, i32 %4, i32 %sub\l  store i32 0, i32* %num_rows, align 4, !tbaa !10\l  %upsample = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 81\l  %5 = load %struct.jpeg_upsampler*, %struct.jpeg_upsampler** %upsample, align\l... 8, !tbaa !14\l  %upsample3 = getelementptr inbounds %struct.jpeg_upsampler,\l... %struct.jpeg_upsampler* %5, i64 0, i32 1\l  %6 = load void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**,\l... i32*, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**,\l... i32*, i32)** %upsample3, align 8, !tbaa !15\l  %buffer = getelementptr inbounds %struct.my_post_controller,\l... %struct.my_post_controller* %1, i64 0, i32 2\l  %7 = load i8**, i8*** %buffer, align 8, !tbaa !17\l  call void %6(%struct.jpeg_decompress_struct* %cinfo, i8*** %input_buf, i32*\l... %in_row_group_ctr, i32 %in_row_groups_avail, i8** %7, i32* nonnull %num_rows,\l... i32 %.sub) #3\l  %cquantize = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %8 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer**\l... %cquantize, align 8, !tbaa !18\l  %color_quantize = getelementptr inbounds %struct.jpeg_color_quantizer,\l... %struct.jpeg_color_quantizer* %8, i64 0, i32 1\l  %9 = load void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void\l... (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %color_quantize, align\l... 8, !tbaa !19\l  %10 = load i8**, i8*** %buffer, align 8, !tbaa !17\l  %11 = load i32, i32* %out_row_ctr, align 4, !tbaa !10\l  %idx.ext = zext i32 %11 to i64\l  %add.ptr = getelementptr inbounds i8*, i8** %output_buf, i64 %idx.ext\l  %12 = load i32, i32* %num_rows, align 4, !tbaa !10\l  call void %9(%struct.jpeg_decompress_struct* %cinfo, i8** %10, i8**\l... %add.ptr, i32 %12) #3\l  %13 = load i32, i32* %num_rows, align 4, !tbaa !10\l  %14 = load i32, i32* %out_row_ctr, align 4, !tbaa !10\l  %add = add i32 %14, %13\l  store i32 %add, i32* %out_row_ctr, align 4, !tbaa !10\l  call void @llvm.lifetime.end(i64 4, i8* %2) #3\l  ret void\l}"];
}
