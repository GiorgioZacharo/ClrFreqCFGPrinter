digraph "CFG for 'fullsize_downsample' function" {
	label="CFG for 'fullsize_downsample' function";

	Node0x58a7100 [shape=record, style = filled, fillcolor = cyan, label="{entry:\l  %max_v_samp_factor = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 39\l  %0 = load i32, i32* %max_v_samp_factor, align 4, !tbaa !3\l  %image_width = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 6\l  %1 = load i32, i32* %image_width, align 8, !tbaa !11\l  tail call void @jcopy_sample_rows(i8** %input_data, i32 0, i8**\l... %output_data, i32 0, i32 %0, i32 %1) #5\l  %2 = load i32, i32* %max_v_samp_factor, align 4, !tbaa !3\l  %3 = load i32, i32* %image_width, align 8, !tbaa !11\l  %width_in_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr, i64 0, i32 7\l  %4 = load i32, i32* %width_in_blocks, align 4, !tbaa !12\l  %mul = shl i32 %4, 3\l  %sub.i = sub i32 %mul, %3\l  %cmp.i = icmp sgt i32 %sub.i, 0\l  %cmp121.i = icmp sgt i32 %2, 0\l  %or.cond.i = and i1 %cmp121.i, %cmp.i\l  br i1 %or.cond.i, label %for.body.us.preheader.i, label\l... %expand_right_edge.exit\l|{<s0>T|<s1>F}}"];
	Node0x58a7100:s0 -> Node0x58b76f0;
	Node0x58a7100:s1 -> Node0x58c9fc0;
	Node0x58b76f0 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us.preheader.i:                          \l  %idx.ext.i = zext i32 %3 to i64\l  %5 = add i32 %3, -1\l  %6 = sub i32 %5, %mul\l  %7 = icmp sgt i32 %6, -2\l  %smax.i = select i1 %7, i32 %6, i32 -2\l  %8 = sub i32 1, %3\l  %9 = add i32 %8, %mul\l  %10 = add i32 %9, %smax.i\l  %11 = zext i32 %10 to i64\l  %12 = add nuw nsw i64 %11, 1\l  %13 = add i32 %2, -1\l  %xtraiter = and i32 %2, 3\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %for.body.us.preheader.i.split, label\l... %for.body.us.i.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x58b76f0:s0 -> Node0x58c9aa0;
	Node0x58b76f0:s1 -> Node0x58ca920;
	Node0x58ca920 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us.i.prol.preheader:                     \l  br label %for.body.us.i.prol\l}"];
	Node0x58ca920 -> Node0x58caad0;
	Node0x58caad0 [shape=record, style = filled, fillcolor = green, label="{for.body.us.i.prol:                               \l  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body.us.i.prol\l... ], [ 0, %for.body.us.i.prol.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %for.body.us.i.prol ], [ %xtraiter,\l... %for.body.us.i.prol.preheader ]\l  %arrayidx.us.i.prol = getelementptr inbounds i8*, i8** %output_data, i64\l... %indvars.iv.i.prol\l  %14 = load i8*, i8** %arrayidx.us.i.prol, align 8, !tbaa !14\l  %add.ptr.us.i.prol = getelementptr inbounds i8, i8* %14, i64 %idx.ext.i\l  %arrayidx2.us.i.prol = getelementptr inbounds i8, i8* %add.ptr.us.i.prol,\l... i64 -1\l  %15 = load i8, i8* %arrayidx2.us.i.prol, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i.prol, i8 %15, i64\l... %12, i32 1, i1 false) #5\l  %indvars.iv.next.i.prol = add nuw nsw i64 %indvars.iv.i.prol, 1\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %for.body.us.preheader.i.split.loopexit, label\l... %for.body.us.i.prol, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x58caad0:s0 -> Node0x58cb6a0;
	Node0x58caad0:s1 -> Node0x58caad0;
	Node0x58cb6a0 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us.preheader.i.split.loopexit:           \l  %indvars.iv.next.i.prol.lcssa = phi i64 [ %indvars.iv.next.i.prol,\l... %for.body.us.i.prol ]\l  br label %for.body.us.preheader.i.split\l}"];
	Node0x58cb6a0 -> Node0x58c9aa0;
	Node0x58c9aa0 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us.preheader.i.split:                    \l  %indvars.iv.i.unr = phi i64 [ 0, %for.body.us.preheader.i ], [\l... %indvars.iv.next.i.prol.lcssa, %for.body.us.preheader.i.split.loopexit ]\l  %16 = icmp ult i32 %13, 3\l  br i1 %16, label %expand_right_edge.exit.loopexit, label\l... %for.body.us.preheader.i.split.split\l|{<s0>T|<s1>F}}"];
	Node0x58c9aa0:s0 -> Node0x58ca400;
	Node0x58c9aa0:s1 -> Node0x58cbb30;
	Node0x58cbb30 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us.preheader.i.split.split:              \l  br label %for.body.us.i\l}"];
	Node0x58cbb30 -> Node0x58cbce0;
	Node0x58cbce0 [shape=record, style = filled, fillcolor = green, label="{for.body.us.i:                                    \l  %indvars.iv.i = phi i64 [ %indvars.iv.i.unr,\l... %for.body.us.preheader.i.split.split ], [ %indvars.iv.next.i.3,\l... %for.body.us.i ]\l  %arrayidx.us.i = getelementptr inbounds i8*, i8** %output_data, i64\l... %indvars.iv.i\l  %17 = load i8*, i8** %arrayidx.us.i, align 8, !tbaa !14\l  %add.ptr.us.i = getelementptr inbounds i8, i8* %17, i64 %idx.ext.i\l  %arrayidx2.us.i = getelementptr inbounds i8, i8* %add.ptr.us.i, i64 -1\l  %18 = load i8, i8* %arrayidx2.us.i, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i, i8 %18, i64 %12, i32\l... 1, i1 false) #5\l  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1\l  %arrayidx.us.i.1 = getelementptr inbounds i8*, i8** %output_data, i64\l... %indvars.iv.next.i\l  %19 = load i8*, i8** %arrayidx.us.i.1, align 8, !tbaa !14\l  %add.ptr.us.i.1 = getelementptr inbounds i8, i8* %19, i64 %idx.ext.i\l  %arrayidx2.us.i.1 = getelementptr inbounds i8, i8* %add.ptr.us.i.1, i64 -1\l  %20 = load i8, i8* %arrayidx2.us.i.1, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i.1, i8 %20, i64 %12,\l... i32 1, i1 false) #5\l  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2\l  %arrayidx.us.i.2 = getelementptr inbounds i8*, i8** %output_data, i64\l... %indvars.iv.next.i.1\l  %21 = load i8*, i8** %arrayidx.us.i.2, align 8, !tbaa !14\l  %add.ptr.us.i.2 = getelementptr inbounds i8, i8* %21, i64 %idx.ext.i\l  %arrayidx2.us.i.2 = getelementptr inbounds i8, i8* %add.ptr.us.i.2, i64 -1\l  %22 = load i8, i8* %arrayidx2.us.i.2, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i.2, i8 %22, i64 %12,\l... i32 1, i1 false) #5\l  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3\l  %arrayidx.us.i.3 = getelementptr inbounds i8*, i8** %output_data, i64\l... %indvars.iv.next.i.2\l  %23 = load i8*, i8** %arrayidx.us.i.3, align 8, !tbaa !14\l  %add.ptr.us.i.3 = getelementptr inbounds i8, i8* %23, i64 %idx.ext.i\l  %arrayidx2.us.i.3 = getelementptr inbounds i8, i8* %add.ptr.us.i.3, i64 -1\l  %24 = load i8, i8* %arrayidx2.us.i.3, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i.3, i8 %24, i64 %12,\l... i32 1, i1 false) #5\l  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4\l  %lftr.wideiv.3 = trunc i64 %indvars.iv.next.i.3 to i32\l  %exitcond.3 = icmp eq i32 %lftr.wideiv.3, %2\l  br i1 %exitcond.3, label %expand_right_edge.exit.loopexit.unr-lcssa, label\l... %for.body.us.i\l|{<s0>T|<s1>F}}"];
	Node0x58cbce0:s0 -> Node0x58baf10;
	Node0x58cbce0:s1 -> Node0x58cbce0;
	Node0x58baf10 [shape=record, style = filled, fillcolor = cyan, label="{expand_right_edge.exit.loopexit.unr-lcssa:        \l  br label %expand_right_edge.exit.loopexit\l}"];
	Node0x58baf10 -> Node0x58ca400;
	Node0x58ca400 [shape=record, style = filled, fillcolor = cyan, label="{expand_right_edge.exit.loopexit:                  \l  br label %expand_right_edge.exit\l}"];
	Node0x58ca400 -> Node0x58c9fc0;
	Node0x58c9fc0 [shape=record, style = filled, fillcolor = cyan, label="{expand_right_edge.exit:                           \l  ret void\l}"];
}
