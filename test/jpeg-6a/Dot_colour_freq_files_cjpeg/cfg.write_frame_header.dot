digraph "CFG for 'write_frame_header' function" {
	label="CFG for 'write_frame_header' function";

	Node0x5af2750 [shape=record,label="{entry:\l  %comp_info = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14\l  %num_components = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12\l  %0 = load i32, i32* %num_components, align 4, !tbaa !3\l  %cmp68 = icmp sgt i32 %0, 0\l  br i1 %cmp68, label %for.body.preheader, label %for.end, !prof !11\l|{<s0>T|<s1>F}}"];
	Node0x5af2750:s0 -> Node0x5af2b60;
	Node0x5af2750:s1 -> Node0x5af2c00;
	Node0x5af2b60 [shape=record,label="{for.body.preheader:                               \l  %1 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !12\l  br label %for.body\l}"];
	Node0x5af2b60 -> Node0x5af2fc0;
	Node0x5af2fc0 [shape=record,label="{for.body:                                         \l  %compptr.071 = phi %struct.jpeg_component_info* [ %incdec.ptr, %for.body ],\l... [ %1, %for.body.preheader ]\l  %prec.070 = phi i32 [ %add, %for.body ], [ 0, %for.body.preheader ]\l  %ci.069 = phi i32 [ %inc, %for.body ], [ 0, %for.body.preheader ]\l  %quant_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.071, i64 0, i32 4\l  %2 = load i32, i32* %quant_tbl_no, align 8, !tbaa !13\l  %call = tail call fastcc i32 @emit_dqt(%struct.jpeg_compress_struct* nonnull\l... %cinfo, i32 %2)\l  %add = add nsw i32 %call, %prec.070\l  %inc = add nuw nsw i32 %ci.069, 1\l  %incdec.ptr = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.071, i64 1\l  %3 = load i32, i32* %num_components, align 4, !tbaa !3\l  %cmp = icmp slt i32 %inc, %3\l  br i1 %cmp, label %for.body, label %for.end.loopexit, !prof !11\l|{<s0>T|<s1>F}}"];
	Node0x5af2fc0:s0 -> Node0x5af2fc0;
	Node0x5af2fc0:s1 -> Node0x5af26d0;
	Node0x5af26d0 [shape=record,label="{for.end.loopexit:                                 \l  %add.lcssa = phi i32 [ %add, %for.body ]\l  br label %for.end\l}"];
	Node0x5af26d0 -> Node0x5af2c00;
	Node0x5af2c00 [shape=record,label="{for.end:                                          \l  %prec.0.lcssa = phi i32 [ 0, %entry ], [ %add.lcssa, %for.end.loopexit ]\l  %arith_code = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 24\l  %4 = load i32, i32* %arith_code, align 4, !tbaa !15\l  %tobool = icmp eq i32 %4, 0\l  br i1 %tobool, label %lor.lhs.false, label %if.then25, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x5af2c00:s0 -> Node0x5af6a10;
	Node0x5af2c00:s1 -> Node0x5af6ac0;
	Node0x5af6a10 [shape=record,label="{lor.lhs.false:                                    \l  %progressive_mode = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 37\l  %5 = load i32, i32* %progressive_mode, align 4, !tbaa !17\l  %tobool1 = icmp eq i32 %5, 0\l  br i1 %tobool1, label %lor.lhs.false2, label %if.then29, !prof !18\l|{<s0>T|<s1>F}}"];
	Node0x5af6a10:s0 -> Node0x5af7720;
	Node0x5af6a10:s1 -> Node0x5af77d0;
	Node0x5af7720 [shape=record,label="{lor.lhs.false2:                                   \l  %data_precision = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 11\l  %6 = bitcast i32* %data_precision to i64*\l  %7 = load i64, i64* %6, align 8\l  %8 = trunc i64 %7 to i32\l  %cmp3 = icmp eq i32 %8, 8\l  %9 = lshr i64 %7, 32\l  %10 = trunc i64 %9 to i32\l  br i1 %cmp3, label %if.else, label %if.else26\l|{<s0>T|<s1>F}}"];
	Node0x5af7720:s0 -> Node0x5a9e770;
	Node0x5af7720:s1 -> Node0x5a9e840;
	Node0x5a9e770 [shape=record,label="{if.else:                                          \l  %cmp764 = icmp sgt i32 %10, 0\l  br i1 %cmp764, label %for.body8.lr.ph, label %for.end16\l|{<s0>T|<s1>F}}"];
	Node0x5a9e770:s0 -> Node0x5a9ea50;
	Node0x5a9e770:s1 -> Node0x5a9ead0;
	Node0x5a9ea50 [shape=record,label="{for.body8.lr.ph:                                  \l  %11 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !12\l  %12 = lshr i64 %7, 32\l  %13 = trunc i64 %12 to i32\l  %xtraiter = and i32 %13, 1\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %for.body8.lr.ph.split, label %for.body8.prol\l|{<s0>T|<s1>F}}"];
	Node0x5a9ea50:s0 -> Node0x5af9020;
	Node0x5a9ea50:s1 -> Node0x5af9120;
	Node0x5af9120 [shape=record,label="{for.body8.prol:                                   \l  %dc_tbl_no.prol = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %11, i64 0, i32 5\l  %14 = load i32, i32* %dc_tbl_no.prol, align 4, !tbaa !19\l  %cmp9.prol = icmp sgt i32 %14, 1\l  br i1 %cmp9.prol, label %if.then12.prol, label %lor.lhs.false10.prol\l|{<s0>T|<s1>F}}"];
	Node0x5af9120:s0 -> Node0x5af9510;
	Node0x5af9120:s1 -> Node0x5af9620;
	Node0x5af9620 [shape=record,label="{lor.lhs.false10.prol:                             \l  %ac_tbl_no.prol = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %11, i64 0, i32 6\l  %15 = load i32, i32* %ac_tbl_no.prol, align 8, !tbaa !20\l  %cmp11.prol = icmp sgt i32 %15, 1\l  br i1 %cmp11.prol, label %if.then12.prol, label %for.inc13.prol\l|{<s0>T|<s1>F}}"];
	Node0x5af9620:s0 -> Node0x5af9510;
	Node0x5af9620:s1 -> Node0x5af9a80;
	Node0x5af9510 [shape=record,label="{if.then12.prol:                                   \l  br label %for.inc13.prol\l}"];
	Node0x5af9510 -> Node0x5af9a80;
	Node0x5af9a80 [shape=record,label="{for.inc13.prol:                                   \l  %is_baseline.1.prol = phi i32 [ 0, %if.then12.prol ], [ 1,\l... %lor.lhs.false10.prol ]\l  %incdec.ptr15.prol = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %11, i64 1\l  br label %for.body8.lr.ph.split\l}"];
	Node0x5af9a80 -> Node0x5af9020;
	Node0x5af9020 [shape=record,label="{for.body8.lr.ph.split:                            \l  %compptr.167.unr = phi %struct.jpeg_component_info* [ %11, %for.body8.lr.ph\l... ], [ %incdec.ptr15.prol, %for.inc13.prol ]\l  %is_baseline.066.unr = phi i32 [ 1, %for.body8.lr.ph ], [\l... %is_baseline.1.prol, %for.inc13.prol ]\l  %ci.165.unr = phi i32 [ 0, %for.body8.lr.ph ], [ 1, %for.inc13.prol ]\l  %is_baseline.1.lcssa.unr = phi i32 [ undef, %for.body8.lr.ph ], [\l... %is_baseline.1.prol, %for.inc13.prol ]\l  %16 = icmp eq i32 %13, 1\l  br i1 %16, label %for.end16.loopexit, label %for.body8.lr.ph.split.split\l|{<s0>T|<s1>F}}"];
	Node0x5af9020:s0 -> Node0x5af7b10;
	Node0x5af9020:s1 -> Node0x5afaa60;
	Node0x5afaa60 [shape=record,label="{for.body8.lr.ph.split.split:                      \l  br label %for.body8\l}"];
	Node0x5afaa60 -> Node0x5afac10;
	Node0x5afac10 [shape=record,label="{for.body8:                                        \l  %compptr.167 = phi %struct.jpeg_component_info* [ %compptr.167.unr,\l... %for.body8.lr.ph.split.split ], [ %incdec.ptr15.1, %for.inc13.1 ]\l  %is_baseline.066 = phi i32 [ %is_baseline.066.unr,\l... %for.body8.lr.ph.split.split ], [ %is_baseline.1.1, %for.inc13.1 ]\l  %ci.165 = phi i32 [ %ci.165.unr, %for.body8.lr.ph.split.split ], [ %inc14.1,\l... %for.inc13.1 ]\l  %dc_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.167, i64 0, i32 5\l  %17 = load i32, i32* %dc_tbl_no, align 4, !tbaa !19\l  %cmp9 = icmp sgt i32 %17, 1\l  br i1 %cmp9, label %if.then12, label %lor.lhs.false10\l|{<s0>T|<s1>F}}"];
	Node0x5afac10:s0 -> Node0x5afb960;
	Node0x5afac10:s1 -> Node0x5afba40;
	Node0x5afba40 [shape=record,label="{lor.lhs.false10:                                  \l  %ac_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.167, i64 0, i32 6\l  %18 = load i32, i32* %ac_tbl_no, align 8, !tbaa !20\l  %cmp11 = icmp sgt i32 %18, 1\l  br i1 %cmp11, label %if.then12, label %for.inc13\l|{<s0>T|<s1>F}}"];
	Node0x5afba40:s0 -> Node0x5afb960;
	Node0x5afba40:s1 -> Node0x5afc330;
	Node0x5afb960 [shape=record,label="{if.then12:                                        \l  br label %for.inc13\l}"];
	Node0x5afb960 -> Node0x5afc330;
	Node0x5afc330 [shape=record,label="{for.inc13:                                        \l  %is_baseline.1 = phi i32 [ 0, %if.then12 ], [ %is_baseline.066,\l... %lor.lhs.false10 ]\l  %dc_tbl_no.1 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.167, i64 1, i32 5\l  %19 = load i32, i32* %dc_tbl_no.1, align 4, !tbaa !19\l  %cmp9.1 = icmp sgt i32 %19, 1\l  br i1 %cmp9.1, label %if.then12.1, label %lor.lhs.false10.1\l|{<s0>T|<s1>F}}"];
	Node0x5afc330:s0 -> Node0x5afc6f0;
	Node0x5afc330:s1 -> Node0x5afc800;
	Node0x5afc990 [shape=record,label="{for.end16.loopexit.unr-lcssa:                     \l  %is_baseline.1.1.lcssa = phi i32 [ %is_baseline.1.1, %for.inc13.1 ]\l  br label %for.end16.loopexit\l}"];
	Node0x5afc990 -> Node0x5af7b10;
	Node0x5af7b10 [shape=record,label="{for.end16.loopexit:                               \l  %is_baseline.1.lcssa = phi i32 [ %is_baseline.1.lcssa.unr,\l... %for.body8.lr.ph.split ], [ %is_baseline.1.1.lcssa,\l... %for.end16.loopexit.unr-lcssa ]\l  br label %for.end16\l}"];
	Node0x5af7b10 -> Node0x5a9ead0;
	Node0x5a9ead0 [shape=record,label="{for.end16:                                        \l  %is_baseline.0.lcssa = phi i32 [ 1, %if.else ], [ %is_baseline.1.lcssa,\l... %for.end16.loopexit ]\l  %tobool17 = icmp ne i32 %prec.0.lcssa, 0\l  %tobool18 = icmp ne i32 %is_baseline.0.lcssa, 0\l  %or.cond = and i1 %tobool17, %tobool18\l  br i1 %or.cond, label %if.end22, label %if.else26\l|{<s0>T|<s1>F}}"];
	Node0x5a9ead0:s0 -> Node0x5afce80;
	Node0x5a9ead0:s1 -> Node0x5a9e840;
	Node0x5afce80 [shape=record,label="{if.end22:                                         \l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !21\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %20, i64 0, i32 5\l  store i32 74, i32* %msg_code, align 8, !tbaa !22\l  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %20, i64 0, i32 1\l  %21 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !25\l  %22 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %21(%struct.jpeg_common_struct* %22, i32 0) #1\l  %.pr.pre = load i32, i32* %arith_code, align 4, !tbaa !15\l  %phitmp = icmp eq i32 %.pr.pre, 0\l  br i1 %phitmp, label %if.else26, label %if.then25, !prof !26\l|{<s0>T|<s1>F}}"];
	Node0x5afce80:s0 -> Node0x5a9e840;
	Node0x5afce80:s1 -> Node0x5af6ac0;
	Node0x5af6ac0 [shape=record,label="{if.then25:                                        \l  tail call fastcc void @emit_sof(%struct.jpeg_compress_struct* nonnull\l... %cinfo, i32 201)\l  br label %if.end36\l}"];
	Node0x5af6ac0 -> Node0x5afe160;
	Node0x5a9e840 [shape=record,label="{if.else26:                                        \l  %is_baseline.2.ph75.ph = phi i32 [ 0, %lor.lhs.false2 ], [\l... %is_baseline.0.lcssa, %for.end16 ], [ 0, %if.end22 ]\l  %.pr = load i32, i32* %progressive_mode, align 4, !tbaa !17\l  %tobool28 = icmp eq i32 %.pr, 0\l  br i1 %tobool28, label %if.else30, label %if.then29, !prof !26\l|{<s0>T|<s1>F}}"];
	Node0x5a9e840:s0 -> Node0x5afea90;
	Node0x5a9e840:s1 -> Node0x5af77d0;
	Node0x5af77d0 [shape=record,label="{if.then29:                                        \l  tail call fastcc void @emit_sof(%struct.jpeg_compress_struct* nonnull\l... %cinfo, i32 194)\l  br label %if.end36\l}"];
	Node0x5af77d0 -> Node0x5afe160;
	Node0x5afea90 [shape=record,label="{if.else30:                                        \l  %tobool31 = icmp eq i32 %is_baseline.2.ph75.ph, 0\l  br i1 %tobool31, label %if.else33, label %if.then32\l|{<s0>T|<s1>F}}"];
	Node0x5afea90:s0 -> Node0x5aff400;
	Node0x5afea90:s1 -> Node0x5aff480;
	Node0x5aff480 [shape=record,label="{if.then32:                                        \l  tail call fastcc void @emit_sof(%struct.jpeg_compress_struct* nonnull\l... %cinfo, i32 192)\l  br label %if.end36\l}"];
	Node0x5aff480 -> Node0x5afe160;
	Node0x5aff400 [shape=record,label="{if.else33:                                        \l  tail call fastcc void @emit_sof(%struct.jpeg_compress_struct* nonnull\l... %cinfo, i32 193)\l  br label %if.end36\l}"];
	Node0x5aff400 -> Node0x5afe160;
	Node0x5afe160 [shape=record,label="{if.end36:                                         \l  ret void\l}"];
	Node0x5afc800 [shape=record,label="{lor.lhs.false10.1:                                \l  %ac_tbl_no.1 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.167, i64 1, i32 6\l  %23 = load i32, i32* %ac_tbl_no.1, align 8, !tbaa !20\l  %cmp11.1 = icmp sgt i32 %23, 1\l  br i1 %cmp11.1, label %if.then12.1, label %for.inc13.1\l|{<s0>T|<s1>F}}"];
	Node0x5afc800:s0 -> Node0x5afc6f0;
	Node0x5afc800:s1 -> Node0x5afad00;
	Node0x5afc6f0 [shape=record,label="{if.then12.1:                                      \l  br label %for.inc13.1\l}"];
	Node0x5afc6f0 -> Node0x5afad00;
	Node0x5afad00 [shape=record,label="{for.inc13.1:                                      \l  %is_baseline.1.1 = phi i32 [ 0, %if.then12.1 ], [ %is_baseline.1,\l... %lor.lhs.false10.1 ]\l  %inc14.1 = add nsw i32 %ci.165, 2\l  %incdec.ptr15.1 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.167, i64 2\l  %cmp7.1 = icmp slt i32 %inc14.1, %10\l  br i1 %cmp7.1, label %for.body8, label %for.end16.loopexit.unr-lcssa\l|{<s0>T|<s1>F}}"];
	Node0x5afad00:s0 -> Node0x5afac10;
	Node0x5afad00:s1 -> Node0x5afc990;
}
