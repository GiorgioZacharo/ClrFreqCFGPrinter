digraph "CFG for 'start_pass_huff_decoder' function" {
	label="CFG for 'start_pass_huff_decoder' function";

	Node0x4e8d700 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %entropy1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 79\l  %0 = bitcast %struct.jpeg_entropy_decoder** %entropy1 to\l... %struct.huff_entropy_decoder**\l  %1 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %0,\l... align 8, !tbaa !2\l  %Ss = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 68\l  %2 = load i32, i32* %Ss, align 4, !tbaa !10\l  %cmp = icmp eq i32 %2, 0\l  br i1 %cmp, label %lor.lhs.false, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x4e8d700:s0 -> Node0x4e8e1a0;
	Node0x4e8d700:s1 -> Node0x4e8e280;
	Node0x4e8e1a0 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false:                                    \l  %Se = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 69\l  %3 = bitcast i32* %Se to i64*\l  %4 = load i64, i64* %3, align 8\l  %5 = trunc i64 %4 to i32\l  %cmp2 = icmp eq i32 %5, 63\l  %cmp4 = icmp ult i64 %4, 4294967296\l  %or.cond = and i1 %cmp2, %cmp4\l  br i1 %or.cond, label %lor.lhs.false5, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x4e8e1a0:s0 -> Node0x4e8e850;
	Node0x4e8e1a0:s1 -> Node0x4e8e280;
	Node0x4e8e850 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false5:                                   \l  %Al = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 71\l  %6 = load i32, i32* %Al, align 8, !tbaa !11\l  %cmp6 = icmp eq i32 %6, 0\l  br i1 %cmp6, label %for.cond.preheader, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x4e8e850:s0 -> Node0x4e8ed70;
	Node0x4e8e850:s1 -> Node0x4e8e280;
	Node0x4e8e280 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %7 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !12\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %7, i64 0, i32 5\l  store i32 118, i32* %msg_code, align 8, !tbaa !13\l  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %7, i64 0, i32 1\l  %8 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !16\l  %9 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %8(%struct.jpeg_common_struct* %9, i32 -1) #2\l  br label %for.cond.preheader\l}"];
	Node0x4e8e280 -> Node0x4e8ed70;
	Node0x4e8ed70 [shape=record, style = filled, fillcolor = blue, label="{for.cond.preheader:                               \l  %comps_in_scan = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 62\l  %10 = load i32, i32* %comps_in_scan, align 8, !tbaa !17\l  %cmp8104 = icmp sgt i32 %10, 0\l  br i1 %cmp8104, label %for.body.lr.ph, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x4e8ed70:s0 -> Node0x4e8f750;
	Node0x4e8ed70:s1 -> Node0x4e8f830;
	Node0x4e8f750 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  %err17 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %11 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  br label %for.body\l}"];
	Node0x4e8f750 -> Node0x4e8fa30;
	Node0x4e8fa30 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end39 ]\l  %arrayidx = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 63, i64 %indvars.iv\l  %12 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx, align 8, !tbaa !18\l  %dc_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %12, i64 0, i32 5\l  %13 = load i32, i32* %dc_tbl_no, align 4, !tbaa !19\l  %ac_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %12, i64 0, i32 6\l  %14 = load i32, i32* %ac_tbl_no, align 8, !tbaa !21\l  %15 = icmp ugt i32 %13, 3\l  br i1 %15, label %if.then16, label %lor.lhs.false12\l|{<s0>T|<s1>F}}"];
	Node0x4e8fa30:s0 -> Node0x4e90580;
	Node0x4e8fa30:s1 -> Node0x4e90660;
	Node0x4e90660 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false12:                                  \l  %idxprom13 = sext i32 %13 to i64\l  %arrayidx14 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 40, i64 %idxprom13\l  %16 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx14, align 8,\l... !tbaa !18\l  %cmp15 = icmp eq %struct.JHUFF_TBL* %16, null\l  br i1 %cmp15, label %if.then16, label %if.end22\l|{<s0>T|<s1>F}}"];
	Node0x4e90660:s0 -> Node0x4e90580;
	Node0x4e90660:s1 -> Node0x4e90b20;
	Node0x4e90580 [shape=record, style = filled, fillcolor = blue, label="{if.then16:                                        \l  %17 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err17, align\l... 8, !tbaa !12\l  %msg_code18 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %17, i64 0, i32 5\l  store i32 49, i32* %msg_code18, align 8, !tbaa !13\l  %arrayidx20 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %17, i64 0, i32 6, i32 0, i64 0\l  store i32 %13, i32* %arrayidx20, align 4, !tbaa !22\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %17, i64 0, i32 0\l  %18 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !23\l  tail call void %18(%struct.jpeg_common_struct* nonnull %11) #2\l  br label %if.end22\l}"];
	Node0x4e90580 -> Node0x4e90b20;
	Node0x4e90b20 [shape=record, style = filled, fillcolor = blue, label="{if.end22:                                         \l  %19 = icmp ugt i32 %14, 3\l  %.pre107 = sext i32 %14 to i64\l  %.pre = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 41, i64 %.pre107\l  br i1 %19, label %if.then30, label %lor.lhs.false26\l|{<s0>T|<s1>F}}"];
	Node0x4e90b20:s0 -> Node0x4e7dcc0;
	Node0x4e90b20:s1 -> Node0x4e7dda0;
	Node0x4e7dda0 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false26:                                  \l  %20 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %.pre, align 8, !tbaa !18\l  %cmp29 = icmp eq %struct.JHUFF_TBL* %20, null\l  br i1 %cmp29, label %if.then30, label %if.end39\l|{<s0>T|<s1>F}}"];
	Node0x4e7dda0:s0 -> Node0x4e7dcc0;
	Node0x4e7dda0:s1 -> Node0x4e8fbb0;
	Node0x4e7dcc0 [shape=record, style = filled, fillcolor = blue, label="{if.then30:                                        \l  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err17, align\l... 8, !tbaa !12\l  %msg_code32 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %21, i64 0, i32 5\l  store i32 49, i32* %msg_code32, align 8, !tbaa !13\l  %arrayidx36 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %21, i64 0, i32 6, i32 0, i64 0\l  store i32 %14, i32* %arrayidx36, align 4, !tbaa !22\l  %error_exit38 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %21, i64 0, i32 0\l  %22 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit38, align 8, !tbaa !23\l  tail call void %22(%struct.jpeg_common_struct* %11) #2\l  br label %if.end39\l}"];
	Node0x4e7dcc0 -> Node0x4e8fbb0;
	Node0x4e8fbb0 [shape=record, style = filled, fillcolor = blue, label="{if.end39:                                         \l  %idxprom40 = sext i32 %13 to i64\l  %arrayidx42 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 40, i64 %idxprom40\l  %23 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx42, align 8,\l... !tbaa !18\l  %arrayidx44 = getelementptr inbounds %struct.huff_entropy_decoder,\l... %struct.huff_entropy_decoder* %1, i64 0, i32 4, i64 %idxprom40\l  tail call void @jpeg_make_d_derived_tbl(%struct.jpeg_decompress_struct*\l... nonnull %cinfo, %struct.JHUFF_TBL* %23, %struct.d_derived_tbl** %arrayidx44)\l  %24 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %.pre, align 8, !tbaa !18\l  %arrayidx49 = getelementptr inbounds %struct.huff_entropy_decoder,\l... %struct.huff_entropy_decoder* %1, i64 0, i32 5, i64 %.pre107\l  tail call void @jpeg_make_d_derived_tbl(%struct.jpeg_decompress_struct*\l... nonnull %cinfo, %struct.JHUFF_TBL* %24, %struct.d_derived_tbl** %arrayidx49)\l  %arrayidx51 = getelementptr inbounds %struct.huff_entropy_decoder,\l... %struct.huff_entropy_decoder* %1, i64 0, i32 2, i32 0, i64 %indvars.iv\l  store i32 0, i32* %arrayidx51, align 4, !tbaa !22\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %25 = load i32, i32* %comps_in_scan, align 8, !tbaa !17\l  %26 = sext i32 %25 to i64\l  %cmp8 = icmp slt i64 %indvars.iv.next, %26\l  br i1 %cmp8, label %for.body, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x4e8fbb0:s0 -> Node0x4e8fa30;
	Node0x4e8fbb0:s1 -> Node0x4e96cc0;
	Node0x4e96cc0 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  br label %for.end\l}"];
	Node0x4e96cc0 -> Node0x4e8f830;
	Node0x4e8f830 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %get_buffer = getelementptr inbounds %struct.huff_entropy_decoder,\l... %struct.huff_entropy_decoder* %1, i64 0, i32 1, i32 0\l  %restart_interval = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 49\l  %27 = bitcast i64* %get_buffer to i8*\l  call void @llvm.memset.p0i8.i64(i8* %27, i8 0, i64 16, i32 8, i1 false)\l  %28 = load i32, i32* %restart_interval, align 8, !tbaa !24\l  %restarts_to_go = getelementptr inbounds %struct.huff_entropy_decoder,\l... %struct.huff_entropy_decoder* %1, i64 0, i32 3\l  store i32 %28, i32* %restarts_to_go, align 8, !tbaa !25\l  ret void\l}"];
}
