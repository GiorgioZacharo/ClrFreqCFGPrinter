digraph "CFG for 'get_scaled_gray_row' function" {
	label="CFG for 'get_scaled_gray_row' function";

	Node0x582f8a0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %rescale1 = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 1, i32 3\l  %0 = bitcast %struct._IO_FILE** %rescale1 to i8**\l  %1 = load i8*, i8** %0, align 8, !tbaa !3\l  %iobuffer = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 1\l  %2 = bitcast %struct.cjpeg_source_struct* %iobuffer to i8**\l  %3 = load i8*, i8** %2, align 8, !tbaa !11\l  %buffer_width = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 1, i32 2\l  %4 = bitcast void (%struct.jpeg_compress_struct*,\l... %struct.cjpeg_source_struct*)** %buffer_width to i64*\l  %5 = load i64, i64* %4, align 8, !tbaa !12\l  %input_file = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 0, i32 3\l  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %input_file, align 8, !tbaa\l... !13\l  %call = tail call i64 @fread(i8* %3, i64 1, i64 %5, %struct._IO_FILE* %6)\l  %7 = load i64, i64* %4, align 8, !tbaa !12\l  %cmp = icmp eq i64 %call, %7\l  br i1 %cmp, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x582f8a0:s0 -> Node0x58300d0;
	Node0x582f8a0:s1 -> Node0x58301a0;
	Node0x58301a0 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !14\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 5\l  store i32 42, i32* %msg_code, align 8, !tbaa !18\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 0\l  %9 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !20\l  %10 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %9(%struct.jpeg_common_struct* %10) #3\l  br label %if.end\l}"];
	Node0x58301a0 -> Node0x58300d0;
	Node0x58300d0 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %image_width = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 6\l  %11 = load i32, i32* %image_width, align 8, !tbaa !21\l  %cmp624 = icmp eq i32 %11, 0\l  br i1 %cmp624, label %for.end, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x58300d0:s0 -> Node0x5830a40;
	Node0x58300d0:s1 -> Node0x5830b40;
	Node0x5830b40 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader:                               \l  %12 = load i8*, i8** %2, align 8, !tbaa !11\l  %buffer = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 0, i32 4\l  %13 = load i8**, i8*** %buffer, align 8, !tbaa !22\l  %14 = load i8*, i8** %13, align 8, !tbaa !23\l  %15 = add i32 %11, -1\l  %xtraiter = and i32 %11, 3\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %for.body.preheader.split, label\l... %for.body.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5830b40:s0 -> Node0x5831040;
	Node0x5830b40:s1 -> Node0x5831160;
	Node0x5831160 [shape=record, style = filled, fillcolor = blue, label="{for.body.prol.preheader:                          \l  br label %for.body.prol\l}"];
	Node0x5831160 -> Node0x58312f0;
	Node0x58312f0 [shape=record, style = filled, fillcolor = blue, label="{for.body.prol:                                    \l  %col.027.prol = phi i32 [ %dec.prol, %for.body.prol ], [ %11,\l... %for.body.prol.preheader ]\l  %ptr.026.prol = phi i8* [ %incdec.ptr8.prol, %for.body.prol ], [ %14,\l... %for.body.prol.preheader ]\l  %bufferptr.025.prol = phi i8* [ %incdec.ptr.prol, %for.body.prol ], [ %12,\l... %for.body.prol.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %for.body.prol ], [ %xtraiter,\l... %for.body.prol.preheader ]\l  %incdec.ptr.prol = getelementptr inbounds i8, i8* %bufferptr.025.prol, i64 1\l  %16 = load i8, i8* %bufferptr.025.prol, align 1, !tbaa !24\l  %idxprom.prol = zext i8 %16 to i64\l  %arrayidx7.prol = getelementptr inbounds i8, i8* %1, i64 %idxprom.prol\l  %17 = load i8, i8* %arrayidx7.prol, align 1, !tbaa !24\l  %incdec.ptr8.prol = getelementptr inbounds i8, i8* %ptr.026.prol, i64 1\l  store i8 %17, i8* %ptr.026.prol, align 1, !tbaa !24\l  %dec.prol = add i32 %col.027.prol, -1\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %for.body.preheader.split.loopexit, label\l... %for.body.prol, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x58312f0:s0 -> Node0x5832140;
	Node0x58312f0:s1 -> Node0x58312f0;
	Node0x5832140 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader.split.loopexit:                \l  %dec.prol.lcssa = phi i32 [ %dec.prol, %for.body.prol ]\l  %incdec.ptr8.prol.lcssa = phi i8* [ %incdec.ptr8.prol, %for.body.prol ]\l  %incdec.ptr.prol.lcssa = phi i8* [ %incdec.ptr.prol, %for.body.prol ]\l  br label %for.body.preheader.split\l}"];
	Node0x5832140 -> Node0x5831040;
	Node0x5831040 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader.split:                         \l  %col.027.unr = phi i32 [ %11, %for.body.preheader ], [ %dec.prol.lcssa,\l... %for.body.preheader.split.loopexit ]\l  %ptr.026.unr = phi i8* [ %14, %for.body.preheader ], [\l... %incdec.ptr8.prol.lcssa, %for.body.preheader.split.loopexit ]\l  %bufferptr.025.unr = phi i8* [ %12, %for.body.preheader ], [\l... %incdec.ptr.prol.lcssa, %for.body.preheader.split.loopexit ]\l  %18 = icmp ult i32 %15, 3\l  br i1 %18, label %for.end.loopexit, label %for.body.preheader.split.split\l|{<s0>T|<s1>F}}"];
	Node0x5831040:s0 -> Node0x5832740;
	Node0x5831040:s1 -> Node0x5832840;
	Node0x5832840 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader.split.split:                   \l  br label %for.body\l}"];
	Node0x5832840 -> Node0x58329b0;
	Node0x58329b0 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %col.027 = phi i32 [ %col.027.unr, %for.body.preheader.split.split ], [\l... %dec.3, %for.body ]\l  %ptr.026 = phi i8* [ %ptr.026.unr, %for.body.preheader.split.split ], [\l... %incdec.ptr8.3, %for.body ]\l  %bufferptr.025 = phi i8* [ %bufferptr.025.unr,\l... %for.body.preheader.split.split ], [ %incdec.ptr.3, %for.body ]\l  %incdec.ptr = getelementptr inbounds i8, i8* %bufferptr.025, i64 1\l  %19 = load i8, i8* %bufferptr.025, align 1, !tbaa !24\l  %idxprom = zext i8 %19 to i64\l  %arrayidx7 = getelementptr inbounds i8, i8* %1, i64 %idxprom\l  %20 = load i8, i8* %arrayidx7, align 1, !tbaa !24\l  %incdec.ptr8 = getelementptr inbounds i8, i8* %ptr.026, i64 1\l  store i8 %20, i8* %ptr.026, align 1, !tbaa !24\l  %incdec.ptr.1 = getelementptr inbounds i8, i8* %bufferptr.025, i64 2\l  %21 = load i8, i8* %incdec.ptr, align 1, !tbaa !24\l  %idxprom.1 = zext i8 %21 to i64\l  %arrayidx7.1 = getelementptr inbounds i8, i8* %1, i64 %idxprom.1\l  %22 = load i8, i8* %arrayidx7.1, align 1, !tbaa !24\l  %incdec.ptr8.1 = getelementptr inbounds i8, i8* %ptr.026, i64 2\l  store i8 %22, i8* %incdec.ptr8, align 1, !tbaa !24\l  %incdec.ptr.2 = getelementptr inbounds i8, i8* %bufferptr.025, i64 3\l  %23 = load i8, i8* %incdec.ptr.1, align 1, !tbaa !24\l  %idxprom.2 = zext i8 %23 to i64\l  %arrayidx7.2 = getelementptr inbounds i8, i8* %1, i64 %idxprom.2\l  %24 = load i8, i8* %arrayidx7.2, align 1, !tbaa !24\l  %incdec.ptr8.2 = getelementptr inbounds i8, i8* %ptr.026, i64 3\l  store i8 %24, i8* %incdec.ptr8.1, align 1, !tbaa !24\l  %incdec.ptr.3 = getelementptr inbounds i8, i8* %bufferptr.025, i64 4\l  %25 = load i8, i8* %incdec.ptr.2, align 1, !tbaa !24\l  %idxprom.3 = zext i8 %25 to i64\l  %arrayidx7.3 = getelementptr inbounds i8, i8* %1, i64 %idxprom.3\l  %26 = load i8, i8* %arrayidx7.3, align 1, !tbaa !24\l  %incdec.ptr8.3 = getelementptr inbounds i8, i8* %ptr.026, i64 4\l  store i8 %26, i8* %incdec.ptr8.2, align 1, !tbaa !24\l  %dec.3 = add i32 %col.027, -4\l  %cmp6.3 = icmp eq i32 %dec.3, 0\l  br i1 %cmp6.3, label %for.end.loopexit.unr-lcssa, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x58329b0:s0 -> Node0x5810090;
	Node0x58329b0:s1 -> Node0x58329b0;
	Node0x5810090 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit.unr-lcssa:                       \l  br label %for.end.loopexit\l}"];
	Node0x5810090 -> Node0x5832740;
	Node0x5832740 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  br label %for.end\l}"];
	Node0x5832740 -> Node0x5830a40;
	Node0x5830a40 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  ret i32 1\l}"];
}
