digraph "CFG for 'finish_pass_huff' function" {
	label="CFG for 'finish_pass_huff' function";

	Node0x6426270 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %state.sroa.26 = alloca [20 x i8], align 4\l  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59\l  %0 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to\l... %struct.huff_entropy_encoder**\l  %1 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %0,\l... align 8, !tbaa !3\l  %state.sroa.26.0..sroa_idx48 = getelementptr inbounds [20 x i8], [20 x i8]*\l... %state.sroa.26, i64 0, i64 0\l  call void @llvm.lifetime.start(i64 20, i8* %state.sroa.26.0..sroa_idx48)\l  %dest = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 5\l  %2 = bitcast %struct.jpeg_destination_mgr** %dest to i64**\l  %3 = load i64*, i64** %2, align 8, !tbaa !11\l  %4 = load i64, i64* %3, align 8, !tbaa !12\l  %5 = getelementptr inbounds i64, i64* %3, i64 1\l  %6 = load i64, i64* %5, align 8, !tbaa !15\l  %state.sroa.18.16..sroa_idx = getelementptr inbounds\l... %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %1, i64 0, i32 1,\l... i32 0\l  %state.sroa.18.16.copyload = load i64, i64* %state.sroa.18.16..sroa_idx,\l... align 8\l  %state.sroa.23.16..sroa_idx36 = getelementptr inbounds\l... %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %1, i64 0, i32 1,\l... i32 1\l  %state.sroa.23.16.copyload = load i32, i32* %state.sroa.23.16..sroa_idx36,\l... align 8\l  %state.sroa.26.16..sroa_idx = getelementptr inbounds\l... %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %1, i64 0, i32 1,\l... i32 2\l  %state.sroa.26.16..sroa_cast = bitcast [4 x i32]*\l... %state.sroa.26.16..sroa_idx to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %state.sroa.26.0..sroa_idx48, i8*\l... %state.sroa.26.16..sroa_cast, i64 20, i32 4, i1 false)\l  %cmp1188.i = icmp sgt i32 %state.sroa.23.16.copyload, 0\l  br i1 %cmp1188.i, label %while.body.i.preheader, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x6426270:s0 -> Node0x6426190;
	Node0x6426270:s1 -> Node0x6461d80;
	Node0x6426190 [shape=record, style = filled, fillcolor = blue, label="{while.body.i.preheader:                           \l  %sub6.i = sub i32 17, %state.sroa.23.16.copyload\l  %sh_prom7.i = zext i32 %sub6.i to i64\l  %shl8.i = shl i64 127, %sh_prom7.i\l  %or.i = or i64 %shl8.i, %state.sroa.18.16.copyload\l  %add.i = add nsw i32 %state.sroa.23.16.copyload, 7\l  br label %while.body.i\l}"];
	Node0x6426190 -> Node0x6462150;
	Node0x6462150 [shape=record, style = filled, fillcolor = blue, label="{while.body.i:                                     \l  %state.sroa.10.0 = phi i64 [ %state.sroa.10.2, %cleanup.i ], [ %6,\l... %while.body.i.preheader ]\l  %state.sroa.0.0 = phi i64 [ %state.sroa.0.2, %cleanup.i ], [ %4,\l... %while.body.i.preheader ]\l  %put_bits.090.i = phi i32 [ %sub39.i, %cleanup.i ], [ %add.i,\l... %while.body.i.preheader ]\l  %put_buffer.089.i = phi i64 [ %shl38.i, %cleanup.i ], [ %or.i,\l... %while.body.i.preheader ]\l  %shr73.i = lshr i64 %put_buffer.089.i, 16\l  %conv15.i = trunc i64 %shr73.i to i8\l  %7 = inttoptr i64 %state.sroa.0.0 to i8*\l  %incdec.ptr.i = getelementptr inbounds i8, i8* %7, i64 1\l  %8 = ptrtoint i8* %incdec.ptr.i to i64\l  store i8 %conv15.i, i8* %7, align 1, !tbaa !16\l  %dec.i = add i64 %state.sroa.10.0, -1\l  %cmp16.i = icmp eq i64 %dec.i, 0\l  br i1 %cmp16.i, label %if.then18.i, label %if.end21.i\l|{<s0>T|<s1>F}}"];
	Node0x6462150:s0 -> Node0x64432f0;
	Node0x6462150:s1 -> Node0x6463090;
	Node0x64432f0 [shape=record, style = filled, fillcolor = blue, label="{if.then18.i:                                      \l  %9 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest, align 8, !tbaa !11\l  %empty_output_buffer.i.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %9, i64 0, i32 3\l  %10 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i, align 8, !tbaa !17\l  %call.i.i = tail call i32 %10(%struct.jpeg_compress_struct* %cinfo) #4\l  %tobool.i.i = icmp eq i32 %call.i.i, 0\l  br i1 %tobool.i.i, label %if.then, label %dump_buffer.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x64432f0:s0 -> Node0x6463530;
	Node0x64432f0:s1 -> Node0x6463610;
	Node0x6463610 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit.i:                               \l  %11 = bitcast %struct.jpeg_destination_mgr* %9 to i64*\l  %12 = load i64, i64* %11, align 8, !tbaa !12\l  %free_in_buffer.i.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %9, i64 0, i32 1\l  %13 = load i64, i64* %free_in_buffer.i.i, align 8, !tbaa !15\l  br label %if.end21.i\l}"];
	Node0x6463610 -> Node0x6463090;
	Node0x6463090 [shape=record, style = filled, fillcolor = blue, label="{if.end21.i:                                       \l  %state.sroa.10.1 = phi i64 [ %13, %dump_buffer.exit.i ], [ %dec.i,\l... %while.body.i ]\l  %state.sroa.0.1 = phi i64 [ %12, %dump_buffer.exit.i ], [ %8, %while.body.i ]\l  %conv14.i = and i64 %shr73.i, 255\l  %cmp22.i = icmp eq i64 %conv14.i, 255\l  br i1 %cmp22.i, label %if.then24.i, label %cleanup.i\l|{<s0>T|<s1>F}}"];
	Node0x6463090:s0 -> Node0x64647e0;
	Node0x6463090:s1 -> Node0x64622a0;
	Node0x64647e0 [shape=record, style = filled, fillcolor = blue, label="{if.then24.i:                                      \l  %14 = inttoptr i64 %state.sroa.0.1 to i8*\l  %incdec.ptr26.i = getelementptr inbounds i8, i8* %14, i64 1\l  %15 = ptrtoint i8* %incdec.ptr26.i to i64\l  store i8 0, i8* %14, align 1, !tbaa !16\l  %dec28.i = add i64 %state.sroa.10.1, -1\l  %cmp29.i = icmp eq i64 %dec28.i, 0\l  br i1 %cmp29.i, label %if.then31.i, label %cleanup.i\l|{<s0>T|<s1>F}}"];
	Node0x64647e0:s0 -> Node0x6464c30;
	Node0x64647e0:s1 -> Node0x64622a0;
	Node0x6464c30 [shape=record, style = filled, fillcolor = blue, label="{if.then31.i:                                      \l  %16 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest, align 8, !tbaa !11\l  %empty_output_buffer.i76.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %16, i64 0, i32 3\l  %17 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i76.i, align 8, !tbaa\l... !17\l  %call.i77.i = tail call i32 %17(%struct.jpeg_compress_struct* %cinfo) #4\l  %tobool.i78.i = icmp eq i32 %call.i77.i, 0\l  br i1 %tobool.i78.i, label %if.then, label %dump_buffer.exit83.i\l|{<s0>T|<s1>F}}"];
	Node0x6464c30:s0 -> Node0x6463530;
	Node0x6464c30:s1 -> Node0x6462a20;
	Node0x6462a20 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit83.i:                             \l  %18 = bitcast %struct.jpeg_destination_mgr* %16 to i64*\l  %19 = load i64, i64* %18, align 8, !tbaa !12\l  %free_in_buffer.i79.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %16, i64 0, i32 1\l  %20 = load i64, i64* %free_in_buffer.i79.i, align 8, !tbaa !15\l  br label %cleanup.i\l}"];
	Node0x6462a20 -> Node0x64622a0;
	Node0x64622a0 [shape=record, style = filled, fillcolor = blue, label="{cleanup.i:                                        \l  %state.sroa.10.2 = phi i64 [ %20, %dump_buffer.exit83.i ], [ %dec28.i,\l... %if.then24.i ], [ %state.sroa.10.1, %if.end21.i ]\l  %state.sroa.0.2 = phi i64 [ %19, %dump_buffer.exit83.i ], [ %15,\l... %if.then24.i ], [ %state.sroa.0.1, %if.end21.i ]\l  %shl38.i = shl i64 %put_buffer.089.i, 8\l  %sub39.i = add nsw i32 %put_bits.090.i, -8\l  %cmp11.i = icmp sgt i32 %sub39.i, 7\l  br i1 %cmp11.i, label %while.body.i, label %if.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x64622a0:s0 -> Node0x6462150;
	Node0x64622a0:s1 -> Node0x6465ab0;
	Node0x6463530 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %state.sroa.0.4.ph = phi i64 [ %15, %if.then31.i ], [ %8, %if.then18.i ]\l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !18\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %21, i64 0, i32 5\l  store i32 22, i32* %msg_code, align 8, !tbaa !19\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %21, i64 0, i32 0\l  %22 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !21\l  %23 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %22(%struct.jpeg_common_struct* %23) #4\l  br label %if.end\l}"];
	Node0x6463530 -> Node0x6461d80;
	Node0x6465ab0 [shape=record, style = filled, fillcolor = blue, label="{if.end.loopexit:                                  \l  %state.sroa.0.2.lcssa = phi i64 [ %state.sroa.0.2, %cleanup.i ]\l  %state.sroa.10.2.lcssa = phi i64 [ %state.sroa.10.2, %cleanup.i ]\l  br label %if.end\l}"];
	Node0x6465ab0 -> Node0x6461d80;
	Node0x6461d80 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %state.sroa.18.156 = phi i64 [ %state.sroa.18.16.copyload, %if.then ], [ 0,\l... %entry ], [ 0, %if.end.loopexit ]\l  %state.sroa.23.155 = phi i32 [ %state.sroa.23.16.copyload, %if.then ], [ 0,\l... %entry ], [ 0, %if.end.loopexit ]\l  %state.sroa.10.45054 = phi i64 [ 0, %if.then ], [ %6, %entry ], [\l... %state.sroa.10.2.lcssa, %if.end.loopexit ]\l  %state.sroa.0.45153 = phi i64 [ %state.sroa.0.4.ph, %if.then ], [ %4, %entry\l... ], [ %state.sroa.0.2.lcssa, %if.end.loopexit ]\l  %24 = load i64*, i64** %2, align 8, !tbaa !11\l  store i64 %state.sroa.0.45153, i64* %24, align 8, !tbaa !12\l  %25 = getelementptr inbounds i64, i64* %24, i64 1\l  store i64 %state.sroa.10.45054, i64* %25, align 8, !tbaa !15\l  store i64 %state.sroa.18.156, i64* %state.sroa.18.16..sroa_idx, align 8\l  store i32 %state.sroa.23.155, i32* %state.sroa.23.16..sroa_idx36, align 8\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %state.sroa.26.16..sroa_cast, i8*\l... %state.sroa.26.0..sroa_idx48, i64 20, i32 4, i1 false)\l  call void @llvm.lifetime.end(i64 20, i8* %state.sroa.26.0..sroa_idx48)\l  ret void\l}"];
}
