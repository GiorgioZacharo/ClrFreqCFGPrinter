digraph "CFG for 'get_app0' function" {
	label="CFG for 'get_app0' function";

	Node0x6991900 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %b = alloca [14 x i8], align 1\l  %0 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 0\l  call void @llvm.lifetime.start(i64 14, i8* %0) #4\l  %src = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5\l  %1 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align 8,\l... !tbaa !2\l  %next_input_byte1 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %1, i64 0, i32 0\l  %bytes_in_buffer2 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %1, i64 0, i32 1\l  %2 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !10\l  %cmp = icmp eq i64 %2, 0\l  br i1 %cmp, label %if.then, label %if.end6\l|{<s0>T|<s1>F}}"];
	Node0x6991900:s0 -> Node0x6991f50;
	Node0x6991900:s1 -> Node0x6992000;
	Node0x6991f50 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %fill_input_buffer = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %1, i64 0, i32 3\l  %3 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer, align 8, !tbaa !13\l  %call = tail call i32 %3(%struct.jpeg_decompress_struct* nonnull %cinfo) #4\l  %tobool = icmp eq i32 %call, 0\l  br i1 %tobool, label %cleanup, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x6991f50:s0 -> Node0x6992420;
	Node0x6991f50:s1 -> Node0x6991880;
	Node0x6991880 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %4 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !10\l  br label %if.end6\l}"];
	Node0x6991880 -> Node0x6992000;
	Node0x6992000 [shape=record, style = filled, fillcolor = blue, label="{if.end6:                                          \l  %bytes_in_buffer.0 = phi i64 [ %4, %if.end ], [ %2, %entry ]\l  %next_input_byte.0 = load i8*, i8** %next_input_byte1, align 8, !tbaa !14\l  %dec = add i64 %bytes_in_buffer.0, -1\l  %incdec.ptr = getelementptr inbounds i8, i8* %next_input_byte.0, i64 1\l  %5 = load i8, i8* %next_input_byte.0, align 1, !tbaa !15\l  %conv = zext i8 %5 to i64\l  %shl = shl nuw nsw i64 %conv, 8\l  %cmp8 = icmp eq i64 %dec, 0\l  br i1 %cmp8, label %if.then10, label %if.end18\l|{<s0>T|<s1>F}}"];
	Node0x6992000:s0 -> Node0x6992c30;
	Node0x6992000:s1 -> Node0x6992ce0;
	Node0x6992c30 [shape=record, style = filled, fillcolor = blue, label="{if.then10:                                        \l  %fill_input_buffer11 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %1, i64 0, i32 3\l  %6 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer11, align 8, !tbaa !13\l  %call12 = tail call i32 %6(%struct.jpeg_decompress_struct* nonnull %cinfo) #4\l  %tobool13 = icmp eq i32 %call12, 0\l  br i1 %tobool13, label %cleanup, label %if.end15\l|{<s0>T|<s1>F}}"];
	Node0x6992c30:s0 -> Node0x6992420;
	Node0x6992c30:s1 -> Node0x6992510;
	Node0x6992510 [shape=record, style = filled, fillcolor = blue, label="{if.end15:                                         \l  %7 = load i8*, i8** %next_input_byte1, align 8, !tbaa !14\l  %8 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !10\l  br label %if.end18\l}"];
	Node0x6992510 -> Node0x6992ce0;
	Node0x6992ce0 [shape=record, style = filled, fillcolor = blue, label="{if.end18:                                         \l  %next_input_byte.1 = phi i8* [ %7, %if.end15 ], [ %incdec.ptr, %if.end6 ]\l  %bytes_in_buffer.1 = phi i64 [ %8, %if.end15 ], [ %dec, %if.end6 ]\l  %dec19 = add i64 %bytes_in_buffer.1, -1\l  %incdec.ptr20 = getelementptr inbounds i8, i8* %next_input_byte.1, i64 1\l  %9 = load i8, i8* %next_input_byte.1, align 1, !tbaa !15\l  %conv21 = zext i8 %9 to i64\l  %add = or i64 %conv21, %shl\l  %sub = add nsw i64 %add, -2\l  %cmp22 = icmp sgt i64 %sub, 13\l  br i1 %cmp22, label %for.cond.preheader, label %if.else194\l|{<s0>T|<s1>F}}"];
	Node0x6992ce0:s0 -> Node0x6993aa0;
	Node0x6992ce0:s1 -> Node0x6993ba0;
	Node0x6993aa0 [shape=record, style = filled, fillcolor = blue, label="{for.cond.preheader:                               \l  %fill_input_buffer31 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %1, i64 0, i32 3\l  br label %do.body27\l}"];
	Node0x6993aa0 -> Node0x6993de0;
	Node0x6993de0 [shape=record, style = filled, fillcolor = blue, label="{do.body27:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next,\l... %if.end38 ]\l  %bytes_in_buffer.2305 = phi i64 [ %dec19, %for.cond.preheader ], [ %dec39,\l... %if.end38 ]\l  %next_input_byte.2304 = phi i8* [ %incdec.ptr20, %for.cond.preheader ], [\l... %incdec.ptr40, %if.end38 ]\l  %cmp28 = icmp eq i64 %bytes_in_buffer.2305, 0\l  br i1 %cmp28, label %if.then30, label %if.end38\l|{<s0>T|<s1>F}}"];
	Node0x6993de0:s0 -> Node0x69944c0;
	Node0x6993de0:s1 -> Node0x6993f00;
	Node0x69944c0 [shape=record, style = filled, fillcolor = blue, label="{if.then30:                                        \l  %10 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer31, align 8, !tbaa !13\l  %call32 = tail call i32 %10(%struct.jpeg_decompress_struct* %cinfo) #4\l  %tobool33 = icmp eq i32 %call32, 0\l  br i1 %tobool33, label %cleanup.loopexit, label %if.end35\l|{<s0>T|<s1>F}}"];
	Node0x69944c0:s0 -> Node0x69947d0;
	Node0x69944c0:s1 -> Node0x69948d0;
	Node0x69948d0 [shape=record, style = filled, fillcolor = blue, label="{if.end35:                                         \l  %11 = load i8*, i8** %next_input_byte1, align 8, !tbaa !14\l  %12 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !10\l  br label %if.end38\l}"];
	Node0x69948d0 -> Node0x6993f00;
	Node0x6993f00 [shape=record, style = filled, fillcolor = blue, label="{if.end38:                                         \l  %next_input_byte.3 = phi i8* [ %11, %if.end35 ], [ %next_input_byte.2304,\l... %do.body27 ]\l  %bytes_in_buffer.3 = phi i64 [ %12, %if.end35 ], [ %bytes_in_buffer.2305,\l... %do.body27 ]\l  %dec39 = add i64 %bytes_in_buffer.3, -1\l  %incdec.ptr40 = getelementptr inbounds i8, i8* %next_input_byte.3, i64 1\l  %13 = load i8, i8* %next_input_byte.3, align 1, !tbaa !15\l  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64\l... %indvars.iv\l  store i8 %13, i8* %arrayidx, align 1, !tbaa !15\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %cmp25 = icmp slt i64 %indvars.iv.next, 14\l  br i1 %cmp25, label %do.body27, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x6993f00:s0 -> Node0x6993de0;
	Node0x6993f00:s1 -> Node0x69561b0;
	Node0x69561b0 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %incdec.ptr40.lcssa = phi i8* [ %incdec.ptr40, %if.end38 ]\l  %dec39.lcssa = phi i64 [ %dec39, %if.end38 ]\l  %sub43 = add nsw i64 %add, -16\l  %14 = load i8, i8* %0, align 1, !tbaa !15\l  %cmp46 = icmp eq i8 %14, 74\l  br i1 %cmp46, label %land.lhs.true, label %if.else182\l|{<s0>T|<s1>F}}"];
	Node0x69561b0:s0 -> Node0x6956570;
	Node0x69561b0:s1 -> Node0x6956650;
	Node0x6956570 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true:                                    \l  %arrayidx48 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 1\l  %15 = load i8, i8* %arrayidx48, align 1, !tbaa !15\l  %cmp50 = icmp eq i8 %15, 70\l  br i1 %cmp50, label %land.lhs.true52, label %if.else182\l|{<s0>T|<s1>F}}"];
	Node0x6956570:s0 -> Node0x6956940;
	Node0x6956570:s1 -> Node0x6956650;
	Node0x6956940 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true52:                                  \l  %arrayidx53 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 2\l  %16 = load i8, i8* %arrayidx53, align 1, !tbaa !15\l  %cmp55 = icmp eq i8 %16, 73\l  br i1 %cmp55, label %land.lhs.true57, label %if.else182\l|{<s0>T|<s1>F}}"];
	Node0x6956940:s0 -> Node0x69934c0;
	Node0x6956940:s1 -> Node0x6956650;
	Node0x69934c0 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true57:                                  \l  %arrayidx58 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 3\l  %17 = load i8, i8* %arrayidx58, align 1, !tbaa !15\l  %cmp60 = icmp eq i8 %17, 70\l  br i1 %cmp60, label %land.lhs.true62, label %if.else182\l|{<s0>T|<s1>F}}"];
	Node0x69934c0:s0 -> Node0x6996c50;
	Node0x69934c0:s1 -> Node0x6956650;
	Node0x6996c50 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true62:                                  \l  %arrayidx63 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 4\l  %18 = load i8, i8* %arrayidx63, align 1, !tbaa !15\l  %cmp65 = icmp eq i8 %18, 0\l  br i1 %cmp65, label %if.then67, label %if.else182\l|{<s0>T|<s1>F}}"];
	Node0x6996c50:s0 -> Node0x6996f30;
	Node0x6996c50:s1 -> Node0x6956650;
	Node0x6996f30 [shape=record, style = filled, fillcolor = blue, label="{if.then67:                                        \l  %arrayidx68 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 5\l  %19 = load i8, i8* %arrayidx68, align 1, !tbaa !15\l  %cmp70 = icmp eq i8 %19, 1\l  br i1 %cmp70, label %if.else, label %if.then72\l|{<s0>T|<s1>F}}"];
	Node0x6996f30:s0 -> Node0x6997210;
	Node0x6996f30:s1 -> Node0x69972e0;
	Node0x69972e0 [shape=record, style = filled, fillcolor = blue, label="{if.then72:                                        \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !16\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %20, i64 0, i32 5\l  store i32 115, i32* %msg_code, align 8, !tbaa !17\l  %conv74 = zext i8 %19 to i32\l  %arrayidx76 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %20, i64 0, i32 6, i32 0, i64 0\l  store i32 %conv74, i32* %arrayidx76, align 4, !tbaa !19\l  %arrayidx77 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 6\l  %21 = load i8, i8* %arrayidx77, align 1, !tbaa !15\l  %conv78 = zext i8 %21 to i32\l  %arrayidx82 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %20, i64 0, i32 6, i32 0, i64 1\l  store i32 %conv78, i32* %arrayidx82, align 4, !tbaa !19\l  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %20, i64 0, i32 1\l  %22 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !20\l  %23 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %22(%struct.jpeg_common_struct* %23, i32 -1) #4\l  br label %if.end106\l}"];
	Node0x69972e0 -> Node0x6997eb0;
	Node0x6997210 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %arrayidx84 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 6\l  %24 = load i8, i8* %arrayidx84, align 1, !tbaa !15\l  %cmp86 = icmp ugt i8 %24, 2\l  %err89 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  br i1 %cmp86, label %if.then88, label %if.else.if.end106_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x6997210:s0 -> Node0x6998220;
	Node0x6997210:s1 -> Node0x6998330;
	Node0x6998330 [shape=record, style = filled, fillcolor = blue, label="{if.else.if.end106_crit_edge:                      \l  %.pre306 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  br label %if.end106\l}"];
	Node0x6998330 -> Node0x6997eb0;
	Node0x6998220 [shape=record, style = filled, fillcolor = blue, label="{if.then88:                                        \l  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err89, align\l... 8, !tbaa !16\l  %msg_code90 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %25, i64 0, i32 5\l  store i32 88, i32* %msg_code90, align 8, !tbaa !17\l  %arrayidx96 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %25, i64 0, i32 6, i32 0, i64 0\l  store i32 1, i32* %arrayidx96, align 4, !tbaa !19\l  %conv98 = zext i8 %24 to i32\l  %arrayidx102 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %25, i64 0, i32 6, i32 0, i64 1\l  store i32 %conv98, i32* %arrayidx102, align 4, !tbaa !19\l  %emit_message104 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %25, i64 0, i32 1\l  %26 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message104, align 8, !tbaa !20\l  %27 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %26(%struct.jpeg_common_struct* %27, i32 1) #4\l  br label %if.end106\l}"];
	Node0x6998220 -> Node0x6997eb0;
	Node0x6997eb0 [shape=record, style = filled, fillcolor = blue, label="{if.end106:                                        \l  %.pre-phi = phi %struct.jpeg_common_struct* [ %.pre306,\l... %if.else.if.end106_crit_edge ], [ %27, %if.then88 ], [ %23, %if.then72 ]\l  %err123.pre-phi = phi %struct.jpeg_error_mgr** [ %err89,\l... %if.else.if.end106_crit_edge ], [ %err89, %if.then88 ], [ %err, %if.then72 ]\l  %saw_JFIF_marker = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 50\l  store i32 1, i32* %saw_JFIF_marker, align 4, !tbaa !21\l  %arrayidx107 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 7\l  %28 = load i8, i8* %arrayidx107, align 1, !tbaa !15\l  %density_unit = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 51\l  store i8 %28, i8* %density_unit, align 8, !tbaa !22\l  %arrayidx108 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 8\l  %29 = load i8, i8* %arrayidx108, align 1, !tbaa !15\l  %conv109 = zext i8 %29 to i16\l  %shl110 = shl nuw i16 %conv109, 8\l  %arrayidx111 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 9\l  %30 = load i8, i8* %arrayidx111, align 1, !tbaa !15\l  %conv112 = zext i8 %30 to i16\l  %add113 = or i16 %shl110, %conv112\l  %X_density = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 52\l  store i16 %add113, i16* %X_density, align 2, !tbaa !23\l  %arrayidx115 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 10\l  %31 = load i8, i8* %arrayidx115, align 1, !tbaa !15\l  %conv116 = zext i8 %31 to i16\l  %shl117 = shl nuw i16 %conv116, 8\l  %arrayidx118 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 11\l  %32 = load i8, i8* %arrayidx118, align 1, !tbaa !15\l  %conv119 = zext i8 %32 to i16\l  %add120 = or i16 %shl117, %conv119\l  %Y_density = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 53\l  store i16 %add120, i16* %Y_density, align 4, !tbaa !24\l  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr**\l... %err123.pre-phi, align 8, !tbaa !16\l  %arraydecay = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %33, i64 0, i32 6, i32 0, i64 0\l  %conv127 = zext i16 %add113 to i32\l  store i32 %conv127, i32* %arraydecay, align 4, !tbaa !19\l  %conv130 = zext i16 %add120 to i32\l  %arrayidx131 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %33, i64 0, i32 6, i32 0, i64 1\l  store i32 %conv130, i32* %arrayidx131, align 4, !tbaa !19\l  %conv133 = zext i8 %28 to i32\l  %arrayidx134 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %33, i64 0, i32 6, i32 0, i64 2\l  store i32 %conv133, i32* %arrayidx134, align 4, !tbaa !19\l  %msg_code136 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %33, i64 0, i32 5\l  store i32 86, i32* %msg_code136, align 8, !tbaa !17\l  %emit_message138 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %33, i64 0, i32 1\l  %34 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message138, align 8, !tbaa !20\l  tail call void %34(%struct.jpeg_common_struct* %.pre-phi, i32 1) #4\l  %arrayidx141 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 12\l  %35 = load i8, i8* %arrayidx141, align 1, !tbaa !15\l  %arrayidx143 = getelementptr inbounds [14 x i8], [14 x i8]* %b, i64 0, i64 13\l  %36 = load i8, i8* %arrayidx143, align 1, !tbaa !15\l  %or300 = or i8 %36, %35\l  %tobool145 = icmp eq i8 %or300, 0\l  br i1 %tobool145, label %if.end163, label %if.then146\l|{<s0>T|<s1>F}}"];
	Node0x6997eb0:s0 -> Node0x699cbc0;
	Node0x6997eb0:s1 -> Node0x699cca0;
	Node0x699cca0 [shape=record, style = filled, fillcolor = blue, label="{if.then146:                                       \l  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr**\l... %err123.pre-phi, align 8, !tbaa !16\l  %msg_code148 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %37, i64 0, i32 5\l  store i32 89, i32* %msg_code148, align 8, !tbaa !17\l  %conv150 = zext i8 %35 to i32\l  %arrayidx154 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %37, i64 0, i32 6, i32 0, i64 0\l  store i32 %conv150, i32* %arrayidx154, align 4, !tbaa !19\l  %conv156 = zext i8 %36 to i32\l  %arrayidx160 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %37, i64 0, i32 6, i32 0, i64 1\l  store i32 %conv156, i32* %arrayidx160, align 4, !tbaa !19\l  %emit_message162 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %37, i64 0, i32 1\l  %38 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message162, align 8, !tbaa !20\l  tail call void %38(%struct.jpeg_common_struct* %.pre-phi, i32 1) #4\l  br label %if.end163\l}"];
	Node0x699cca0 -> Node0x699cbc0;
	Node0x699cbc0 [shape=record, style = filled, fillcolor = blue, label="{if.end163:                                        \l  %conv165 = zext i8 %35 to i64\l  %conv167 = zext i8 %36 to i64\l  %mul = mul nuw nsw i64 %conv165, 3\l  %mul168 = mul nuw nsw i64 %mul, %conv167\l  %cmp169 = icmp eq i64 %sub43, %mul168\l  br i1 %cmp169, label %if.end204, label %if.then171\l|{<s0>T|<s1>F}}"];
	Node0x699cbc0:s0 -> Node0x699d8a0;
	Node0x699cbc0:s1 -> Node0x699d980;
	Node0x699d980 [shape=record, style = filled, fillcolor = blue, label="{if.then171:                                       \l  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr**\l... %err123.pre-phi, align 8, !tbaa !16\l  %msg_code173 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %39, i64 0, i32 5\l  store i32 87, i32* %msg_code173, align 8, !tbaa !17\l  %conv174 = trunc i64 %sub43 to i32\l  %arrayidx178 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %39, i64 0, i32 6, i32 0, i64 0\l  store i32 %conv174, i32* %arrayidx178, align 4, !tbaa !19\l  %emit_message180 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %39, i64 0, i32 1\l  %40 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message180, align 8, !tbaa !20\l  tail call void %40(%struct.jpeg_common_struct* %.pre-phi, i32 1) #4\l  br label %if.end204\l}"];
	Node0x699d980 -> Node0x699d8a0;
	Node0x6956650 [shape=record, style = filled, fillcolor = blue, label="{if.else182:                                       \l  %err183 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %41 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err183, align\l... 8, !tbaa !16\l  %msg_code184 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %41, i64 0, i32 5\l  store i32 76, i32* %msg_code184, align 8, !tbaa !17\l  %conv185 = trunc i64 %sub43 to i32\l  %add186 = add nsw i32 %conv185, 14\l  %arrayidx190 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %41, i64 0, i32 6, i32 0, i64 0\l  store i32 %add186, i32* %arrayidx190, align 4, !tbaa !19\l  %emit_message192 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %41, i64 0, i32 1\l  %42 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message192, align 8, !tbaa !20\l  %43 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %42(%struct.jpeg_common_struct* %43, i32 1) #4\l  br label %if.end204\l}"];
	Node0x6956650 -> Node0x699d8a0;
	Node0x6993ba0 [shape=record, style = filled, fillcolor = blue, label="{if.else194:                                       \l  %err195 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %44 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err195, align\l... 8, !tbaa !16\l  %msg_code196 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %44, i64 0, i32 5\l  store i32 76, i32* %msg_code196, align 8, !tbaa !17\l  %conv197 = trunc i64 %sub to i32\l  %arrayidx201 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %44, i64 0, i32 6, i32 0, i64 0\l  store i32 %conv197, i32* %arrayidx201, align 4, !tbaa !19\l  %emit_message203 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %44, i64 0, i32 1\l  %45 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message203, align 8, !tbaa !20\l  %46 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %45(%struct.jpeg_common_struct* %46, i32 1) #4\l  br label %if.end204\l}"];
	Node0x6993ba0 -> Node0x699d8a0;
	Node0x699d8a0 [shape=record, style = filled, fillcolor = blue, label="{if.end204:                                        \l  %length.0 = phi i64 [ %sub43, %if.then171 ], [ %sub43, %if.end163 ], [\l... %sub43, %if.else182 ], [ %sub, %if.else194 ]\l  %next_input_byte.4 = phi i8* [ %incdec.ptr40.lcssa, %if.then171 ], [\l... %incdec.ptr40.lcssa, %if.end163 ], [ %incdec.ptr40.lcssa, %if.else182 ], [\l... %incdec.ptr20, %if.else194 ]\l  %bytes_in_buffer.4 = phi i64 [ %dec39.lcssa, %if.then171 ], [ %dec39.lcssa,\l... %if.end163 ], [ %dec39.lcssa, %if.else182 ], [ %dec19, %if.else194 ]\l  store i8* %next_input_byte.4, i8** %next_input_byte1, align 8, !tbaa !14\l  store i64 %bytes_in_buffer.4, i64* %bytes_in_buffer2, align 8, !tbaa !10\l  %cmp207 = icmp sgt i64 %length.0, 0\l  br i1 %cmp207, label %if.then209, label %cleanup\l|{<s0>T|<s1>F}}"];
	Node0x699d8a0:s0 -> Node0x699f580;
	Node0x699d8a0:s1 -> Node0x6992420;
	Node0x699f580 [shape=record, style = filled, fillcolor = blue, label="{if.then209:                                       \l  %47 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align\l... 8, !tbaa !2\l  %skip_input_data = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %47, i64 0, i32 4\l  %48 = load void (%struct.jpeg_decompress_struct*, i64)*, void\l... (%struct.jpeg_decompress_struct*, i64)** %skip_input_data, align 8, !tbaa !25\l  tail call void %48(%struct.jpeg_decompress_struct* nonnull %cinfo, i64\l... %length.0) #4\l  br label %cleanup\l}"];
	Node0x699f580 -> Node0x6992420;
	Node0x69947d0 [shape=record, style = filled, fillcolor = blue, label="{cleanup.loopexit:                                 \l  br label %cleanup\l}"];
	Node0x69947d0 -> Node0x6992420;
	Node0x6992420 [shape=record, style = filled, fillcolor = blue, label="{cleanup:                                          \l  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then10 ], [ 1, %if.then209 ],\l... [ 1, %if.end204 ], [ 0, %cleanup.loopexit ]\l  call void @llvm.lifetime.end(i64 14, i8* %0) #4\l  ret i32 %retval.0\l}"];
}
