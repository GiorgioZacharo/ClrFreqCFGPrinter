; ModuleID = 'jcparam.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_compress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_destination_mgr*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master*, %struct.jpeg_c_main_controller*, %struct.jpeg_c_prep_controller*, %struct.jpeg_c_coef_controller*, %struct.jpeg_marker_writer*, %struct.jpeg_color_converter*, %struct.jpeg_downsampler*, %struct.jpeg_forward_dct*, %struct.jpeg_entropy_encoder* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_destination_mgr = type { i8*, i64, void (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_scan_info = type { i32, [4 x i32], i32, i32, i32, i32 }
%struct.jpeg_comp_master = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, i32, i32 }
%struct.jpeg_c_main_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller = type { void (%struct.jpeg_compress_struct*, i32)*, i32 (%struct.jpeg_compress_struct*, i8***)* }
%struct.jpeg_marker_writer = type { void (%struct.jpeg_compress_struct*, i32, i8*, i32)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_color_converter = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder = type { void (%struct.jpeg_compress_struct*, i32)*, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)*, void (%struct.jpeg_compress_struct*)* }

@jpeg_set_linear_quality.std_luminance_quant_tbl = internal constant [64 x i32] [i32 16, i32 11, i32 10, i32 16, i32 24, i32 40, i32 51, i32 61, i32 12, i32 12, i32 14, i32 19, i32 26, i32 58, i32 60, i32 55, i32 14, i32 13, i32 16, i32 24, i32 40, i32 57, i32 69, i32 56, i32 14, i32 17, i32 22, i32 29, i32 51, i32 87, i32 80, i32 62, i32 18, i32 22, i32 37, i32 56, i32 68, i32 109, i32 103, i32 77, i32 24, i32 35, i32 55, i32 64, i32 81, i32 104, i32 113, i32 92, i32 49, i32 64, i32 78, i32 87, i32 103, i32 121, i32 120, i32 101, i32 72, i32 92, i32 95, i32 98, i32 112, i32 100, i32 103, i32 99], align 16
@jpeg_set_linear_quality.std_chrominance_quant_tbl = internal constant [64 x i32] [i32 17, i32 18, i32 24, i32 47, i32 99, i32 99, i32 99, i32 99, i32 18, i32 21, i32 26, i32 66, i32 99, i32 99, i32 99, i32 99, i32 24, i32 26, i32 56, i32 99, i32 99, i32 99, i32 99, i32 99, i32 47, i32 66, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99], align 16
@std_huff_tables.bits_dc_luminance = internal constant [17 x i8] c"\00\00\01\05\01\01\01\01\01\01\00\00\00\00\00\00\00", align 16
@std_huff_tables.val_dc_luminance = internal constant [12 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B", align 1
@std_huff_tables.bits_dc_chrominance = internal constant [17 x i8] c"\00\00\03\01\01\01\01\01\01\01\01\01\00\00\00\00\00", align 16
@std_huff_tables.val_dc_chrominance = internal constant [12 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B", align 1
@std_huff_tables.bits_ac_luminance = internal constant [17 x i8] c"\00\00\02\01\03\03\02\04\03\05\05\04\04\00\00\01}", align 16
@std_huff_tables.val_ac_luminance = internal constant [162 x i8] c"\01\02\03\00\04\11\05\12!1A\06\13Qa\07\22q\142\81\91\A1\08#B\B1\C1\15R\D1\F0$3br\82\09\0A\16\17\18\19\1A%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\83\84\85\86\87\88\89\8A\92\93\94\95\96\97\98\99\9A\A2\A3\A4\A5\A6\A7\A8\A9\AA\B2\B3\B4\B5\B6\B7\B8\B9\BA\C2\C3\C4\C5\C6\C7\C8\C9\CA\D2\D3\D4\D5\D6\D7\D8\D9\DA\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA", align 16
@std_huff_tables.bits_ac_chrominance = internal constant [17 x i8] c"\00\00\02\01\02\04\04\03\04\07\05\04\04\00\01\02w", align 16
@std_huff_tables.val_ac_chrominance = internal constant [162 x i8] c"\00\01\02\03\11\04\05!1\06\12AQ\07aq\13\222\81\08\14B\91\A1\B1\C1\09#3R\F0\15br\D1\0A\16$4\E1%\F1\17\18\19\1A&'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\82\83\84\85\86\87\88\89\8A\92\93\94\95\96\97\98\99\9A\A2\A3\A4\A5\A6\A7\A8\A9\AA\B2\B3\B4\B5\B6\B7\B8\B9\BA\C2\C3\C4\C5\C6\C7\C8\C9\CA\D2\D3\D4\D5\D6\D7\D8\D9\DA\E2\E3\E4\E5\E6\E7\E8\E9\EA\F2\F3\F4\F5\F6\F7\F8\F9\FA", align 16

; Function Attrs: nounwind uwtable
define void @jpeg_add_quant_table(%struct.jpeg_compress_struct* %cinfo, i32 %which_tbl, i32* nocapture readonly %basic_table, i32 %scale_factor, i32 %force_baseline) #0 !prof !2 {
entry:
  %idxprom = sext i32 %which_tbl to i64
  %arrayidx = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 15, i64 %idxprom
  %global_state = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 4
  %0 = load i32, i32* %global_state, align 4, !tbaa !3
  %cmp = icmp eq i32 %0, 100
  br i1 %cmp, label %if.end, label %if.then, !prof !11

if.then:                                          ; preds = %entry
  %err = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %1 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !12
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1, i64 0, i32 5
  store i32 18, i32* %msg_code, align 8, !tbaa !13
  %arrayidx4 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1, i64 0, i32 6, i32 0, i64 0
  store i32 %0, i32* %arrayidx4, align 4, !tbaa !16
  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1, i64 0, i32 0
  %2 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !17
  %3 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %2(%struct.jpeg_common_struct* %3) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %4 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %arrayidx, align 8, !tbaa !18
  %cmp6 = icmp eq %struct.JQUANT_TBL* %4, null
  br i1 %cmp6, label %if.then7, label %for.cond.preheader, !prof !19

if.then7:                                         ; preds = %if.end
  %5 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %call = tail call %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct* %5) #4
  store %struct.JQUANT_TBL* %call, %struct.JQUANT_TBL** %arrayidx, align 8, !tbaa !18
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then7, %if.end
  %6 = phi %struct.JQUANT_TBL* [ %call, %if.then7 ], [ %4, %if.end ]
  %conv12 = sext i32 %scale_factor to i64
  %tobool = icmp eq i32 %force_baseline, 0
  br i1 %tobool, label %for.body.preheader, label %for.body.us.preheader

for.body.us.preheader:                            ; preds = %for.cond.preheader
  br label %for.body.us

for.body.preheader:                               ; preds = %for.cond.preheader
  br label %for.body

for.body.us:                                      ; preds = %for.body.us, %for.body.us.preheader
  %indvars.iv49 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next50.1, %for.body.us ]
  %arrayidx11.us = getelementptr inbounds i32, i32* %basic_table, i64 %indvars.iv49
  %7 = load i32, i32* %arrayidx11.us, align 4, !tbaa !16
  %conv.us = zext i32 %7 to i64
  %mul.us = mul nsw i64 %conv.us, %conv12
  %add.us = add nsw i64 %mul.us, 50
  %div.us = sdiv i64 %add.us, 100
  %cmp13.us = icmp slt i64 %div.us, 1
  %.div.us = select i1 %cmp13.us, i64 1, i64 %div.us
  %8 = icmp slt i64 %.div.us, 255
  %9 = select i1 %8, i64 %.div.us, i64 255
  %10 = trunc i64 %9 to i16
  %arrayidx27.us = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %6, i64 0, i32 0, i64 %indvars.iv49
  store i16 %10, i16* %arrayidx27.us, align 2, !tbaa !20
  %indvars.iv.next50 = or i64 %indvars.iv49, 1
  %arrayidx11.us.1 = getelementptr inbounds i32, i32* %basic_table, i64 %indvars.iv.next50
  %11 = load i32, i32* %arrayidx11.us.1, align 4, !tbaa !16
  %conv.us.1 = zext i32 %11 to i64
  %mul.us.1 = mul nsw i64 %conv.us.1, %conv12
  %add.us.1 = add nsw i64 %mul.us.1, 50
  %div.us.1 = sdiv i64 %add.us.1, 100
  %cmp13.us.1 = icmp slt i64 %div.us.1, 1
  %.div.us.1 = select i1 %cmp13.us.1, i64 1, i64 %div.us.1
  %12 = icmp slt i64 %.div.us.1, 255
  %13 = select i1 %12, i64 %.div.us.1, i64 255
  %14 = trunc i64 %13 to i16
  %arrayidx27.us.1 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %6, i64 0, i32 0, i64 %indvars.iv.next50
  store i16 %14, i16* %arrayidx27.us.1, align 2, !tbaa !20
  %indvars.iv.next50.1 = add nsw i64 %indvars.iv49, 2
  %exitcond51.1 = icmp eq i64 %indvars.iv.next50.1, 64
  br i1 %exitcond51.1, label %for.end.loopexit54, label %for.body.us, !prof !21

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.1, %for.body ]
  %arrayidx11 = getelementptr inbounds i32, i32* %basic_table, i64 %indvars.iv
  %15 = load i32, i32* %arrayidx11, align 4, !tbaa !16
  %conv = zext i32 %15 to i64
  %mul = mul nsw i64 %conv, %conv12
  %add = add nsw i64 %mul, 50
  %div = sdiv i64 %add, 100
  %cmp13 = icmp slt i64 %div, 1
  %.div = select i1 %cmp13, i64 1, i64 %div
  %cmp17 = icmp sgt i64 %.div, 32767
  %..div = select i1 %cmp17, i64 32767, i64 %.div
  %16 = trunc i64 %..div to i16
  %arrayidx27 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %6, i64 0, i32 0, i64 %indvars.iv
  store i16 %16, i16* %arrayidx27, align 2, !tbaa !20
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx11.1 = getelementptr inbounds i32, i32* %basic_table, i64 %indvars.iv.next
  %17 = load i32, i32* %arrayidx11.1, align 4, !tbaa !16
  %conv.1 = zext i32 %17 to i64
  %mul.1 = mul nsw i64 %conv.1, %conv12
  %add.1 = add nsw i64 %mul.1, 50
  %div.1 = sdiv i64 %add.1, 100
  %cmp13.1 = icmp slt i64 %div.1, 1
  %.div.1 = select i1 %cmp13.1, i64 1, i64 %div.1
  %cmp17.1 = icmp sgt i64 %.div.1, 32767
  %..div.1 = select i1 %cmp17.1, i64 32767, i64 %.div.1
  %18 = trunc i64 %..div.1 to i16
  %arrayidx27.1 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %6, i64 0, i32 0, i64 %indvars.iv.next
  store i16 %18, i16* %arrayidx27.1, align 2, !tbaa !20
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2
  %exitcond.1 = icmp eq i64 %indvars.iv.next.1, 64
  br i1 %exitcond.1, label %for.end.loopexit, label %for.body, !prof !21

for.end.loopexit:                                 ; preds = %for.body
  br label %for.end

for.end.loopexit54:                               ; preds = %for.body.us
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit54, %for.end.loopexit
  %19 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %arrayidx, align 8, !tbaa !18
  %sent_table = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %19, i64 0, i32 1
  store i32 0, i32* %sent_table, align 4, !tbaa !22
  ret void
}

declare %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct*) #1

; Function Attrs: nounwind uwtable
define void @jpeg_set_linear_quality(%struct.jpeg_compress_struct* %cinfo, i32 %scale_factor, i32 %force_baseline) #0 !prof !24 {
entry:
  tail call void @jpeg_add_quant_table(%struct.jpeg_compress_struct* %cinfo, i32 0, i32* getelementptr inbounds ([64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_luminance_quant_tbl, i64 0, i64 0), i32 %scale_factor, i32 %force_baseline)
  tail call void @jpeg_add_quant_table(%struct.jpeg_compress_struct* %cinfo, i32 1, i32* getelementptr inbounds ([64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_chrominance_quant_tbl, i64 0, i64 0), i32 %scale_factor, i32 %force_baseline)
  ret void
}

; Function Attrs: norecurse nounwind readnone uwtable
define i32 @jpeg_quality_scaling(i32 %quality) #2 !prof !24 {
entry:
  %cmp = icmp slt i32 %quality, 1
  %.quality = select i1 %cmp, i32 1, i32 %quality
  %cmp1 = icmp sgt i32 %.quality, 100
  %..quality = select i1 %cmp1, i32 100, i32 %.quality
  %cmp4 = icmp slt i32 %..quality, 50
  br i1 %cmp4, label %if.then5, label %if.else, !prof !25

if.then5:                                         ; preds = %entry
  %div = sdiv i32 5000, %..quality
  br label %if.end6

if.else:                                          ; preds = %entry
  %mul = shl nsw i32 %..quality, 1
  %sub = sub nsw i32 200, %mul
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then5
  %quality.addr.0 = phi i32 [ %div, %if.then5 ], [ %sub, %if.else ]
  ret i32 %quality.addr.0
}

; Function Attrs: nounwind uwtable
define void @jpeg_set_quality(%struct.jpeg_compress_struct* %cinfo, i32 %quality, i32 %force_baseline) #0 !prof !24 {
entry:
  %cmp.i = icmp slt i32 %quality, 1
  %.quality.i = select i1 %cmp.i, i32 1, i32 %quality
  %cmp1.i = icmp sgt i32 %.quality.i, 100
  %..quality.i = select i1 %cmp1.i, i32 100, i32 %.quality.i
  %cmp4.i = icmp slt i32 %..quality.i, 50
  br i1 %cmp4.i, label %if.then5.i, label %if.else.i, !prof !25

if.then5.i:                                       ; preds = %entry
  %div.i = sdiv i32 5000, %..quality.i
  br label %jpeg_quality_scaling.exit

if.else.i:                                        ; preds = %entry
  %mul.i = shl nsw i32 %..quality.i, 1
  %sub.i = sub nsw i32 200, %mul.i
  br label %jpeg_quality_scaling.exit

jpeg_quality_scaling.exit:                        ; preds = %if.then5.i, %if.else.i
  %quality.addr.0.i = phi i32 [ %div.i, %if.then5.i ], [ %sub.i, %if.else.i ]
  tail call void @jpeg_add_quant_table(%struct.jpeg_compress_struct* %cinfo, i32 0, i32* nonnull getelementptr inbounds ([64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_luminance_quant_tbl, i64 0, i64 0), i32 %quality.addr.0.i, i32 %force_baseline) #4
  tail call void @jpeg_add_quant_table(%struct.jpeg_compress_struct* %cinfo, i32 1, i32* nonnull getelementptr inbounds ([64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_chrominance_quant_tbl, i64 0, i64 0), i32 %quality.addr.0.i, i32 %force_baseline) #4
  ret void
}

; Function Attrs: nounwind uwtable
define void @jpeg_set_defaults(%struct.jpeg_compress_struct* %cinfo) #0 !prof !26 {
entry:
  %global_state = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 4
  %0 = load i32, i32* %global_state, align 4, !tbaa !3
  %cmp = icmp eq i32 %0, 100
  br i1 %cmp, label %if.end, label %if.then, !prof !27

if.then:                                          ; preds = %entry
  %err = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %1 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !12
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1, i64 0, i32 5
  store i32 18, i32* %msg_code, align 8, !tbaa !13
  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1, i64 0, i32 6, i32 0, i64 0
  store i32 %0, i32* %arrayidx, align 4, !tbaa !16
  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1, i64 0, i32 0
  %2 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !17
  %3 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %2(%struct.jpeg_common_struct* %3) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %comp_info = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %4 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info, align 8, !tbaa !28
  %cmp5 = icmp eq %struct.jpeg_component_info* %4, null
  br i1 %cmp5, label %if.then6, label %if.end8, !prof !27

if.then6:                                         ; preds = %if.end
  %mem = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1
  %5 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !29
  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %5, i64 0, i32 0
  %6 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !30
  %7 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %call = tail call i8* %6(%struct.jpeg_common_struct* %7, i32 0, i64 960) #4
  %8 = bitcast %struct.jpeg_component_info** %comp_info to i8**
  store i8* %call, i8** %8, align 8, !tbaa !28
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end
  %data_precision = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 11
  store i32 8, i32* %data_precision, align 8, !tbaa !32
  %arrayidx.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 15, i64 0
  %9 = load i32, i32* %global_state, align 4, !tbaa !3
  %cmp.i = icmp eq i32 %9, 100
  br i1 %cmp.i, label %if.end.i, label %if.then.i, !prof !11

if.then.i:                                        ; preds = %if.end8
  %err.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !12
  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 5
  store i32 18, i32* %msg_code.i, align 8, !tbaa !13
  %arrayidx4.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 6, i32 0, i64 0
  store i32 %9, i32* %arrayidx4.i, align 4, !tbaa !16
  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 0
  %11 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !17
  %12 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %11(%struct.jpeg_common_struct* %12) #4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end8
  %13 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %arrayidx.i, align 8, !tbaa !18
  %cmp6.i = icmp eq %struct.JQUANT_TBL* %13, null
  br i1 %cmp6.i, label %if.then7.i, label %for.cond.preheader.i, !prof !19

if.then7.i:                                       ; preds = %if.end.i
  %14 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %call.i = tail call %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct* %14) #4
  store %struct.JQUANT_TBL* %call.i, %struct.JQUANT_TBL** %arrayidx.i, align 8, !tbaa !18
  br label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.then7.i, %if.end.i
  %15 = phi %struct.JQUANT_TBL* [ %call.i, %if.then7.i ], [ %13, %if.end.i ]
  br label %for.body.us.i

for.body.us.i:                                    ; preds = %for.body.us.i, %for.cond.preheader.i
  %indvars.iv49.i = phi i64 [ 0, %for.cond.preheader.i ], [ %indvars.iv.next50.i.1, %for.body.us.i ]
  %arrayidx11.us.i = getelementptr inbounds [64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_luminance_quant_tbl, i64 0, i64 %indvars.iv49.i
  %16 = load i32, i32* %arrayidx11.us.i, align 8, !tbaa !16
  %conv.us.i = zext i32 %16 to i64
  %mul.us.i = mul nuw nsw i64 %conv.us.i, 50
  %add.us.i = add nuw nsw i64 %mul.us.i, 50
  %div.us.i = udiv i64 %add.us.i, 100
  %17 = icmp ult i64 %add.us.i, 100
  %.div.us.i = select i1 %17, i64 1, i64 %div.us.i
  %18 = icmp ult i64 %.div.us.i, 255
  %19 = select i1 %18, i64 %.div.us.i, i64 255
  %20 = trunc i64 %19 to i16
  %arrayidx27.us.i = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15, i64 0, i32 0, i64 %indvars.iv49.i
  store i16 %20, i16* %arrayidx27.us.i, align 2, !tbaa !20
  %indvars.iv.next50.i = or i64 %indvars.iv49.i, 1
  %arrayidx11.us.i.1 = getelementptr inbounds [64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_luminance_quant_tbl, i64 0, i64 %indvars.iv.next50.i
  %21 = load i32, i32* %arrayidx11.us.i.1, align 4, !tbaa !16
  %conv.us.i.1 = zext i32 %21 to i64
  %mul.us.i.1 = mul nuw nsw i64 %conv.us.i.1, 50
  %add.us.i.1 = add nuw nsw i64 %mul.us.i.1, 50
  %div.us.i.1 = udiv i64 %add.us.i.1, 100
  %22 = icmp ult i64 %add.us.i.1, 100
  %.div.us.i.1 = select i1 %22, i64 1, i64 %div.us.i.1
  %23 = icmp ult i64 %.div.us.i.1, 255
  %24 = select i1 %23, i64 %.div.us.i.1, i64 255
  %25 = trunc i64 %24 to i16
  %arrayidx27.us.i.1 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15, i64 0, i32 0, i64 %indvars.iv.next50.i
  store i16 %25, i16* %arrayidx27.us.i.1, align 2, !tbaa !20
  %indvars.iv.next50.i.1 = add nsw i64 %indvars.iv49.i, 2
  %exitcond51.i.1 = icmp eq i64 %indvars.iv.next50.i.1, 64
  br i1 %exitcond51.i.1, label %jpeg_add_quant_table.exit, label %for.body.us.i, !prof !21

jpeg_add_quant_table.exit:                        ; preds = %for.body.us.i
  %sent_table.i = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %15, i64 0, i32 1
  store i32 0, i32* %sent_table.i, align 4, !tbaa !22
  %arrayidx.i57 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 15, i64 1
  %26 = load i32, i32* %global_state, align 4, !tbaa !3
  %cmp.i59 = icmp eq i32 %26, 100
  br i1 %cmp.i59, label %if.end.i66, label %if.then.i64, !prof !11

if.then.i64:                                      ; preds = %jpeg_add_quant_table.exit
  %err.i60 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i60, align 8, !tbaa !12
  %msg_code.i61 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i64 0, i32 5
  store i32 18, i32* %msg_code.i61, align 8, !tbaa !13
  %arrayidx4.i62 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i64 0, i32 6, i32 0, i64 0
  store i32 %26, i32* %arrayidx4.i62, align 4, !tbaa !16
  %error_exit.i63 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i64 0, i32 0
  %28 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i63, align 8, !tbaa !17
  %29 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %28(%struct.jpeg_common_struct* %29) #4
  br label %if.end.i66

if.end.i66:                                       ; preds = %if.then.i64, %jpeg_add_quant_table.exit
  %30 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %arrayidx.i57, align 8, !tbaa !18
  %cmp6.i65 = icmp eq %struct.JQUANT_TBL* %30, null
  br i1 %cmp6.i65, label %if.then7.i68, label %for.cond.preheader.i69, !prof !19

if.then7.i68:                                     ; preds = %if.end.i66
  %31 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %call.i67 = tail call %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct* %31) #4
  store %struct.JQUANT_TBL* %call.i67, %struct.JQUANT_TBL** %arrayidx.i57, align 8, !tbaa !18
  br label %for.cond.preheader.i69

for.cond.preheader.i69:                           ; preds = %if.then7.i68, %if.end.i66
  %32 = phi %struct.JQUANT_TBL* [ %call.i67, %if.then7.i68 ], [ %30, %if.end.i66 ]
  br label %for.body.us.i81

for.body.us.i81:                                  ; preds = %for.body.us.i81, %for.cond.preheader.i69
  %indvars.iv49.i70 = phi i64 [ 0, %for.cond.preheader.i69 ], [ %indvars.iv.next50.i79.1, %for.body.us.i81 ]
  %arrayidx11.us.i71 = getelementptr inbounds [64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_chrominance_quant_tbl, i64 0, i64 %indvars.iv49.i70
  %33 = load i32, i32* %arrayidx11.us.i71, align 8, !tbaa !16
  %conv.us.i72 = zext i32 %33 to i64
  %mul.us.i73 = mul nuw nsw i64 %conv.us.i72, 50
  %add.us.i74 = add nuw nsw i64 %mul.us.i73, 50
  %div.us.i75 = udiv i64 %add.us.i74, 100
  %34 = icmp ult i64 %add.us.i74, 100
  %.div.us.i77 = select i1 %34, i64 1, i64 %div.us.i75
  %35 = icmp ult i64 %.div.us.i77, 255
  %36 = select i1 %35, i64 %.div.us.i77, i64 255
  %37 = trunc i64 %36 to i16
  %arrayidx27.us.i78 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %32, i64 0, i32 0, i64 %indvars.iv49.i70
  store i16 %37, i16* %arrayidx27.us.i78, align 2, !tbaa !20
  %indvars.iv.next50.i79 = or i64 %indvars.iv49.i70, 1
  %arrayidx11.us.i71.1 = getelementptr inbounds [64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_chrominance_quant_tbl, i64 0, i64 %indvars.iv.next50.i79
  %38 = load i32, i32* %arrayidx11.us.i71.1, align 4, !tbaa !16
  %conv.us.i72.1 = zext i32 %38 to i64
  %mul.us.i73.1 = mul nuw nsw i64 %conv.us.i72.1, 50
  %add.us.i74.1 = add nuw nsw i64 %mul.us.i73.1, 50
  %div.us.i75.1 = udiv i64 %add.us.i74.1, 100
  %39 = icmp ult i64 %add.us.i74.1, 100
  %.div.us.i77.1 = select i1 %39, i64 1, i64 %div.us.i75.1
  %40 = icmp ult i64 %.div.us.i77.1, 255
  %41 = select i1 %40, i64 %.div.us.i77.1, i64 255
  %42 = trunc i64 %41 to i16
  %arrayidx27.us.i78.1 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %32, i64 0, i32 0, i64 %indvars.iv.next50.i79
  store i16 %42, i16* %arrayidx27.us.i78.1, align 2, !tbaa !20
  %indvars.iv.next50.i79.1 = add nsw i64 %indvars.iv49.i70, 2
  %exitcond51.i80.1 = icmp eq i64 %indvars.iv.next50.i79.1, 64
  br i1 %exitcond51.i80.1, label %jpeg_add_quant_table.exit83, label %for.body.us.i81, !prof !21

jpeg_add_quant_table.exit83:                      ; preds = %for.body.us.i81
  %sent_table.i82 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %32, i64 0, i32 1
  store i32 0, i32* %sent_table.i82, align 4, !tbaa !22
  %arrayidx.i56 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 0
  %43 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx.i56, align 8, !tbaa !18
  %cmp.i.i = icmp eq %struct.JHUFF_TBL* %43, null
  br i1 %cmp.i.i, label %if.then.i.i, label %add_huff_table.exit.i, !prof !11

if.then.i.i:                                      ; preds = %jpeg_add_quant_table.exit83
  %44 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %call.i.i = tail call %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %44) #4
  store %struct.JHUFF_TBL* %call.i.i, %struct.JHUFF_TBL** %arrayidx.i56, align 8, !tbaa !18
  br label %add_huff_table.exit.i

add_huff_table.exit.i:                            ; preds = %if.then.i.i, %jpeg_add_quant_table.exit83
  %45 = phi %struct.JHUFF_TBL* [ %call.i.i, %if.then.i.i ], [ %43, %jpeg_add_quant_table.exit83 ]
  %arraydecay.i.i = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %45, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay.i.i, i8* nonnull getelementptr inbounds ([17 x i8], [17 x i8]* @std_huff_tables.bits_dc_luminance, i64 0, i64 0), i64 17, i32 1, i1 false) #4
  %46 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx.i56, align 8, !tbaa !18
  %arraydecay2.i.i = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %46, i64 0, i32 1, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay2.i.i, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @std_huff_tables.val_dc_luminance, i64 0, i64 0), i64 256, i32 1, i1 false) #4
  %47 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx.i56, align 8, !tbaa !18
  %sent_table.i.i = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %47, i64 0, i32 2
  store i32 0, i32* %sent_table.i.i, align 4, !tbaa !33
  %arrayidx1.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 17, i64 0
  %48 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx1.i, align 8, !tbaa !18
  %cmp.i13.i = icmp eq %struct.JHUFF_TBL* %48, null
  br i1 %cmp.i13.i, label %if.then.i15.i, label %add_huff_table.exit19.i, !prof !11

if.then.i15.i:                                    ; preds = %add_huff_table.exit.i
  %49 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %call.i14.i = tail call %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %49) #4
  store %struct.JHUFF_TBL* %call.i14.i, %struct.JHUFF_TBL** %arrayidx1.i, align 8, !tbaa !18
  br label %add_huff_table.exit19.i

add_huff_table.exit19.i:                          ; preds = %if.then.i15.i, %add_huff_table.exit.i
  %50 = phi %struct.JHUFF_TBL* [ %call.i14.i, %if.then.i15.i ], [ %48, %add_huff_table.exit.i ]
  %arraydecay.i16.i = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %50, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay.i16.i, i8* nonnull getelementptr inbounds ([17 x i8], [17 x i8]* @std_huff_tables.bits_ac_luminance, i64 0, i64 0), i64 17, i32 1, i1 false) #4
  %51 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx1.i, align 8, !tbaa !18
  %arraydecay2.i17.i = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %51, i64 0, i32 1, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay2.i17.i, i8* nonnull getelementptr inbounds ([162 x i8], [162 x i8]* @std_huff_tables.val_ac_luminance, i64 0, i64 0), i64 256, i32 1, i1 false) #4
  %52 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx1.i, align 8, !tbaa !18
  %sent_table.i18.i = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %52, i64 0, i32 2
  store i32 0, i32* %sent_table.i18.i, align 4, !tbaa !33
  %arrayidx3.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 1
  %53 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx3.i, align 8, !tbaa !18
  %cmp.i20.i = icmp eq %struct.JHUFF_TBL* %53, null
  br i1 %cmp.i20.i, label %if.then.i22.i, label %add_huff_table.exit26.i, !prof !11

if.then.i22.i:                                    ; preds = %add_huff_table.exit19.i
  %54 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %call.i21.i = tail call %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %54) #4
  store %struct.JHUFF_TBL* %call.i21.i, %struct.JHUFF_TBL** %arrayidx3.i, align 8, !tbaa !18
  br label %add_huff_table.exit26.i

add_huff_table.exit26.i:                          ; preds = %if.then.i22.i, %add_huff_table.exit19.i
  %55 = phi %struct.JHUFF_TBL* [ %call.i21.i, %if.then.i22.i ], [ %53, %add_huff_table.exit19.i ]
  %arraydecay.i23.i = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %55, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay.i23.i, i8* nonnull getelementptr inbounds ([17 x i8], [17 x i8]* @std_huff_tables.bits_dc_chrominance, i64 0, i64 0), i64 17, i32 1, i1 false) #4
  %56 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx3.i, align 8, !tbaa !18
  %arraydecay2.i24.i = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %56, i64 0, i32 1, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay2.i24.i, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @std_huff_tables.val_dc_chrominance, i64 0, i64 0), i64 256, i32 1, i1 false) #4
  %57 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx3.i, align 8, !tbaa !18
  %sent_table.i25.i = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %57, i64 0, i32 2
  store i32 0, i32* %sent_table.i25.i, align 4, !tbaa !33
  %arrayidx5.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 17, i64 1
  %58 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx5.i, align 8, !tbaa !18
  %cmp.i27.i = icmp eq %struct.JHUFF_TBL* %58, null
  br i1 %cmp.i27.i, label %if.then.i29.i, label %std_huff_tables.exit, !prof !11

if.then.i29.i:                                    ; preds = %add_huff_table.exit26.i
  %59 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %call.i28.i = tail call %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %59) #4
  store %struct.JHUFF_TBL* %call.i28.i, %struct.JHUFF_TBL** %arrayidx5.i, align 8, !tbaa !18
  br label %std_huff_tables.exit

std_huff_tables.exit:                             ; preds = %add_huff_table.exit26.i, %if.then.i29.i
  %60 = phi %struct.JHUFF_TBL* [ %call.i28.i, %if.then.i29.i ], [ %58, %add_huff_table.exit26.i ]
  %arraydecay.i30.i = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %60, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay.i30.i, i8* nonnull getelementptr inbounds ([17 x i8], [17 x i8]* @std_huff_tables.bits_ac_chrominance, i64 0, i64 0), i64 17, i32 1, i1 false) #4
  %61 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx5.i, align 8, !tbaa !18
  %arraydecay2.i31.i = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %61, i64 0, i32 1, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay2.i31.i, i8* nonnull getelementptr inbounds ([162 x i8], [162 x i8]* @std_huff_tables.val_ac_chrominance, i64 0, i64 0), i64 256, i32 1, i1 false) #4
  %62 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx5.i, align 8, !tbaa !18
  %sent_table.i32.i = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %62, i64 0, i32 2
  store i32 0, i32* %sent_table.i32.i, align 4, !tbaa !33
  %arrayidx10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 0
  store i8 0, i8* %arrayidx10, align 1, !tbaa !35
  %arrayidx12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 0
  store i8 1, i8* %arrayidx12, align 1, !tbaa !35
  %arrayidx14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 0
  store i8 5, i8* %arrayidx14, align 1, !tbaa !35
  %arrayidx10.1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 1
  store i8 0, i8* %arrayidx10.1, align 1, !tbaa !35
  %arrayidx12.1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 1
  store i8 1, i8* %arrayidx12.1, align 1, !tbaa !35
  %arrayidx14.1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 1
  store i8 5, i8* %arrayidx14.1, align 1, !tbaa !35
  %arrayidx10.2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 2
  store i8 0, i8* %arrayidx10.2, align 1, !tbaa !35
  %arrayidx12.2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 2
  store i8 1, i8* %arrayidx12.2, align 1, !tbaa !35
  %arrayidx14.2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 2
  store i8 5, i8* %arrayidx14.2, align 1, !tbaa !35
  %arrayidx10.3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 3
  store i8 0, i8* %arrayidx10.3, align 1, !tbaa !35
  %arrayidx12.3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 3
  store i8 1, i8* %arrayidx12.3, align 1, !tbaa !35
  %arrayidx14.3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 3
  store i8 5, i8* %arrayidx14.3, align 1, !tbaa !35
  %arrayidx10.4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 4
  store i8 0, i8* %arrayidx10.4, align 1, !tbaa !35
  %arrayidx12.4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 4
  store i8 1, i8* %arrayidx12.4, align 1, !tbaa !35
  %arrayidx14.4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 4
  store i8 5, i8* %arrayidx14.4, align 1, !tbaa !35
  %arrayidx10.5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 5
  store i8 0, i8* %arrayidx10.5, align 1, !tbaa !35
  %arrayidx12.5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 5
  store i8 1, i8* %arrayidx12.5, align 1, !tbaa !35
  %arrayidx14.5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 5
  store i8 5, i8* %arrayidx14.5, align 1, !tbaa !35
  %arrayidx10.6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 6
  store i8 0, i8* %arrayidx10.6, align 1, !tbaa !35
  %arrayidx12.6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 6
  store i8 1, i8* %arrayidx12.6, align 1, !tbaa !35
  %arrayidx14.6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 6
  store i8 5, i8* %arrayidx14.6, align 1, !tbaa !35
  %arrayidx10.7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 7
  store i8 0, i8* %arrayidx10.7, align 1, !tbaa !35
  %arrayidx12.7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 7
  store i8 1, i8* %arrayidx12.7, align 1, !tbaa !35
  %arrayidx14.7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 7
  store i8 5, i8* %arrayidx14.7, align 1, !tbaa !35
  %arrayidx10.8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 8
  store i8 0, i8* %arrayidx10.8, align 1, !tbaa !35
  %arrayidx12.8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 8
  store i8 1, i8* %arrayidx12.8, align 1, !tbaa !35
  %arrayidx14.8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 8
  store i8 5, i8* %arrayidx14.8, align 1, !tbaa !35
  %arrayidx10.9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 9
  store i8 0, i8* %arrayidx10.9, align 1, !tbaa !35
  %arrayidx12.9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 9
  store i8 1, i8* %arrayidx12.9, align 1, !tbaa !35
  %arrayidx14.9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 9
  store i8 5, i8* %arrayidx14.9, align 1, !tbaa !35
  %arrayidx10.10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 10
  store i8 0, i8* %arrayidx10.10, align 1, !tbaa !35
  %arrayidx12.10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 10
  store i8 1, i8* %arrayidx12.10, align 1, !tbaa !35
  %arrayidx14.10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 10
  store i8 5, i8* %arrayidx14.10, align 1, !tbaa !35
  %arrayidx10.11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 11
  store i8 0, i8* %arrayidx10.11, align 1, !tbaa !35
  %arrayidx12.11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 11
  store i8 1, i8* %arrayidx12.11, align 1, !tbaa !35
  %arrayidx14.11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 11
  store i8 5, i8* %arrayidx14.11, align 1, !tbaa !35
  %arrayidx10.12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 12
  store i8 0, i8* %arrayidx10.12, align 1, !tbaa !35
  %arrayidx12.12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 12
  store i8 1, i8* %arrayidx12.12, align 1, !tbaa !35
  %arrayidx14.12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 12
  store i8 5, i8* %arrayidx14.12, align 1, !tbaa !35
  %arrayidx10.13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 13
  store i8 0, i8* %arrayidx10.13, align 1, !tbaa !35
  %arrayidx12.13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 13
  store i8 1, i8* %arrayidx12.13, align 1, !tbaa !35
  %arrayidx14.13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 13
  store i8 5, i8* %arrayidx14.13, align 1, !tbaa !35
  %arrayidx10.14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 14
  store i8 0, i8* %arrayidx10.14, align 1, !tbaa !35
  %arrayidx12.14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 14
  store i8 1, i8* %arrayidx12.14, align 1, !tbaa !35
  %arrayidx14.14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 14
  store i8 5, i8* %arrayidx14.14, align 1, !tbaa !35
  %arrayidx10.15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 15
  store i8 0, i8* %arrayidx10.15, align 1, !tbaa !35
  %arrayidx12.15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 15
  store i8 1, i8* %arrayidx12.15, align 1, !tbaa !35
  %arrayidx14.15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 15
  store i8 5, i8* %arrayidx14.15, align 1, !tbaa !35
  %scan_info = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 22
  %num_scans = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 21
  store i32 0, i32* %num_scans, align 8, !tbaa !36
  %optimize_coding = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 25
  %63 = bitcast %struct.jpeg_scan_info** %scan_info to i8*
  call void @llvm.memset.p0i8.i64(i8* %63, i8 0, i64 16, i32 8, i1 false)
  %64 = load i32, i32* %data_precision, align 8, !tbaa !32
  %cmp16 = icmp sgt i32 %64, 8
  %. = zext i1 %cmp16 to i32
  store i32 %., i32* %optimize_coding, align 8
  %CCIR601_sampling = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 26
  %density_unit = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 32
  store i8 0, i8* %density_unit, align 4, !tbaa !37
  %X_density = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 33
  %65 = bitcast i32* %CCIR601_sampling to i8*
  call void @llvm.memset.p0i8.i64(i8* %65, i8 0, i64 20, i32 4, i1 false)
  store i16 1, i16* %X_density, align 2, !tbaa !38
  %Y_density = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 34
  store i16 1, i16* %Y_density, align 8, !tbaa !39
  tail call void @jpeg_default_colorspace(%struct.jpeg_compress_struct* nonnull %cinfo)
  ret void
}

; Function Attrs: nounwind uwtable
define void @jpeg_default_colorspace(%struct.jpeg_compress_struct* %cinfo) #0 !prof !24 {
entry:
  %in_color_space = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 9
  %0 = load i32, i32* %in_color_space, align 4, !tbaa !40
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
    i32 5, label %sw.bb4
    i32 0, label %sw.bb5
  ], !prof !41

sw.bb:                                            ; preds = %entry
  %global_state.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 4
  %1 = load i32, i32* %global_state.i, align 4, !tbaa !3
  %cmp.i = icmp eq i32 %1, 100
  br i1 %cmp.i, label %jpeg_set_colorspace.exit, label %if.then.i, !prof !42

if.then.i:                                        ; preds = %sw.bb
  %err.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %2 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !12
  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %2, i64 0, i32 5
  store i32 18, i32* %msg_code.i, align 8, !tbaa !13
  %arrayidx.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %2, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %arrayidx.i, align 4, !tbaa !16
  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %2, i64 0, i32 0
  %3 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !17
  %4 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %3(%struct.jpeg_common_struct* %4) #4
  br label %jpeg_set_colorspace.exit

jpeg_set_colorspace.exit:                         ; preds = %sw.bb, %if.then.i
  %jpeg_color_space.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 13
  store i32 1, i32* %jpeg_color_space.i, align 8, !tbaa !43
  %write_JFIF_header.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 31
  %write_Adobe_marker.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 35
  store i32 0, i32* %write_Adobe_marker.i, align 4, !tbaa !44
  store i32 1, i32* %write_JFIF_header.i, align 8, !tbaa !45
  %num_components.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  store i32 1, i32* %num_components.i, align 4, !tbaa !46
  %comp_info.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %5 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info.i, align 8, !tbaa !28
  %component_id.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %5, i64 0, i32 0
  store i32 1, i32* %component_id.i, align 8, !tbaa !47
  %h_samp_factor.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %5, i64 0, i32 2
  %6 = bitcast i32* %h_samp_factor.i to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %6, align 8, !tbaa !16
  %ac_tbl_no.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %5, i64 0, i32 6
  store i32 0, i32* %ac_tbl_no.i, align 8, !tbaa !49
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %global_state.i16 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 4
  %7 = load i32, i32* %global_state.i16, align 4, !tbaa !3
  %cmp.i17 = icmp eq i32 %7, 100
  br i1 %cmp.i17, label %jpeg_set_colorspace.exit26, label %if.then.i22, !prof !42

if.then.i22:                                      ; preds = %sw.bb1
  %err.i18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i18, align 8, !tbaa !12
  %msg_code.i19 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 5
  store i32 18, i32* %msg_code.i19, align 8, !tbaa !13
  %arrayidx.i20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 6, i32 0, i64 0
  store i32 %7, i32* %arrayidx.i20, align 4, !tbaa !16
  %error_exit.i21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 0
  %9 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i21, align 8, !tbaa !17
  %10 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %9(%struct.jpeg_common_struct* %10) #4
  br label %jpeg_set_colorspace.exit26

jpeg_set_colorspace.exit26:                       ; preds = %sw.bb1, %if.then.i22
  %jpeg_color_space.i23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 13
  store i32 3, i32* %jpeg_color_space.i23, align 8, !tbaa !43
  %write_JFIF_header.i24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 31
  %write_Adobe_marker.i25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 35
  store i32 0, i32* %write_Adobe_marker.i25, align 4, !tbaa !44
  store i32 1, i32* %write_JFIF_header.i24, align 8, !tbaa !45
  %num_components35.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  store i32 3, i32* %num_components35.i, align 4, !tbaa !46
  %comp_info36.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %11 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info36.i, align 8, !tbaa !28
  %component_id38.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %11, i64 0, i32 0
  store i32 1, i32* %component_id38.i, align 8, !tbaa !47
  %h_samp_factor39.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %11, i64 0, i32 2
  %12 = bitcast i32* %h_samp_factor39.i to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %12, align 8, !tbaa !16
  %ac_tbl_no43.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %11, i64 0, i32 6
  store i32 0, i32* %ac_tbl_no43.i, align 8, !tbaa !49
  %component_id46.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %11, i64 1, i32 0
  store i32 2, i32* %component_id46.i, align 8, !tbaa !47
  %h_samp_factor47.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %11, i64 1, i32 2
  %13 = bitcast i32* %h_samp_factor47.i to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %13, align 8, !tbaa !16
  %ac_tbl_no51.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %11, i64 1, i32 6
  store i32 1, i32* %ac_tbl_no51.i, align 8, !tbaa !49
  %component_id54.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %11, i64 2, i32 0
  store i32 3, i32* %component_id54.i, align 8, !tbaa !47
  %h_samp_factor55.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %11, i64 2, i32 2
  store i32 1, i32* %h_samp_factor55.i, align 8, !tbaa !50
  %v_samp_factor56.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %11, i64 2, i32 3
  store i32 1, i32* %v_samp_factor56.i, align 4, !tbaa !51
  %quant_tbl_no57.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %11, i64 2, i32 4
  store i32 1, i32* %quant_tbl_no57.i, align 8, !tbaa !52
  %dc_tbl_no58.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %11, i64 2, i32 5
  store i32 1, i32* %dc_tbl_no58.i, align 4, !tbaa !53
  %ac_tbl_no59.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %11, i64 2, i32 6
  store i32 1, i32* %ac_tbl_no59.i, align 8, !tbaa !49
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %global_state.i27 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 4
  %14 = load i32, i32* %global_state.i27, align 4, !tbaa !3
  %cmp.i28 = icmp eq i32 %14, 100
  br i1 %cmp.i28, label %jpeg_set_colorspace.exit57, label %if.then.i33, !prof !42

if.then.i33:                                      ; preds = %sw.bb2
  %err.i29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i29, align 8, !tbaa !12
  %msg_code.i30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i64 0, i32 5
  store i32 18, i32* %msg_code.i30, align 8, !tbaa !13
  %arrayidx.i31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i64 0, i32 6, i32 0, i64 0
  store i32 %14, i32* %arrayidx.i31, align 4, !tbaa !16
  %error_exit.i32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i64 0, i32 0
  %16 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i32, align 8, !tbaa !17
  %17 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %16(%struct.jpeg_common_struct* %17) #4
  br label %jpeg_set_colorspace.exit57

jpeg_set_colorspace.exit57:                       ; preds = %sw.bb2, %if.then.i33
  %jpeg_color_space.i34 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 13
  store i32 3, i32* %jpeg_color_space.i34, align 8, !tbaa !43
  %write_JFIF_header.i35 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 31
  %write_Adobe_marker.i36 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 35
  store i32 0, i32* %write_Adobe_marker.i36, align 4, !tbaa !44
  store i32 1, i32* %write_JFIF_header.i35, align 8, !tbaa !45
  %num_components35.i37 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  store i32 3, i32* %num_components35.i37, align 4, !tbaa !46
  %comp_info36.i38 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %18 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info36.i38, align 8, !tbaa !28
  %component_id38.i39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 0, i32 0
  store i32 1, i32* %component_id38.i39, align 8, !tbaa !47
  %h_samp_factor39.i40 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 0, i32 2
  %19 = bitcast i32* %h_samp_factor39.i40 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %19, align 8, !tbaa !16
  %ac_tbl_no43.i44 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 0, i32 6
  store i32 0, i32* %ac_tbl_no43.i44, align 8, !tbaa !49
  %component_id46.i45 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 1, i32 0
  store i32 2, i32* %component_id46.i45, align 8, !tbaa !47
  %h_samp_factor47.i46 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 1, i32 2
  %20 = bitcast i32* %h_samp_factor47.i46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %20, align 8, !tbaa !16
  %ac_tbl_no51.i50 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 1, i32 6
  store i32 1, i32* %ac_tbl_no51.i50, align 8, !tbaa !49
  %component_id54.i51 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 2, i32 0
  store i32 3, i32* %component_id54.i51, align 8, !tbaa !47
  %h_samp_factor55.i52 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 2, i32 2
  store i32 1, i32* %h_samp_factor55.i52, align 8, !tbaa !50
  %v_samp_factor56.i53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 2, i32 3
  store i32 1, i32* %v_samp_factor56.i53, align 4, !tbaa !51
  %quant_tbl_no57.i54 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 2, i32 4
  store i32 1, i32* %quant_tbl_no57.i54, align 8, !tbaa !52
  %dc_tbl_no58.i55 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 2, i32 5
  store i32 1, i32* %dc_tbl_no58.i55, align 4, !tbaa !53
  %ac_tbl_no59.i56 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 2, i32 6
  store i32 1, i32* %ac_tbl_no59.i56, align 8, !tbaa !49
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %global_state.i58 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 4
  %21 = load i32, i32* %global_state.i58, align 4, !tbaa !3
  %cmp.i59 = icmp eq i32 %21, 100
  br i1 %cmp.i59, label %jpeg_set_colorspace.exit68, label %if.then.i64, !prof !42

if.then.i64:                                      ; preds = %sw.bb3
  %err.i60 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i60, align 8, !tbaa !12
  %msg_code.i61 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 5
  store i32 18, i32* %msg_code.i61, align 8, !tbaa !13
  %arrayidx.i62 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 6, i32 0, i64 0
  store i32 %21, i32* %arrayidx.i62, align 4, !tbaa !16
  %error_exit.i63 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 0
  %23 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i63, align 8, !tbaa !17
  %24 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %23(%struct.jpeg_common_struct* %24) #4
  br label %jpeg_set_colorspace.exit68

jpeg_set_colorspace.exit68:                       ; preds = %sw.bb3, %if.then.i64
  %jpeg_color_space.i65 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 13
  store i32 4, i32* %jpeg_color_space.i65, align 8, !tbaa !43
  %write_JFIF_header.i66 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 31
  store i32 0, i32* %write_JFIF_header.i66, align 8, !tbaa !45
  %write_Adobe_marker.i67 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 35
  store i32 1, i32* %write_Adobe_marker.i67, align 4, !tbaa !44
  %num_components62.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  store i32 4, i32* %num_components62.i, align 4, !tbaa !46
  %comp_info63.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %25 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info63.i, align 8, !tbaa !28
  %component_id65.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 0, i32 0
  store i32 67, i32* %component_id65.i, align 8, !tbaa !47
  %h_samp_factor66.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 0, i32 2
  %26 = bitcast i32* %h_samp_factor66.i to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %26, align 8, !tbaa !16
  %ac_tbl_no70.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 0, i32 6
  store i32 0, i32* %ac_tbl_no70.i, align 8, !tbaa !49
  %component_id73.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 1, i32 0
  store i32 77, i32* %component_id73.i, align 8, !tbaa !47
  %h_samp_factor74.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 1, i32 2
  %27 = bitcast i32* %h_samp_factor74.i to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %27, align 8, !tbaa !16
  %ac_tbl_no78.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 1, i32 6
  store i32 0, i32* %ac_tbl_no78.i, align 8, !tbaa !49
  %component_id81.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 2, i32 0
  store i32 89, i32* %component_id81.i, align 8, !tbaa !47
  %h_samp_factor82.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 2, i32 2
  store i32 1, i32* %h_samp_factor82.i, align 8, !tbaa !50
  %v_samp_factor83.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 2, i32 3
  store i32 1, i32* %v_samp_factor83.i, align 4, !tbaa !51
  %quant_tbl_no84.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 2, i32 4
  store i32 0, i32* %quant_tbl_no84.i, align 8, !tbaa !52
  %dc_tbl_no85.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 2, i32 5
  store i32 0, i32* %dc_tbl_no85.i, align 4, !tbaa !53
  %ac_tbl_no86.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 2, i32 6
  store i32 0, i32* %ac_tbl_no86.i, align 8, !tbaa !49
  %component_id89.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 3, i32 0
  store i32 75, i32* %component_id89.i, align 8, !tbaa !47
  %h_samp_factor90.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 3, i32 2
  %28 = bitcast i32* %h_samp_factor90.i to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %28, align 8, !tbaa !16
  %ac_tbl_no94.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 3, i32 6
  store i32 0, i32* %ac_tbl_no94.i, align 8, !tbaa !49
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  %global_state.i69 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 4
  %29 = load i32, i32* %global_state.i69, align 4, !tbaa !3
  %cmp.i70 = icmp eq i32 %29, 100
  br i1 %cmp.i70, label %jpeg_set_colorspace.exit79, label %if.then.i75, !prof !42

if.then.i75:                                      ; preds = %sw.bb4
  %err.i71 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i71, align 8, !tbaa !12
  %msg_code.i72 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 5
  store i32 18, i32* %msg_code.i72, align 8, !tbaa !13
  %arrayidx.i73 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 6, i32 0, i64 0
  store i32 %29, i32* %arrayidx.i73, align 4, !tbaa !16
  %error_exit.i74 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 0
  %31 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i74, align 8, !tbaa !17
  %32 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %31(%struct.jpeg_common_struct* %32) #4
  br label %jpeg_set_colorspace.exit79

jpeg_set_colorspace.exit79:                       ; preds = %sw.bb4, %if.then.i75
  %jpeg_color_space.i76 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 13
  store i32 5, i32* %jpeg_color_space.i76, align 8, !tbaa !43
  %write_JFIF_header.i77 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 31
  store i32 0, i32* %write_JFIF_header.i77, align 8, !tbaa !45
  %write_Adobe_marker.i78 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 35
  store i32 1, i32* %write_Adobe_marker.i78, align 4, !tbaa !44
  %num_components97.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  store i32 4, i32* %num_components97.i, align 4, !tbaa !46
  %comp_info98.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %33 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info98.i, align 8, !tbaa !28
  %component_id100.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 0, i32 0
  store i32 1, i32* %component_id100.i, align 8, !tbaa !47
  %h_samp_factor101.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 0, i32 2
  %34 = bitcast i32* %h_samp_factor101.i to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %34, align 8, !tbaa !16
  %ac_tbl_no105.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 0, i32 6
  store i32 0, i32* %ac_tbl_no105.i, align 8, !tbaa !49
  %component_id108.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 1, i32 0
  store i32 2, i32* %component_id108.i, align 8, !tbaa !47
  %h_samp_factor109.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 1, i32 2
  %35 = bitcast i32* %h_samp_factor109.i to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !tbaa !16
  %ac_tbl_no113.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 1, i32 6
  store i32 1, i32* %ac_tbl_no113.i, align 8, !tbaa !49
  %component_id116.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 2, i32 0
  store i32 3, i32* %component_id116.i, align 8, !tbaa !47
  %h_samp_factor117.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 2, i32 2
  store i32 1, i32* %h_samp_factor117.i, align 8, !tbaa !50
  %v_samp_factor118.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 2, i32 3
  store i32 1, i32* %v_samp_factor118.i, align 4, !tbaa !51
  %quant_tbl_no119.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 2, i32 4
  store i32 1, i32* %quant_tbl_no119.i, align 8, !tbaa !52
  %dc_tbl_no120.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 2, i32 5
  store i32 1, i32* %dc_tbl_no120.i, align 4, !tbaa !53
  %ac_tbl_no121.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 2, i32 6
  store i32 1, i32* %ac_tbl_no121.i, align 8, !tbaa !49
  %component_id124.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 3, i32 0
  store i32 4, i32* %component_id124.i, align 8, !tbaa !47
  %h_samp_factor125.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 3, i32 2
  %36 = bitcast i32* %h_samp_factor125.i to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %36, align 8, !tbaa !16
  %ac_tbl_no129.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i64 3, i32 6
  store i32 0, i32* %ac_tbl_no129.i, align 8, !tbaa !49
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %global_state.i80 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 4
  %37 = load i32, i32* %global_state.i80, align 4, !tbaa !3
  %cmp.i81 = icmp eq i32 %37, 100
  br i1 %cmp.i81, label %if.end.i, label %if.then.i86, !prof !42

if.then.i86:                                      ; preds = %sw.bb5
  %err.i82 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %38 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i82, align 8, !tbaa !12
  %msg_code.i83 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %38, i64 0, i32 5
  store i32 18, i32* %msg_code.i83, align 8, !tbaa !13
  %arrayidx.i84 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %38, i64 0, i32 6, i32 0, i64 0
  store i32 %37, i32* %arrayidx.i84, align 4, !tbaa !16
  %error_exit.i85 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %38, i64 0, i32 0
  %39 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i85, align 8, !tbaa !17
  %40 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %39(%struct.jpeg_common_struct* %40) #4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i86, %sw.bb5
  %jpeg_color_space.i87 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 13
  store i32 0, i32* %jpeg_color_space.i87, align 8, !tbaa !43
  %write_JFIF_header.i88 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 31
  store i32 0, i32* %write_JFIF_header.i88, align 8, !tbaa !45
  %write_Adobe_marker.i89 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 35
  store i32 0, i32* %write_Adobe_marker.i89, align 4, !tbaa !44
  %input_components.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 8
  %41 = load i32, i32* %input_components.i, align 8, !tbaa !54
  %num_components131.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  store i32 %41, i32* %num_components131.i, align 4, !tbaa !46
  %.off.i = add i32 %41, -1
  %42 = icmp ugt i32 %.off.i, 9
  br i1 %42, label %if.then136.i, label %for.cond.preheader.i

if.then136.i:                                     ; preds = %if.end.i
  %err137.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %43 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err137.i, align 8, !tbaa !12
  %msg_code138.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %43, i64 0, i32 5
  store i32 24, i32* %msg_code138.i, align 8, !tbaa !13
  %arrayidx143.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %43, i64 0, i32 6, i32 0, i64 0
  store i32 %41, i32* %arrayidx143.i, align 4, !tbaa !16
  %arrayidx147.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %43, i64 0, i32 6, i32 0, i64 1
  store i32 10, i32* %arrayidx147.i, align 4, !tbaa !16
  %error_exit149.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %43, i64 0, i32 0
  %44 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit149.i, align 8, !tbaa !17
  %45 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %44(%struct.jpeg_common_struct* %45) #4
  %.pre.i = load i32, i32* %num_components131.i, align 4, !tbaa !46
  br label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.then136.i, %if.end.i
  %46 = phi i32 [ %41, %if.end.i ], [ %.pre.i, %if.then136.i ]
  %cmp152314.i = icmp sgt i32 %46, 0
  br i1 %cmp152314.i, label %for.body.lr.ph.i, label %sw.epilog

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %comp_info153.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %47 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info153.i, align 8
  %48 = sext i32 %46 to i64
  %xtraiter = and i32 %46, 1
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.lr.ph.i.split, label %for.body.i.prol

for.body.i.prol:                                  ; preds = %for.body.lr.ph.i
  %component_id155.i.prol = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 0
  store i32 0, i32* %component_id155.i.prol, align 8, !tbaa !47
  %h_samp_factor156.i.prol = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 2
  %49 = bitcast i32* %h_samp_factor156.i.prol to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %49, align 8, !tbaa !16
  %ac_tbl_no160.i.prol = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 6
  store i32 0, i32* %ac_tbl_no160.i.prol, align 8, !tbaa !49
  br label %for.body.lr.ph.i.split

for.body.lr.ph.i.split:                           ; preds = %for.body.lr.ph.i, %for.body.i.prol
  %indvars.iv.i.unr = phi i64 [ 0, %for.body.lr.ph.i ], [ 1, %for.body.i.prol ]
  %50 = icmp eq i32 %46, 1
  br i1 %50, label %sw.epilog.loopexit, label %for.body.lr.ph.i.split.split

for.body.lr.ph.i.split.split:                     ; preds = %for.body.lr.ph.i.split
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.split.split
  %indvars.iv.i = phi i64 [ %indvars.iv.i.unr, %for.body.lr.ph.i.split.split ], [ %indvars.iv.next.i.1, %for.body.i ]
  %component_id155.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 %indvars.iv.i, i32 0
  %51 = trunc i64 %indvars.iv.i to i32
  store i32 %51, i32* %component_id155.i, align 8, !tbaa !47
  %h_samp_factor156.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 %indvars.iv.i, i32 2
  %52 = bitcast i32* %h_samp_factor156.i to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %52, align 8, !tbaa !16
  %ac_tbl_no160.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 %indvars.iv.i, i32 6
  store i32 0, i32* %ac_tbl_no160.i, align 8, !tbaa !49
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %component_id155.i.1 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 %indvars.iv.next.i, i32 0
  %53 = trunc i64 %indvars.iv.next.i to i32
  store i32 %53, i32* %component_id155.i.1, align 8, !tbaa !47
  %h_samp_factor156.i.1 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 %indvars.iv.next.i, i32 2
  %54 = bitcast i32* %h_samp_factor156.i.1 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %54, align 8, !tbaa !16
  %ac_tbl_no160.i.1 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 %indvars.iv.next.i, i32 6
  store i32 0, i32* %ac_tbl_no160.i.1, align 8, !tbaa !49
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %exitcond.1 = icmp eq i64 %indvars.iv.next.i.1, %48
  br i1 %exitcond.1, label %sw.epilog.loopexit.unr-lcssa, label %for.body.i

sw.default:                                       ; preds = %entry
  %err = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %55 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !12
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %55, i64 0, i32 5
  store i32 7, i32* %msg_code, align 8, !tbaa !13
  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %55, i64 0, i32 0
  %56 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !17
  %57 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %56(%struct.jpeg_common_struct* %57) #4
  br label %sw.epilog

sw.epilog.loopexit.unr-lcssa:                     ; preds = %for.body.i
  br label %sw.epilog.loopexit

sw.epilog.loopexit:                               ; preds = %for.body.lr.ph.i.split, %sw.epilog.loopexit.unr-lcssa
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %for.cond.preheader.i, %sw.default, %jpeg_set_colorspace.exit79, %jpeg_set_colorspace.exit68, %jpeg_set_colorspace.exit57, %jpeg_set_colorspace.exit26, %jpeg_set_colorspace.exit
  ret void
}

; Function Attrs: nounwind uwtable
define void @jpeg_set_colorspace(%struct.jpeg_compress_struct* %cinfo, i32 %colorspace) #0 !prof !24 {
entry:
  %global_state = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 4
  %0 = load i32, i32* %global_state, align 4, !tbaa !3
  %cmp = icmp eq i32 %0, 100
  br i1 %cmp, label %if.end, label %if.then, !prof !42

if.then:                                          ; preds = %entry
  %err = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %1 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !12
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1, i64 0, i32 5
  store i32 18, i32* %msg_code, align 8, !tbaa !13
  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1, i64 0, i32 6, i32 0, i64 0
  store i32 %0, i32* %arrayidx, align 4, !tbaa !16
  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1, i64 0, i32 0
  %2 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !17
  %3 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %2(%struct.jpeg_common_struct* %3) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %jpeg_color_space = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 13
  store i32 %colorspace, i32* %jpeg_color_space, align 8, !tbaa !43
  %write_JFIF_header = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 31
  store i32 0, i32* %write_JFIF_header, align 8, !tbaa !45
  %write_Adobe_marker = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 35
  store i32 0, i32* %write_Adobe_marker, align 4, !tbaa !44
  switch i32 %colorspace, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb6
    i32 3, label %sw.bb33
    i32 4, label %sw.bb60
    i32 5, label %sw.bb95
    i32 0, label %sw.bb130
  ], !prof !55

sw.bb:                                            ; preds = %if.end
  store i32 1, i32* %write_JFIF_header, align 8, !tbaa !45
  %num_components = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  store i32 1, i32* %num_components, align 4, !tbaa !46
  %comp_info = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %4 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info, align 8, !tbaa !28
  %component_id = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %4, i64 0, i32 0
  store i32 1, i32* %component_id, align 8, !tbaa !47
  %h_samp_factor = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %4, i64 0, i32 2
  %5 = bitcast i32* %h_samp_factor to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %5, align 8, !tbaa !16
  %ac_tbl_no = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %4, i64 0, i32 6
  store i32 0, i32* %ac_tbl_no, align 8, !tbaa !49
  br label %sw.epilog

sw.bb6:                                           ; preds = %if.end
  store i32 1, i32* %write_Adobe_marker, align 4, !tbaa !44
  %num_components8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  store i32 3, i32* %num_components8, align 4, !tbaa !46
  %comp_info9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %6 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info9, align 8, !tbaa !28
  %component_id11 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 0, i32 0
  store i32 82, i32* %component_id11, align 8, !tbaa !47
  %h_samp_factor12 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 0, i32 2
  %7 = bitcast i32* %h_samp_factor12 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %7, align 8, !tbaa !16
  %ac_tbl_no16 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 0, i32 6
  store i32 0, i32* %ac_tbl_no16, align 8, !tbaa !49
  %component_id19 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 1, i32 0
  store i32 71, i32* %component_id19, align 8, !tbaa !47
  %h_samp_factor20 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 1, i32 2
  %8 = bitcast i32* %h_samp_factor20 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %8, align 8, !tbaa !16
  %ac_tbl_no24 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 1, i32 6
  store i32 0, i32* %ac_tbl_no24, align 8, !tbaa !49
  %component_id27 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 2, i32 0
  store i32 66, i32* %component_id27, align 8, !tbaa !47
  %h_samp_factor28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 2, i32 2
  store i32 1, i32* %h_samp_factor28, align 8, !tbaa !50
  %v_samp_factor29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 2, i32 3
  store i32 1, i32* %v_samp_factor29, align 4, !tbaa !51
  %quant_tbl_no30 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 2, i32 4
  store i32 0, i32* %quant_tbl_no30, align 8, !tbaa !52
  %dc_tbl_no31 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 2, i32 5
  store i32 0, i32* %dc_tbl_no31, align 4, !tbaa !53
  %ac_tbl_no32 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 2, i32 6
  store i32 0, i32* %ac_tbl_no32, align 8, !tbaa !49
  br label %sw.epilog

sw.bb33:                                          ; preds = %if.end
  store i32 1, i32* %write_JFIF_header, align 8, !tbaa !45
  %num_components35 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  store i32 3, i32* %num_components35, align 4, !tbaa !46
  %comp_info36 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %9 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info36, align 8, !tbaa !28
  %component_id38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %9, i64 0, i32 0
  store i32 1, i32* %component_id38, align 8, !tbaa !47
  %h_samp_factor39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %9, i64 0, i32 2
  %10 = bitcast i32* %h_samp_factor39 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %10, align 8, !tbaa !16
  %ac_tbl_no43 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %9, i64 0, i32 6
  store i32 0, i32* %ac_tbl_no43, align 8, !tbaa !49
  %component_id46 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %9, i64 1, i32 0
  store i32 2, i32* %component_id46, align 8, !tbaa !47
  %h_samp_factor47 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %9, i64 1, i32 2
  %11 = bitcast i32* %h_samp_factor47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %11, align 8, !tbaa !16
  %ac_tbl_no51 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %9, i64 1, i32 6
  store i32 1, i32* %ac_tbl_no51, align 8, !tbaa !49
  %component_id54 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %9, i64 2, i32 0
  store i32 3, i32* %component_id54, align 8, !tbaa !47
  %h_samp_factor55 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %9, i64 2, i32 2
  store i32 1, i32* %h_samp_factor55, align 8, !tbaa !50
  %v_samp_factor56 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %9, i64 2, i32 3
  store i32 1, i32* %v_samp_factor56, align 4, !tbaa !51
  %quant_tbl_no57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %9, i64 2, i32 4
  store i32 1, i32* %quant_tbl_no57, align 8, !tbaa !52
  %dc_tbl_no58 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %9, i64 2, i32 5
  store i32 1, i32* %dc_tbl_no58, align 4, !tbaa !53
  %ac_tbl_no59 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %9, i64 2, i32 6
  store i32 1, i32* %ac_tbl_no59, align 8, !tbaa !49
  br label %sw.epilog

sw.bb60:                                          ; preds = %if.end
  store i32 1, i32* %write_Adobe_marker, align 4, !tbaa !44
  %num_components62 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  store i32 4, i32* %num_components62, align 4, !tbaa !46
  %comp_info63 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %12 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info63, align 8, !tbaa !28
  %component_id65 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 0, i32 0
  store i32 67, i32* %component_id65, align 8, !tbaa !47
  %h_samp_factor66 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 0, i32 2
  %13 = bitcast i32* %h_samp_factor66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %13, align 8, !tbaa !16
  %ac_tbl_no70 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 0, i32 6
  store i32 0, i32* %ac_tbl_no70, align 8, !tbaa !49
  %component_id73 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 1, i32 0
  store i32 77, i32* %component_id73, align 8, !tbaa !47
  %h_samp_factor74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 1, i32 2
  %14 = bitcast i32* %h_samp_factor74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %14, align 8, !tbaa !16
  %ac_tbl_no78 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 1, i32 6
  store i32 0, i32* %ac_tbl_no78, align 8, !tbaa !49
  %component_id81 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 2, i32 0
  store i32 89, i32* %component_id81, align 8, !tbaa !47
  %h_samp_factor82 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 2, i32 2
  store i32 1, i32* %h_samp_factor82, align 8, !tbaa !50
  %v_samp_factor83 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 2, i32 3
  store i32 1, i32* %v_samp_factor83, align 4, !tbaa !51
  %quant_tbl_no84 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 2, i32 4
  store i32 0, i32* %quant_tbl_no84, align 8, !tbaa !52
  %dc_tbl_no85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 2, i32 5
  store i32 0, i32* %dc_tbl_no85, align 4, !tbaa !53
  %ac_tbl_no86 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 2, i32 6
  store i32 0, i32* %ac_tbl_no86, align 8, !tbaa !49
  %component_id89 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 3, i32 0
  store i32 75, i32* %component_id89, align 8, !tbaa !47
  %h_samp_factor90 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 3, i32 2
  %15 = bitcast i32* %h_samp_factor90 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %15, align 8, !tbaa !16
  %ac_tbl_no94 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %12, i64 3, i32 6
  store i32 0, i32* %ac_tbl_no94, align 8, !tbaa !49
  br label %sw.epilog

sw.bb95:                                          ; preds = %if.end
  store i32 1, i32* %write_Adobe_marker, align 4, !tbaa !44
  %num_components97 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  store i32 4, i32* %num_components97, align 4, !tbaa !46
  %comp_info98 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %16 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info98, align 8, !tbaa !28
  %component_id100 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 0, i32 0
  store i32 1, i32* %component_id100, align 8, !tbaa !47
  %h_samp_factor101 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 0, i32 2
  %17 = bitcast i32* %h_samp_factor101 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %17, align 8, !tbaa !16
  %ac_tbl_no105 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 0, i32 6
  store i32 0, i32* %ac_tbl_no105, align 8, !tbaa !49
  %component_id108 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 1, i32 0
  store i32 2, i32* %component_id108, align 8, !tbaa !47
  %h_samp_factor109 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 1, i32 2
  %18 = bitcast i32* %h_samp_factor109 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %18, align 8, !tbaa !16
  %ac_tbl_no113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 1, i32 6
  store i32 1, i32* %ac_tbl_no113, align 8, !tbaa !49
  %component_id116 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 2, i32 0
  store i32 3, i32* %component_id116, align 8, !tbaa !47
  %h_samp_factor117 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 2, i32 2
  store i32 1, i32* %h_samp_factor117, align 8, !tbaa !50
  %v_samp_factor118 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 2, i32 3
  store i32 1, i32* %v_samp_factor118, align 4, !tbaa !51
  %quant_tbl_no119 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 2, i32 4
  store i32 1, i32* %quant_tbl_no119, align 8, !tbaa !52
  %dc_tbl_no120 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 2, i32 5
  store i32 1, i32* %dc_tbl_no120, align 4, !tbaa !53
  %ac_tbl_no121 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 2, i32 6
  store i32 1, i32* %ac_tbl_no121, align 8, !tbaa !49
  %component_id124 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 3, i32 0
  store i32 4, i32* %component_id124, align 8, !tbaa !47
  %h_samp_factor125 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 3, i32 2
  %19 = bitcast i32* %h_samp_factor125 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %19, align 8, !tbaa !16
  %ac_tbl_no129 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 3, i32 6
  store i32 0, i32* %ac_tbl_no129, align 8, !tbaa !49
  br label %sw.epilog

sw.bb130:                                         ; preds = %if.end
  %input_components = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 8
  %20 = load i32, i32* %input_components, align 8, !tbaa !54
  %num_components131 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  store i32 %20, i32* %num_components131, align 4, !tbaa !46
  %.off = add i32 %20, -1
  %21 = icmp ugt i32 %.off, 9
  br i1 %21, label %if.then136, label %for.cond.preheader

if.then136:                                       ; preds = %sw.bb130
  %err137 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err137, align 8, !tbaa !12
  %msg_code138 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 5
  store i32 24, i32* %msg_code138, align 8, !tbaa !13
  %arrayidx143 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 6, i32 0, i64 0
  store i32 %20, i32* %arrayidx143, align 4, !tbaa !16
  %arrayidx147 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 6, i32 0, i64 1
  store i32 10, i32* %arrayidx147, align 4, !tbaa !16
  %error_exit149 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 0
  %23 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit149, align 8, !tbaa !17
  %24 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %23(%struct.jpeg_common_struct* %24) #4
  %.pre = load i32, i32* %num_components131, align 4, !tbaa !46
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %sw.bb130, %if.then136
  %25 = phi i32 [ %20, %sw.bb130 ], [ %.pre, %if.then136 ]
  %cmp152314 = icmp sgt i32 %25, 0
  br i1 %cmp152314, label %for.body.lr.ph, label %sw.epilog

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %comp_info153 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %26 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info153, align 8
  %27 = sext i32 %25 to i64
  %xtraiter = and i32 %25, 1
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.lr.ph.split, label %for.body.prol

for.body.prol:                                    ; preds = %for.body.lr.ph
  %component_id155.prol = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i64 0, i32 0
  store i32 0, i32* %component_id155.prol, align 8, !tbaa !47
  %h_samp_factor156.prol = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i64 0, i32 2
  %28 = bitcast i32* %h_samp_factor156.prol to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %28, align 8, !tbaa !16
  %ac_tbl_no160.prol = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i64 0, i32 6
  store i32 0, i32* %ac_tbl_no160.prol, align 8, !tbaa !49
  br label %for.body.lr.ph.split

for.body.lr.ph.split:                             ; preds = %for.body.lr.ph, %for.body.prol
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ 1, %for.body.prol ]
  %29 = icmp eq i32 %25, 1
  br i1 %29, label %sw.epilog.loopexit, label %for.body.lr.ph.split.split

for.body.lr.ph.split.split:                       ; preds = %for.body.lr.ph.split
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph.split.split
  %indvars.iv = phi i64 [ %indvars.iv.unr, %for.body.lr.ph.split.split ], [ %indvars.iv.next.1, %for.body ]
  %component_id155 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i64 %indvars.iv, i32 0
  %30 = trunc i64 %indvars.iv to i32
  store i32 %30, i32* %component_id155, align 8, !tbaa !47
  %h_samp_factor156 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i64 %indvars.iv, i32 2
  %31 = bitcast i32* %h_samp_factor156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %31, align 8, !tbaa !16
  %ac_tbl_no160 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i64 %indvars.iv, i32 6
  store i32 0, i32* %ac_tbl_no160, align 8, !tbaa !49
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %component_id155.1 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i64 %indvars.iv.next, i32 0
  %32 = trunc i64 %indvars.iv.next to i32
  store i32 %32, i32* %component_id155.1, align 8, !tbaa !47
  %h_samp_factor156.1 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i64 %indvars.iv.next, i32 2
  %33 = bitcast i32* %h_samp_factor156.1 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %33, align 8, !tbaa !16
  %ac_tbl_no160.1 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i64 %indvars.iv.next, i32 6
  store i32 0, i32* %ac_tbl_no160.1, align 8, !tbaa !49
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2
  %cmp152.1 = icmp slt i64 %indvars.iv.next.1, %27
  br i1 %cmp152.1, label %for.body, label %sw.epilog.loopexit.unr-lcssa

sw.default:                                       ; preds = %if.end
  %err161 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err161, align 8, !tbaa !12
  %msg_code162 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i64 0, i32 5
  store i32 8, i32* %msg_code162, align 8, !tbaa !13
  %error_exit164 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i64 0, i32 0
  %35 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit164, align 8, !tbaa !17
  %36 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %35(%struct.jpeg_common_struct* %36) #4
  br label %sw.epilog

sw.epilog.loopexit.unr-lcssa:                     ; preds = %for.body
  br label %sw.epilog.loopexit

sw.epilog.loopexit:                               ; preds = %for.body.lr.ph.split, %sw.epilog.loopexit.unr-lcssa
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %for.cond.preheader, %sw.default, %sw.bb95, %sw.bb60, %sw.bb33, %sw.bb6, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define void @jpeg_simple_progression(%struct.jpeg_compress_struct* %cinfo) #0 !prof !26 {
entry:
  %num_components = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  %0 = load i32, i32* %num_components, align 4, !tbaa !46
  %global_state = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 4
  %1 = load i32, i32* %global_state, align 4, !tbaa !3
  %cmp = icmp eq i32 %1, 100
  br i1 %cmp, label %if.end, label %if.then, !prof !27

if.then:                                          ; preds = %entry
  %err = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %2 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !12
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %2, i64 0, i32 5
  store i32 18, i32* %msg_code, align 8, !tbaa !13
  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %2, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %arrayidx, align 4, !tbaa !16
  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %2, i64 0, i32 0
  %3 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !17
  %4 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %3(%struct.jpeg_common_struct* %4) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %cmp4 = icmp eq i32 %0, 3
  br i1 %cmp4, label %land.lhs.true, label %if.else, !prof !27

land.lhs.true:                                    ; preds = %if.end
  %jpeg_color_space = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 13
  %5 = load i32, i32* %jpeg_color_space, align 8, !tbaa !43
  %cmp5 = icmp eq i32 %5, 3
  br i1 %cmp5, label %if.end12, label %if.else9, !prof !27

if.else:                                          ; preds = %if.end
  %cmp7 = icmp sgt i32 %0, 4
  br i1 %cmp7, label %if.then8, label %if.else9, !prof !56

if.then8:                                         ; preds = %if.else
  %mul = mul nsw i32 %0, 6
  br label %if.end12

if.else9:                                         ; preds = %land.lhs.true, %if.else
  %mul10 = shl nsw i32 %0, 2
  %add = or i32 %mul10, 2
  br label %if.end12

if.end12:                                         ; preds = %land.lhs.true, %if.then8, %if.else9
  %nscans.0 = phi i32 [ %mul, %if.then8 ], [ %add, %if.else9 ], [ 10, %land.lhs.true ]
  %mem = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1
  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !29
  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %6, i64 0, i32 0
  %7 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !30
  %8 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %conv = sext i32 %nscans.0 to i64
  %mul13 = mul nsw i64 %conv, 36
  %call = tail call i8* %7(%struct.jpeg_common_struct* %8, i32 0, i64 %mul13) #4
  %9 = bitcast i8* %call to %struct.jpeg_scan_info*
  %scan_info = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 22
  %10 = bitcast %struct.jpeg_scan_info** %scan_info to i8**
  store i8* %call, i8** %10, align 8, !tbaa !57
  %num_scans = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 21
  store i32 %nscans.0, i32* %num_scans, align 8, !tbaa !36
  br i1 %cmp4, label %land.lhs.true16, label %if.else31, !prof !27

land.lhs.true16:                                  ; preds = %if.end12
  %jpeg_color_space17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 13
  %11 = load i32, i32* %jpeg_color_space17, align 8, !tbaa !43
  %cmp18 = icmp eq i32 %11, 3
  %comps_in_scan.i = bitcast i8* %call to i32*
  store i32 3, i32* %comps_in_scan.i, align 4, !tbaa !58
  br i1 %cmp18, label %for.body.i.preheader, label %for.body.i187.preheader, !prof !27

for.body.i.preheader:                             ; preds = %land.lhs.true16
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader
  %arrayidx.i = getelementptr inbounds i8, i8* %call, i64 4
  %12 = bitcast i8* %arrayidx.i to i32*
  store i32 0, i32* %12, align 4, !tbaa !16
  %arrayidx.i.1 = getelementptr inbounds i8, i8* %call, i64 8
  %13 = bitcast i8* %arrayidx.i.1 to i32*
  store i32 1, i32* %13, align 4, !tbaa !16
  %arrayidx.i.2 = getelementptr inbounds i8, i8* %call, i64 12
  %14 = bitcast i8* %arrayidx.i.2 to i32*
  store i32 2, i32* %14, align 4, !tbaa !16
  %Ss.i = getelementptr inbounds i8, i8* %call, i64 20
  %15 = bitcast i8* %Ss.i to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %15, align 4, !tbaa !16
  %incdec.ptr.i = getelementptr inbounds i8, i8* %call, i64 36
  %comps_in_scan.i293 = bitcast i8* %incdec.ptr.i to i32*
  store i32 1, i32* %comps_in_scan.i293, align 4, !tbaa !58
  %arrayidx.i294 = getelementptr inbounds i8, i8* %call, i64 40
  %16 = bitcast i8* %arrayidx.i294 to i32*
  store i32 0, i32* %16, align 4, !tbaa !16
  %Ss1.i295 = getelementptr inbounds i8, i8* %call, i64 56
  %17 = bitcast i8* %Ss1.i295 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %17, align 4, !tbaa !16
  %incdec.ptr.i299 = getelementptr inbounds i8, i8* %call, i64 72
  %comps_in_scan.i286 = bitcast i8* %incdec.ptr.i299 to i32*
  store i32 1, i32* %comps_in_scan.i286, align 4, !tbaa !58
  %arrayidx.i287 = getelementptr inbounds i8, i8* %call, i64 76
  %18 = bitcast i8* %arrayidx.i287 to i32*
  store i32 2, i32* %18, align 4, !tbaa !16
  %Ss1.i288 = getelementptr inbounds i8, i8* %call, i64 92
  %19 = bitcast i8* %Ss1.i288 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 0, i32 1>, <4 x i32>* %19, align 4, !tbaa !16
  %incdec.ptr.i292 = getelementptr inbounds i8, i8* %call, i64 108
  %comps_in_scan.i279 = bitcast i8* %incdec.ptr.i292 to i32*
  store i32 1, i32* %comps_in_scan.i279, align 4, !tbaa !58
  %arrayidx.i280 = getelementptr inbounds i8, i8* %call, i64 112
  %20 = bitcast i8* %arrayidx.i280 to i32*
  store i32 1, i32* %20, align 4, !tbaa !16
  %Ss1.i281 = getelementptr inbounds i8, i8* %call, i64 128
  %21 = bitcast i8* %Ss1.i281 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 0, i32 1>, <4 x i32>* %21, align 4, !tbaa !16
  %incdec.ptr.i285 = getelementptr inbounds i8, i8* %call, i64 144
  %comps_in_scan.i272 = bitcast i8* %incdec.ptr.i285 to i32*
  store i32 1, i32* %comps_in_scan.i272, align 4, !tbaa !58
  %arrayidx.i273 = getelementptr inbounds i8, i8* %call, i64 148
  %22 = bitcast i8* %arrayidx.i273 to i32*
  store i32 0, i32* %22, align 4, !tbaa !16
  %Ss1.i274 = getelementptr inbounds i8, i8* %call, i64 164
  %23 = bitcast i8* %Ss1.i274 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %23, align 4, !tbaa !16
  %incdec.ptr.i278 = getelementptr inbounds i8, i8* %call, i64 180
  %comps_in_scan.i265 = bitcast i8* %incdec.ptr.i278 to i32*
  store i32 1, i32* %comps_in_scan.i265, align 4, !tbaa !58
  %arrayidx.i266 = getelementptr inbounds i8, i8* %call, i64 184
  %24 = bitcast i8* %arrayidx.i266 to i32*
  store i32 0, i32* %24, align 4, !tbaa !16
  %Ss1.i267 = getelementptr inbounds i8, i8* %call, i64 200
  %25 = bitcast i8* %Ss1.i267 to i32*
  store i32 1, i32* %25, align 4, !tbaa !60
  %Se2.i268 = getelementptr inbounds i8, i8* %call, i64 204
  %26 = bitcast i8* %Se2.i268 to i32*
  store i32 63, i32* %26, align 4, !tbaa !61
  %Ah3.i269 = getelementptr inbounds i8, i8* %call, i64 208
  %27 = bitcast i8* %Ah3.i269 to i32*
  store i32 2, i32* %27, align 4, !tbaa !62
  %Al4.i270 = getelementptr inbounds i8, i8* %call, i64 212
  %28 = bitcast i8* %Al4.i270 to i32*
  store i32 1, i32* %28, align 4, !tbaa !63
  %incdec.ptr.i271 = getelementptr inbounds i8, i8* %call, i64 216
  %comps_in_scan.i233 = bitcast i8* %incdec.ptr.i271 to i32*
  store i32 3, i32* %comps_in_scan.i233, align 4, !tbaa !58
  br label %for.body.i241

for.body.i241:                                    ; preds = %for.body.i
  %arrayidx.i237 = getelementptr inbounds i8, i8* %call, i64 220
  %29 = bitcast i8* %arrayidx.i237 to i32*
  store i32 0, i32* %29, align 4, !tbaa !16
  %arrayidx.i237.1 = getelementptr inbounds i8, i8* %call, i64 224
  %30 = bitcast i8* %arrayidx.i237.1 to i32*
  store i32 1, i32* %30, align 4, !tbaa !16
  %arrayidx.i237.2 = getelementptr inbounds i8, i8* %call, i64 228
  %31 = bitcast i8* %arrayidx.i237.2 to i32*
  store i32 2, i32* %31, align 4, !tbaa !16
  %Ss.i243 = getelementptr inbounds i8, i8* %call, i64 236
  %32 = bitcast i8* %Ss.i243 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %32, align 4, !tbaa !16
  %incdec.ptr.i246 = getelementptr inbounds i8, i8* %call, i64 252
  %comps_in_scan.i225 = bitcast i8* %incdec.ptr.i246 to i32*
  store i32 1, i32* %comps_in_scan.i225, align 4, !tbaa !58
  %arrayidx.i226 = getelementptr inbounds i8, i8* %call, i64 256
  %33 = bitcast i8* %arrayidx.i226 to i32*
  store i32 2, i32* %33, align 4, !tbaa !16
  %Ss1.i227 = getelementptr inbounds i8, i8* %call, i64 272
  %34 = bitcast i8* %Ss1.i227 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %34, align 4, !tbaa !16
  %incdec.ptr.i231 = getelementptr inbounds i8, i8* %call, i64 288
  %comps_in_scan.i218 = bitcast i8* %incdec.ptr.i231 to i32*
  store i32 1, i32* %comps_in_scan.i218, align 4, !tbaa !58
  %arrayidx.i219 = getelementptr inbounds i8, i8* %call, i64 292
  %35 = bitcast i8* %arrayidx.i219 to i32*
  store i32 1, i32* %35, align 4, !tbaa !16
  %Ss1.i220 = getelementptr inbounds i8, i8* %call, i64 308
  %36 = bitcast i8* %Ss1.i220 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %36, align 4, !tbaa !16
  %incdec.ptr.i224 = getelementptr inbounds i8, i8* %call, i64 324
  %comps_in_scan.i211 = bitcast i8* %incdec.ptr.i224 to i32*
  store i32 1, i32* %comps_in_scan.i211, align 4, !tbaa !58
  %arrayidx.i212 = getelementptr inbounds i8, i8* %call, i64 328
  %37 = bitcast i8* %arrayidx.i212 to i32*
  store i32 0, i32* %37, align 4, !tbaa !16
  %Ss1.i213 = getelementptr inbounds i8, i8* %call, i64 344
  %38 = bitcast i8* %Ss1.i213 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %38, align 4, !tbaa !16
  br label %if.end38

if.else31:                                        ; preds = %if.end12
  %cmp.i178 = icmp slt i32 %0, 5
  br i1 %cmp.i178, label %if.then.i181, label %for.body.preheader.i.i194, !prof !64

if.then.i181:                                     ; preds = %if.else31
  %comps_in_scan.i179 = bitcast i8* %call to i32*
  store i32 %0, i32* %comps_in_scan.i179, align 4, !tbaa !58
  %cmp121.i180 = icmp sgt i32 %0, 0
  br i1 %cmp121.i180, label %for.body.i187.preheader, label %for.end.i193, !prof !65

for.body.i187.preheader:                          ; preds = %if.then.i181, %land.lhs.true16
  %39 = add i32 %0, -1
  %40 = zext i32 %39 to i64
  %41 = add nuw nsw i64 %40, 1
  %min.iters.check = icmp ult i64 %41, 8
  br i1 %min.iters.check, label %for.body.i187.preheader345, label %min.iters.checked

min.iters.checked:                                ; preds = %for.body.i187.preheader
  %n.vec = and i64 %41, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  br i1 %cmp.zero, label %for.body.i187.preheader345, label %vector.body.preheader

vector.body.preheader:                            ; preds = %min.iters.checked
  %42 = add i32 %0, -1
  %43 = zext i32 %42 to i64
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 8589934584
  %46 = add nsw i64 %45, -8
  %47 = lshr exact i64 %46, 3
  %48 = and i64 %47, 1
  %lcmp.mod361 = icmp eq i64 %48, 0
  br i1 %lcmp.mod361, label %vector.body.prol, label %vector.body.preheader.split

vector.body.prol:                                 ; preds = %vector.body.preheader
  %49 = getelementptr inbounds i8, i8* %call, i64 4
  %50 = bitcast i8* %49 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, <4 x i32>* %50, align 4, !tbaa !16
  %51 = getelementptr i8, i8* %call, i64 20
  %52 = bitcast i8* %51 to <4 x i32>*
  store <4 x i32> <i32 4, i32 5, i32 6, i32 7>, <4 x i32>* %52, align 4, !tbaa !16
  br label %vector.body.preheader.split

vector.body.preheader.split:                      ; preds = %vector.body.prol, %vector.body.preheader
  %index.unr = phi i64 [ 0, %vector.body.preheader ], [ 8, %vector.body.prol ]
  %53 = icmp eq i64 %47, 0
  br i1 %53, label %middle.block, label %vector.body.preheader.split.split

vector.body.preheader.split.split:                ; preds = %vector.body.preheader.split
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.body.preheader.split.split
  %index = phi i64 [ %index.unr, %vector.body.preheader.split.split ], [ %index.next.1, %vector.body ]
  %54 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %9, i64 0, i32 1, i64 %index
  %55 = trunc i64 %index to i32
  %broadcast.splatinsert315 = insertelement <4 x i32> undef, i32 %55, i32 0
  %broadcast.splat316 = shufflevector <4 x i32> %broadcast.splatinsert315, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction317 = add <4 x i32> %broadcast.splat316, <i32 0, i32 1, i32 2, i32 3>
  %induction318 = add <4 x i32> %broadcast.splat316, <i32 4, i32 5, i32 6, i32 7>
  %56 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> %induction317, <4 x i32>* %56, align 4, !tbaa !16
  %57 = getelementptr i32, i32* %54, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> %induction318, <4 x i32>* %58, align 4, !tbaa !16
  %index.next = add i64 %index, 8
  %59 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %9, i64 0, i32 1, i64 %index.next
  %60 = trunc i64 %index.next to i32
  %broadcast.splatinsert315.1 = insertelement <4 x i32> undef, i32 %60, i32 0
  %broadcast.splat316.1 = shufflevector <4 x i32> %broadcast.splatinsert315.1, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction317.1 = add <4 x i32> %broadcast.splat316.1, <i32 0, i32 1, i32 2, i32 3>
  %induction318.1 = add <4 x i32> %broadcast.splat316.1, <i32 4, i32 5, i32 6, i32 7>
  %61 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> %induction317.1, <4 x i32>* %61, align 4, !tbaa !16
  %62 = getelementptr i32, i32* %59, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> %induction318.1, <4 x i32>* %63, align 4, !tbaa !16
  %index.next.1 = add i64 %index, 16
  %64 = icmp eq i64 %index.next.1, %n.vec
  br i1 %64, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !66

middle.block.unr-lcssa:                           ; preds = %vector.body
  br label %middle.block

middle.block:                                     ; preds = %vector.body.preheader.split, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %41, %n.vec
  br i1 %cmp.n, label %for.end.i193, label %for.body.i187.preheader345

for.body.i187.preheader345:                       ; preds = %middle.block, %min.iters.checked, %for.body.i187.preheader
  %indvars.iv.i182.ph = phi i64 [ 0, %min.iters.checked ], [ 0, %for.body.i187.preheader ], [ %n.vec, %middle.block ]
  br label %for.body.i187

for.body.i187:                                    ; preds = %for.body.i187.preheader345, %for.body.i187
  %indvars.iv.i182 = phi i64 [ %indvars.iv.next.i184, %for.body.i187 ], [ %indvars.iv.i182.ph, %for.body.i187.preheader345 ]
  %arrayidx.i183 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %9, i64 0, i32 1, i64 %indvars.iv.i182
  %65 = trunc i64 %indvars.iv.i182 to i32
  store i32 %65, i32* %arrayidx.i183, align 4, !tbaa !16
  %indvars.iv.next.i184 = add nuw nsw i64 %indvars.iv.i182, 1
  %lftr.wideiv312 = trunc i64 %indvars.iv.next.i184 to i32
  %exitcond313 = icmp eq i32 %lftr.wideiv312, %0
  br i1 %exitcond313, label %for.end.i193.loopexit, label %for.body.i187, !prof !69, !llvm.loop !70

for.end.i193.loopexit:                            ; preds = %for.body.i187
  br label %for.end.i193

for.end.i193:                                     ; preds = %for.end.i193.loopexit, %middle.block, %if.then.i181
  %Ss.i189 = getelementptr inbounds i8, i8* %call, i64 20
  %66 = bitcast i8* %Ss.i189 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %66, align 4, !tbaa !16
  %incdec.ptr.i192 = getelementptr inbounds i8, i8* %call, i64 36
  %67 = bitcast i8* %incdec.ptr.i192 to %struct.jpeg_scan_info*
  br label %fill_dc_scans.exit210

for.body.preheader.i.i194:                        ; preds = %if.else31
  %68 = add i32 %0, -1
  %xtraiter362 = and i32 %0, 3
  %lcmp.mod363 = icmp eq i32 %xtraiter362, 0
  br i1 %lcmp.mod363, label %for.body.preheader.i.i194.split, label %for.body.i.i206.prol.preheader

for.body.i.i206.prol.preheader:                   ; preds = %for.body.preheader.i.i194
  br label %for.body.i.i206.prol

for.body.i.i206.prol:                             ; preds = %for.body.i.i206.prol.preheader, %for.body.i.i206.prol
  %ci.016.i.i195.prol = phi i32 [ %inc.i.i204.prol, %for.body.i.i206.prol ], [ 0, %for.body.i.i206.prol.preheader ]
  %scanptr.addr.015.i.i196.prol = phi %struct.jpeg_scan_info* [ %incdec.ptr.i.i203.prol, %for.body.i.i206.prol ], [ %9, %for.body.i.i206.prol.preheader ]
  %prol.iter364 = phi i32 [ %prol.iter364.sub, %for.body.i.i206.prol ], [ %xtraiter362, %for.body.i.i206.prol.preheader ]
  %comps_in_scan.i.i197.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196.prol, i64 0, i32 0
  store i32 1, i32* %comps_in_scan.i.i197.prol, align 4, !tbaa !58
  %arrayidx.i.i198.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196.prol, i64 0, i32 1, i64 0
  store i32 %ci.016.i.i195.prol, i32* %arrayidx.i.i198.prol, align 4, !tbaa !16
  %Ss1.i.i199.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196.prol, i64 0, i32 2
  %69 = bitcast i32* %Ss1.i.i199.prol to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %69, align 4, !tbaa !16
  %incdec.ptr.i.i203.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196.prol, i64 1
  %inc.i.i204.prol = add nuw nsw i32 %ci.016.i.i195.prol, 1
  %prol.iter364.sub = add i32 %prol.iter364, -1
  %prol.iter364.cmp = icmp eq i32 %prol.iter364.sub, 0
  br i1 %prol.iter364.cmp, label %for.body.preheader.i.i194.split.loopexit, label %for.body.i.i206.prol, !llvm.loop !72

for.body.preheader.i.i194.split.loopexit:         ; preds = %for.body.i.i206.prol
  %inc.i.i204.prol.lcssa = phi i32 [ %inc.i.i204.prol, %for.body.i.i206.prol ]
  %incdec.ptr.i.i203.prol.lcssa = phi %struct.jpeg_scan_info* [ %incdec.ptr.i.i203.prol, %for.body.i.i206.prol ]
  br label %for.body.preheader.i.i194.split

for.body.preheader.i.i194.split:                  ; preds = %for.body.preheader.i.i194.split.loopexit, %for.body.preheader.i.i194
  %ci.016.i.i195.unr = phi i32 [ 0, %for.body.preheader.i.i194 ], [ %inc.i.i204.prol.lcssa, %for.body.preheader.i.i194.split.loopexit ]
  %scanptr.addr.015.i.i196.unr = phi %struct.jpeg_scan_info* [ %9, %for.body.preheader.i.i194 ], [ %incdec.ptr.i.i203.prol.lcssa, %for.body.preheader.i.i194.split.loopexit ]
  %70 = icmp ult i32 %68, 3
  br i1 %70, label %fill_scans.exit.i208, label %for.body.preheader.i.i194.split.split

for.body.preheader.i.i194.split.split:            ; preds = %for.body.preheader.i.i194.split
  br label %for.body.i.i206

for.body.i.i206:                                  ; preds = %for.body.i.i206, %for.body.preheader.i.i194.split.split
  %ci.016.i.i195 = phi i32 [ %ci.016.i.i195.unr, %for.body.preheader.i.i194.split.split ], [ %inc.i.i204.3, %for.body.i.i206 ]
  %scanptr.addr.015.i.i196 = phi %struct.jpeg_scan_info* [ %scanptr.addr.015.i.i196.unr, %for.body.preheader.i.i194.split.split ], [ %incdec.ptr.i.i203.3, %for.body.i.i206 ]
  %comps_in_scan.i.i197 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196, i64 0, i32 0
  store i32 1, i32* %comps_in_scan.i.i197, align 4, !tbaa !58
  %arrayidx.i.i198 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196, i64 0, i32 1, i64 0
  store i32 %ci.016.i.i195, i32* %arrayidx.i.i198, align 4, !tbaa !16
  %Ss1.i.i199 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196, i64 0, i32 2
  %71 = bitcast i32* %Ss1.i.i199 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %71, align 4, !tbaa !16
  %inc.i.i204 = add nuw nsw i32 %ci.016.i.i195, 1
  %comps_in_scan.i.i197.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196, i64 1, i32 0
  store i32 1, i32* %comps_in_scan.i.i197.1, align 4, !tbaa !58
  %arrayidx.i.i198.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196, i64 1, i32 1, i64 0
  store i32 %inc.i.i204, i32* %arrayidx.i.i198.1, align 4, !tbaa !16
  %Ss1.i.i199.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196, i64 1, i32 2
  %72 = bitcast i32* %Ss1.i.i199.1 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %72, align 4, !tbaa !16
  %inc.i.i204.1 = add nsw i32 %ci.016.i.i195, 2
  %comps_in_scan.i.i197.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196, i64 2, i32 0
  store i32 1, i32* %comps_in_scan.i.i197.2, align 4, !tbaa !58
  %arrayidx.i.i198.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196, i64 2, i32 1, i64 0
  store i32 %inc.i.i204.1, i32* %arrayidx.i.i198.2, align 4, !tbaa !16
  %Ss1.i.i199.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196, i64 2, i32 2
  %73 = bitcast i32* %Ss1.i.i199.2 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %73, align 4, !tbaa !16
  %inc.i.i204.2 = add nsw i32 %ci.016.i.i195, 3
  %comps_in_scan.i.i197.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196, i64 3, i32 0
  store i32 1, i32* %comps_in_scan.i.i197.3, align 4, !tbaa !58
  %arrayidx.i.i198.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196, i64 3, i32 1, i64 0
  store i32 %inc.i.i204.2, i32* %arrayidx.i.i198.3, align 4, !tbaa !16
  %Ss1.i.i199.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196, i64 3, i32 2
  %74 = bitcast i32* %Ss1.i.i199.3 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %74, align 4, !tbaa !16
  %incdec.ptr.i.i203.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i196, i64 4
  %inc.i.i204.3 = add nsw i32 %ci.016.i.i195, 4
  %exitcond.i.i205.3 = icmp eq i32 %inc.i.i204.3, %0
  br i1 %exitcond.i.i205.3, label %fill_scans.exit.i208.unr-lcssa, label %for.body.i.i206

fill_scans.exit.i208.unr-lcssa:                   ; preds = %for.body.i.i206
  br label %fill_scans.exit.i208

fill_scans.exit.i208:                             ; preds = %for.body.preheader.i.i194.split, %fill_scans.exit.i208.unr-lcssa
  %75 = zext i32 %68 to i64
  %76 = add nuw nsw i64 %75, 1
  %scevgep.i.i207 = getelementptr %struct.jpeg_scan_info, %struct.jpeg_scan_info* %9, i64 %76
  br label %fill_dc_scans.exit210

fill_dc_scans.exit210:                            ; preds = %for.end.i193, %fill_scans.exit.i208
  %cmp.i178302 = phi i1 [ true, %for.end.i193 ], [ false, %fill_scans.exit.i208 ]
  %scanptr.addr.0.i209 = phi %struct.jpeg_scan_info* [ %67, %for.end.i193 ], [ %scevgep.i.i207, %fill_scans.exit.i208 ]
  %cmp14.i159 = icmp sgt i32 %0, 0
  br i1 %cmp14.i159, label %for.body.preheader.i160, label %fill_scans.exit139

for.body.preheader.i160:                          ; preds = %fill_dc_scans.exit210
  %77 = add i32 %0, -1
  %78 = zext i32 %77 to i64
  %xtraiter357 = and i32 %0, 3
  %lcmp.mod358 = icmp eq i32 %xtraiter357, 0
  br i1 %lcmp.mod358, label %for.body.preheader.i160.split, label %for.body.i172.prol.preheader

for.body.i172.prol.preheader:                     ; preds = %for.body.preheader.i160
  br label %for.body.i172.prol

for.body.i172.prol:                               ; preds = %for.body.i172.prol.preheader, %for.body.i172.prol
  %ci.016.i161.prol = phi i32 [ %inc.i170.prol, %for.body.i172.prol ], [ 0, %for.body.i172.prol.preheader ]
  %scanptr.addr.015.i162.prol = phi %struct.jpeg_scan_info* [ %incdec.ptr.i169.prol, %for.body.i172.prol ], [ %scanptr.addr.0.i209, %for.body.i172.prol.preheader ]
  %prol.iter359 = phi i32 [ %prol.iter359.sub, %for.body.i172.prol ], [ %xtraiter357, %for.body.i172.prol.preheader ]
  %comps_in_scan.i163.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162.prol, i64 0, i32 0
  store i32 1, i32* %comps_in_scan.i163.prol, align 4, !tbaa !58
  %arrayidx.i164.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162.prol, i64 0, i32 1, i64 0
  store i32 %ci.016.i161.prol, i32* %arrayidx.i164.prol, align 4, !tbaa !16
  %Ss1.i165.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162.prol, i64 0, i32 2
  %79 = bitcast i32* %Ss1.i165.prol to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %79, align 4, !tbaa !16
  %incdec.ptr.i169.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162.prol, i64 1
  %inc.i170.prol = add nuw nsw i32 %ci.016.i161.prol, 1
  %prol.iter359.sub = add i32 %prol.iter359, -1
  %prol.iter359.cmp = icmp eq i32 %prol.iter359.sub, 0
  br i1 %prol.iter359.cmp, label %for.body.preheader.i160.split.loopexit, label %for.body.i172.prol, !llvm.loop !74

for.body.preheader.i160.split.loopexit:           ; preds = %for.body.i172.prol
  %inc.i170.prol.lcssa = phi i32 [ %inc.i170.prol, %for.body.i172.prol ]
  %incdec.ptr.i169.prol.lcssa = phi %struct.jpeg_scan_info* [ %incdec.ptr.i169.prol, %for.body.i172.prol ]
  br label %for.body.preheader.i160.split

for.body.preheader.i160.split:                    ; preds = %for.body.preheader.i160.split.loopexit, %for.body.preheader.i160
  %ci.016.i161.unr = phi i32 [ 0, %for.body.preheader.i160 ], [ %inc.i170.prol.lcssa, %for.body.preheader.i160.split.loopexit ]
  %scanptr.addr.015.i162.unr = phi %struct.jpeg_scan_info* [ %scanptr.addr.0.i209, %for.body.preheader.i160 ], [ %incdec.ptr.i169.prol.lcssa, %for.body.preheader.i160.split.loopexit ]
  %80 = icmp ult i32 %77, 3
  br i1 %80, label %for.body.preheader.i141, label %for.body.preheader.i160.split.split

for.body.preheader.i160.split.split:              ; preds = %for.body.preheader.i160.split
  br label %for.body.i172

for.body.i172:                                    ; preds = %for.body.i172, %for.body.preheader.i160.split.split
  %ci.016.i161 = phi i32 [ %ci.016.i161.unr, %for.body.preheader.i160.split.split ], [ %inc.i170.3, %for.body.i172 ]
  %scanptr.addr.015.i162 = phi %struct.jpeg_scan_info* [ %scanptr.addr.015.i162.unr, %for.body.preheader.i160.split.split ], [ %incdec.ptr.i169.3, %for.body.i172 ]
  %comps_in_scan.i163 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162, i64 0, i32 0
  store i32 1, i32* %comps_in_scan.i163, align 4, !tbaa !58
  %arrayidx.i164 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162, i64 0, i32 1, i64 0
  store i32 %ci.016.i161, i32* %arrayidx.i164, align 4, !tbaa !16
  %Ss1.i165 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162, i64 0, i32 2
  %81 = bitcast i32* %Ss1.i165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %81, align 4, !tbaa !16
  %inc.i170 = add nuw nsw i32 %ci.016.i161, 1
  %comps_in_scan.i163.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162, i64 1, i32 0
  store i32 1, i32* %comps_in_scan.i163.1, align 4, !tbaa !58
  %arrayidx.i164.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162, i64 1, i32 1, i64 0
  store i32 %inc.i170, i32* %arrayidx.i164.1, align 4, !tbaa !16
  %Ss1.i165.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162, i64 1, i32 2
  %82 = bitcast i32* %Ss1.i165.1 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %82, align 4, !tbaa !16
  %inc.i170.1 = add nsw i32 %ci.016.i161, 2
  %comps_in_scan.i163.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162, i64 2, i32 0
  store i32 1, i32* %comps_in_scan.i163.2, align 4, !tbaa !58
  %arrayidx.i164.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162, i64 2, i32 1, i64 0
  store i32 %inc.i170.1, i32* %arrayidx.i164.2, align 4, !tbaa !16
  %Ss1.i165.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162, i64 2, i32 2
  %83 = bitcast i32* %Ss1.i165.2 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %83, align 4, !tbaa !16
  %inc.i170.2 = add nsw i32 %ci.016.i161, 3
  %comps_in_scan.i163.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162, i64 3, i32 0
  store i32 1, i32* %comps_in_scan.i163.3, align 4, !tbaa !58
  %arrayidx.i164.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162, i64 3, i32 1, i64 0
  store i32 %inc.i170.2, i32* %arrayidx.i164.3, align 4, !tbaa !16
  %Ss1.i165.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162, i64 3, i32 2
  %84 = bitcast i32* %Ss1.i165.3 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %84, align 4, !tbaa !16
  %incdec.ptr.i169.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i162, i64 4
  %inc.i170.3 = add nsw i32 %ci.016.i161, 4
  %exitcond.i171.3 = icmp eq i32 %inc.i170.3, %0
  br i1 %exitcond.i171.3, label %for.body.preheader.i141.unr-lcssa, label %for.body.i172

for.body.preheader.i141.unr-lcssa:                ; preds = %for.body.i172
  br label %for.body.preheader.i141

for.body.preheader.i141:                          ; preds = %for.body.preheader.i160.split, %for.body.preheader.i141.unr-lcssa
  %85 = add nuw nsw i64 %78, 1
  %scevgep.i173 = getelementptr %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.0.i209, i64 %85
  %86 = add i32 %0, -1
  %xtraiter354 = and i32 %0, 3
  %lcmp.mod355 = icmp eq i32 %xtraiter354, 0
  br i1 %lcmp.mod355, label %for.body.preheader.i141.split, label %for.body.i153.prol.preheader

for.body.i153.prol.preheader:                     ; preds = %for.body.preheader.i141
  br label %for.body.i153.prol

for.body.i153.prol:                               ; preds = %for.body.i153.prol.preheader, %for.body.i153.prol
  %ci.016.i142.prol = phi i32 [ %inc.i151.prol, %for.body.i153.prol ], [ 0, %for.body.i153.prol.preheader ]
  %scanptr.addr.015.i143.prol = phi %struct.jpeg_scan_info* [ %incdec.ptr.i150.prol, %for.body.i153.prol ], [ %scevgep.i173, %for.body.i153.prol.preheader ]
  %prol.iter356 = phi i32 [ %prol.iter356.sub, %for.body.i153.prol ], [ %xtraiter354, %for.body.i153.prol.preheader ]
  %comps_in_scan.i144.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143.prol, i64 0, i32 0
  store i32 1, i32* %comps_in_scan.i144.prol, align 4, !tbaa !58
  %arrayidx.i145.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143.prol, i64 0, i32 1, i64 0
  store i32 %ci.016.i142.prol, i32* %arrayidx.i145.prol, align 4, !tbaa !16
  %Ss1.i146.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143.prol, i64 0, i32 2
  %87 = bitcast i32* %Ss1.i146.prol to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %87, align 4, !tbaa !16
  %incdec.ptr.i150.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143.prol, i64 1
  %inc.i151.prol = add nuw nsw i32 %ci.016.i142.prol, 1
  %prol.iter356.sub = add i32 %prol.iter356, -1
  %prol.iter356.cmp = icmp eq i32 %prol.iter356.sub, 0
  br i1 %prol.iter356.cmp, label %for.body.preheader.i141.split.loopexit, label %for.body.i153.prol, !llvm.loop !75

for.body.preheader.i141.split.loopexit:           ; preds = %for.body.i153.prol
  %inc.i151.prol.lcssa = phi i32 [ %inc.i151.prol, %for.body.i153.prol ]
  %incdec.ptr.i150.prol.lcssa = phi %struct.jpeg_scan_info* [ %incdec.ptr.i150.prol, %for.body.i153.prol ]
  br label %for.body.preheader.i141.split

for.body.preheader.i141.split:                    ; preds = %for.body.preheader.i141.split.loopexit, %for.body.preheader.i141
  %ci.016.i142.unr = phi i32 [ 0, %for.body.preheader.i141 ], [ %inc.i151.prol.lcssa, %for.body.preheader.i141.split.loopexit ]
  %scanptr.addr.015.i143.unr = phi %struct.jpeg_scan_info* [ %scevgep.i173, %for.body.preheader.i141 ], [ %incdec.ptr.i150.prol.lcssa, %for.body.preheader.i141.split.loopexit ]
  %88 = icmp ult i32 %86, 3
  br i1 %88, label %for.body.preheader.i122, label %for.body.preheader.i141.split.split

for.body.preheader.i141.split.split:              ; preds = %for.body.preheader.i141.split
  br label %for.body.i153

for.body.i153:                                    ; preds = %for.body.i153, %for.body.preheader.i141.split.split
  %ci.016.i142 = phi i32 [ %ci.016.i142.unr, %for.body.preheader.i141.split.split ], [ %inc.i151.3, %for.body.i153 ]
  %scanptr.addr.015.i143 = phi %struct.jpeg_scan_info* [ %scanptr.addr.015.i143.unr, %for.body.preheader.i141.split.split ], [ %incdec.ptr.i150.3, %for.body.i153 ]
  %comps_in_scan.i144 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143, i64 0, i32 0
  store i32 1, i32* %comps_in_scan.i144, align 4, !tbaa !58
  %arrayidx.i145 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143, i64 0, i32 1, i64 0
  store i32 %ci.016.i142, i32* %arrayidx.i145, align 4, !tbaa !16
  %Ss1.i146 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143, i64 0, i32 2
  %89 = bitcast i32* %Ss1.i146 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %89, align 4, !tbaa !16
  %inc.i151 = add nuw nsw i32 %ci.016.i142, 1
  %comps_in_scan.i144.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143, i64 1, i32 0
  store i32 1, i32* %comps_in_scan.i144.1, align 4, !tbaa !58
  %arrayidx.i145.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143, i64 1, i32 1, i64 0
  store i32 %inc.i151, i32* %arrayidx.i145.1, align 4, !tbaa !16
  %Ss1.i146.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143, i64 1, i32 2
  %90 = bitcast i32* %Ss1.i146.1 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %90, align 4, !tbaa !16
  %inc.i151.1 = add nsw i32 %ci.016.i142, 2
  %comps_in_scan.i144.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143, i64 2, i32 0
  store i32 1, i32* %comps_in_scan.i144.2, align 4, !tbaa !58
  %arrayidx.i145.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143, i64 2, i32 1, i64 0
  store i32 %inc.i151.1, i32* %arrayidx.i145.2, align 4, !tbaa !16
  %Ss1.i146.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143, i64 2, i32 2
  %91 = bitcast i32* %Ss1.i146.2 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %91, align 4, !tbaa !16
  %inc.i151.2 = add nsw i32 %ci.016.i142, 3
  %comps_in_scan.i144.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143, i64 3, i32 0
  store i32 1, i32* %comps_in_scan.i144.3, align 4, !tbaa !58
  %arrayidx.i145.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143, i64 3, i32 1, i64 0
  store i32 %inc.i151.2, i32* %arrayidx.i145.3, align 4, !tbaa !16
  %Ss1.i146.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143, i64 3, i32 2
  %92 = bitcast i32* %Ss1.i146.3 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %92, align 4, !tbaa !16
  %incdec.ptr.i150.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i143, i64 4
  %inc.i151.3 = add nsw i32 %ci.016.i142, 4
  %exitcond.i152.3 = icmp eq i32 %inc.i151.3, %0
  br i1 %exitcond.i152.3, label %for.body.preheader.i122.unr-lcssa, label %for.body.i153

for.body.preheader.i122.unr-lcssa:                ; preds = %for.body.i153
  br label %for.body.preheader.i122

for.body.preheader.i122:                          ; preds = %for.body.preheader.i141.split, %for.body.preheader.i122.unr-lcssa
  %scevgep.i154 = getelementptr %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scevgep.i173, i64 %85
  %93 = add i32 %0, -1
  %xtraiter351 = and i32 %0, 3
  %lcmp.mod352 = icmp eq i32 %xtraiter351, 0
  br i1 %lcmp.mod352, label %for.body.preheader.i122.split, label %for.body.i134.prol.preheader

for.body.i134.prol.preheader:                     ; preds = %for.body.preheader.i122
  br label %for.body.i134.prol

for.body.i134.prol:                               ; preds = %for.body.i134.prol.preheader, %for.body.i134.prol
  %ci.016.i123.prol = phi i32 [ %inc.i132.prol, %for.body.i134.prol ], [ 0, %for.body.i134.prol.preheader ]
  %scanptr.addr.015.i124.prol = phi %struct.jpeg_scan_info* [ %incdec.ptr.i131.prol, %for.body.i134.prol ], [ %scevgep.i154, %for.body.i134.prol.preheader ]
  %prol.iter353 = phi i32 [ %prol.iter353.sub, %for.body.i134.prol ], [ %xtraiter351, %for.body.i134.prol.preheader ]
  %comps_in_scan.i125.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124.prol, i64 0, i32 0
  store i32 1, i32* %comps_in_scan.i125.prol, align 4, !tbaa !58
  %arrayidx.i126.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124.prol, i64 0, i32 1, i64 0
  store i32 %ci.016.i123.prol, i32* %arrayidx.i126.prol, align 4, !tbaa !16
  %Ss1.i127.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124.prol, i64 0, i32 2
  %94 = bitcast i32* %Ss1.i127.prol to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %94, align 4, !tbaa !16
  %incdec.ptr.i131.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124.prol, i64 1
  %inc.i132.prol = add nuw nsw i32 %ci.016.i123.prol, 1
  %prol.iter353.sub = add i32 %prol.iter353, -1
  %prol.iter353.cmp = icmp eq i32 %prol.iter353.sub, 0
  br i1 %prol.iter353.cmp, label %for.body.preheader.i122.split.loopexit, label %for.body.i134.prol, !llvm.loop !76

for.body.preheader.i122.split.loopexit:           ; preds = %for.body.i134.prol
  %inc.i132.prol.lcssa = phi i32 [ %inc.i132.prol, %for.body.i134.prol ]
  %incdec.ptr.i131.prol.lcssa = phi %struct.jpeg_scan_info* [ %incdec.ptr.i131.prol, %for.body.i134.prol ]
  br label %for.body.preheader.i122.split

for.body.preheader.i122.split:                    ; preds = %for.body.preheader.i122.split.loopexit, %for.body.preheader.i122
  %ci.016.i123.unr = phi i32 [ 0, %for.body.preheader.i122 ], [ %inc.i132.prol.lcssa, %for.body.preheader.i122.split.loopexit ]
  %scanptr.addr.015.i124.unr = phi %struct.jpeg_scan_info* [ %scevgep.i154, %for.body.preheader.i122 ], [ %incdec.ptr.i131.prol.lcssa, %for.body.preheader.i122.split.loopexit ]
  %95 = icmp ult i32 %93, 3
  br i1 %95, label %for.end.loopexit.i136, label %for.body.preheader.i122.split.split

for.body.preheader.i122.split.split:              ; preds = %for.body.preheader.i122.split
  br label %for.body.i134

for.body.i134:                                    ; preds = %for.body.i134, %for.body.preheader.i122.split.split
  %ci.016.i123 = phi i32 [ %ci.016.i123.unr, %for.body.preheader.i122.split.split ], [ %inc.i132.3, %for.body.i134 ]
  %scanptr.addr.015.i124 = phi %struct.jpeg_scan_info* [ %scanptr.addr.015.i124.unr, %for.body.preheader.i122.split.split ], [ %incdec.ptr.i131.3, %for.body.i134 ]
  %comps_in_scan.i125 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124, i64 0, i32 0
  store i32 1, i32* %comps_in_scan.i125, align 4, !tbaa !58
  %arrayidx.i126 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124, i64 0, i32 1, i64 0
  store i32 %ci.016.i123, i32* %arrayidx.i126, align 4, !tbaa !16
  %Ss1.i127 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124, i64 0, i32 2
  %96 = bitcast i32* %Ss1.i127 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %96, align 4, !tbaa !16
  %inc.i132 = add nuw nsw i32 %ci.016.i123, 1
  %comps_in_scan.i125.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124, i64 1, i32 0
  store i32 1, i32* %comps_in_scan.i125.1, align 4, !tbaa !58
  %arrayidx.i126.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124, i64 1, i32 1, i64 0
  store i32 %inc.i132, i32* %arrayidx.i126.1, align 4, !tbaa !16
  %Ss1.i127.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124, i64 1, i32 2
  %97 = bitcast i32* %Ss1.i127.1 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %97, align 4, !tbaa !16
  %inc.i132.1 = add nsw i32 %ci.016.i123, 2
  %comps_in_scan.i125.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124, i64 2, i32 0
  store i32 1, i32* %comps_in_scan.i125.2, align 4, !tbaa !58
  %arrayidx.i126.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124, i64 2, i32 1, i64 0
  store i32 %inc.i132.1, i32* %arrayidx.i126.2, align 4, !tbaa !16
  %Ss1.i127.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124, i64 2, i32 2
  %98 = bitcast i32* %Ss1.i127.2 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %98, align 4, !tbaa !16
  %inc.i132.2 = add nsw i32 %ci.016.i123, 3
  %comps_in_scan.i125.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124, i64 3, i32 0
  store i32 1, i32* %comps_in_scan.i125.3, align 4, !tbaa !58
  %arrayidx.i126.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124, i64 3, i32 1, i64 0
  store i32 %inc.i132.2, i32* %arrayidx.i126.3, align 4, !tbaa !16
  %Ss1.i127.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124, i64 3, i32 2
  %99 = bitcast i32* %Ss1.i127.3 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %99, align 4, !tbaa !16
  %incdec.ptr.i131.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i124, i64 4
  %inc.i132.3 = add nsw i32 %ci.016.i123, 4
  %exitcond.i133.3 = icmp eq i32 %inc.i132.3, %0
  br i1 %exitcond.i133.3, label %for.end.loopexit.i136.unr-lcssa, label %for.body.i134

for.end.loopexit.i136.unr-lcssa:                  ; preds = %for.body.i134
  br label %for.end.loopexit.i136

for.end.loopexit.i136:                            ; preds = %for.body.preheader.i122.split, %for.end.loopexit.i136.unr-lcssa
  %scevgep.i135 = getelementptr %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scevgep.i154, i64 %85
  br label %fill_scans.exit139

fill_scans.exit139:                               ; preds = %fill_dc_scans.exit210, %for.end.loopexit.i136
  %scanptr.addr.0.lcssa.i137 = phi %struct.jpeg_scan_info* [ %scevgep.i135, %for.end.loopexit.i136 ], [ %scanptr.addr.0.i209, %fill_dc_scans.exit210 ]
  br i1 %cmp.i178302, label %if.then.i91, label %for.body.preheader.i.i104, !prof !42

if.then.i91:                                      ; preds = %fill_scans.exit139
  %comps_in_scan.i89 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.0.lcssa.i137, i64 0, i32 0
  store i32 %0, i32* %comps_in_scan.i89, align 4, !tbaa !58
  br i1 %cmp14.i159, label %for.body.i97.preheader, label %for.end.i103, !prof !77

for.body.i97.preheader:                           ; preds = %if.then.i91
  %100 = add i32 %0, -1
  %101 = zext i32 %100 to i64
  %102 = add nuw nsw i64 %101, 1
  %min.iters.check324 = icmp ult i64 %102, 8
  br i1 %min.iters.check324, label %for.body.i97.preheader344, label %min.iters.checked325

min.iters.checked325:                             ; preds = %for.body.i97.preheader
  %n.vec327 = and i64 %102, 8589934584
  %cmp.zero328 = icmp eq i64 %n.vec327, 0
  br i1 %cmp.zero328, label %for.body.i97.preheader344, label %vector.body321.preheader

vector.body321.preheader:                         ; preds = %min.iters.checked325
  %103 = add i32 %0, -1
  %104 = zext i32 %103 to i64
  %105 = add nuw nsw i64 %104, 1
  %106 = and i64 %105, 8589934584
  %107 = add nsw i64 %106, -8
  %108 = lshr exact i64 %107, 3
  %109 = and i64 %108, 1
  %lcmp.mod347 = icmp eq i64 %109, 0
  br i1 %lcmp.mod347, label %vector.body321.prol, label %vector.body321.preheader.split

vector.body321.prol:                              ; preds = %vector.body321.preheader
  %110 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.0.lcssa.i137, i64 0, i32 1, i64 0
  %111 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, <4 x i32>* %111, align 4, !tbaa !16
  %112 = getelementptr %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.0.lcssa.i137, i64 0, i32 1, i64 4
  %113 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> <i32 4, i32 5, i32 6, i32 7>, <4 x i32>* %113, align 4, !tbaa !16
  br label %vector.body321.preheader.split

vector.body321.preheader.split:                   ; preds = %vector.body321.prol, %vector.body321.preheader
  %index330.unr = phi i64 [ 0, %vector.body321.preheader ], [ 8, %vector.body321.prol ]
  %114 = icmp eq i64 %108, 0
  br i1 %114, label %middle.block322, label %vector.body321.preheader.split.split

vector.body321.preheader.split.split:             ; preds = %vector.body321.preheader.split
  br label %vector.body321

vector.body321:                                   ; preds = %vector.body321, %vector.body321.preheader.split.split
  %index330 = phi i64 [ %index330.unr, %vector.body321.preheader.split.split ], [ %index.next331.1, %vector.body321 ]
  %115 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.0.lcssa.i137, i64 0, i32 1, i64 %index330
  %116 = trunc i64 %index330 to i32
  %broadcast.splatinsert338 = insertelement <4 x i32> undef, i32 %116, i32 0
  %broadcast.splat339 = shufflevector <4 x i32> %broadcast.splatinsert338, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction340 = add <4 x i32> %broadcast.splat339, <i32 0, i32 1, i32 2, i32 3>
  %induction341 = add <4 x i32> %broadcast.splat339, <i32 4, i32 5, i32 6, i32 7>
  %117 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %induction340, <4 x i32>* %117, align 4, !tbaa !16
  %118 = getelementptr i32, i32* %115, i64 4
  %119 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %induction341, <4 x i32>* %119, align 4, !tbaa !16
  %index.next331 = add i64 %index330, 8
  %120 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.0.lcssa.i137, i64 0, i32 1, i64 %index.next331
  %121 = trunc i64 %index.next331 to i32
  %broadcast.splatinsert338.1 = insertelement <4 x i32> undef, i32 %121, i32 0
  %broadcast.splat339.1 = shufflevector <4 x i32> %broadcast.splatinsert338.1, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction340.1 = add <4 x i32> %broadcast.splat339.1, <i32 0, i32 1, i32 2, i32 3>
  %induction341.1 = add <4 x i32> %broadcast.splat339.1, <i32 4, i32 5, i32 6, i32 7>
  %122 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %induction340.1, <4 x i32>* %122, align 4, !tbaa !16
  %123 = getelementptr i32, i32* %120, i64 4
  %124 = bitcast i32* %123 to <4 x i32>*
  store <4 x i32> %induction341.1, <4 x i32>* %124, align 4, !tbaa !16
  %index.next331.1 = add i64 %index330, 16
  %125 = icmp eq i64 %index.next331.1, %n.vec327
  br i1 %125, label %middle.block322.unr-lcssa, label %vector.body321, !llvm.loop !78

middle.block322.unr-lcssa:                        ; preds = %vector.body321
  br label %middle.block322

middle.block322:                                  ; preds = %vector.body321.preheader.split, %middle.block322.unr-lcssa
  %cmp.n333 = icmp eq i64 %102, %n.vec327
  br i1 %cmp.n333, label %for.end.i103, label %for.body.i97.preheader344

for.body.i97.preheader344:                        ; preds = %middle.block322, %min.iters.checked325, %for.body.i97.preheader
  %indvars.iv.i92.ph = phi i64 [ 0, %min.iters.checked325 ], [ 0, %for.body.i97.preheader ], [ %n.vec327, %middle.block322 ]
  br label %for.body.i97

for.body.i97:                                     ; preds = %for.body.i97.preheader344, %for.body.i97
  %indvars.iv.i92 = phi i64 [ %indvars.iv.next.i94, %for.body.i97 ], [ %indvars.iv.i92.ph, %for.body.i97.preheader344 ]
  %arrayidx.i93 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.0.lcssa.i137, i64 0, i32 1, i64 %indvars.iv.i92
  %126 = trunc i64 %indvars.iv.i92 to i32
  store i32 %126, i32* %arrayidx.i93, align 4, !tbaa !16
  %indvars.iv.next.i94 = add nuw nsw i64 %indvars.iv.i92, 1
  %lftr.wideiv310 = trunc i64 %indvars.iv.next.i94 to i32
  %exitcond311 = icmp eq i32 %lftr.wideiv310, %0
  br i1 %exitcond311, label %for.end.i103.loopexit, label %for.body.i97, !prof !69, !llvm.loop !79

for.end.i103.loopexit:                            ; preds = %for.body.i97
  br label %for.end.i103

for.end.i103:                                     ; preds = %for.end.i103.loopexit, %middle.block322, %if.then.i91
  %Ss.i99 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.0.lcssa.i137, i64 0, i32 2
  %127 = bitcast i32* %Ss.i99 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %127, align 4, !tbaa !16
  %incdec.ptr.i102 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.0.lcssa.i137, i64 1
  br label %fill_dc_scans.exit120

for.body.preheader.i.i104:                        ; preds = %fill_scans.exit139
  %128 = add i32 %0, -1
  %xtraiter348 = and i32 %0, 3
  %lcmp.mod349 = icmp eq i32 %xtraiter348, 0
  br i1 %lcmp.mod349, label %for.body.preheader.i.i104.split, label %for.body.i.i116.prol.preheader

for.body.i.i116.prol.preheader:                   ; preds = %for.body.preheader.i.i104
  br label %for.body.i.i116.prol

for.body.i.i116.prol:                             ; preds = %for.body.i.i116.prol.preheader, %for.body.i.i116.prol
  %ci.016.i.i105.prol = phi i32 [ %inc.i.i114.prol, %for.body.i.i116.prol ], [ 0, %for.body.i.i116.prol.preheader ]
  %scanptr.addr.015.i.i106.prol = phi %struct.jpeg_scan_info* [ %incdec.ptr.i.i113.prol, %for.body.i.i116.prol ], [ %scanptr.addr.0.lcssa.i137, %for.body.i.i116.prol.preheader ]
  %prol.iter350 = phi i32 [ %prol.iter350.sub, %for.body.i.i116.prol ], [ %xtraiter348, %for.body.i.i116.prol.preheader ]
  %comps_in_scan.i.i107.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106.prol, i64 0, i32 0
  store i32 1, i32* %comps_in_scan.i.i107.prol, align 4, !tbaa !58
  %arrayidx.i.i108.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106.prol, i64 0, i32 1, i64 0
  store i32 %ci.016.i.i105.prol, i32* %arrayidx.i.i108.prol, align 4, !tbaa !16
  %Ss1.i.i109.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106.prol, i64 0, i32 2
  %129 = bitcast i32* %Ss1.i.i109.prol to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %129, align 4, !tbaa !16
  %incdec.ptr.i.i113.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106.prol, i64 1
  %inc.i.i114.prol = add nuw nsw i32 %ci.016.i.i105.prol, 1
  %prol.iter350.sub = add i32 %prol.iter350, -1
  %prol.iter350.cmp = icmp eq i32 %prol.iter350.sub, 0
  br i1 %prol.iter350.cmp, label %for.body.preheader.i.i104.split.loopexit, label %for.body.i.i116.prol, !llvm.loop !80

for.body.preheader.i.i104.split.loopexit:         ; preds = %for.body.i.i116.prol
  %inc.i.i114.prol.lcssa = phi i32 [ %inc.i.i114.prol, %for.body.i.i116.prol ]
  %incdec.ptr.i.i113.prol.lcssa = phi %struct.jpeg_scan_info* [ %incdec.ptr.i.i113.prol, %for.body.i.i116.prol ]
  br label %for.body.preheader.i.i104.split

for.body.preheader.i.i104.split:                  ; preds = %for.body.preheader.i.i104.split.loopexit, %for.body.preheader.i.i104
  %ci.016.i.i105.unr = phi i32 [ 0, %for.body.preheader.i.i104 ], [ %inc.i.i114.prol.lcssa, %for.body.preheader.i.i104.split.loopexit ]
  %scanptr.addr.015.i.i106.unr = phi %struct.jpeg_scan_info* [ %scanptr.addr.0.lcssa.i137, %for.body.preheader.i.i104 ], [ %incdec.ptr.i.i113.prol.lcssa, %for.body.preheader.i.i104.split.loopexit ]
  %130 = icmp ult i32 %128, 3
  br i1 %130, label %fill_scans.exit.i118, label %for.body.preheader.i.i104.split.split

for.body.preheader.i.i104.split.split:            ; preds = %for.body.preheader.i.i104.split
  br label %for.body.i.i116

for.body.i.i116:                                  ; preds = %for.body.i.i116, %for.body.preheader.i.i104.split.split
  %ci.016.i.i105 = phi i32 [ %ci.016.i.i105.unr, %for.body.preheader.i.i104.split.split ], [ %inc.i.i114.3, %for.body.i.i116 ]
  %scanptr.addr.015.i.i106 = phi %struct.jpeg_scan_info* [ %scanptr.addr.015.i.i106.unr, %for.body.preheader.i.i104.split.split ], [ %incdec.ptr.i.i113.3, %for.body.i.i116 ]
  %comps_in_scan.i.i107 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106, i64 0, i32 0
  store i32 1, i32* %comps_in_scan.i.i107, align 4, !tbaa !58
  %arrayidx.i.i108 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106, i64 0, i32 1, i64 0
  store i32 %ci.016.i.i105, i32* %arrayidx.i.i108, align 4, !tbaa !16
  %Ss1.i.i109 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106, i64 0, i32 2
  %131 = bitcast i32* %Ss1.i.i109 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %131, align 4, !tbaa !16
  %inc.i.i114 = add nuw nsw i32 %ci.016.i.i105, 1
  %comps_in_scan.i.i107.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106, i64 1, i32 0
  store i32 1, i32* %comps_in_scan.i.i107.1, align 4, !tbaa !58
  %arrayidx.i.i108.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106, i64 1, i32 1, i64 0
  store i32 %inc.i.i114, i32* %arrayidx.i.i108.1, align 4, !tbaa !16
  %Ss1.i.i109.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106, i64 1, i32 2
  %132 = bitcast i32* %Ss1.i.i109.1 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %132, align 4, !tbaa !16
  %inc.i.i114.1 = add nsw i32 %ci.016.i.i105, 2
  %comps_in_scan.i.i107.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106, i64 2, i32 0
  store i32 1, i32* %comps_in_scan.i.i107.2, align 4, !tbaa !58
  %arrayidx.i.i108.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106, i64 2, i32 1, i64 0
  store i32 %inc.i.i114.1, i32* %arrayidx.i.i108.2, align 4, !tbaa !16
  %Ss1.i.i109.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106, i64 2, i32 2
  %133 = bitcast i32* %Ss1.i.i109.2 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %133, align 4, !tbaa !16
  %inc.i.i114.2 = add nsw i32 %ci.016.i.i105, 3
  %comps_in_scan.i.i107.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106, i64 3, i32 0
  store i32 1, i32* %comps_in_scan.i.i107.3, align 4, !tbaa !58
  %arrayidx.i.i108.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106, i64 3, i32 1, i64 0
  store i32 %inc.i.i114.2, i32* %arrayidx.i.i108.3, align 4, !tbaa !16
  %Ss1.i.i109.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106, i64 3, i32 2
  %134 = bitcast i32* %Ss1.i.i109.3 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %134, align 4, !tbaa !16
  %incdec.ptr.i.i113.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.i106, i64 4
  %inc.i.i114.3 = add nsw i32 %ci.016.i.i105, 4
  %exitcond.i.i115.3 = icmp eq i32 %inc.i.i114.3, %0
  br i1 %exitcond.i.i115.3, label %fill_scans.exit.i118.unr-lcssa, label %for.body.i.i116

fill_scans.exit.i118.unr-lcssa:                   ; preds = %for.body.i.i116
  br label %fill_scans.exit.i118

fill_scans.exit.i118:                             ; preds = %for.body.preheader.i.i104.split, %fill_scans.exit.i118.unr-lcssa
  %135 = zext i32 %128 to i64
  %136 = add nuw nsw i64 %135, 1
  %scevgep.i.i117 = getelementptr %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.0.lcssa.i137, i64 %136
  br label %fill_dc_scans.exit120

fill_dc_scans.exit120:                            ; preds = %for.end.i103, %fill_scans.exit.i118
  %scanptr.addr.0.i119 = phi %struct.jpeg_scan_info* [ %incdec.ptr.i102, %for.end.i103 ], [ %scevgep.i.i117, %fill_scans.exit.i118 ]
  br i1 %cmp14.i159, label %for.body.i86.preheader, label %if.end38

for.body.i86.preheader:                           ; preds = %fill_dc_scans.exit120
  %137 = add i32 %0, -1
  %xtraiter = and i32 %0, 3
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i86.preheader.split, label %for.body.i86.prol.preheader

for.body.i86.prol.preheader:                      ; preds = %for.body.i86.preheader
  br label %for.body.i86.prol

for.body.i86.prol:                                ; preds = %for.body.i86.prol.preheader, %for.body.i86.prol
  %ci.016.i.prol = phi i32 [ %inc.i.prol, %for.body.i86.prol ], [ 0, %for.body.i86.prol.preheader ]
  %scanptr.addr.015.i.prol = phi %struct.jpeg_scan_info* [ %incdec.ptr.i84.prol, %for.body.i86.prol ], [ %scanptr.addr.0.i119, %for.body.i86.prol.preheader ]
  %prol.iter = phi i32 [ %prol.iter.sub, %for.body.i86.prol ], [ %xtraiter, %for.body.i86.prol.preheader ]
  %comps_in_scan.i82.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.prol, i64 0, i32 0
  store i32 1, i32* %comps_in_scan.i82.prol, align 4, !tbaa !58
  %arrayidx.i83.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.prol, i64 0, i32 1, i64 0
  store i32 %ci.016.i.prol, i32* %arrayidx.i83.prol, align 4, !tbaa !16
  %Ss1.i.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.prol, i64 0, i32 2
  %138 = bitcast i32* %Ss1.i.prol to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %138, align 4, !tbaa !16
  %incdec.ptr.i84.prol = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i.prol, i64 1
  %inc.i.prol = add nuw nsw i32 %ci.016.i.prol, 1
  %prol.iter.sub = add i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.i86.preheader.split.loopexit, label %for.body.i86.prol, !llvm.loop !81

for.body.i86.preheader.split.loopexit:            ; preds = %for.body.i86.prol
  %inc.i.prol.lcssa = phi i32 [ %inc.i.prol, %for.body.i86.prol ]
  %incdec.ptr.i84.prol.lcssa = phi %struct.jpeg_scan_info* [ %incdec.ptr.i84.prol, %for.body.i86.prol ]
  br label %for.body.i86.preheader.split

for.body.i86.preheader.split:                     ; preds = %for.body.i86.preheader.split.loopexit, %for.body.i86.preheader
  %ci.016.i.unr = phi i32 [ 0, %for.body.i86.preheader ], [ %inc.i.prol.lcssa, %for.body.i86.preheader.split.loopexit ]
  %scanptr.addr.015.i.unr = phi %struct.jpeg_scan_info* [ %scanptr.addr.0.i119, %for.body.i86.preheader ], [ %incdec.ptr.i84.prol.lcssa, %for.body.i86.preheader.split.loopexit ]
  %139 = icmp ult i32 %137, 3
  br i1 %139, label %if.end38.loopexit, label %for.body.i86.preheader.split.split

for.body.i86.preheader.split.split:               ; preds = %for.body.i86.preheader.split
  br label %for.body.i86

for.body.i86:                                     ; preds = %for.body.i86, %for.body.i86.preheader.split.split
  %ci.016.i = phi i32 [ %ci.016.i.unr, %for.body.i86.preheader.split.split ], [ %inc.i.3, %for.body.i86 ]
  %scanptr.addr.015.i = phi %struct.jpeg_scan_info* [ %scanptr.addr.015.i.unr, %for.body.i86.preheader.split.split ], [ %incdec.ptr.i84.3, %for.body.i86 ]
  %comps_in_scan.i82 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i, i64 0, i32 0
  store i32 1, i32* %comps_in_scan.i82, align 4, !tbaa !58
  %arrayidx.i83 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i, i64 0, i32 1, i64 0
  store i32 %ci.016.i, i32* %arrayidx.i83, align 4, !tbaa !16
  %Ss1.i = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i, i64 0, i32 2
  %140 = bitcast i32* %Ss1.i to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %140, align 4, !tbaa !16
  %inc.i = add nuw nsw i32 %ci.016.i, 1
  %comps_in_scan.i82.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i, i64 1, i32 0
  store i32 1, i32* %comps_in_scan.i82.1, align 4, !tbaa !58
  %arrayidx.i83.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i, i64 1, i32 1, i64 0
  store i32 %inc.i, i32* %arrayidx.i83.1, align 4, !tbaa !16
  %Ss1.i.1 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i, i64 1, i32 2
  %141 = bitcast i32* %Ss1.i.1 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %141, align 4, !tbaa !16
  %inc.i.1 = add nsw i32 %ci.016.i, 2
  %comps_in_scan.i82.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i, i64 2, i32 0
  store i32 1, i32* %comps_in_scan.i82.2, align 4, !tbaa !58
  %arrayidx.i83.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i, i64 2, i32 1, i64 0
  store i32 %inc.i.1, i32* %arrayidx.i83.2, align 4, !tbaa !16
  %Ss1.i.2 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i, i64 2, i32 2
  %142 = bitcast i32* %Ss1.i.2 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %142, align 4, !tbaa !16
  %inc.i.2 = add nsw i32 %ci.016.i, 3
  %comps_in_scan.i82.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i, i64 3, i32 0
  store i32 1, i32* %comps_in_scan.i82.3, align 4, !tbaa !58
  %arrayidx.i83.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i, i64 3, i32 1, i64 0
  store i32 %inc.i.2, i32* %arrayidx.i83.3, align 4, !tbaa !16
  %Ss1.i.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i, i64 3, i32 2
  %143 = bitcast i32* %Ss1.i.3 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %143, align 4, !tbaa !16
  %incdec.ptr.i84.3 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %scanptr.addr.015.i, i64 4
  %inc.i.3 = add nsw i32 %ci.016.i, 4
  %exitcond.i85.3 = icmp eq i32 %inc.i.3, %0
  br i1 %exitcond.i85.3, label %if.end38.loopexit.unr-lcssa, label %for.body.i86

if.end38.loopexit.unr-lcssa:                      ; preds = %for.body.i86
  br label %if.end38.loopexit

if.end38.loopexit:                                ; preds = %for.body.i86.preheader.split, %if.end38.loopexit.unr-lcssa
  br label %if.end38

if.end38:                                         ; preds = %if.end38.loopexit, %fill_dc_scans.exit120, %for.body.i241
  ret void
}

declare %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct*) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"MaxFunctionCount", i32 150581}
!1 = !{!"clang version 3.8.0 (trunk 257473)"}
!2 = !{!"function_entry_count", i64 4}
!3 = !{!4, !8, i64 28}
!4 = !{!"jpeg_compress_struct", !5, i64 0, !5, i64 8, !5, i64 16, !8, i64 24, !8, i64 28, !5, i64 32, !8, i64 40, !8, i64 44, !8, i64 48, !6, i64 52, !9, i64 56, !8, i64 64, !8, i64 68, !6, i64 72, !5, i64 80, !6, i64 88, !6, i64 120, !6, i64 152, !6, i64 184, !6, i64 200, !6, i64 216, !8, i64 232, !5, i64 240, !8, i64 248, !8, i64 252, !8, i64 256, !8, i64 260, !8, i64 264, !6, i64 268, !8, i64 272, !8, i64 276, !8, i64 280, !6, i64 284, !10, i64 286, !10, i64 288, !8, i64 292, !8, i64 296, !8, i64 300, !8, i64 304, !8, i64 308, !8, i64 312, !8, i64 316, !6, i64 320, !8, i64 352, !8, i64 356, !8, i64 360, !6, i64 364, !8, i64 404, !8, i64 408, !8, i64 412, !8, i64 416, !5, i64 424, !5, i64 432, !5, i64 440, !5, i64 448, !5, i64 456, !5, i64 464, !5, i64 472, !5, i64 480, !5, i64 488}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = !{!"int", !6, i64 0}
!9 = !{!"double", !6, i64 0}
!10 = !{!"short", !6, i64 0}
!11 = !{!"branch_weights", i32 5, i32 1}
!12 = !{!4, !5, i64 0}
!13 = !{!14, !8, i64 40}
!14 = !{!"jpeg_error_mgr", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !5, i64 32, !8, i64 40, !6, i64 44, !8, i64 124, !15, i64 128, !5, i64 136, !8, i64 144, !5, i64 152, !8, i64 160, !8, i64 164}
!15 = !{!"long", !6, i64 0}
!16 = !{!8, !8, i64 0}
!17 = !{!14, !5, i64 0}
!18 = !{!5, !5, i64 0}
!19 = !{!"branch_weights", i32 3, i32 3}
!20 = !{!10, !10, i64 0}
!21 = !{!"branch_weights", i32 5, i32 257}
!22 = !{!23, !8, i64 128}
!23 = !{!"", !6, i64 0, !8, i64 128}
!24 = !{!"function_entry_count", i64 2}
!25 = !{!"branch_weights", i32 1, i32 3}
!26 = !{!"function_entry_count", i64 1}
!27 = !{!"branch_weights", i32 2, i32 1}
!28 = !{!4, !5, i64 80}
!29 = !{!4, !5, i64 8}
!30 = !{!31, !5, i64 0}
!31 = !{!"jpeg_memory_mgr", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !5, i64 32, !5, i64 40, !5, i64 48, !5, i64 56, !5, i64 64, !5, i64 72, !5, i64 80, !15, i64 88}
!32 = !{!4, !8, i64 64}
!33 = !{!34, !8, i64 276}
!34 = !{!"", !6, i64 0, !6, i64 17, !8, i64 276}
!35 = !{!6, !6, i64 0}
!36 = !{!4, !8, i64 232}
!37 = !{!4, !6, i64 284}
!38 = !{!4, !10, i64 286}
!39 = !{!4, !10, i64 288}
!40 = !{!4, !6, i64 52}
!41 = !{!"branch_weights", i32 1, i32 1, i32 3, i32 1, i32 1, i32 1, i32 1}
!42 = !{!"branch_weights", i32 3, i32 1}
!43 = !{!4, !6, i64 72}
!44 = !{!4, !8, i64 292}
!45 = !{!4, !8, i64 280}
!46 = !{!4, !8, i64 68}
!47 = !{!48, !8, i64 0}
!48 = !{!"", !8, i64 0, !8, i64 4, !8, i64 8, !8, i64 12, !8, i64 16, !8, i64 20, !8, i64 24, !8, i64 28, !8, i64 32, !8, i64 36, !8, i64 40, !8, i64 44, !8, i64 48, !8, i64 52, !8, i64 56, !8, i64 60, !8, i64 64, !8, i64 68, !8, i64 72, !5, i64 80, !5, i64 88}
!49 = !{!48, !8, i64 24}
!50 = !{!48, !8, i64 8}
!51 = !{!48, !8, i64 12}
!52 = !{!48, !8, i64 16}
!53 = !{!48, !8, i64 20}
!54 = !{!4, !8, i64 48}
!55 = !{!"branch_weights", i32 1, i32 1, i32 1, i32 3, i32 1, i32 1, i32 1}
!56 = !{!"branch_weights", i32 1789569706, i32 357913942}
!57 = !{!4, !5, i64 240}
!58 = !{!59, !8, i64 0}
!59 = !{!"", !8, i64 0, !6, i64 4, !8, i64 20, !8, i64 24, !8, i64 28, !8, i64 32}
!60 = !{!59, !8, i64 20}
!61 = !{!59, !8, i64 24}
!62 = !{!59, !8, i64 28}
!63 = !{!59, !8, i64 32}
!64 = !{!"branch_weights", i32 1252698795, i32 894784853}
!65 = !{!"branch_weights", i32 825955249, i32 1321528399}
!66 = distinct !{!66, !67, !68}
!67 = !{!"llvm.loop.vectorize.width", i32 1}
!68 = !{!"llvm.loop.interleave.count", i32 1}
!69 = !{!"branch_weights", i32 3, i32 7}
!70 = distinct !{!70, !71, !67, !68}
!71 = !{!"llvm.loop.unroll.runtime.disable"}
!72 = distinct !{!72, !73}
!73 = !{!"llvm.loop.unroll.disable"}
!74 = distinct !{!74, !73}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !73}
!77 = !{!"branch_weights", i32 7, i32 3}
!78 = distinct !{!78, !67, !68}
!79 = distinct !{!79, !71, !67, !68}
!80 = distinct !{!80, !73}
!81 = distinct !{!81, !73}
