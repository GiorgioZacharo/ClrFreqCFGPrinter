digraph "CFG for 'write_tables_only' function" {
	label="CFG for 'write_tables_only' function";

	Node0x5aa2a90 [shape=record,label="{entry:\l  %dest1.i.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 5\l  %0 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !3\l  %next_output_byte.i.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %0, i64 0, i32 0\l  %1 = load i8*, i8** %next_output_byte.i.i, align 8, !tbaa !11\l  %incdec.ptr.i.i = getelementptr inbounds i8, i8* %1, i64 1\l  store i8* %incdec.ptr.i.i, i8** %next_output_byte.i.i, align 8, !tbaa !11\l  store i8 -1, i8* %1, align 1, !tbaa !14\l  %free_in_buffer.i.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %0, i64 0, i32 1\l  %2 = load i64, i64* %free_in_buffer.i.i, align 8, !tbaa !15\l  %dec.i.i = add i64 %2, -1\l  store i64 %dec.i.i, i64* %free_in_buffer.i.i, align 8, !tbaa !15\l  %cmp.i.i = icmp eq i64 %dec.i.i, 0\l  br i1 %cmp.i.i, label %if.then.i.i, label %emit_byte.exit.i, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x5aa2a90:s0 -> Node0x5b296d0;
	Node0x5aa2a90:s1 -> Node0x5b297b0;
	Node0x5b296d0 [shape=record,label="{if.then.i.i:                                      \l  %empty_output_buffer.i.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %0, i64 0, i32 3\l  %3 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i, align 8, !tbaa !17\l  %call.i.i = tail call i32 %3(%struct.jpeg_compress_struct* nonnull %cinfo) #1\l  %tobool.i.i = icmp eq i32 %call.i.i, 0\l  br i1 %tobool.i.i, label %if.then3.i.i, label %emit_byte.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x5b296d0:s0 -> Node0x5b28900;
	Node0x5b296d0:s1 -> Node0x5b297b0;
	Node0x5b28900 [shape=record,label="{if.then3.i.i:                                     \l  %err.i.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %4 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i.i, align\l... 8, !tbaa !18\l  %msg_code.i.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %4, i64 0, i32 5\l  store i32 22, i32* %msg_code.i.i, align 8, !tbaa !19\l  %error_exit.i.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %4, i64 0, i32 0\l  %5 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i.i, align 8, !tbaa !21\l  %6 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %5(%struct.jpeg_common_struct* %6) #1\l  br label %emit_byte.exit.i\l}"];
	Node0x5b28900 -> Node0x5b297b0;
	Node0x5b297b0 [shape=record,label="{emit_byte.exit.i:                                 \l  %7 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !3\l  %next_output_byte.i3.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %7, i64 0, i32 0\l  %8 = load i8*, i8** %next_output_byte.i3.i, align 8, !tbaa !11\l  %incdec.ptr.i4.i = getelementptr inbounds i8, i8* %8, i64 1\l  store i8* %incdec.ptr.i4.i, i8** %next_output_byte.i3.i, align 8, !tbaa !11\l  store i8 -40, i8* %8, align 1, !tbaa !14\l  %free_in_buffer.i5.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %7, i64 0, i32 1\l  %9 = load i64, i64* %free_in_buffer.i5.i, align 8, !tbaa !15\l  %dec.i6.i = add i64 %9, -1\l  store i64 %dec.i6.i, i64* %free_in_buffer.i5.i, align 8, !tbaa !15\l  %cmp.i7.i = icmp eq i64 %dec.i6.i, 0\l  br i1 %cmp.i7.i, label %if.then.i11.i, label %for.body.preheader, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x5b297b0:s0 -> Node0x5b29ee0;
	Node0x5b297b0:s1 -> Node0x5ae1740;
	Node0x5b29ee0 [shape=record,label="{if.then.i11.i:                                    \l  %empty_output_buffer.i8.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %7, i64 0, i32 3\l  %10 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i8.i, align 8, !tbaa\l... !17\l  %call.i9.i = tail call i32 %10(%struct.jpeg_compress_struct* nonnull %cinfo)\l... #1\l  %tobool.i10.i = icmp eq i32 %call.i9.i, 0\l  br i1 %tobool.i10.i, label %if.then3.i15.i, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5b29ee0:s0 -> Node0x5ae1cb0;
	Node0x5b29ee0:s1 -> Node0x5ae1740;
	Node0x5ae1cb0 [shape=record,label="{if.then3.i15.i:                                   \l  %err.i12.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i12.i,\l... align 8, !tbaa !18\l  %msg_code.i13.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 5\l  store i32 22, i32* %msg_code.i13.i, align 8, !tbaa !19\l  %error_exit.i14.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 0\l  %12 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i14.i, align 8, !tbaa !21\l  %13 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %12(%struct.jpeg_common_struct* %13) #1\l  br label %for.body.preheader\l}"];
	Node0x5ae1cb0 -> Node0x5ae1740;
	Node0x5ae1740 [shape=record,label="{for.body.preheader:                               \l  %arrayidx = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 15, i64 0\l  %14 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %arrayidx, align 8,\l... !tbaa !22\l  %cmp1 = icmp eq %struct.JQUANT_TBL* %14, null\l  br i1 %cmp1, label %for.inc, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x5ae1740:s0 -> Node0x5ae2900;
	Node0x5ae1740:s1 -> Node0x5ae29b0;
	Node0x5ae29b0 [shape=record,label="{if.then:                                          \l  %call = tail call fastcc i32 @emit_dqt(%struct.jpeg_compress_struct* nonnull\l... %cinfo, i32 0)\l  br label %for.inc\l}"];
	Node0x5ae29b0 -> Node0x5ae2900;
	Node0x5ae2900 [shape=record,label="{for.inc:                                          \l  %arrayidx.1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 15, i64 1\l  %15 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %arrayidx.1, align 8,\l... !tbaa !22\l  %cmp1.1 = icmp eq %struct.JQUANT_TBL* %15, null\l  br i1 %cmp1.1, label %for.inc.1, label %if.then.1\l|{<s0>T|<s1>F}}"];
	Node0x5ae2900:s0 -> Node0x5ae2d80;
	Node0x5ae2900:s1 -> Node0x5ae2e60;
	Node0x5ae3000 [shape=record,label="{for.body5.preheader:                              \l  %arrayidx7 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 0\l  %16 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx7, align 8,\l... !tbaa !22\l  %cmp8 = icmp eq %struct.JHUFF_TBL* %16, null\l  br i1 %cmp8, label %if.end10, label %if.then9\l|{<s0>T|<s1>F}}"];
	Node0x5ae3000:s0 -> Node0x5ae33c0;
	Node0x5ae3000:s1 -> Node0x5ae3440;
	Node0x5ae3440 [shape=record,label="{if.then9:                                         \l  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* nonnull\l... %cinfo, i32 0, i32 0)\l  br label %if.end10\l}"];
	Node0x5ae3440 -> Node0x5ae33c0;
	Node0x5ae33c0 [shape=record,label="{if.end10:                                         \l  %arrayidx12 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 17, i64 0\l  %17 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx12, align 8,\l... !tbaa !22\l  %cmp13 = icmp eq %struct.JHUFF_TBL* %17, null\l  br i1 %cmp13, label %for.inc16, label %if.then14\l|{<s0>T|<s1>F}}"];
	Node0x5ae33c0:s0 -> Node0x5ae3880;
	Node0x5ae33c0:s1 -> Node0x5ae3960;
	Node0x5ae3960 [shape=record,label="{if.then14:                                        \l  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* nonnull\l... %cinfo, i32 0, i32 1)\l  br label %for.inc16\l}"];
	Node0x5ae3960 -> Node0x5ae3880;
	Node0x5ae3880 [shape=record,label="{for.inc16:                                        \l  %arrayidx7.1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 1\l  %18 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx7.1, align 8,\l... !tbaa !22\l  %cmp8.1 = icmp eq %struct.JHUFF_TBL* %18, null\l  br i1 %cmp8.1, label %if.end10.1, label %if.then9.1\l|{<s0>T|<s1>F}}"];
	Node0x5ae3880:s0 -> Node0x5ae4080;
	Node0x5ae3880:s1 -> Node0x5ae4160;
	Node0x5ae42d0 [shape=record,label="{if.end19:                                         \l  %19 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !3\l  %next_output_byte.i.i39 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %19, i64 0, i32 0\l  %20 = load i8*, i8** %next_output_byte.i.i39, align 8, !tbaa !11\l  %incdec.ptr.i.i40 = getelementptr inbounds i8, i8* %20, i64 1\l  store i8* %incdec.ptr.i.i40, i8** %next_output_byte.i.i39, align 8, !tbaa !11\l  store i8 -1, i8* %20, align 1, !tbaa !14\l  %free_in_buffer.i.i41 = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %19, i64 0, i32 1\l  %21 = load i64, i64* %free_in_buffer.i.i41, align 8, !tbaa !15\l  %dec.i.i42 = add i64 %21, -1\l  store i64 %dec.i.i42, i64* %free_in_buffer.i.i41, align 8, !tbaa !15\l  %cmp.i.i43 = icmp eq i64 %dec.i.i42, 0\l  br i1 %cmp.i.i43, label %if.then.i.i47, label %emit_byte.exit.i57, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x5ae42d0:s0 -> Node0x5ae49e0;
	Node0x5ae42d0:s1 -> Node0x5ae4af0;
	Node0x5ae49e0 [shape=record,label="{if.then.i.i47:                                    \l  %empty_output_buffer.i.i44 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %19, i64 0, i32 3\l  %22 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i44, align 8, !tbaa\l... !17\l  %call.i.i45 = tail call i32 %22(%struct.jpeg_compress_struct* nonnull\l... %cinfo) #1\l  %tobool.i.i46 = icmp eq i32 %call.i.i45, 0\l  br i1 %tobool.i.i46, label %if.then3.i.i51, label %emit_byte.exit.i57\l|{<s0>T|<s1>F}}"];
	Node0x5ae49e0:s0 -> Node0x5ae4f10;
	Node0x5ae49e0:s1 -> Node0x5ae4af0;
	Node0x5ae4f10 [shape=record,label="{if.then3.i.i51:                                   \l  %err.i.i48 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i.i48,\l... align 8, !tbaa !18\l  %msg_code.i.i49 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %23, i64 0, i32 5\l  store i32 22, i32* %msg_code.i.i49, align 8, !tbaa !19\l  %error_exit.i.i50 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %23, i64 0, i32 0\l  %24 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i.i50, align 8, !tbaa !21\l  %25 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %24(%struct.jpeg_common_struct* %25) #1\l  br label %emit_byte.exit.i57\l}"];
	Node0x5ae4f10 -> Node0x5ae4af0;
	Node0x5ae4af0 [shape=record,label="{emit_byte.exit.i57:                               \l  %26 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !3\l  %next_output_byte.i3.i52 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %26, i64 0, i32 0\l  %27 = load i8*, i8** %next_output_byte.i3.i52, align 8, !tbaa !11\l  %incdec.ptr.i4.i53 = getelementptr inbounds i8, i8* %27, i64 1\l  store i8* %incdec.ptr.i4.i53, i8** %next_output_byte.i3.i52, align 8, !tbaa\l... !11\l  store i8 -39, i8* %27, align 1, !tbaa !14\l  %free_in_buffer.i5.i54 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %26, i64 0, i32 1\l  %28 = load i64, i64* %free_in_buffer.i5.i54, align 8, !tbaa !15\l  %dec.i6.i55 = add i64 %28, -1\l  store i64 %dec.i6.i55, i64* %free_in_buffer.i5.i54, align 8, !tbaa !15\l  %cmp.i7.i56 = icmp eq i64 %dec.i6.i55, 0\l  br i1 %cmp.i7.i56, label %if.then.i11.i61, label %emit_marker.exit66, !prof\l... !16\l|{<s0>T|<s1>F}}"];
	Node0x5ae4af0:s0 -> Node0x5ae5bc0;
	Node0x5ae4af0:s1 -> Node0x5ae5cd0;
	Node0x5ae5bc0 [shape=record,label="{if.then.i11.i61:                                  \l  %empty_output_buffer.i8.i58 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %26, i64 0, i32 3\l  %29 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i8.i58, align 8, !tbaa\l... !17\l  %call.i9.i59 = tail call i32 %29(%struct.jpeg_compress_struct* nonnull\l... %cinfo) #1\l  %tobool.i10.i60 = icmp eq i32 %call.i9.i59, 0\l  br i1 %tobool.i10.i60, label %if.then3.i15.i65, label %emit_marker.exit66\l|{<s0>T|<s1>F}}"];
	Node0x5ae5bc0:s0 -> Node0x5ae60d0;
	Node0x5ae5bc0:s1 -> Node0x5ae5cd0;
	Node0x5ae60d0 [shape=record,label="{if.then3.i15.i65:                                 \l  %err.i12.i62 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i12.i62,\l... align 8, !tbaa !18\l  %msg_code.i13.i63 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %30, i64 0, i32 5\l  store i32 22, i32* %msg_code.i13.i63, align 8, !tbaa !19\l  %error_exit.i14.i64 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %30, i64 0, i32 0\l  %31 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i14.i64, align 8, !tbaa !21\l  %32 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %31(%struct.jpeg_common_struct* %32) #1\l  br label %emit_marker.exit66\l}"];
	Node0x5ae60d0 -> Node0x5ae5cd0;
	Node0x5ae5cd0 [shape=record,label="{emit_marker.exit66:                               \l  ret void\l}"];
	Node0x5ae4160 [shape=record,label="{if.then9.1:                                       \l  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* nonnull\l... %cinfo, i32 1, i32 0)\l  br label %if.end10.1\l}"];
	Node0x5ae4160 -> Node0x5ae4080;
	Node0x5ae4080 [shape=record,label="{if.end10.1:                                       \l  %arrayidx12.1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 17, i64 1\l  %33 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx12.1, align 8,\l... !tbaa !22\l  %cmp13.1 = icmp eq %struct.JHUFF_TBL* %33, null\l  br i1 %cmp13.1, label %for.inc16.1, label %if.then14.1\l|{<s0>T|<s1>F}}"];
	Node0x5ae4080:s0 -> Node0x5ae6b30;
	Node0x5ae4080:s1 -> Node0x5ae6b80;
	Node0x5ae6b80 [shape=record,label="{if.then14.1:                                      \l  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* nonnull\l... %cinfo, i32 1, i32 1)\l  br label %for.inc16.1\l}"];
	Node0x5ae6b80 -> Node0x5ae6b30;
	Node0x5ae6b30 [shape=record,label="{for.inc16.1:                                      \l  %arrayidx7.2 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 2\l  %34 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx7.2, align 8,\l... !tbaa !22\l  %cmp8.2 = icmp eq %struct.JHUFF_TBL* %34, null\l  br i1 %cmp8.2, label %if.end10.2, label %if.then9.2\l|{<s0>T|<s1>F}}"];
	Node0x5ae6b30:s0 -> Node0x5ae6f60;
	Node0x5ae6b30:s1 -> Node0x5ae7040;
	Node0x5ae7040 [shape=record,label="{if.then9.2:                                       \l  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* nonnull\l... %cinfo, i32 2, i32 0)\l  br label %if.end10.2\l}"];
	Node0x5ae7040 -> Node0x5ae6f60;
	Node0x5ae6f60 [shape=record,label="{if.end10.2:                                       \l  %arrayidx12.2 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 17, i64 2\l  %35 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx12.2, align 8,\l... !tbaa !22\l  %cmp13.2 = icmp eq %struct.JHUFF_TBL* %35, null\l  br i1 %cmp13.2, label %for.inc16.2, label %if.then14.2\l|{<s0>T|<s1>F}}"];
	Node0x5ae6f60:s0 -> Node0x5ae7450;
	Node0x5ae6f60:s1 -> Node0x5ae7530;
	Node0x5ae7530 [shape=record,label="{if.then14.2:                                      \l  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* nonnull\l... %cinfo, i32 2, i32 1)\l  br label %for.inc16.2\l}"];
	Node0x5ae7530 -> Node0x5ae7450;
	Node0x5ae7450 [shape=record,label="{for.inc16.2:                                      \l  %arrayidx7.3 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 3\l  %36 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx7.3, align 8,\l... !tbaa !22\l  %cmp8.3 = icmp eq %struct.JHUFF_TBL* %36, null\l  br i1 %cmp8.3, label %if.end10.3, label %if.then9.3\l|{<s0>T|<s1>F}}"];
	Node0x5ae7450:s0 -> Node0x5ae7980;
	Node0x5ae7450:s1 -> Node0x5ae3a40;
	Node0x5ae3a40 [shape=record,label="{if.then9.3:                                       \l  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* nonnull\l... %cinfo, i32 3, i32 0)\l  br label %if.end10.3\l}"];
	Node0x5ae3a40 -> Node0x5ae7980;
	Node0x5ae7980 [shape=record,label="{if.end10.3:                                       \l  %arrayidx12.3 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 17, i64 3\l  %37 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx12.3, align 8,\l... !tbaa !22\l  %cmp13.3 = icmp eq %struct.JHUFF_TBL* %37, null\l  br i1 %cmp13.3, label %if.end19, label %if.then14.3\l|{<s0>T|<s1>F}}"];
	Node0x5ae7980:s0 -> Node0x5ae42d0;
	Node0x5ae7980:s1 -> Node0x5ae3e50;
	Node0x5ae3e50 [shape=record,label="{if.then14.3:                                      \l  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* nonnull\l... %cinfo, i32 3, i32 1)\l  br label %if.end19\l}"];
	Node0x5ae3e50 -> Node0x5ae42d0;
	Node0x5ae2e60 [shape=record,label="{if.then.1:                                        \l  %call.1 = tail call fastcc i32 @emit_dqt(%struct.jpeg_compress_struct*\l... nonnull %cinfo, i32 1)\l  br label %for.inc.1\l}"];
	Node0x5ae2e60 -> Node0x5ae2d80;
	Node0x5ae2d80 [shape=record,label="{for.inc.1:                                        \l  %arrayidx.2 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 15, i64 2\l  %38 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %arrayidx.2, align 8,\l... !tbaa !22\l  %cmp1.2 = icmp eq %struct.JQUANT_TBL* %38, null\l  br i1 %cmp1.2, label %for.inc.2, label %if.then.2\l|{<s0>T|<s1>F}}"];
	Node0x5ae2d80:s0 -> Node0x5ae8990;
	Node0x5ae2d80:s1 -> Node0x5ae8a70;
	Node0x5ae8a70 [shape=record,label="{if.then.2:                                        \l  %call.2 = tail call fastcc i32 @emit_dqt(%struct.jpeg_compress_struct*\l... nonnull %cinfo, i32 2)\l  br label %for.inc.2\l}"];
	Node0x5ae8a70 -> Node0x5ae8990;
	Node0x5ae8990 [shape=record,label="{for.inc.2:                                        \l  %arrayidx.3 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 15, i64 3\l  %39 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %arrayidx.3, align 8,\l... !tbaa !22\l  %cmp1.3 = icmp eq %struct.JQUANT_TBL* %39, null\l  br i1 %cmp1.3, label %for.inc.3, label %if.then.3\l|{<s0>T|<s1>F}}"];
	Node0x5ae8990:s0 -> Node0x5ae8e60;
	Node0x5ae8990:s1 -> Node0x5ae8f40;
	Node0x5ae8f40 [shape=record,label="{if.then.3:                                        \l  %call.3 = tail call fastcc i32 @emit_dqt(%struct.jpeg_compress_struct*\l... nonnull %cinfo, i32 3)\l  br label %for.inc.3\l}"];
	Node0x5ae8f40 -> Node0x5ae8e60;
	Node0x5ae8e60 [shape=record,label="{for.inc.3:                                        \l  %arith_code = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 24\l  %40 = load i32, i32* %arith_code, align 4, !tbaa !23\l  %tobool = icmp eq i32 %40, 0\l  br i1 %tobool, label %for.body5.preheader, label %if.end19\l|{<s0>T|<s1>F}}"];
	Node0x5ae8e60:s0 -> Node0x5ae3000;
	Node0x5ae8e60:s1 -> Node0x5ae42d0;
}
