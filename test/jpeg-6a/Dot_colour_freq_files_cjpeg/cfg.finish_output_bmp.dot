digraph "CFG for 'finish_output_bmp' function" {
	label="CFG for 'finish_output_bmp' function";

	Node0x4f8d100 [shape=record,label="{entry:\l  %bmpinfoheader.i = alloca [40 x i8], align 16\l  %bmpfileheader.i = alloca [14 x i8], align 1\l  %bmpcoreheader.i = alloca [12 x i8], align 1\l  %0 = bitcast %struct.djpeg_dest_struct* %dinfo to %struct.bmp_dest_struct*\l  %output_file = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 0, i32 3\l  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %output_file, align 8, !tbaa\l... !2\l  %progress1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 2\l  %2 = bitcast %struct.jpeg_progress_mgr** %progress1 to\l... %struct.cdjpeg_progress_mgr**\l  %3 = load %struct.cdjpeg_progress_mgr*, %struct.cdjpeg_progress_mgr** %2,\l... align 8, !tbaa !9\l  %is_os2 = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 1\l  %4 = bitcast %struct.djpeg_dest_struct* %is_os2 to i32*\l  %5 = load i32, i32* %4, align 8, !tbaa !13\l  %tobool = icmp eq i32 %5, 0\l  %6 = getelementptr inbounds [14 x i8], [14 x i8]* %bmpfileheader.i, i64 0,\l... i64 0\l  call void @llvm.lifetime.start(i64 14, i8* %6) #6\l  br i1 %tobool, label %if.else, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x4f8d100:s0 -> Node0x4f8e790;
	Node0x4f8d100:s1 -> Node0x4f8e840;
	Node0x4f8e840 [shape=record,label="{if.then:                                          \l  %7 = getelementptr inbounds [12 x i8], [12 x i8]* %bmpcoreheader.i, i64 0,\l... i64 0\l  call void @llvm.lifetime.start(i64 12, i8* %7) #6\l  %out_color_space.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 10\l  %8 = load i32, i32* %out_color_space.i, align 8, !tbaa !14\l  %cmp.i = icmp eq i32 %8, 2\l  br i1 %cmp.i, label %if.then.i, label %if.end3.i\l|{<s0>T|<s1>F}}"];
	Node0x4f8e840:s0 -> Node0x4f8de20;
	Node0x4f8e840:s1 -> Node0x4f8f510;
	Node0x4f8de20 [shape=record,label="{if.then.i:                                        \l  %quantize_colors.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 19\l  %9 = load i32, i32* %quantize_colors.i, align 4, !tbaa !15\l  %tobool.i = icmp eq i32 %9, 0\l  %..i = select i1 %tobool.i, i8 24, i8 8\l  %.123.i = select i1 %tobool.i, i32 0, i32 256\l  br label %if.end3.i\l}"];
	Node0x4f8de20 -> Node0x4f8f510;
	Node0x4f8f510 [shape=record,label="{if.end3.i:                                        \l  %bits_per_pixel.0.i = phi i8 [ %..i, %if.then.i ], [ 8, %if.then ]\l  %cmap_entries.0.i = phi i32 [ %.123.i, %if.then.i ], [ 256, %if.then ]\l  %mul.i = mul nuw nsw i32 %cmap_entries.0.i, 3\l  %add.i = or i32 %mul.i, 26\l  %conv118.i = zext i32 %add.i to i64\l  %row_width.i = getelementptr inbounds %struct.bmp_dest_struct,\l... %struct.bmp_dest_struct* %0, i64 0, i32 4\l  %10 = load i32, i32* %row_width.i, align 4, !tbaa !16\l  %conv4.i = zext i32 %10 to i64\l  %output_height.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 27\l  %11 = load i32, i32* %output_height.i, align 4, !tbaa !17\l  %conv5.i = zext i32 %11 to i64\l  %mul6.i = mul nuw nsw i64 %conv5.i, %conv4.i\l  %add7.i = add nuw nsw i64 %mul6.i, %conv118.i\l  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 12, i32 1, i1 false) #6\l  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 10, i32 1, i1 false) #6\l  store i8 66, i8* %6, align 1, !tbaa !18\l  %arrayidx9.i = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 1\l  store i8 77, i8* %arrayidx9.i, align 1, !tbaa !18\l  %conv10.i = trunc i64 %add7.i to i8\l  %arrayidx11.i = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 2\l  store i8 %conv10.i, i8* %arrayidx11.i, align 1, !tbaa !18\l  %shr119.i = lshr i64 %add7.i, 8\l  %conv13.i = trunc i64 %shr119.i to i8\l  %arrayidx14.i = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 3\l  store i8 %conv13.i, i8* %arrayidx14.i, align 1, !tbaa !18\l  %shr15120.i = lshr i64 %add7.i, 16\l  %conv17.i = trunc i64 %shr15120.i to i8\l  %arrayidx18.i = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 4\l  store i8 %conv17.i, i8* %arrayidx18.i, align 1, !tbaa !18\l  %shr19121.i = lshr i64 %add7.i, 24\l  %conv21.i = trunc i64 %shr19121.i to i8\l  %arrayidx22.i = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 5\l  store i8 %conv21.i, i8* %arrayidx22.i, align 1, !tbaa !18\l  %arrayidx25.i = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 10\l  store i8 26, i8* %arrayidx25.i, align 1, !tbaa !18\l  %shr26122.i = lshr exact i32 %mul.i, 8\l  %conv28.i = trunc i32 %shr26122.i to i8\l  %arrayidx29.i = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 11\l  store i8 %conv28.i, i8* %arrayidx29.i, align 1, !tbaa !18\l  %arrayidx33.i = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 12\l  store i8 0, i8* %arrayidx33.i, align 1, !tbaa !18\l  %arrayidx37.i = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 13\l  store i8 0, i8* %arrayidx37.i, align 1, !tbaa !18\l  store i8 12, i8* %7, align 1, !tbaa !18\l  %arrayidx39.i = getelementptr inbounds [12 x i8], [12 x i8]*\l... %bmpcoreheader.i, i64 0, i64 1\l  store i8 0, i8* %arrayidx39.i, align 1, !tbaa !18\l  %output_width.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %12 = bitcast i32* %output_width.i to i64*\l  %13 = load i64, i64* %12, align 8\l  %14 = trunc i64 %13 to i32\l  %conv41.i = trunc i64 %13 to i8\l  %arrayidx42.i = getelementptr inbounds [12 x i8], [12 x i8]*\l... %bmpcoreheader.i, i64 0, i64 4\l  store i8 %conv41.i, i8* %arrayidx42.i, align 1, !tbaa !18\l  %shr44.i = lshr i32 %14, 8\l  %conv46.i = trunc i32 %shr44.i to i8\l  %arrayidx47.i = getelementptr inbounds [12 x i8], [12 x i8]*\l... %bmpcoreheader.i, i64 0, i64 5\l  store i8 %conv46.i, i8* %arrayidx47.i, align 1, !tbaa !18\l  %15 = lshr i64 %13, 32\l  %conv50.i = trunc i64 %15 to i8\l  %arrayidx51.i = getelementptr inbounds [12 x i8], [12 x i8]*\l... %bmpcoreheader.i, i64 0, i64 6\l  store i8 %conv50.i, i8* %arrayidx51.i, align 1, !tbaa !18\l  %shr53124.i = lshr i64 %13, 40\l  %conv55.i = trunc i64 %shr53124.i to i8\l  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]*\l... %bmpcoreheader.i, i64 0, i64 7\l  store i8 %conv55.i, i8* %arrayidx56.i, align 1, !tbaa !18\l  %arrayidx57.i = getelementptr inbounds [12 x i8], [12 x i8]*\l... %bmpcoreheader.i, i64 0, i64 8\l  store i8 1, i8* %arrayidx57.i, align 1, !tbaa !18\l  %arrayidx58.i = getelementptr inbounds [12 x i8], [12 x i8]*\l... %bmpcoreheader.i, i64 0, i64 9\l  store i8 0, i8* %arrayidx58.i, align 1, !tbaa !18\l  %arrayidx61.i = getelementptr inbounds [12 x i8], [12 x i8]*\l... %bmpcoreheader.i, i64 0, i64 10\l  store i8 %bits_per_pixel.0.i, i8* %arrayidx61.i, align 1, !tbaa !18\l  %arrayidx65.i = getelementptr inbounds [12 x i8], [12 x i8]*\l... %bmpcoreheader.i, i64 0, i64 11\l  store i8 0, i8* %arrayidx65.i, align 1, !tbaa !18\l  %call.i = call i64 @fwrite(i8* %6, i64 1, i64 14, %struct._IO_FILE* %1) #6\l  %cmp67.i = icmp eq i64 %call.i, 14\l  br i1 %cmp67.i, label %if.end71.i, label %if.then69.i\l|{<s0>T|<s1>F}}"];
	Node0x4f8f510:s0 -> Node0x4f83ec0;
	Node0x4f8f510:s1 -> Node0x4f83fa0;
	Node0x4f83fa0 [shape=record,label="{if.then69.i:                                      \l  %err.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align\l... 8, !tbaa !19\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %16, i64 0, i32 5\l  store i32 36, i32* %msg_code.i, align 8, !tbaa !20\l  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %16, i64 0, i32 0\l  %17 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !23\l  %18 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %17(%struct.jpeg_common_struct* %18) #6\l  br label %if.end71.i\l}"];
	Node0x4f83fa0 -> Node0x4f83ec0;
	Node0x4f83ec0 [shape=record,label="{if.end71.i:                                       \l  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %output_file, align 8,\l... !tbaa !2\l  %call75.i = call i64 @fwrite(i8* nonnull %7, i64 1, i64 12,\l... %struct._IO_FILE* %19) #6\l  %cmp76.i = icmp eq i64 %call75.i, 12\l  br i1 %cmp76.i, label %if.end83.i, label %if.then78.i\l|{<s0>T|<s1>F}}"];
	Node0x4f83ec0:s0 -> Node0x4f98cd0;
	Node0x4f83ec0:s1 -> Node0x4f98db0;
	Node0x4f98db0 [shape=record,label="{if.then78.i:                                      \l  %err79.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err79.i, align\l... 8, !tbaa !19\l  %msg_code80.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %20, i64 0, i32 5\l  store i32 36, i32* %msg_code80.i, align 8, !tbaa !20\l  %error_exit82.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %20, i64 0, i32 0\l  %21 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit82.i, align 8, !tbaa !23\l  %22 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %21(%struct.jpeg_common_struct* %22) #6\l  br label %if.end83.i\l}"];
	Node0x4f98db0 -> Node0x4f98cd0;
	Node0x4f98cd0 [shape=record,label="{if.end83.i:                                       \l  %cmp84.i = icmp eq i32 %cmap_entries.0.i, 0\l  br i1 %cmp84.i, label %write_os2_header.exit, label %if.then86.i\l|{<s0>T|<s1>F}}"];
	Node0x4f98cd0:s0 -> Node0x4f994d0;
	Node0x4f98cd0:s1 -> Node0x4f99570;
	Node0x4f99570 [shape=record,label="{if.then86.i:                                      \l  %dest.idx.val.i = load %struct._IO_FILE*, %struct._IO_FILE** %output_file,\l... align 8, !tbaa !2\l  tail call fastcc void @write_colormap(%struct.jpeg_decompress_struct*\l... nonnull %cinfo, %struct._IO_FILE* %dest.idx.val.i, i32 %cmap_entries.0.i, i32\l... 3) #6\l  br label %write_os2_header.exit\l}"];
	Node0x4f99570 -> Node0x4f994d0;
	Node0x4f994d0 [shape=record,label="{write_os2_header.exit:                            \l  call void @llvm.lifetime.end(i64 12, i8* nonnull %7) #6\l  call void @llvm.lifetime.end(i64 14, i8* nonnull %6) #6\l  br label %if.end\l}"];
	Node0x4f994d0 -> Node0x4f99e10;
	Node0x4f8e790 [shape=record,label="{if.else:                                          \l  %23 = getelementptr inbounds [40 x i8], [40 x i8]* %bmpinfoheader.i, i64 0,\l... i64 0\l  call void @llvm.lifetime.start(i64 40, i8* %23) #6\l  %out_color_space.i65 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 10\l  %24 = load i32, i32* %out_color_space.i65, align 8, !tbaa !14\l  %cmp.i66 = icmp eq i32 %24, 2\l  br i1 %cmp.i66, label %if.then.i70, label %if.end3.i104\l|{<s0>T|<s1>F}}"];
	Node0x4f8e790:s0 -> Node0x4f9a240;
	Node0x4f8e790:s1 -> Node0x4f9a2f0;
	Node0x4f9a240 [shape=record,label="{if.then.i70:                                      \l  %quantize_colors.i67 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 19\l  %25 = load i32, i32* %quantize_colors.i67, align 4, !tbaa !15\l  %tobool.i68 = icmp eq i32 %25, 0\l  %..i69 = select i1 %tobool.i68, i8 24, i8 8\l  %.241.i = select i1 %tobool.i68, i32 0, i32 256\l  br label %if.end3.i104\l}"];
	Node0x4f9a240 -> Node0x4f9a2f0;
	Node0x4f9a2f0 [shape=record,label="{if.end3.i104:                                     \l  %bits_per_pixel.0.i71 = phi i8 [ %..i69, %if.then.i70 ], [ 8, %if.else ]\l  %cmap_entries.0.i72 = phi i32 [ %.241.i, %if.then.i70 ], [ 256, %if.else ]\l  %mul.i73 = shl nuw nsw i32 %cmap_entries.0.i72, 2\l  %add.i74 = or i32 %mul.i73, 54\l  %conv225.i = zext i32 %add.i74 to i64\l  %row_width.i75 = getelementptr inbounds %struct.bmp_dest_struct,\l... %struct.bmp_dest_struct* %0, i64 0, i32 4\l  %26 = load i32, i32* %row_width.i75, align 4, !tbaa !16\l  %conv4.i76 = zext i32 %26 to i64\l  %output_height.i77 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 27\l  %27 = load i32, i32* %output_height.i77, align 4, !tbaa !17\l  %conv5.i78 = zext i32 %27 to i64\l  %mul6.i79 = mul nuw nsw i64 %conv5.i78, %conv4.i76\l  %add7.i80 = add nuw nsw i64 %mul6.i79, %conv225.i\l  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 12, i32 1, i1 false) #6\l  call void @llvm.memset.p0i8.i64(i8* %23, i8 0, i64 40, i32 16, i1 false) #6\l  store i8 66, i8* %6, align 1, !tbaa !18\l  %arrayidx9.i81 = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 1\l  store i8 77, i8* %arrayidx9.i81, align 1, !tbaa !18\l  %conv10.i82 = trunc i64 %add7.i80 to i8\l  %arrayidx11.i83 = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 2\l  store i8 %conv10.i82, i8* %arrayidx11.i83, align 1, !tbaa !18\l  %shr226.i = lshr i64 %add7.i80, 8\l  %conv13.i84 = trunc i64 %shr226.i to i8\l  %arrayidx14.i85 = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 3\l  store i8 %conv13.i84, i8* %arrayidx14.i85, align 1, !tbaa !18\l  %shr15227.i = lshr i64 %add7.i80, 16\l  %conv17.i86 = trunc i64 %shr15227.i to i8\l  %arrayidx18.i87 = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 4\l  store i8 %conv17.i86, i8* %arrayidx18.i87, align 1, !tbaa !18\l  %shr19228.i = lshr i64 %add7.i80, 24\l  %conv21.i88 = trunc i64 %shr19228.i to i8\l  %arrayidx22.i89 = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 5\l  store i8 %conv21.i88, i8* %arrayidx22.i89, align 1, !tbaa !18\l  %arrayidx25.i90 = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 10\l  store i8 54, i8* %arrayidx25.i90, align 1, !tbaa !18\l  %shr26229.i = lshr exact i32 %cmap_entries.0.i72, 6\l  %conv28.i91 = trunc i32 %shr26229.i to i8\l  %arrayidx29.i92 = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 11\l  store i8 %conv28.i91, i8* %arrayidx29.i92, align 1, !tbaa !18\l  %arrayidx33.i93 = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 12\l  store i8 0, i8* %arrayidx33.i93, align 1, !tbaa !18\l  %arrayidx37.i94 = getelementptr inbounds [14 x i8], [14 x i8]*\l... %bmpfileheader.i, i64 0, i64 13\l  store i8 0, i8* %arrayidx37.i94, align 1, !tbaa !18\l  store i8 40, i8* %23, align 16, !tbaa !18\l  %arrayidx39.i95 = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 1\l  store i8 0, i8* %arrayidx39.i95, align 1, !tbaa !18\l  %output_width.i96 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %28 = bitcast i32* %output_width.i96 to i64*\l  %29 = load i64, i64* %28, align 8\l  %30 = trunc i64 %29 to i32\l  %conv41.i97 = trunc i64 %29 to i8\l  %arrayidx42.i98 = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 4\l  store i8 %conv41.i97, i8* %arrayidx42.i98, align 4, !tbaa !18\l  %shr44.i99 = lshr i32 %30, 8\l  %conv46.i100 = trunc i32 %shr44.i99 to i8\l  %arrayidx47.i101 = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 5\l  store i8 %conv46.i100, i8* %arrayidx47.i101, align 1, !tbaa !18\l  %shr49.i = lshr i32 %30, 16\l  %conv51.i = trunc i32 %shr49.i to i8\l  %arrayidx52.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 6\l  store i8 %conv51.i, i8* %arrayidx52.i, align 2, !tbaa !18\l  %shr54.i = lshr i32 %30, 24\l  %conv56.i = trunc i32 %shr54.i to i8\l  %arrayidx57.i102 = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 7\l  store i8 %conv56.i, i8* %arrayidx57.i102, align 1, !tbaa !18\l  %31 = lshr i64 %29, 32\l  %conv60.i = trunc i64 %31 to i8\l  %arrayidx61.i103 = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 8\l  store i8 %conv60.i, i8* %arrayidx61.i103, align 8, !tbaa !18\l  %shr63242.i = lshr i64 %29, 40\l  %conv65.i = trunc i64 %shr63242.i to i8\l  %arrayidx66.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 9\l  store i8 %conv65.i, i8* %arrayidx66.i, align 1, !tbaa !18\l  %shr68243.i = lshr i64 %29, 48\l  %conv70.i = trunc i64 %shr68243.i to i8\l  %arrayidx71.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 10\l  store i8 %conv70.i, i8* %arrayidx71.i, align 2, !tbaa !18\l  %shr73244.i = lshr i64 %29, 56\l  %conv75.i = trunc i64 %shr73244.i to i8\l  %arrayidx76.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 11\l  store i8 %conv75.i, i8* %arrayidx76.i, align 1, !tbaa !18\l  %arrayidx77.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 12\l  store i8 1, i8* %arrayidx77.i, align 4, !tbaa !18\l  %arrayidx78.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 13\l  store i8 0, i8* %arrayidx78.i, align 1, !tbaa !18\l  %arrayidx81.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 14\l  store i8 %bits_per_pixel.0.i71, i8* %arrayidx81.i, align 2, !tbaa !18\l  %arrayidx85.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 15\l  store i8 0, i8* %arrayidx85.i, align 1, !tbaa !18\l  %density_unit.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 51\l  %32 = bitcast i8* %density_unit.i to i64*\l  %33 = load i64, i64* %32, align 8\l  %34 = trunc i64 %33 to i32\l  %35 = trunc i64 %33 to i8\l  %cmp87.i = icmp eq i8 %35, 2\l  %36 = lshr i32 %34, 16\l  %37 = lshr i64 %33, 32\l  br i1 %cmp87.i, label %if.then89.i, label %if.end150.i\l|{<s0>T|<s1>F}}"];
	Node0x4f9a2f0:s0 -> Node0x4fa0820;
	Node0x4f9a2f0:s1 -> Node0x4fa0900;
	Node0x4fa0820 [shape=record,label="{if.then89.i:                                      \l  %38 = zext i32 %36 to i64\l  %conv90.i = trunc i32 %36 to i8\l  %mul91.i = mul i8 %conv90.i, 100\l  %arrayidx95.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 24\l  store i8 %mul91.i, i8* %arrayidx95.i, align 8, !tbaa !18\l  %mul98.i = mul nuw nsw i64 %38, 100\l  %shr100233.i = lshr i64 %mul98.i, 8\l  %conv102.i = trunc i64 %shr100233.i to i8\l  %arrayidx103.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 25\l  store i8 %conv102.i, i8* %arrayidx103.i, align 1, !tbaa !18\l  %shr108235.i = lshr i64 %mul98.i, 16\l  %conv110.i = trunc i64 %shr108235.i to i8\l  %arrayidx111.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 26\l  store i8 %conv110.i, i8* %arrayidx111.i, align 2, !tbaa !18\l  %arrayidx119.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 27\l  store i8 0, i8* %arrayidx119.i, align 1, !tbaa !18\l  %conv120.i = trunc i64 %37 to i8\l  %mul121.i = mul i8 %conv120.i, 100\l  %arrayidx125.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 28\l  store i8 %mul121.i, i8* %arrayidx125.i, align 4, !tbaa !18\l  %conv127.i = and i64 %37, 65535\l  %mul128.i = mul nuw nsw i64 %conv127.i, 100\l  %shr130238.i = lshr i64 %mul128.i, 8\l  %conv132.i = trunc i64 %shr130238.i to i8\l  %arrayidx133.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 29\l  store i8 %conv132.i, i8* %arrayidx133.i, align 1, !tbaa !18\l  %shr138240.i = lshr i64 %mul128.i, 16\l  %conv140.i = trunc i64 %shr138240.i to i8\l  %arrayidx141.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 30\l  store i8 %conv140.i, i8* %arrayidx141.i, align 2, !tbaa !18\l  %arrayidx149.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 31\l  store i8 0, i8* %arrayidx149.i, align 1, !tbaa !18\l  br label %if.end150.i\l}"];
	Node0x4fa0820 -> Node0x4fa0900;
	Node0x4fa0900 [shape=record,label="{if.end150.i:                                      \l  %arrayidx153.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 32\l  store i8 0, i8* %arrayidx153.i, align 16, !tbaa !18\l  %shr154230.i = lshr exact i32 %cmap_entries.0.i72, 8\l  %conv156.i = trunc i32 %shr154230.i to i8\l  %arrayidx157.i = getelementptr inbounds [40 x i8], [40 x i8]*\l... %bmpinfoheader.i, i64 0, i64 33\l  store i8 %conv156.i, i8* %arrayidx157.i, align 1, !tbaa !18\l  %call.i106 = call i64 @fwrite(i8* nonnull %6, i64 1, i64 14,\l... %struct._IO_FILE* %1) #6\l  %cmp159.i = icmp eq i64 %call.i106, 14\l  br i1 %cmp159.i, label %if.end163.i, label %if.then161.i\l|{<s0>T|<s1>F}}"];
	Node0x4fa0900:s0 -> Node0x4f95120;
	Node0x4fa0900:s1 -> Node0x4f95200;
	Node0x4f95200 [shape=record,label="{if.then161.i:                                     \l  %err.i107 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i107,\l... align 8, !tbaa !19\l  %msg_code.i108 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %39, i64 0, i32 5\l  store i32 36, i32* %msg_code.i108, align 8, !tbaa !20\l  %error_exit.i109 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %39, i64 0, i32 0\l  %40 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i109, align 8, !tbaa !23\l  %41 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %40(%struct.jpeg_common_struct* %41) #6\l  br label %if.end163.i\l}"];
	Node0x4f95200 -> Node0x4f95120;
	Node0x4f95120 [shape=record,label="{if.end163.i:                                      \l  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %output_file, align 8,\l... !tbaa !2\l  %call167.i = call i64 @fwrite(i8* nonnull %23, i64 1, i64 40,\l... %struct._IO_FILE* %42) #6\l  %cmp168.i = icmp eq i64 %call167.i, 40\l  br i1 %cmp168.i, label %if.end175.i, label %if.then170.i\l|{<s0>T|<s1>F}}"];
	Node0x4f95120:s0 -> Node0x4f95aa0;
	Node0x4f95120:s1 -> Node0x4f95b80;
	Node0x4f95b80 [shape=record,label="{if.then170.i:                                     \l  %err171.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %43 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err171.i,\l... align 8, !tbaa !19\l  %msg_code172.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %43, i64 0, i32 5\l  store i32 36, i32* %msg_code172.i, align 8, !tbaa !20\l  %error_exit174.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %43, i64 0, i32 0\l  %44 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit174.i, align 8, !tbaa !23\l  %45 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %44(%struct.jpeg_common_struct* %45) #6\l  br label %if.end175.i\l}"];
	Node0x4f95b80 -> Node0x4f95aa0;
	Node0x4f95aa0 [shape=record,label="{if.end175.i:                                      \l  %cmp176.i = icmp eq i32 %cmap_entries.0.i72, 0\l  br i1 %cmp176.i, label %write_bmp_header.exit, label %if.then178.i\l|{<s0>T|<s1>F}}"];
	Node0x4f95aa0:s0 -> Node0x4f962c0;
	Node0x4f95aa0:s1 -> Node0x4f9af00;
	Node0x4f9af00 [shape=record,label="{if.then178.i:                                     \l  %dest.idx.val.i110 = load %struct._IO_FILE*, %struct._IO_FILE**\l... %output_file, align 8, !tbaa !2\l  tail call fastcc void @write_colormap(%struct.jpeg_decompress_struct*\l... nonnull %cinfo, %struct._IO_FILE* %dest.idx.val.i110, i32\l... %cmap_entries.0.i72, i32 4) #6\l  br label %write_bmp_header.exit\l}"];
	Node0x4f9af00 -> Node0x4f962c0;
	Node0x4f962c0 [shape=record,label="{write_bmp_header.exit:                            \l  call void @llvm.lifetime.end(i64 40, i8* nonnull %23) #6\l  call void @llvm.lifetime.end(i64 14, i8* nonnull %6) #6\l  br label %if.end\l}"];
	Node0x4f962c0 -> Node0x4f99e10;
	Node0x4f99e10 [shape=record,label="{if.end:                                           \l  %output_height.pre-phi = phi i32* [ %output_height.i77,\l... %write_bmp_header.exit ], [ %output_height.i, %write_os2_header.exit ]\l  %46 = load i32, i32* %output_height.pre-phi, align 4, !tbaa !17\l  %cmp114 = icmp eq i32 %46, 0\l  %cmp2 = icmp ne %struct.cdjpeg_progress_mgr* %3, null\l  br i1 %cmp114, label %for.end21, label %for.body.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x4f99e10:s0 -> Node0x4f9b690;
	Node0x4f99e10:s1 -> Node0x4f9b770;
	Node0x4f9b770 [shape=record,label="{for.body.lr.ph:                                   \l  %pass_counter = getelementptr inbounds %struct.cdjpeg_progress_mgr,\l... %struct.cdjpeg_progress_mgr* %3, i64 0, i32 0, i32 1\l  %pass_limit = getelementptr inbounds %struct.cdjpeg_progress_mgr,\l... %struct.cdjpeg_progress_mgr* %3, i64 0, i32 0, i32 2\l  %progress_monitor10 = bitcast %struct.cdjpeg_progress_mgr* %3 to void\l... (%struct.jpeg_common_struct*)**\l  %47 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %whole_image = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 1, i32 1\l  %48 = bitcast void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*, i32)** %whole_image to\l... %struct.jvirt_sarray_control**\l  %row_width = getelementptr inbounds %struct.bmp_dest_struct,\l... %struct.bmp_dest_struct* %0, i64 0, i32 4\l  br i1 %cmp2, label %if.then3.us.preheader, label %if.end11.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4f9b770:s0 -> Node0x4fab150;
	Node0x4f9b770:s1 -> Node0x4fab250;
	Node0x4fab250 [shape=record,label="{if.end11.preheader:                               \l  br label %if.end11\l}"];
	Node0x4fab250 -> Node0x4fab3e0;
	Node0x4fab150 [shape=record,label="{if.then3.us.preheader:                            \l  br label %if.then3.us\l}"];
	Node0x4fab150 -> Node0x4fab490;
	Node0x4fab490 [shape=record,label="{if.then3.us:                                      \l  %49 = phi i32 [ %.pre, %for.cond.loopexit.us.if.then3.us_crit_edge ], [ %46,\l... %if.then3.us.preheader ]\l  %row.0115.us = phi i32 [ %sub12.us,\l... %for.cond.loopexit.us.if.then3.us_crit_edge ], [ %46, %if.then3.us.preheader ]\l  %sub.us = sub i32 %49, %row.0115.us\l  %conv.us = zext i32 %sub.us to i64\l  store i64 %conv.us, i64* %pass_counter, align 8, !tbaa !24\l  %conv7.us = zext i32 %49 to i64\l  store i64 %conv7.us, i64* %pass_limit, align 8, !tbaa !27\l  %50 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %progress_monitor10, align 8, !tbaa !28\l  tail call void %50(%struct.jpeg_common_struct* %47) #6\l  %51 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !29\l  %access_virt_sarray.us = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %51, i64 0, i32 7\l  %52 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*,\l... i32, i32, i32)*, i8** (%struct.jpeg_common_struct*,\l... %struct.jvirt_sarray_control*, i32, i32, i32)** %access_virt_sarray.us, align\l... 8, !tbaa !30\l  %53 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control**\l... %48, align 8, !tbaa !32\l  %sub12.us = add i32 %row.0115.us, -1\l  %call.us = tail call i8** %52(%struct.jpeg_common_struct* %47,\l... %struct.jvirt_sarray_control* %53, i32 %sub12.us, i32 1, i32 0) #6\l  %54 = load i32, i32* %row_width, align 4, !tbaa !16\l  %cmp14111.us = icmp eq i32 %54, 0\l  br i1 %cmp14111.us, label %for.cond.loopexit.us, label\l... %for.body16.us.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4fab490:s0 -> Node0x4facd90;
	Node0x4fab490:s1 -> Node0x4face90;
	Node0x4face90 [shape=record,label="{for.body16.us.preheader:                          \l  %55 = load i8*, i8** %call.us, align 8, !tbaa !33\l  br label %for.body16.us\l}"];
	Node0x4face90 -> Node0x4fad0f0;
	Node0x4fad0f0 [shape=record,label="{for.body16.us:                                    \l  %data_ptr.0113.us = phi i8* [ %incdec.ptr.us, %for.body16.us ], [ %55,\l... %for.body16.us.preheader ]\l  %col.0112.us = phi i32 [ %dec.us, %for.body16.us ], [ %54,\l... %for.body16.us.preheader ]\l  %56 = load i8, i8* %data_ptr.0113.us, align 1, !tbaa !18\l  %conv17.us = zext i8 %56 to i32\l  %call18.us = tail call i32 @_IO_putc(i32 %conv17.us, %struct._IO_FILE* %1)\l  %incdec.ptr.us = getelementptr inbounds i8, i8* %data_ptr.0113.us, i64 1\l  %dec.us = add i32 %col.0112.us, -1\l  %cmp14.us = icmp eq i32 %dec.us, 0\l  br i1 %cmp14.us, label %for.cond.loopexit.us.loopexit, label %for.body16.us\l|{<s0>T|<s1>F}}"];
	Node0x4fad0f0:s0 -> Node0x4fadab0;
	Node0x4fad0f0:s1 -> Node0x4fad0f0;
	Node0x4fadab0 [shape=record,label="{for.cond.loopexit.us.loopexit:                    \l  br label %for.cond.loopexit.us\l}"];
	Node0x4fadab0 -> Node0x4facd90;
	Node0x4facd90 [shape=record,label="{for.cond.loopexit.us:                             \l  %cmp.us = icmp eq i32 %sub12.us, 0\l  br i1 %cmp.us, label %for.end21.loopexit, label\l... %for.cond.loopexit.us.if.then3.us_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x4facd90:s0 -> Node0x4fadc40;
	Node0x4facd90:s1 -> Node0x4fab650;
	Node0x4fab650 [shape=record,label="{for.cond.loopexit.us.if.then3.us_crit_edge:       \l  %.pre = load i32, i32* %output_height.pre-phi, align 4, !tbaa !17\l  br label %if.then3.us\l}"];
	Node0x4fab650 -> Node0x4fab490;
	Node0x4fadd20 [shape=record,label="{for.cond.loopexit.loopexit:                       \l  br label %for.cond.loopexit\l}"];
	Node0x4fadd20 -> Node0x4fadd70;
	Node0x4fadd70 [shape=record,label="{for.cond.loopexit:                                \l  %cmp = icmp eq i32 %sub12, 0\l  br i1 %cmp, label %for.end21.loopexit119, label %if.end11\l|{<s0>T|<s1>F}}"];
	Node0x4fadd70:s0 -> Node0x4fadef0;
	Node0x4fadd70:s1 -> Node0x4fab3e0;
	Node0x4fab3e0 [shape=record,label="{if.end11:                                         \l  %row.0115 = phi i32 [ %sub12, %for.cond.loopexit ], [ %46,\l... %if.end11.preheader ]\l  %57 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !29\l  %access_virt_sarray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %57, i64 0, i32 7\l  %58 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*,\l... i32, i32, i32)*, i8** (%struct.jpeg_common_struct*,\l... %struct.jvirt_sarray_control*, i32, i32, i32)** %access_virt_sarray, align 8,\l... !tbaa !30\l  %59 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control**\l... %48, align 8, !tbaa !32\l  %sub12 = add i32 %row.0115, -1\l  %call = tail call i8** %58(%struct.jpeg_common_struct* %47,\l... %struct.jvirt_sarray_control* %59, i32 %sub12, i32 1, i32 0) #6\l  %60 = load i32, i32* %row_width, align 4, !tbaa !16\l  %cmp14111 = icmp eq i32 %60, 0\l  br i1 %cmp14111, label %for.cond.loopexit, label %for.body16.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4fab3e0:s0 -> Node0x4fadd70;
	Node0x4fab3e0:s1 -> Node0x4faeb70;
	Node0x4faeb70 [shape=record,label="{for.body16.preheader:                             \l  %61 = load i8*, i8** %call, align 8, !tbaa !33\l  br label %for.body16\l}"];
	Node0x4faeb70 -> Node0x4faf310;
	Node0x4faf310 [shape=record,label="{for.body16:                                       \l  %data_ptr.0113 = phi i8* [ %incdec.ptr, %for.body16 ], [ %61,\l... %for.body16.preheader ]\l  %col.0112 = phi i32 [ %dec, %for.body16 ], [ %60, %for.body16.preheader ]\l  %62 = load i8, i8* %data_ptr.0113, align 1, !tbaa !18\l  %conv17 = zext i8 %62 to i32\l  %call18 = tail call i32 @_IO_putc(i32 %conv17, %struct._IO_FILE* %1)\l  %incdec.ptr = getelementptr inbounds i8, i8* %data_ptr.0113, i64 1\l  %dec = add i32 %col.0112, -1\l  %cmp14 = icmp eq i32 %dec, 0\l  br i1 %cmp14, label %for.cond.loopexit.loopexit, label %for.body16\l|{<s0>T|<s1>F}}"];
	Node0x4faf310:s0 -> Node0x4fadd20;
	Node0x4faf310:s1 -> Node0x4faf310;
	Node0x4fadc40 [shape=record,label="{for.end21.loopexit:                               \l  br label %for.end21\l}"];
	Node0x4fadc40 -> Node0x4f9b690;
	Node0x4fadef0 [shape=record,label="{for.end21.loopexit119:                            \l  br label %for.end21\l}"];
	Node0x4fadef0 -> Node0x4f9b690;
	Node0x4f9b690 [shape=record,label="{for.end21:                                        \l  br i1 %cmp2, label %if.then24, label %if.end25\l|{<s0>T|<s1>F}}"];
	Node0x4f9b690:s0 -> Node0x4fafae0;
	Node0x4f9b690:s1 -> Node0x4fafb30;
	Node0x4fafae0 [shape=record,label="{if.then24:                                        \l  %completed_extra_passes = getelementptr inbounds\l... %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %3, i64 0, i32 1\l  %63 = load i32, i32* %completed_extra_passes, align 8, !tbaa !34\l  %inc = add nsw i32 %63, 1\l  store i32 %inc, i32* %completed_extra_passes, align 8, !tbaa !34\l  br label %if.end25\l}"];
	Node0x4fafae0 -> Node0x4fafb30;
	Node0x4fafb30 [shape=record,label="{if.end25:                                         \l  %call26 = tail call i32 @fflush(%struct._IO_FILE* %1)\l  %call27 = tail call i32 @ferror(%struct._IO_FILE* %1) #6\l  %tobool28 = icmp eq i32 %call27, 0\l  br i1 %tobool28, label %if.end31, label %if.then29\l|{<s0>T|<s1>F}}"];
	Node0x4fafb30:s0 -> Node0x4fb0ac0;
	Node0x4fafb30:s1 -> Node0x4fb0ba0;
	Node0x4fb0ba0 [shape=record,label="{if.then29:                                        \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %64 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !19\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %64, i64 0, i32 5\l  store i32 36, i32* %msg_code, align 8, !tbaa !20\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %64, i64 0, i32 0\l  %65 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !23\l  %66 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %65(%struct.jpeg_common_struct* %66) #6\l  br label %if.end31\l}"];
	Node0x4fb0ba0 -> Node0x4fb0ac0;
	Node0x4fb0ac0 [shape=record,label="{if.end31:                                         \l  ret void\l}"];
}
