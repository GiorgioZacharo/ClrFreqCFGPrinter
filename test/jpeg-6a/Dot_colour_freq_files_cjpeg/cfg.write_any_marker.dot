digraph "CFG for 'write_any_marker' function" {
	label="CFG for 'write_any_marker' function";

	Node0x5aa3160 [shape=record,label="{entry:\l  %cmp = icmp ult i32 %datalen, 65534\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5aa3160:s0 -> Node0x5aa3290;
	Node0x5aa3160:s1 -> Node0x5aa3300;
	Node0x5aa3290 [shape=record,label="{if.then:                                          \l  %dest1.i.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 5\l  %0 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !3\l  %next_output_byte.i.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %0, i64 0, i32 0\l  %1 = load i8*, i8** %next_output_byte.i.i, align 8, !tbaa !11\l  %incdec.ptr.i.i = getelementptr inbounds i8, i8* %1, i64 1\l  store i8* %incdec.ptr.i.i, i8** %next_output_byte.i.i, align 8, !tbaa !11\l  store i8 -1, i8* %1, align 1, !tbaa !14\l  %free_in_buffer.i.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %0, i64 0, i32 1\l  %2 = load i64, i64* %free_in_buffer.i.i, align 8, !tbaa !15\l  %dec.i.i = add i64 %2, -1\l  store i64 %dec.i.i, i64* %free_in_buffer.i.i, align 8, !tbaa !15\l  %cmp.i.i = icmp eq i64 %dec.i.i, 0\l  br i1 %cmp.i.i, label %if.then.i.i, label %emit_byte.exit.i, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x5aa3290:s0 -> Node0x5aa4df0;
	Node0x5aa3290:s1 -> Node0x5aa4ed0;
	Node0x5aa4df0 [shape=record,label="{if.then.i.i:                                      \l  %empty_output_buffer.i.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %0, i64 0, i32 3\l  %3 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i, align 8, !tbaa !17\l  %call.i.i = tail call i32 %3(%struct.jpeg_compress_struct* nonnull %cinfo) #1\l  %tobool.i.i = icmp eq i32 %call.i.i, 0\l  br i1 %tobool.i.i, label %if.then3.i.i, label %emit_byte.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x5aa4df0:s0 -> Node0x5aa5610;
	Node0x5aa4df0:s1 -> Node0x5aa4ed0;
	Node0x5aa5610 [shape=record,label="{if.then3.i.i:                                     \l  %err.i.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %4 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i.i, align\l... 8, !tbaa !18\l  %msg_code.i.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %4, i64 0, i32 5\l  store i32 22, i32* %msg_code.i.i, align 8, !tbaa !19\l  %error_exit.i.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %4, i64 0, i32 0\l  %5 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i.i, align 8, !tbaa !21\l  %6 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %5(%struct.jpeg_common_struct* %6) #1\l  br label %emit_byte.exit.i\l}"];
	Node0x5aa5610 -> Node0x5aa4ed0;
	Node0x5aa4ed0 [shape=record,label="{emit_byte.exit.i:                                 \l  %7 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !3\l  %conv.i.i = trunc i32 %marker to i8\l  %next_output_byte.i3.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %7, i64 0, i32 0\l  %8 = load i8*, i8** %next_output_byte.i3.i, align 8, !tbaa !11\l  %incdec.ptr.i4.i = getelementptr inbounds i8, i8* %8, i64 1\l  store i8* %incdec.ptr.i4.i, i8** %next_output_byte.i3.i, align 8, !tbaa !11\l  store i8 %conv.i.i, i8* %8, align 1, !tbaa !14\l  %free_in_buffer.i5.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %7, i64 0, i32 1\l  %9 = load i64, i64* %free_in_buffer.i5.i, align 8, !tbaa !15\l  %dec.i6.i = add i64 %9, -1\l  store i64 %dec.i6.i, i64* %free_in_buffer.i5.i, align 8, !tbaa !15\l  %cmp.i7.i = icmp eq i64 %dec.i6.i, 0\l  br i1 %cmp.i7.i, label %if.then.i11.i, label %emit_marker.exit, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x5aa4ed0:s0 -> Node0x5a9d100;
	Node0x5aa4ed0:s1 -> Node0x5a9d210;
	Node0x5a9d100 [shape=record,label="{if.then.i11.i:                                    \l  %empty_output_buffer.i8.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %7, i64 0, i32 3\l  %10 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i8.i, align 8, !tbaa\l... !17\l  %call.i9.i = tail call i32 %10(%struct.jpeg_compress_struct* nonnull %cinfo)\l... #1\l  %tobool.i10.i = icmp eq i32 %call.i9.i, 0\l  br i1 %tobool.i10.i, label %if.then3.i15.i, label %emit_marker.exit\l|{<s0>T|<s1>F}}"];
	Node0x5a9d100:s0 -> Node0x5aa8a50;
	Node0x5a9d100:s1 -> Node0x5a9d210;
	Node0x5aa8a50 [shape=record,label="{if.then3.i15.i:                                   \l  %err.i12.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i12.i,\l... align 8, !tbaa !18\l  %msg_code.i13.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 5\l  store i32 22, i32* %msg_code.i13.i, align 8, !tbaa !19\l  %error_exit.i14.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 0\l  %12 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i14.i, align 8, !tbaa !21\l  %13 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %12(%struct.jpeg_common_struct* %13) #1\l  br label %emit_marker.exit\l}"];
	Node0x5aa8a50 -> Node0x5a9d210;
	Node0x5a9d210 [shape=record,label="{emit_marker.exit:                                 \l  %add = add i32 %datalen, 2\l  %shr4.i = lshr i32 %add, 8\l  %14 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !3\l  %conv.i.i7 = trunc i32 %shr4.i to i8\l  %next_output_byte.i.i8 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %14, i64 0, i32 0\l  %15 = load i8*, i8** %next_output_byte.i.i8, align 8, !tbaa !11\l  %incdec.ptr.i.i9 = getelementptr inbounds i8, i8* %15, i64 1\l  store i8* %incdec.ptr.i.i9, i8** %next_output_byte.i.i8, align 8, !tbaa !11\l  store i8 %conv.i.i7, i8* %15, align 1, !tbaa !14\l  %free_in_buffer.i.i10 = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %14, i64 0, i32 1\l  %16 = load i64, i64* %free_in_buffer.i.i10, align 8, !tbaa !15\l  %dec.i.i11 = add i64 %16, -1\l  store i64 %dec.i.i11, i64* %free_in_buffer.i.i10, align 8, !tbaa !15\l  %cmp.i.i12 = icmp eq i64 %dec.i.i11, 0\l  br i1 %cmp.i.i12, label %if.then.i.i16, label %emit_byte.exit.i21, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x5a9d210:s0 -> Node0x5aaabb0;
	Node0x5a9d210:s1 -> Node0x5aaacc0;
	Node0x5aaabb0 [shape=record,label="{if.then.i.i16:                                    \l  %empty_output_buffer.i.i13 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %14, i64 0, i32 3\l  %17 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i13, align 8, !tbaa\l... !17\l  %call.i.i14 = tail call i32 %17(%struct.jpeg_compress_struct* nonnull\l... %cinfo) #1\l  %tobool.i.i15 = icmp eq i32 %call.i.i14, 0\l  br i1 %tobool.i.i15, label %if.then3.i.i20, label %emit_byte.exit.i21\l|{<s0>T|<s1>F}}"];
	Node0x5aaabb0:s0 -> Node0x5aa6990;
	Node0x5aaabb0:s1 -> Node0x5aaacc0;
	Node0x5aa6990 [shape=record,label="{if.then3.i.i20:                                   \l  %err.i.i17 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %18 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i.i17,\l... align 8, !tbaa !18\l  %msg_code.i.i18 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %18, i64 0, i32 5\l  store i32 22, i32* %msg_code.i.i18, align 8, !tbaa !19\l  %error_exit.i.i19 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %18, i64 0, i32 0\l  %19 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i.i19, align 8, !tbaa !21\l  %20 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %19(%struct.jpeg_common_struct* %20) #1\l  br label %emit_byte.exit.i21\l}"];
	Node0x5aa6990 -> Node0x5aaacc0;
	Node0x5aaacc0 [shape=record,label="{emit_byte.exit.i21:                               \l  %21 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !3\l  %conv.i6.i = trunc i32 %add to i8\l  %next_output_byte.i7.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %21, i64 0, i32 0\l  %22 = load i8*, i8** %next_output_byte.i7.i, align 8, !tbaa !11\l  %incdec.ptr.i8.i = getelementptr inbounds i8, i8* %22, i64 1\l  store i8* %incdec.ptr.i8.i, i8** %next_output_byte.i7.i, align 8, !tbaa !11\l  store i8 %conv.i6.i, i8* %22, align 1, !tbaa !14\l  %free_in_buffer.i9.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %21, i64 0, i32 1\l  %23 = load i64, i64* %free_in_buffer.i9.i, align 8, !tbaa !15\l  %dec.i10.i = add i64 %23, -1\l  store i64 %dec.i10.i, i64* %free_in_buffer.i9.i, align 8, !tbaa !15\l  %cmp.i11.i = icmp eq i64 %dec.i10.i, 0\l  br i1 %cmp.i11.i, label %if.then.i15.i, label %while.cond.preheader, !prof\l... !16\l|{<s0>T|<s1>F}}"];
	Node0x5aaacc0:s0 -> Node0x5aac0f0;
	Node0x5aaacc0:s1 -> Node0x5aac200;
	Node0x5aac0f0 [shape=record,label="{if.then.i15.i:                                    \l  %empty_output_buffer.i12.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %21, i64 0, i32 3\l  %24 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i12.i, align 8, !tbaa\l... !17\l  %call.i13.i = tail call i32 %24(%struct.jpeg_compress_struct* nonnull\l... %cinfo) #1\l  %tobool.i14.i = icmp eq i32 %call.i13.i, 0\l  br i1 %tobool.i14.i, label %if.then3.i19.i, label %while.cond.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5aac0f0:s0 -> Node0x5a9f0b0;
	Node0x5aac0f0:s1 -> Node0x5aac200;
	Node0x5a9f0b0 [shape=record,label="{if.then3.i19.i:                                   \l  %err.i16.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i16.i,\l... align 8, !tbaa !18\l  %msg_code.i17.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %25, i64 0, i32 5\l  store i32 22, i32* %msg_code.i17.i, align 8, !tbaa !19\l  %error_exit.i18.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %25, i64 0, i32 0\l  %26 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i18.i, align 8, !tbaa !21\l  %27 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %26(%struct.jpeg_common_struct* %27) #1\l  br label %while.cond.preheader\l}"];
	Node0x5a9f0b0 -> Node0x5aac200;
	Node0x5aac200 [shape=record,label="{while.cond.preheader:                             \l  %tobool22 = icmp eq i32 %datalen, 0\l  br i1 %tobool22, label %if.end, label %while.body.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x5aac200:s0 -> Node0x5aa3300;
	Node0x5aac200:s1 -> Node0x5a9f810;
	Node0x5a9f810 [shape=record,label="{while.body.lr.ph:                                 \l  %err.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %28 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  br label %while.body\l}"];
	Node0x5a9f810 -> Node0x5a9f9c0;
	Node0x5a9f9c0 [shape=record,label="{while.body:                                       \l  %datalen.addr.024 = phi i32 [ %datalen, %while.body.lr.ph ], [ %dec,\l... %emit_byte.exit ]\l  %dataptr.addr.023 = phi i8* [ %dataptr, %while.body.lr.ph ], [ %incdec.ptr,\l... %emit_byte.exit ]\l  %dec = add i32 %datalen.addr.024, -1\l  %29 = load i8, i8* %dataptr.addr.023, align 1, !tbaa !14\l  %30 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !3\l  %next_output_byte.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %30, i64 0, i32 0\l  %31 = load i8*, i8** %next_output_byte.i, align 8, !tbaa !11\l  %incdec.ptr.i = getelementptr inbounds i8, i8* %31, i64 1\l  store i8* %incdec.ptr.i, i8** %next_output_byte.i, align 8, !tbaa !11\l  store i8 %29, i8* %31, align 1, !tbaa !14\l  %free_in_buffer.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %30, i64 0, i32 1\l  %32 = load i64, i64* %free_in_buffer.i, align 8, !tbaa !15\l  %dec.i = add i64 %32, -1\l  store i64 %dec.i, i64* %free_in_buffer.i, align 8, !tbaa !15\l  %cmp.i = icmp eq i64 %dec.i, 0\l  br i1 %cmp.i, label %if.then.i, label %emit_byte.exit, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x5a9f9c0:s0 -> Node0x5aa7d00;
	Node0x5a9f9c0:s1 -> Node0x5a9fb40;
	Node0x5aa7d00 [shape=record,label="{if.then.i:                                        \l  %empty_output_buffer.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %30, i64 0, i32 3\l  %33 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i, align 8, !tbaa !17\l  %call.i = tail call i32 %33(%struct.jpeg_compress_struct* nonnull %cinfo) #1\l  %tobool.i = icmp eq i32 %call.i, 0\l  br i1 %tobool.i, label %if.then3.i, label %emit_byte.exit\l|{<s0>T|<s1>F}}"];
	Node0x5aa7d00:s0 -> Node0x5aaf7d0;
	Node0x5aa7d00:s1 -> Node0x5a9fb40;
	Node0x5aaf7d0 [shape=record,label="{if.then3.i:                                       \l  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align\l... 8, !tbaa !18\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %34, i64 0, i32 5\l  store i32 22, i32* %msg_code.i, align 8, !tbaa !19\l  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %34, i64 0, i32 0\l  %35 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !21\l  tail call void %35(%struct.jpeg_common_struct* nonnull %28) #1\l  br label %emit_byte.exit\l}"];
	Node0x5aaf7d0 -> Node0x5a9fb40;
	Node0x5a9fb40 [shape=record,label="{emit_byte.exit:                                   \l  %incdec.ptr = getelementptr inbounds i8, i8* %dataptr.addr.023, i64 1\l  %tobool = icmp eq i32 %dec, 0\l  br i1 %tobool, label %if.end.loopexit, label %while.body\l|{<s0>T|<s1>F}}"];
	Node0x5a9fb40:s0 -> Node0x5aafe50;
	Node0x5a9fb40:s1 -> Node0x5a9f9c0;
	Node0x5aafe50 [shape=record,label="{if.end.loopexit:                                  \l  br label %if.end\l}"];
	Node0x5aafe50 -> Node0x5aa3300;
	Node0x5aa3300 [shape=record,label="{if.end:                                           \l  ret void\l}"];
}
