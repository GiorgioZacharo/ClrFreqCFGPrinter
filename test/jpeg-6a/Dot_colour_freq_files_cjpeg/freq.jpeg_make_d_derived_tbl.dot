digraph "CFG for 'jpeg_make_d_derived_tbl' function" {
	label="CFG for 'jpeg_make_d_derived_tbl' function";

	Node0x4e61dc0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %huffsize = alloca [257 x i8], align 16\l  %huffcode = alloca [257 x i32], align 16\l  %0 = getelementptr inbounds [257 x i8], [257 x i8]* %huffsize, i64 0, i64 0\l  call void @llvm.lifetime.start(i64 257, i8* %0) #2\l  %1 = bitcast [257 x i32]* %huffcode to i8*\l  call void @llvm.lifetime.start(i64 1028, i8* %1) #2\l  %2 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %pdtbl, align 8,\l... !tbaa !2\l  %cmp = icmp eq %struct.d_derived_tbl* %2, null\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x4e61dc0:s0 -> Node0x4e63c50;
	Node0x4e61dc0:s1 -> Node0x4e63d00;
	Node0x4e63c50 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %3 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !6\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %3, i64 0, i32 0\l  %4 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !11\l  %5 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %4(%struct.jpeg_common_struct* %5, i32 1, i64 1640) #2\l  %6 = bitcast %struct.d_derived_tbl** %pdtbl to i8**\l  store i8* %call, i8** %6, align 8, !tbaa !2\l  %7 = bitcast i8* %call to %struct.d_derived_tbl*\l  br label %if.end\l}"];
	Node0x4e63c50 -> Node0x4e63d00;
	Node0x4e63d00 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %8 = phi %struct.d_derived_tbl* [ %7, %if.then ], [ %2, %entry ]\l  %pub = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl*\l... %8, i64 0, i32 3\l  store %struct.JHUFF_TBL* %htbl, %struct.JHUFF_TBL** %pub, align 8, !tbaa !14\l  br label %for.cond2.preheader\l}"];
	Node0x4e63d00 -> Node0x4e642b0;
	Node0x4e642b0 [shape=record, style = filled, fillcolor = blue, label="{for.cond2.preheader:                              \l  %indvars.iv209 = phi i64 [ 1, %if.end ], [ %indvars.iv.next210, %for.inc10 ]\l  %l.0195 = phi i32 [ 1, %if.end ], [ %inc11, %for.inc10 ]\l  %p.0194 = phi i32 [ 0, %if.end ], [ %p.1.lcssa, %for.inc10 ]\l  %arrayidx = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl, i64 0, i32 0, i64 %indvars.iv209\l  %9 = load i8, i8* %arrayidx, align 1, !tbaa !16\l  %cmp3190 = icmp eq i8 %9, 0\l  br i1 %cmp3190, label %for.inc10, label %for.body5.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x4e642b0:s0 -> Node0x4e652e0;
	Node0x4e642b0:s1 -> Node0x4e65b00;
	Node0x4e65b00 [shape=record, style = filled, fillcolor = blue, label="{for.body5.lr.ph:                                  \l  %conv6 = trunc i32 %l.0195 to i8\l  %conv = zext i8 %9 to i32\l  %10 = sext i32 %p.0194 to i64\l  %scevgep = getelementptr [257 x i8], [257 x i8]* %huffsize, i64 0, i64 %10\l  %11 = icmp ugt i32 %conv, 1\l  %smax = select i1 %11, i32 %conv, i32 1\l  %12 = add nsw i32 %smax, -1\l  %13 = zext i32 %12 to i64\l  %14 = add nuw nsw i64 %13, 1\l  call void @llvm.memset.p0i8.i64(i8* %scevgep, i8 %conv6, i64 %14, i32 1, i1\l... false)\l  %15 = zext i8 %9 to i32\l  %16 = add nsw i32 %15, -1\l  %xtraiter219 = and i32 %15, 7\l  %lcmp.mod220 = icmp eq i32 %xtraiter219, 0\l  br i1 %lcmp.mod220, label %for.body5.lr.ph.split, label\l... %for.body5.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4e65b00:s0 -> Node0x4e66910;
	Node0x4e65b00:s1 -> Node0x4e669f0;
	Node0x4e669f0 [shape=record, style = filled, fillcolor = blue, label="{for.body5.prol.preheader:                         \l  br label %for.body5.prol\l}"];
	Node0x4e669f0 -> Node0x4e66ba0;
	Node0x4e66ba0 [shape=record, style = filled, fillcolor = blue, label="{for.body5.prol:                                   \l  %i.0192.prol = phi i32 [ %inc9.prol, %for.body5.prol ], [ 1,\l... %for.body5.prol.preheader ]\l  %p.1191.prol = phi i32 [ %inc.prol, %for.body5.prol ], [ %p.0194,\l... %for.body5.prol.preheader ]\l  %prol.iter221 = phi i32 [ %prol.iter221.sub, %for.body5.prol ], [\l... %xtraiter219, %for.body5.prol.preheader ]\l  %inc.prol = add nsw i32 %p.1191.prol, 1\l  %inc9.prol = add nuw nsw i32 %i.0192.prol, 1\l  %prol.iter221.sub = add i32 %prol.iter221, -1\l  %prol.iter221.cmp = icmp eq i32 %prol.iter221.sub, 0\l  br i1 %prol.iter221.cmp, label %for.body5.lr.ph.split.loopexit, label\l... %for.body5.prol, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x4e66ba0:s0 -> Node0x4e67360;
	Node0x4e66ba0:s1 -> Node0x4e66ba0;
	Node0x4e67360 [shape=record, style = filled, fillcolor = blue, label="{for.body5.lr.ph.split.loopexit:                   \l  %inc9.prol.lcssa = phi i32 [ %inc9.prol, %for.body5.prol ]\l  %inc.prol.lcssa = phi i32 [ %inc.prol, %for.body5.prol ]\l  br label %for.body5.lr.ph.split\l}"];
	Node0x4e67360 -> Node0x4e66910;
	Node0x4e66910 [shape=record, style = filled, fillcolor = blue, label="{for.body5.lr.ph.split:                            \l  %i.0192.unr = phi i32 [ 1, %for.body5.lr.ph ], [ %inc9.prol.lcssa,\l... %for.body5.lr.ph.split.loopexit ]\l  %p.1191.unr = phi i32 [ %p.0194, %for.body5.lr.ph ], [ %inc.prol.lcssa,\l... %for.body5.lr.ph.split.loopexit ]\l  %inc.lcssa.unr = phi i32 [ undef, %for.body5.lr.ph ], [ %inc.prol.lcssa,\l... %for.body5.lr.ph.split.loopexit ]\l  %17 = icmp ult i32 %16, 7\l  br i1 %17, label %for.inc10.loopexit, label %for.body5.lr.ph.split.split\l|{<s0>T|<s1>F}}"];
	Node0x4e66910:s0 -> Node0x4e61230;
	Node0x4e66910:s1 -> Node0x4e681a0;
	Node0x4e681a0 [shape=record, style = filled, fillcolor = blue, label="{for.body5.lr.ph.split.split:                      \l  br label %for.body5\l}"];
	Node0x4e681a0 -> Node0x4e68350;
	Node0x4e68350 [shape=record, style = filled, fillcolor = blue, label="{for.body5:                                        \l  %i.0192 = phi i32 [ %i.0192.unr, %for.body5.lr.ph.split.split ], [ %inc9.7,\l... %for.body5 ]\l  %p.1191 = phi i32 [ %p.1191.unr, %for.body5.lr.ph.split.split ], [ %inc.7,\l... %for.body5 ]\l  %inc9.6 = add nsw i32 %i.0192, 7\l  %inc.7 = add nsw i32 %p.1191, 8\l  %inc9.7 = add nsw i32 %i.0192, 8\l  %cmp3.7 = icmp slt i32 %inc9.6, %conv\l  br i1 %cmp3.7, label %for.body5, label %for.inc10.loopexit.unr-lcssa\l|{<s0>T|<s1>F}}"];
	Node0x4e68350:s0 -> Node0x4e68350;
	Node0x4e68350:s1 -> Node0x4e66100;
	Node0x4e66100 [shape=record, style = filled, fillcolor = blue, label="{for.inc10.loopexit.unr-lcssa:                     \l  %inc.7.lcssa = phi i32 [ %inc.7, %for.body5 ]\l  br label %for.inc10.loopexit\l}"];
	Node0x4e66100 -> Node0x4e61230;
	Node0x4e61230 [shape=record, style = filled, fillcolor = blue, label="{for.inc10.loopexit:                               \l  %inc.lcssa = phi i32 [ %inc.lcssa.unr, %for.body5.lr.ph.split ], [\l... %inc.7.lcssa, %for.inc10.loopexit.unr-lcssa ]\l  br label %for.inc10\l}"];
	Node0x4e61230 -> Node0x4e652e0;
	Node0x4e652e0 [shape=record, style = filled, fillcolor = blue, label="{for.inc10:                                        \l  %p.1.lcssa = phi i32 [ %p.0194, %for.cond2.preheader ], [ %inc.lcssa,\l... %for.inc10.loopexit ]\l  %indvars.iv.next210 = add nuw nsw i64 %indvars.iv209, 1\l  %inc11 = add nuw nsw i32 %l.0195, 1\l  %exitcond211 = icmp eq i64 %indvars.iv.next210, 17\l  br i1 %exitcond211, label %for.end12, label %for.cond2.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4e652e0:s0 -> Node0x4e69030;
	Node0x4e652e0:s1 -> Node0x4e642b0;
	Node0x4e69030 [shape=record, style = filled, fillcolor = blue, label="{for.end12:                                        \l  %p.1.lcssa.lcssa = phi i32 [ %p.1.lcssa, %for.inc10 ]\l  %idxprom13 = sext i32 %p.1.lcssa.lcssa to i64\l  %arrayidx14 = getelementptr inbounds [257 x i8], [257 x i8]* %huffsize, i64\l... 0, i64 %idxprom13\l  store i8 0, i8* %arrayidx14, align 1, !tbaa !16\l  %18 = load i8, i8* %0, align 16, !tbaa !16\l  %tobool185 = icmp eq i8 %18, 0\l  br i1 %tobool185, label %for.body35.preheader, label\l... %while.cond19.preheader.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4e69030:s0 -> Node0x4e69980;
	Node0x4e69030:s1 -> Node0x4e69a30;
	Node0x4e69a30 [shape=record, style = filled, fillcolor = blue, label="{while.cond19.preheader.preheader:                 \l  %conv16 = sext i8 %18 to i32\l  br label %while.cond19.preheader.outer\l}"];
	Node0x4e69a30 -> Node0x4e69bd0;
	Node0x4e69bd0 [shape=record, style = filled, fillcolor = blue, label="{while.cond19.preheader.outer:                     \l  %.ph = phi i8 [ %18, %while.cond19.preheader.preheader ], [ %.lcssa,\l... %while.end ]\l  %code.0188.ph = phi i32 [ 0, %while.cond19.preheader.preheader ], [ %shl,\l... %while.end ]\l  %si.0187.ph = phi i32 [ %conv16, %while.cond19.preheader.preheader ], [\l... %inc30, %while.end ]\l  %p.2186.ph = phi i32 [ 0, %while.cond19.preheader.preheader ], [\l... %inc26.lcssa, %while.end ]\l  %conv22177 = sext i8 %.ph to i32\l  %cmp23178215 = icmp eq i32 %conv22177, %si.0187.ph\l  br i1 %cmp23178215, label %while.body25.preheader, label\l... %while.end.thread.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4e69bd0:s0 -> Node0x4e6a520;
	Node0x4e69bd0:s1 -> Node0x4e6a620;
	Node0x4e6a620 [shape=record, style = filled, fillcolor = blue, label="{while.end.thread.preheader:                       \l  %19 = sext i8 %.ph to i32\l  %20 = sub i32 %19, %si.0187.ph\l  %21 = add nsw i32 %19, -1\l  %22 = sub i32 %21, %si.0187.ph\l  %xtraiter = and i32 %20, 7\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %while.end.thread.preheader.split, label\l... %while.end.thread.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4e6a620:s0 -> Node0x4e6aa80;
	Node0x4e6a620:s1 -> Node0x4e6aba0;
	Node0x4e6aba0 [shape=record, style = filled, fillcolor = blue, label="{while.end.thread.prol.preheader:                  \l  br label %while.end.thread.prol\l}"];
	Node0x4e6aba0 -> Node0x4e6ad50;
	Node0x4e6ad50 [shape=record, style = filled, fillcolor = blue, label="{while.end.thread.prol:                            \l  %si.0187217.prol = phi i32 [ %inc30213.prol, %while.end.thread.prol ], [\l... %si.0187.ph, %while.end.thread.prol.preheader ]\l  %code.0188216.prol = phi i32 [ %shl212.prol, %while.end.thread.prol ], [\l... %code.0188.ph, %while.end.thread.prol.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %while.end.thread.prol ], [\l... %xtraiter, %while.end.thread.prol.preheader ]\l  %shl212.prol = shl i32 %code.0188216.prol, 1\l  %inc30213.prol = add nsw i32 %si.0187217.prol, 1\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %while.end.thread.preheader.split.loopexit,\l... label %while.end.thread.prol, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x4e6ad50:s0 -> Node0x4e67900;
	Node0x4e6ad50:s1 -> Node0x4e6ad50;
	Node0x4e67900 [shape=record, style = filled, fillcolor = blue, label="{while.end.thread.preheader.split.loopexit:        \l  %inc30213.prol.lcssa = phi i32 [ %inc30213.prol, %while.end.thread.prol ]\l  %shl212.prol.lcssa = phi i32 [ %shl212.prol, %while.end.thread.prol ]\l  br label %while.end.thread.preheader.split\l}"];
	Node0x4e67900 -> Node0x4e6aa80;
	Node0x4e6aa80 [shape=record, style = filled, fillcolor = blue, label="{while.end.thread.preheader.split:                 \l  %inc30213.lcssa.unr = phi i32 [ undef, %while.end.thread.preheader ], [\l... %inc30213.prol.lcssa, %while.end.thread.preheader.split.loopexit ]\l  %shl212.lcssa.unr = phi i32 [ undef, %while.end.thread.preheader ], [\l... %shl212.prol.lcssa, %while.end.thread.preheader.split.loopexit ]\l  %si.0187217.unr = phi i32 [ %si.0187.ph, %while.end.thread.preheader ], [\l... %inc30213.prol.lcssa, %while.end.thread.preheader.split.loopexit ]\l  %code.0188216.unr = phi i32 [ %code.0188.ph, %while.end.thread.preheader ],\l... [ %shl212.prol.lcssa, %while.end.thread.preheader.split.loopexit ]\l  %23 = icmp ult i32 %22, 7\l  br i1 %23, label %while.body25.preheader.loopexit, label\l... %while.end.thread.preheader.split.split\l|{<s0>T|<s1>F}}"];
	Node0x4e6aa80:s0 -> Node0x4e6c3a0;
	Node0x4e6aa80:s1 -> Node0x4e687f0;
	Node0x4e687f0 [shape=record, style = filled, fillcolor = blue, label="{while.end.thread.preheader.split.split:           \l  br label %while.end.thread\l}"];
	Node0x4e687f0 -> Node0x4e68960;
	Node0x4e68960 [shape=record, style = filled, fillcolor = blue, label="{while.end.thread:                                 \l  %si.0187217 = phi i32 [ %si.0187217.unr,\l... %while.end.thread.preheader.split.split ], [ %inc30213.7, %while.end.thread ]\l  %code.0188216 = phi i32 [ %code.0188216.unr,\l... %while.end.thread.preheader.split.split ], [ %shl212, %while.end.thread ]\l  %shl212 = shl i32 %code.0188216, 8\l  %inc30213.7 = add nsw i32 %si.0187217, 8\l  %cmp23178.7 = icmp eq i32 %conv22177, %inc30213.7\l  br i1 %cmp23178.7, label %while.body25.preheader.loopexit.unr-lcssa, label\l... %while.end.thread\l|{<s0>T|<s1>F}}"];
	Node0x4e68960:s0 -> Node0x4e6d110;
	Node0x4e68960:s1 -> Node0x4e68960;
	Node0x4e6d110 [shape=record, style = filled, fillcolor = blue, label="{while.body25.preheader.loopexit.unr-lcssa:        \l  %inc30213.7.lcssa = phi i32 [ %inc30213.7, %while.end.thread ]\l  %shl212.lcssa222 = phi i32 [ %shl212, %while.end.thread ]\l  br label %while.body25.preheader.loopexit\l}"];
	Node0x4e6d110 -> Node0x4e6c3a0;
	Node0x4e6c3a0 [shape=record, style = filled, fillcolor = blue, label="{while.body25.preheader.loopexit:                  \l  %inc30213.lcssa = phi i32 [ %inc30213.lcssa.unr,\l... %while.end.thread.preheader.split ], [ %inc30213.7.lcssa,\l... %while.body25.preheader.loopexit.unr-lcssa ]\l  %shl212.lcssa = phi i32 [ %shl212.lcssa.unr,\l... %while.end.thread.preheader.split ], [ %shl212.lcssa222,\l... %while.body25.preheader.loopexit.unr-lcssa ]\l  br label %while.body25.preheader\l}"];
	Node0x4e6c3a0 -> Node0x4e6a520;
	Node0x4e6a520 [shape=record, style = filled, fillcolor = blue, label="{while.body25.preheader:                           \l  %si.0187.lcssa = phi i32 [ %si.0187.ph, %while.cond19.preheader.outer ], [\l... %inc30213.lcssa, %while.body25.preheader.loopexit ]\l  %code.0188.lcssa = phi i32 [ %code.0188.ph, %while.cond19.preheader.outer ],\l... [ %shl212.lcssa, %while.body25.preheader.loopexit ]\l  %idxprom20175 = sext i32 %p.2186.ph to i64\l  br label %while.body25\l}"];
	Node0x4e6a520 -> Node0x4e6d6b0;
	Node0x4e6d6b0 [shape=record, style = filled, fillcolor = blue, label="{while.body25:                                     \l  %idxprom20181 = phi i64 [ %idxprom20, %while.body25 ], [ %idxprom20175,\l... %while.body25.preheader ]\l  %code.1180 = phi i32 [ %inc29, %while.body25 ], [ %code.0188.lcssa,\l... %while.body25.preheader ]\l  %p.3179 = phi i32 [ %inc26, %while.body25 ], [ %p.2186.ph,\l... %while.body25.preheader ]\l  %inc26 = add nsw i32 %p.3179, 1\l  %arrayidx28 = getelementptr inbounds [257 x i32], [257 x i32]* %huffcode,\l... i64 0, i64 %idxprom20181\l  store i32 %code.1180, i32* %arrayidx28, align 4, !tbaa !20\l  %inc29 = add i32 %code.1180, 1\l  %idxprom20 = sext i32 %inc26 to i64\l  %arrayidx21 = getelementptr inbounds [257 x i8], [257 x i8]* %huffsize, i64\l... 0, i64 %idxprom20\l  %24 = load i8, i8* %arrayidx21, align 1, !tbaa !16\l  %conv22 = sext i8 %24 to i32\l  %cmp23 = icmp eq i32 %conv22, %si.0187.lcssa\l  br i1 %cmp23, label %while.body25, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x4e6d6b0:s0 -> Node0x4e6d6b0;
	Node0x4e6d6b0:s1 -> Node0x4e69d70;
	Node0x4e69d70 [shape=record, style = filled, fillcolor = blue, label="{while.end:                                        \l  %.lcssa = phi i8 [ %24, %while.body25 ]\l  %inc29.lcssa = phi i32 [ %inc29, %while.body25 ]\l  %inc26.lcssa = phi i32 [ %inc26, %while.body25 ]\l  %shl = shl i32 %inc29.lcssa, 1\l  %inc30 = add nsw i32 %si.0187.lcssa, 1\l  %tobool = icmp eq i8 %.lcssa, 0\l  br i1 %tobool, label %for.body35.preheader.loopexit, label\l... %while.cond19.preheader.outer\l|{<s0>T|<s1>F}}"];
	Node0x4e69d70:s0 -> Node0x4e6e3f0;
	Node0x4e69d70:s1 -> Node0x4e69bd0;
	Node0x4e6e3f0 [shape=record, style = filled, fillcolor = blue, label="{for.body35.preheader.loopexit:                    \l  br label %for.body35.preheader\l}"];
	Node0x4e6e3f0 -> Node0x4e69980;
	Node0x4e69980 [shape=record, style = filled, fillcolor = blue, label="{for.body35.preheader:                             \l  br label %for.body35\l}"];
	Node0x4e69980 -> Node0x4e6e500;
	Node0x4e6e500 [shape=record, style = filled, fillcolor = blue, label="{for.body35:                                       \l  %indvars.iv202 = phi i64 [ %indvars.iv.next203, %for.inc61 ], [ 1,\l... %for.body35.preheader ]\l  %p.4173 = phi i32 [ %p.5, %for.inc61 ], [ 0, %for.body35.preheader ]\l  %arrayidx38 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl, i64 0, i32 0, i64 %indvars.iv202\l  %25 = load i8, i8* %arrayidx38, align 1, !tbaa !16\l  %tobool39 = icmp eq i8 %25, 0\l  br i1 %tobool39, label %for.inc61, label %if.then40\l|{<s0>T|<s1>F}}"];
	Node0x4e6e500:s0 -> Node0x4e6e580;
	Node0x4e6e500:s1 -> Node0x4e6ea00;
	Node0x4e6ea00 [shape=record, style = filled, fillcolor = blue, label="{if.then40:                                        \l  %arrayidx42 = getelementptr inbounds %struct.d_derived_tbl,\l... %struct.d_derived_tbl* %8, i64 0, i32 2, i64 %indvars.iv202\l  store i32 %p.4173, i32* %arrayidx42, align 4, !tbaa !20\l  %idxprom43 = sext i32 %p.4173 to i64\l  %arrayidx44 = getelementptr inbounds [257 x i32], [257 x i32]* %huffcode,\l... i64 0, i64 %idxprom43\l  %26 = load i32, i32* %arrayidx44, align 4, !tbaa !20\l  %conv45 = zext i32 %26 to i64\l  %arrayidx47 = getelementptr inbounds %struct.d_derived_tbl,\l... %struct.d_derived_tbl* %8, i64 0, i32 0, i64 %indvars.iv202\l  store i64 %conv45, i64* %arrayidx47, align 8, !tbaa !21\l  %27 = load i8, i8* %arrayidx38, align 1, !tbaa !16\l  %conv51 = zext i8 %27 to i32\l  %add = add nsw i32 %conv51, %p.4173\l  %sub = add nsw i32 %add, -1\l  %idxprom52 = sext i32 %sub to i64\l  %arrayidx53 = getelementptr inbounds [257 x i32], [257 x i32]* %huffcode,\l... i64 0, i64 %idxprom52\l  %28 = load i32, i32* %arrayidx53, align 4, !tbaa !20\l  %conv54 = zext i32 %28 to i64\l  br label %for.inc61\l}"];
	Node0x4e6ea00 -> Node0x4e6e580;
	Node0x4e6e580 [shape=record, style = filled, fillcolor = blue, label="{for.inc61:                                        \l  %.sink = phi i64 [ %conv54, %if.then40 ], [ -1, %for.body35 ]\l  %p.5 = phi i32 [ %add, %if.then40 ], [ %p.4173, %for.body35 ]\l  %29 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl*\l... %8, i64 0, i32 1, i64 %indvars.iv202\l  store i64 %.sink, i64* %29, align 8\l  %indvars.iv.next203 = add nuw nsw i64 %indvars.iv202, 1\l  %exitcond204 = icmp eq i64 %indvars.iv.next203, 17\l  br i1 %exitcond204, label %for.end63, label %for.body35\l|{<s0>T|<s1>F}}"];
	Node0x4e6e580:s0 -> Node0x4e6ff90;
	Node0x4e6e580:s1 -> Node0x4e6e500;
	Node0x4e6ff90 [shape=record, style = filled, fillcolor = blue, label="{for.end63:                                        \l  %arrayidx65 = getelementptr inbounds %struct.d_derived_tbl,\l... %struct.d_derived_tbl* %8, i64 0, i32 1, i64 17\l  store i64 1048575, i64* %arrayidx65, align 8, !tbaa !21\l  %look_nbits = getelementptr inbounds %struct.d_derived_tbl,\l... %struct.d_derived_tbl* %8, i64 0, i32 4\l  %30 = bitcast [256 x i32]* %look_nbits to i8*\l  tail call void @llvm.memset.p0i8.i64(i8* %30, i8 0, i64 1024, i32 8, i1\l... false)\l  br label %for.cond70.preheader\l}"];
	Node0x4e6ff90 -> Node0x4e70a30;
	Node0x4e70a30 [shape=record, style = filled, fillcolor = blue, label="{for.cond70.preheader:                             \l  %indvars.iv199 = phi i64 [ 1, %for.end63 ], [ %indvars.iv.next200,\l... %for.inc102 ]\l  %p.6171 = phi i32 [ 0, %for.end63 ], [ %p.7.lcssa, %for.inc102 ]\l  %arrayidx73 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl, i64 0, i32 0, i64 %indvars.iv199\l  %31 = load i8, i8* %arrayidx73, align 1, !tbaa !16\l  %cmp75168 = icmp eq i8 %31, 0\l  br i1 %cmp75168, label %for.inc102, label %for.body77.us.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4e70a30:s0 -> Node0x4e70be0;
	Node0x4e70a30:s1 -> Node0x4e71120;
	Node0x4e71120 [shape=record, style = filled, fillcolor = blue, label="{for.body77.us.preheader:                          \l  %32 = sub nuw nsw i64 8, %indvars.iv199\l  %33 = trunc i64 %32 to i32\l  %shl83 = shl i32 1, %33\l  %34 = sext i32 %p.6171 to i64\l  %35 = trunc i64 %indvars.iv199 to i32\l  br label %for.body77.us\l}"];
	Node0x4e71120 -> Node0x4e715e0;
	Node0x4e715e0 [shape=record, style = filled, fillcolor = blue, label="{for.body77.us:                                    \l  %indvars.iv197 = phi i64 [ %34, %for.body77.us.preheader ], [\l... %indvars.iv.next198, %for.cond84.for.inc98_crit_edge.us ]\l  %i.1170.us = phi i32 [ 1, %for.body77.us.preheader ], [ %inc99.us,\l... %for.cond84.for.inc98_crit_edge.us ]\l  %p.7169.us = phi i32 [ %p.6171, %for.body77.us.preheader ], [ %inc100.us,\l... %for.cond84.for.inc98_crit_edge.us ]\l  %arrayidx79.us = getelementptr inbounds [257 x i32], [257 x i32]* %huffcode,\l... i64 0, i64 %indvars.iv197\l  %36 = load i32, i32* %arrayidx79.us, align 4, !tbaa !20\l  %shl81.us = shl i32 %36, %33\l  %arrayidx92.us = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %htbl, i64 0, i32 1, i64 %indvars.iv197\l  %37 = sext i32 %shl81.us to i64\l  br label %for.body87.us\l}"];
	Node0x4e715e0 -> Node0x4e71fb0;
	Node0x4e71fb0 [shape=record, style = filled, fillcolor = blue, label="{for.body87.us:                                    \l  %indvars.iv = phi i64 [ %37, %for.body77.us ], [ %indvars.iv.next,\l... %for.body87.us ]\l  %ctr.0166.us = phi i32 [ %shl83, %for.body77.us ], [ %dec.us, %for.body87.us\l... ]\l  %arrayidx90.us = getelementptr inbounds %struct.d_derived_tbl,\l... %struct.d_derived_tbl* %8, i64 0, i32 4, i64 %indvars.iv\l  store i32 %35, i32* %arrayidx90.us, align 4, !tbaa !20\l  %38 = load i8, i8* %arrayidx92.us, align 1, !tbaa !16\l  %arrayidx94.us = getelementptr inbounds %struct.d_derived_tbl,\l... %struct.d_derived_tbl* %8, i64 0, i32 5, i64 %indvars.iv\l  store i8 %38, i8* %arrayidx94.us, align 1, !tbaa !16\l  %dec.us = add nsw i32 %ctr.0166.us, -1\l  %cmp85.us = icmp sgt i32 %ctr.0166.us, 1\l  %indvars.iv.next = add nsw i64 %indvars.iv, 1\l  br i1 %cmp85.us, label %for.body87.us, label\l... %for.cond84.for.inc98_crit_edge.us\l|{<s0>T|<s1>F}}"];
	Node0x4e71fb0:s0 -> Node0x4e71fb0;
	Node0x4e71fb0:s1 -> Node0x4e71750;
	Node0x4e71750 [shape=record, style = filled, fillcolor = blue, label="{for.cond84.for.inc98_crit_edge.us:                \l  %inc99.us = add nuw nsw i32 %i.1170.us, 1\l  %inc100.us = add nsw i32 %p.7169.us, 1\l  %39 = load i8, i8* %arrayidx73, align 1, !tbaa !16\l  %conv74.us = zext i8 %39 to i32\l  %cmp75.us = icmp slt i32 %i.1170.us, %conv74.us\l  %indvars.iv.next198 = add i64 %indvars.iv197, 1\l  br i1 %cmp75.us, label %for.body77.us, label %for.inc102.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x4e71750:s0 -> Node0x4e715e0;
	Node0x4e71750:s1 -> Node0x4e6b1d0;
	Node0x4e6b1d0 [shape=record, style = filled, fillcolor = blue, label="{for.inc102.loopexit:                              \l  %inc100.us.lcssa = phi i32 [ %inc100.us, %for.cond84.for.inc98_crit_edge.us ]\l  br label %for.inc102\l}"];
	Node0x4e6b1d0 -> Node0x4e70be0;
	Node0x4e70be0 [shape=record, style = filled, fillcolor = blue, label="{for.inc102:                                       \l  %p.7.lcssa = phi i32 [ %p.6171, %for.cond70.preheader ], [ %inc100.us.lcssa,\l... %for.inc102.loopexit ]\l  %indvars.iv.next200 = add nuw nsw i64 %indvars.iv199, 1\l  %exitcond = icmp eq i64 %indvars.iv.next200, 9\l  br i1 %exitcond, label %for.end104, label %for.cond70.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4e70be0:s0 -> Node0x4e6b490;
	Node0x4e70be0:s1 -> Node0x4e70a30;
	Node0x4e6b490 [shape=record, style = filled, fillcolor = blue, label="{for.end104:                                       \l  call void @llvm.lifetime.end(i64 1028, i8* %1) #2\l  call void @llvm.lifetime.end(i64 257, i8* %0) #2\l  ret void\l}"];
}
