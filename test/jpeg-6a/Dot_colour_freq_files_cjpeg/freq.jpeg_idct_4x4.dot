digraph "CFG for 'jpeg_idct_4x4' function" {
	label="CFG for 'jpeg_idct_4x4' function";

	Node0x6573fb0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %workspace = alloca [32 x i32], align 16\l  %sample_range_limit = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 61\l  %0 = load i8*, i8** %sample_range_limit, align 8, !tbaa !2\l  %1 = bitcast [32 x i32]* %workspace to i8*\l  call void @llvm.lifetime.start(i64 128, i8* %1) #2\l  %dct_table = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr, i64 0, i32 20\l  %2 = bitcast i8** %dct_table to i32**\l  %3 = load i32*, i32** %2, align 8, !tbaa !10\l  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %workspace, i64\l... 0, i64 0\l  br label %for.body\l}"];
	Node0x6573fb0 -> Node0x6579ad0;
	Node0x6579c10 [shape=record, style = filled, fillcolor = blue, label="{for.cond102.preheader:                            \l  %add.ptr = getelementptr inbounds i8, i8* %0, i64 128\l  %idx.ext = zext i32 %output_col to i64\l  br label %for.body105\l}"];
	Node0x6579c10 -> Node0x6577690;
	Node0x6579ad0 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %ctr.0348 = phi i32 [ 8, %entry ], [ %ctr.0348.be, %for.body.backedge ]\l  %wsptr.0347 = phi i32* [ %arraydecay, %entry ], [ %wsptr.0347.be,\l... %for.body.backedge ]\l  %quantptr.0346 = phi i32* [ %3, %entry ], [ %quantptr.0346.be,\l... %for.body.backedge ]\l  %inptr.0345 = phi i16* [ %coef_block, %entry ], [ %inptr.0345.be,\l... %for.body.backedge ]\l  %cmp1 = icmp eq i32 %ctr.0348, 4\l  br i1 %cmp1, label %for.body.backedge, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x6579ad0:s0 -> Node0x657a050;
	Node0x6579ad0:s1 -> Node0x657a840;
	Node0x657a840 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %arrayidx = getelementptr inbounds i16, i16* %inptr.0345, i64 8\l  %4 = load i16, i16* %arrayidx, align 2, !tbaa !12\l  %arrayidx2 = getelementptr inbounds i16, i16* %inptr.0345, i64 16\l  %5 = load i16, i16* %arrayidx2, align 2, !tbaa !12\l  %or333 = or i16 %5, %4\l  %arrayidx4 = getelementptr inbounds i16, i16* %inptr.0345, i64 24\l  %6 = load i16, i16* %arrayidx4, align 2, !tbaa !12\l  %or6334 = or i16 %or333, %6\l  %arrayidx7 = getelementptr inbounds i16, i16* %inptr.0345, i64 40\l  %7 = load i16, i16* %arrayidx7, align 2, !tbaa !12\l  %or9335 = or i16 %or6334, %7\l  %arrayidx10 = getelementptr inbounds i16, i16* %inptr.0345, i64 48\l  %8 = load i16, i16* %arrayidx10, align 2, !tbaa !12\l  %or12336 = or i16 %or9335, %8\l  %arrayidx13 = getelementptr inbounds i16, i16* %inptr.0345, i64 56\l  %9 = load i16, i16* %arrayidx13, align 2, !tbaa !12\l  %or15337 = or i16 %or12336, %9\l  %cmp16 = icmp eq i16 %or15337, 0\l  br i1 %cmp16, label %if.then18, label %if.end26\l|{<s0>T|<s1>F}}"];
	Node0x657a840:s0 -> Node0x657aba0;
	Node0x657a840:s1 -> Node0x657bf50;
	Node0x657aba0 [shape=record, style = filled, fillcolor = blue, label="{if.then18:                                        \l  %10 = load i16, i16* %inptr.0345, align 2, !tbaa !12\l  %conv20 = sext i16 %10 to i32\l  %11 = load i32, i32* %quantptr.0346, align 4, !tbaa !13\l  %mul = shl i32 %11, 2\l  %shl = mul i32 %mul, %conv20\l  store i32 %shl, i32* %wsptr.0347, align 4, !tbaa !13\l  %arrayidx23 = getelementptr inbounds i32, i32* %wsptr.0347, i64 8\l  store i32 %shl, i32* %arrayidx23, align 4, !tbaa !13\l  %arrayidx24 = getelementptr inbounds i32, i32* %wsptr.0347, i64 16\l  store i32 %shl, i32* %arrayidx24, align 4, !tbaa !13\l  %arrayidx25 = getelementptr inbounds i32, i32* %wsptr.0347, i64 24\l  store i32 %shl, i32* %arrayidx25, align 4, !tbaa !13\l  br label %for.inc\l}"];
	Node0x657aba0 -> Node0x6577220;
	Node0x657bf50 [shape=record, style = filled, fillcolor = blue, label="{if.end26:                                         \l  %conv14 = sext i16 %9 to i32\l  %conv11 = sext i16 %8 to i32\l  %conv8 = sext i16 %7 to i32\l  %conv5 = sext i16 %6 to i32\l  %conv = sext i16 %4 to i32\l  %conv3 = sext i16 %5 to i32\l  %12 = load i16, i16* %inptr.0345, align 2, !tbaa !12\l  %conv28 = sext i16 %12 to i32\l  %13 = load i32, i32* %quantptr.0346, align 4, !tbaa !13\l  %mul30 = mul nsw i32 %conv28, %13\l  %conv31 = sext i32 %mul30 to i64\l  %shl32 = shl nsw i64 %conv31, 14\l  %arrayidx35 = getelementptr inbounds i32, i32* %quantptr.0346, i64 16\l  %14 = load i32, i32* %arrayidx35, align 4, !tbaa !13\l  %mul36 = mul nsw i32 %14, %conv3\l  %conv37 = sext i32 %mul36 to i64\l  %arrayidx40 = getelementptr inbounds i32, i32* %quantptr.0346, i64 48\l  %15 = load i32, i32* %arrayidx40, align 4, !tbaa !13\l  %mul41 = mul nsw i32 %15, %conv11\l  %conv42 = sext i32 %mul41 to i64\l  %mul43 = mul nsw i64 %conv37, 15137\l  %mul44 = mul nsw i64 %conv42, -6270\l  %add = add nsw i64 %mul44, %mul43\l  %add45 = add nsw i64 %add, %shl32\l  %sub = sub nsw i64 %shl32, %add\l  %arrayidx48 = getelementptr inbounds i32, i32* %quantptr.0346, i64 56\l  %16 = load i32, i32* %arrayidx48, align 4, !tbaa !13\l  %mul49 = mul nsw i32 %16, %conv14\l  %conv50 = sext i32 %mul49 to i64\l  %arrayidx53 = getelementptr inbounds i32, i32* %quantptr.0346, i64 40\l  %17 = load i32, i32* %arrayidx53, align 4, !tbaa !13\l  %mul54 = mul nsw i32 %17, %conv8\l  %conv55 = sext i32 %mul54 to i64\l  %arrayidx58 = getelementptr inbounds i32, i32* %quantptr.0346, i64 24\l  %18 = load i32, i32* %arrayidx58, align 4, !tbaa !13\l  %mul59 = mul nsw i32 %18, %conv5\l  %conv60 = sext i32 %mul59 to i64\l  %arrayidx63 = getelementptr inbounds i32, i32* %quantptr.0346, i64 8\l  %19 = load i32, i32* %arrayidx63, align 4, !tbaa !13\l  %mul64 = mul nsw i32 %19, %conv\l  %conv65 = sext i32 %mul64 to i64\l  %mul66 = mul nsw i64 %conv50, -1730\l  %mul67 = mul nsw i64 %conv55, 11893\l  %add68 = add nsw i64 %mul67, %mul66\l  %mul69 = mul nsw i64 %conv60, -17799\l  %add70 = add nsw i64 %add68, %mul69\l  %mul71 = mul nsw i64 %conv65, 8697\l  %add72 = add nsw i64 %add70, %mul71\l  %mul73 = mul nsw i64 %conv50, -4176\l  %mul74 = mul nsw i64 %conv55, -4926\l  %add75 = add nsw i64 %mul74, %mul73\l  %mul76 = mul nsw i64 %conv60, 7373\l  %add77 = add nsw i64 %add75, %mul76\l  %mul78 = mul nsw i64 %conv65, 20995\l  %add79 = add nsw i64 %add77, %mul78\l  %add80 = add i64 %add45, 2048\l  %add81 = add i64 %add80, %add79\l  %shr338 = lshr i64 %add81, 12\l  %conv82 = trunc i64 %shr338 to i32\l  store i32 %conv82, i32* %wsptr.0347, align 4, !tbaa !13\l  %add85 = sub i64 %add80, %add79\l  %shr86339 = lshr i64 %add85, 12\l  %conv87 = trunc i64 %shr86339 to i32\l  %arrayidx88 = getelementptr inbounds i32, i32* %wsptr.0347, i64 24\l  store i32 %conv87, i32* %arrayidx88, align 4, !tbaa !13\l  %add89 = add i64 %sub, 2048\l  %add90 = add i64 %add89, %add72\l  %shr91340 = lshr i64 %add90, 12\l  %conv92 = trunc i64 %shr91340 to i32\l  %arrayidx93 = getelementptr inbounds i32, i32* %wsptr.0347, i64 8\l  store i32 %conv92, i32* %arrayidx93, align 4, !tbaa !13\l  %add95 = sub i64 %add89, %add72\l  %shr96341 = lshr i64 %add95, 12\l  %conv97 = trunc i64 %shr96341 to i32\l  %arrayidx98 = getelementptr inbounds i32, i32* %wsptr.0347, i64 16\l  store i32 %conv97, i32* %arrayidx98, align 4, !tbaa !13\l  br label %for.inc\l}"];
	Node0x657bf50 -> Node0x6577220;
	Node0x6577220 [shape=record, style = filled, fillcolor = blue, label="{for.inc:                                          \l  %dec = add nsw i32 %ctr.0348, -1\l  %cmp = icmp sgt i32 %ctr.0348, 1\l  br i1 %cmp, label %for.body.backedge, label %for.cond102.preheader\l|{<s0>T|<s1>F}}"];
	Node0x6577220:s0 -> Node0x657a050;
	Node0x6577220:s1 -> Node0x6579c10;
	Node0x657a050 [shape=record, style = filled, fillcolor = blue, label="{for.body.backedge:                                \l  %ctr.0348.be = phi i32 [ %dec, %for.inc ], [ 3, %for.body ]\l  %inptr.0345.be = getelementptr inbounds i16, i16* %inptr.0345, i64 1\l  %quantptr.0346.be = getelementptr inbounds i32, i32* %quantptr.0346, i64 1\l  %wsptr.0347.be = getelementptr inbounds i32, i32* %wsptr.0347, i64 1\l  br label %for.body\l}"];
	Node0x657a050 -> Node0x6579ad0;
	Node0x6577690 [shape=record, style = filled, fillcolor = blue, label="{for.body105:                                      \l  %indvars.iv = phi i64 [ 0, %for.cond102.preheader ], [ %indvars.iv.next,\l... %for.inc203 ]\l  %wsptr.1343 = phi i32* [ %arraydecay, %for.cond102.preheader ], [ %wsptr.2,\l... %for.inc203 ]\l  %arrayidx106 = getelementptr inbounds i8*, i8** %output_buf, i64 %indvars.iv\l  %20 = load i8*, i8** %arrayidx106, align 8, !tbaa !14\l  %add.ptr107 = getelementptr inbounds i8, i8* %20, i64 %idx.ext\l  %arrayidx108 = getelementptr inbounds i32, i32* %wsptr.1343, i64 1\l  %21 = load i32, i32* %arrayidx108, align 4, !tbaa !13\l  %arrayidx109 = getelementptr inbounds i32, i32* %wsptr.1343, i64 2\l  %22 = load i32, i32* %arrayidx109, align 4, !tbaa !13\l  %or110 = or i32 %22, %21\l  %arrayidx111 = getelementptr inbounds i32, i32* %wsptr.1343, i64 3\l  %23 = load i32, i32* %arrayidx111, align 4, !tbaa !13\l  %or112 = or i32 %or110, %23\l  %arrayidx113 = getelementptr inbounds i32, i32* %wsptr.1343, i64 5\l  %24 = load i32, i32* %arrayidx113, align 4, !tbaa !13\l  %or114 = or i32 %or112, %24\l  %arrayidx115 = getelementptr inbounds i32, i32* %wsptr.1343, i64 6\l  %25 = load i32, i32* %arrayidx115, align 4, !tbaa !13\l  %or116 = or i32 %or114, %25\l  %arrayidx117 = getelementptr inbounds i32, i32* %wsptr.1343, i64 7\l  %26 = load i32, i32* %arrayidx117, align 4, !tbaa !13\l  %or118 = or i32 %or116, %26\l  %cmp119 = icmp eq i32 %or118, 0\l  %27 = load i32, i32* %wsptr.1343, align 4, !tbaa !13\l  br i1 %cmp119, label %if.then121, label %if.end135\l|{<s0>T|<s1>F}}"];
	Node0x6577690:s0 -> Node0x65829c0;
	Node0x6577690:s1 -> Node0x6582aa0;
	Node0x65829c0 [shape=record, style = filled, fillcolor = blue, label="{if.then121:                                       \l  %conv124342 = zext i32 %27 to i64\l  %add125 = add nuw nsw i64 %conv124342, 16\l  %shr126331 = lshr i64 %add125, 5\l  %and = and i64 %shr126331, 1023\l  %arrayidx129 = getelementptr inbounds i8, i8* %add.ptr, i64 %and\l  %28 = load i8, i8* %arrayidx129, align 1, !tbaa !15\l  store i8 %28, i8* %add.ptr107, align 1, !tbaa !15\l  %arrayidx131 = getelementptr inbounds i8, i8* %add.ptr107, i64 1\l  store i8 %28, i8* %arrayidx131, align 1, !tbaa !15\l  %arrayidx133 = getelementptr inbounds i8, i8* %add.ptr107, i64 3\l  store i8 %28, i8* %arrayidx133, align 1, !tbaa !15\l  br label %for.inc203\l}"];
	Node0x65829c0 -> Node0x6581980;
	Node0x6582aa0 [shape=record, style = filled, fillcolor = blue, label="{if.end135:                                        \l  %conv137 = sext i32 %27 to i64\l  %shl138 = shl nsw i64 %conv137, 14\l  %conv140 = sext i32 %22 to i64\l  %mul141 = mul nsw i64 %conv140, 15137\l  %conv143 = sext i32 %25 to i64\l  %mul144 = mul nsw i64 %conv143, -6270\l  %add145 = add nsw i64 %mul144, %mul141\l  %add146 = add nsw i64 %shl138, %add145\l  %sub147 = sub nsw i64 %shl138, %add145\l  %conv149 = sext i32 %26 to i64\l  %conv151 = sext i32 %24 to i64\l  %conv153 = sext i32 %23 to i64\l  %conv155 = sext i32 %21 to i64\l  %mul156 = mul nsw i64 %conv149, -1730\l  %mul157 = mul nsw i64 %conv151, 11893\l  %mul159 = mul nsw i64 %conv153, -17799\l  %mul161 = mul nsw i64 %conv155, 8697\l  %add158 = add i64 %mul159, %mul161\l  %add160 = add i64 %add158, %mul157\l  %add162 = add i64 %add160, %mul156\l  %mul163 = mul nsw i64 %conv149, -4176\l  %mul164 = mul nsw i64 %conv151, -4926\l  %mul166 = mul nsw i64 %conv153, 7373\l  %mul168 = mul nsw i64 %conv155, 20995\l  %add165 = add i64 %mul166, %mul168\l  %add167 = add i64 %add165, %mul164\l  %add169 = add i64 %add167, %mul163\l  %add170 = add i64 %add146, 262144\l  %add171 = add i64 %add170, %add169\l  %shr172323 = lshr i64 %add171, 19\l  %and174 = and i64 %shr172323, 1023\l  %arrayidx176 = getelementptr inbounds i8, i8* %add.ptr, i64 %and174\l  %29 = load i8, i8* %arrayidx176, align 1, !tbaa !15\l  store i8 %29, i8* %add.ptr107, align 1, !tbaa !15\l  %add179 = sub i64 %add170, %add169\l  %shr180325 = lshr i64 %add179, 19\l  %and182 = and i64 %shr180325, 1023\l  %arrayidx184 = getelementptr inbounds i8, i8* %add.ptr, i64 %and182\l  %30 = load i8, i8* %arrayidx184, align 1, !tbaa !15\l  %arrayidx185 = getelementptr inbounds i8, i8* %add.ptr107, i64 3\l  store i8 %30, i8* %arrayidx185, align 1, !tbaa !15\l  %add186 = add i64 %sub147, 262144\l  %add187 = add i64 %add186, %add162\l  %shr188327 = lshr i64 %add187, 19\l  %and190 = and i64 %shr188327, 1023\l  %arrayidx192 = getelementptr inbounds i8, i8* %add.ptr, i64 %and190\l  %31 = load i8, i8* %arrayidx192, align 1, !tbaa !15\l  %arrayidx193 = getelementptr inbounds i8, i8* %add.ptr107, i64 1\l  store i8 %31, i8* %arrayidx193, align 1, !tbaa !15\l  %add195 = sub i64 %add186, %add162\l  %shr196329 = lshr i64 %add195, 19\l  %and198 = and i64 %shr196329, 1023\l  %arrayidx200 = getelementptr inbounds i8, i8* %add.ptr, i64 %and198\l  %32 = load i8, i8* %arrayidx200, align 1, !tbaa !15\l  br label %for.inc203\l}"];
	Node0x6582aa0 -> Node0x6581980;
	Node0x6581980 [shape=record, style = filled, fillcolor = blue, label="{for.inc203:                                       \l  %.sink = phi i8 [ %32, %if.end135 ], [ %28, %if.then121 ]\l  %33 = getelementptr inbounds i8, i8* %add.ptr107, i64 2\l  store i8 %.sink, i8* %33, align 1\l  %wsptr.2 = getelementptr inbounds i32, i32* %wsptr.1343, i64 8\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond = icmp eq i64 %indvars.iv.next, 4\l  br i1 %exitcond, label %for.end204, label %for.body105\l|{<s0>T|<s1>F}}"];
	Node0x6581980:s0 -> Node0x6579f20;
	Node0x6581980:s1 -> Node0x6577690;
	Node0x6579f20 [shape=record, style = filled, fillcolor = blue, label="{for.end204:                                       \l  call void @llvm.lifetime.end(i64 128, i8* %1) #2\l  ret void\l}"];
}
