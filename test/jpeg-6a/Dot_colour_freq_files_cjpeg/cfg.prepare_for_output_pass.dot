digraph "CFG for 'prepare_for_output_pass' function" {
	label="CFG for 'prepare_for_output_pass' function";

	Node0x612ae30 [shape=record,label="{entry:\l  %master1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 73\l  %0 = bitcast %struct.jpeg_decomp_master** %master1 to\l... %struct.my_decomp_master**\l  %1 = load %struct.my_decomp_master*, %struct.my_decomp_master** %0, align 8,\l... !tbaa !2\l  %is_dummy_pass = getelementptr inbounds %struct.my_decomp_master,\l... %struct.my_decomp_master* %1, i64 0, i32 0, i32 2\l  %2 = load i32, i32* %is_dummy_pass, align 8, !tbaa !10\l  %tobool = icmp eq i32 %2, 0\l  br i1 %tobool, label %if.else, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x612ae30:s0 -> Node0x613fa70;
	Node0x612ae30:s1 -> Node0x613fb20;
	Node0x613fb20 [shape=record,label="{if.then:                                          \l  store i32 0, i32* %is_dummy_pass, align 8, !tbaa !10\l  %cquantize = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %3 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer**\l... %cquantize, align 8, !tbaa !13\l  %start_pass = getelementptr inbounds %struct.jpeg_color_quantizer,\l... %struct.jpeg_color_quantizer* %3, i64 0, i32 0\l  %4 = load void (%struct.jpeg_decompress_struct*, i32)*, void\l... (%struct.jpeg_decompress_struct*, i32)** %start_pass, align 8, !tbaa !14\l  tail call void %4(%struct.jpeg_decompress_struct* nonnull %cinfo, i32 0) #3\l  %post = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 76\l  %5 = load %struct.jpeg_d_post_controller*, %struct.jpeg_d_post_controller**\l... %post, align 8, !tbaa !16\l  %start_pass4 = getelementptr inbounds %struct.jpeg_d_post_controller,\l... %struct.jpeg_d_post_controller* %5, i64 0, i32 0\l  %6 = load void (%struct.jpeg_decompress_struct*, i32)*, void\l... (%struct.jpeg_decompress_struct*, i32)** %start_pass4, align 8, !tbaa !17\l  tail call void %6(%struct.jpeg_decompress_struct* nonnull %cinfo, i32 2) #3\l  %main = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 74\l  %7 = load %struct.jpeg_d_main_controller*, %struct.jpeg_d_main_controller**\l... %main, align 8, !tbaa !19\l  %start_pass5 = getelementptr inbounds %struct.jpeg_d_main_controller,\l... %struct.jpeg_d_main_controller* %7, i64 0, i32 0\l  %8 = load void (%struct.jpeg_decompress_struct*, i32)*, void\l... (%struct.jpeg_decompress_struct*, i32)** %start_pass5, align 8, !tbaa !20\l  tail call void %8(%struct.jpeg_decompress_struct* nonnull %cinfo, i32 2) #3\l  br label %if.end51\l}"];
	Node0x613fb20 -> Node0x6140ea0;
	Node0x613fa70 [shape=record,label="{if.else:                                          \l  %quantize_colors = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 19\l  %9 = load i32, i32* %quantize_colors, align 4, !tbaa !22\l  %tobool6 = icmp eq i32 %9, 0\l  br i1 %tobool6, label %if.end22, label %land.lhs.true\l|{<s0>T|<s1>F}}"];
	Node0x613fa70:s0 -> Node0x6141130;
	Node0x613fa70:s1 -> Node0x6141210;
	Node0x6141210 [shape=record,label="{land.lhs.true:                                    \l  %colormap = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 32\l  %10 = load i8**, i8*** %colormap, align 8, !tbaa !23\l  %cmp = icmp eq i8** %10, null\l  br i1 %cmp, label %if.then7, label %if.end22\l|{<s0>T|<s1>F}}"];
	Node0x6141210:s0 -> Node0x611c4b0;
	Node0x6141210:s1 -> Node0x6141130;
	Node0x611c4b0 [shape=record,label="{if.then7:                                         \l  %two_pass_quantize = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 21\l  %11 = load i32, i32* %two_pass_quantize, align 4, !tbaa !24\l  %tobool8 = icmp eq i32 %11, 0\l  br i1 %tobool8, label %if.else15, label %land.lhs.true9\l|{<s0>T|<s1>F}}"];
	Node0x611c4b0:s0 -> Node0x611cdd0;
	Node0x611c4b0:s1 -> Node0x611ceb0;
	Node0x611ceb0 [shape=record,label="{land.lhs.true9:                                   \l  %enable_2pass_quant = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 25\l  %12 = load i32, i32* %enable_2pass_quant, align 4, !tbaa !25\l  %tobool10 = icmp eq i32 %12, 0\l  br i1 %tobool10, label %if.else15, label %if.then11\l|{<s0>T|<s1>F}}"];
	Node0x611ceb0:s0 -> Node0x611cdd0;
	Node0x611ceb0:s1 -> Node0x611d330;
	Node0x611d330 [shape=record,label="{if.then11:                                        \l  %quantizer_2pass = getelementptr inbounds %struct.my_decomp_master,\l... %struct.my_decomp_master* %1, i64 0, i32 4\l  %13 = bitcast %struct.jpeg_color_quantizer** %quantizer_2pass to i64*\l  %14 = load i64, i64* %13, align 8, !tbaa !26\l  %cquantize12 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %15 = bitcast %struct.jpeg_color_quantizer** %cquantize12 to i64*\l  store i64 %14, i64* %15, align 8, !tbaa !13\l  store i32 1, i32* %is_dummy_pass, align 8, !tbaa !10\l  br label %if.end22\l}"];
	Node0x611d330 -> Node0x6141130;
	Node0x611cdd0 [shape=record,label="{if.else15:                                        \l  %enable_1pass_quant = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 23\l  %16 = load i32, i32* %enable_1pass_quant, align 4, !tbaa !27\l  %tobool16 = icmp eq i32 %16, 0\l  br i1 %tobool16, label %if.else19, label %if.then17\l|{<s0>T|<s1>F}}"];
	Node0x611cdd0:s0 -> Node0x611da70;
	Node0x611cdd0:s1 -> Node0x611db50;
	Node0x611db50 [shape=record,label="{if.then17:                                        \l  %quantizer_1pass = getelementptr inbounds %struct.my_decomp_master,\l... %struct.my_decomp_master* %1, i64 0, i32 3\l  %17 = bitcast %struct.jpeg_color_quantizer** %quantizer_1pass to i64*\l  %18 = load i64, i64* %17, align 8, !tbaa !28\l  %cquantize18 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %19 = bitcast %struct.jpeg_color_quantizer** %cquantize18 to i64*\l  store i64 %18, i64* %19, align 8, !tbaa !13\l  br label %if.end22\l}"];
	Node0x611db50 -> Node0x6141130;
	Node0x611da70 [shape=record,label="{if.else19:                                        \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !29\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %20, i64 0, i32 5\l  store i32 45, i32* %msg_code, align 8, !tbaa !30\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %20, i64 0, i32 0\l  %21 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !33\l  %22 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %21(%struct.jpeg_common_struct* %22) #3\l  br label %if.end22\l}"];
	Node0x611da70 -> Node0x6141130;
	Node0x6141130 [shape=record,label="{if.end22:                                         \l  %idct = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 80\l  %23 = bitcast %struct.jpeg_inverse_dct** %idct to void\l... (%struct.jpeg_decompress_struct*)***\l  %24 = load void (%struct.jpeg_decompress_struct*)**, void\l... (%struct.jpeg_decompress_struct*)*** %23, align 8, !tbaa !34\l  %25 = load void (%struct.jpeg_decompress_struct*)*, void\l... (%struct.jpeg_decompress_struct*)** %24, align 8, !tbaa !35\l  tail call void %25(%struct.jpeg_decompress_struct* nonnull %cinfo) #3\l  %coef = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 75\l  %26 = load %struct.jpeg_d_coef_controller*, %struct.jpeg_d_coef_controller**\l... %coef, align 8, !tbaa !37\l  %start_output_pass = getelementptr inbounds %struct.jpeg_d_coef_controller,\l... %struct.jpeg_d_coef_controller* %26, i64 0, i32 2\l  %start_output_pass25 = bitcast \{\}** %start_output_pass to void\l... (%struct.jpeg_decompress_struct*)**\l  %27 = load void (%struct.jpeg_decompress_struct*)*, void\l... (%struct.jpeg_decompress_struct*)** %start_output_pass25, align 8, !tbaa !38\l  tail call void %27(%struct.jpeg_decompress_struct* nonnull %cinfo) #3\l  %raw_data_out = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 15\l  %28 = load i32, i32* %raw_data_out, align 4, !tbaa !40\l  %tobool26 = icmp eq i32 %28, 0\l  br i1 %tobool26, label %if.then27, label %if.end51\l|{<s0>T|<s1>F}}"];
	Node0x6141130:s0 -> Node0x611f8b0;
	Node0x6141130:s1 -> Node0x6140ea0;
	Node0x611f8b0 [shape=record,label="{if.then27:                                        \l  %using_merged_upsample = getelementptr inbounds %struct.my_decomp_master,\l... %struct.my_decomp_master* %1, i64 0, i32 2\l  %29 = load i32, i32* %using_merged_upsample, align 4, !tbaa !41\l  %tobool28 = icmp eq i32 %29, 0\l  br i1 %tobool28, label %if.then29, label %if.end32\l|{<s0>T|<s1>F}}"];
	Node0x611f8b0:s0 -> Node0x611fba0;
	Node0x611f8b0:s1 -> Node0x61202a0;
	Node0x611fba0 [shape=record,label="{if.then29:                                        \l  %cconvert = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 82\l  %30 = bitcast %struct.jpeg_color_deconverter** %cconvert to void\l... (%struct.jpeg_decompress_struct*)***\l  %31 = load void (%struct.jpeg_decompress_struct*)**, void\l... (%struct.jpeg_decompress_struct*)*** %30, align 8, !tbaa !42\l  %32 = load void (%struct.jpeg_decompress_struct*)*, void\l... (%struct.jpeg_decompress_struct*)** %31, align 8, !tbaa !43\l  tail call void %32(%struct.jpeg_decompress_struct* nonnull %cinfo) #3\l  br label %if.end32\l}"];
	Node0x611fba0 -> Node0x61202a0;
	Node0x61202a0 [shape=record,label="{if.end32:                                         \l  %upsample = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 81\l  %33 = bitcast %struct.jpeg_upsampler** %upsample to void\l... (%struct.jpeg_decompress_struct*)***\l  %34 = load void (%struct.jpeg_decompress_struct*)**, void\l... (%struct.jpeg_decompress_struct*)*** %33, align 8, !tbaa !45\l  %35 = load void (%struct.jpeg_decompress_struct*)*, void\l... (%struct.jpeg_decompress_struct*)** %34, align 8, !tbaa !46\l  tail call void %35(%struct.jpeg_decompress_struct* nonnull %cinfo) #3\l  %36 = load i32, i32* %quantize_colors, align 4, !tbaa !22\l  %tobool36 = icmp eq i32 %36, 0\l  br i1 %tobool36, label %if.end42, label %if.then37\l|{<s0>T|<s1>F}}"];
	Node0x61202a0:s0 -> Node0x614b610;
	Node0x61202a0:s1 -> Node0x614b6f0;
	Node0x614b6f0 [shape=record,label="{if.then37:                                        \l  %cquantize38 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %37 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer**\l... %cquantize38, align 8, !tbaa !13\l  %start_pass39 = getelementptr inbounds %struct.jpeg_color_quantizer,\l... %struct.jpeg_color_quantizer* %37, i64 0, i32 0\l  %38 = load void (%struct.jpeg_decompress_struct*, i32)*, void\l... (%struct.jpeg_decompress_struct*, i32)** %start_pass39, align 8, !tbaa !14\l  %39 = load i32, i32* %is_dummy_pass, align 8, !tbaa !10\l  tail call void %38(%struct.jpeg_decompress_struct* nonnull %cinfo, i32 %39)\l... #3\l  br label %if.end42\l}"];
	Node0x614b6f0 -> Node0x614b610;
	Node0x614b610 [shape=record,label="{if.end42:                                         \l  %post43 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 76\l  %40 = load %struct.jpeg_d_post_controller*, %struct.jpeg_d_post_controller**\l... %post43, align 8, !tbaa !16\l  %start_pass44 = getelementptr inbounds %struct.jpeg_d_post_controller,\l... %struct.jpeg_d_post_controller* %40, i64 0, i32 0\l  %41 = load void (%struct.jpeg_decompress_struct*, i32)*, void\l... (%struct.jpeg_decompress_struct*, i32)** %start_pass44, align 8, !tbaa !17\l  %42 = load i32, i32* %is_dummy_pass, align 8, !tbaa !10\l  %tobool47 = icmp ne i32 %42, 0\l  %cond = select i1 %tobool47, i32 3, i32 0\l  tail call void %41(%struct.jpeg_decompress_struct* nonnull %cinfo, i32\l... %cond) #3\l  %main48 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 74\l  %43 = load %struct.jpeg_d_main_controller*, %struct.jpeg_d_main_controller**\l... %main48, align 8, !tbaa !19\l  %start_pass49 = getelementptr inbounds %struct.jpeg_d_main_controller,\l... %struct.jpeg_d_main_controller* %43, i64 0, i32 0\l  %44 = load void (%struct.jpeg_decompress_struct*, i32)*, void\l... (%struct.jpeg_decompress_struct*, i32)** %start_pass49, align 8, !tbaa !20\l  tail call void %44(%struct.jpeg_decompress_struct* nonnull %cinfo, i32 0) #3\l  br label %if.end51\l}"];
	Node0x614b610 -> Node0x6140ea0;
	Node0x6140ea0 [shape=record,label="{if.end51:                                         \l  %progress = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 2\l  %45 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr**\l... %progress, align 8, !tbaa !48\l  %cmp52 = icmp eq %struct.jpeg_progress_mgr* %45, null\l  br i1 %cmp52, label %if.end72, label %if.then53\l|{<s0>T|<s1>F}}"];
	Node0x6140ea0:s0 -> Node0x614ea80;
	Node0x6140ea0:s1 -> Node0x614eb60;
	Node0x614eb60 [shape=record,label="{if.then53:                                        \l  %pass_number = getelementptr inbounds %struct.my_decomp_master,\l... %struct.my_decomp_master* %1, i64 0, i32 1\l  %46 = load i32, i32* %pass_number, align 8, !tbaa !49\l  %completed_passes = getelementptr inbounds %struct.jpeg_progress_mgr,\l... %struct.jpeg_progress_mgr* %45, i64 0, i32 3\l  store i32 %46, i32* %completed_passes, align 8, !tbaa !50\l  %47 = load i32, i32* %is_dummy_pass, align 8, !tbaa !10\l  %tobool58 = icmp ne i32 %47, 0\l  %cond59 = select i1 %tobool58, i32 2, i32 1\l  %add = add nsw i32 %cond59, %46\l  %total_passes = getelementptr inbounds %struct.jpeg_progress_mgr,\l... %struct.jpeg_progress_mgr* %45, i64 0, i32 4\l  store i32 %add, i32* %total_passes, align 4, !tbaa !52\l  %buffered_image = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 14\l  %48 = load i32, i32* %buffered_image, align 8, !tbaa !53\l  %tobool61 = icmp eq i32 %48, 0\l  br i1 %tobool61, label %if.end72, label %land.lhs.true62\l|{<s0>T|<s1>F}}"];
	Node0x614eb60:s0 -> Node0x614ea80;
	Node0x614eb60:s1 -> Node0x61500b0;
	Node0x61500b0 [shape=record,label="{land.lhs.true62:                                  \l  %inputctl = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 77\l  %49 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller**\l... %inputctl, align 8, !tbaa !54\l  %eoi_reached = getelementptr inbounds %struct.jpeg_input_controller,\l... %struct.jpeg_input_controller* %49, i64 0, i32 5\l  %50 = load i32, i32* %eoi_reached, align 4, !tbaa !55\l  %tobool63 = icmp eq i32 %50, 0\l  br i1 %tobool63, label %if.then64, label %if.end72\l|{<s0>T|<s1>F}}"];
	Node0x61500b0:s0 -> Node0x61505d0;
	Node0x61500b0:s1 -> Node0x614ea80;
	Node0x61505d0 [shape=record,label="{if.then64:                                        \l  %enable_2pass_quant65 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 25\l  %51 = load i32, i32* %enable_2pass_quant65, align 4, !tbaa !25\l  %tobool66 = icmp ne i32 %51, 0\l  %cond67 = select i1 %tobool66, i32 2, i32 1\l  %add70 = add nsw i32 %add, %cond67\l  store i32 %add70, i32* %total_passes, align 4, !tbaa !52\l  br label %if.end72\l}"];
	Node0x61505d0 -> Node0x614ea80;
	Node0x614ea80 [shape=record,label="{if.end72:                                         \l  ret void\l}"];
}
