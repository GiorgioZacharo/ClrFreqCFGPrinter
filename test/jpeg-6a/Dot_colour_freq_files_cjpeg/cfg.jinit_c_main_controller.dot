digraph "CFG for 'jinit_c_main_controller' function" {
	label="CFG for 'jinit_c_main_controller' function";

	Node0x5107660 [shape=record,label="{entry:\l  %mem = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1\l  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !3\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %0, i64 0, i32 0\l  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !11\l  %2 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %1(%struct.jpeg_common_struct* %2, i32 1, i64 112) #1\l  %main1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 52\l  %3 = bitcast %struct.jpeg_c_main_controller** %main1 to i8**\l  store i8* %call, i8** %3, align 8, !tbaa !14\l  %start_pass = bitcast i8* %call to void (%struct.jpeg_compress_struct*,\l... i32)**\l  store void (%struct.jpeg_compress_struct*, i32)* @start_pass_main, void\l... (%struct.jpeg_compress_struct*, i32)** %start_pass, align 8, !tbaa !15\l  %raw_data_in = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 23\l  %4 = load i32, i32* %raw_data_in, align 8, !tbaa !18\l  %tobool = icmp eq i32 %4, 0\l  br i1 %tobool, label %if.end, label %cleanup, !prof !19\l|{<s0>T|<s1>F}}"];
	Node0x5107660:s0 -> Node0x5109e80;
	Node0x5107660:s1 -> Node0x5109f50;
	Node0x5109e80 [shape=record,label="{if.end:                                           \l  %tobool2 = icmp eq i32 %need_full_buffer, 0\l  br i1 %tobool2, label %if.else, label %if.then3, !prof !19\l|{<s0>T|<s1>F}}"];
	Node0x5109e80:s0 -> Node0x5103200;
	Node0x5109e80:s1 -> Node0x5103270;
	Node0x5103270 [shape=record,label="{if.then3:                                         \l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %5 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !20\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %5, i64 0, i32 5\l  store i32 4, i32* %msg_code, align 8, !tbaa !21\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %5, i64 0, i32 0\l  %6 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !23\l  tail call void %6(%struct.jpeg_common_struct* %2) #1\l  br label %cleanup\l}"];
	Node0x5103270 -> Node0x5109f50;
	Node0x5103200 [shape=record,label="{if.else:                                          \l  %num_components = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12\l  %7 = load i32, i32* %num_components, align 4, !tbaa !24\l  %cmp30 = icmp sgt i32 %7, 0\l  br i1 %cmp30, label %for.body.lr.ph, label %cleanup, !prof !25\l|{<s0>T|<s1>F}}"];
	Node0x5103200:s0 -> Node0x510b690;
	Node0x5103200:s1 -> Node0x5109f50;
	Node0x510b690 [shape=record,label="{for.body.lr.ph:                                   \l  %comp_info = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14\l  %8 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !26\l  %buffer = getelementptr inbounds i8, i8* %call, i64 32\l  %9 = bitcast i8* %buffer to [10 x i8**]*\l  br label %for.body\l}"];
	Node0x510b690 -> Node0x5109d90;
	Node0x5109d90 [shape=record,label="{for.body:                                         \l  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]\l  %compptr.032 = phi %struct.jpeg_component_info* [ %8, %for.body.lr.ph ], [\l... %incdec.ptr, %for.body ]\l  %10 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !3\l  %alloc_sarray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %10, i64 0, i32 2\l  %11 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8**\l... (%struct.jpeg_common_struct*, i32, i32, i32)** %alloc_sarray, align 8, !tbaa\l... !27\l  %width_in_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.032, i64 0, i32 7\l  %12 = load i32, i32* %width_in_blocks, align 4, !tbaa !28\l  %mul = shl i32 %12, 3\l  %v_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.032, i64 0, i32 3\l  %13 = load i32, i32* %v_samp_factor, align 4, !tbaa !30\l  %mul6 = shl nsw i32 %13, 3\l  %call7 = tail call i8** %11(%struct.jpeg_common_struct* nonnull %2, i32 1,\l... i32 %mul, i32 %mul6) #1\l  %arrayidx = getelementptr inbounds [10 x i8**], [10 x i8**]* %9, i64 0, i64\l... %indvars.iv\l  store i8** %call7, i8*** %arrayidx, align 8, !tbaa !31\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %incdec.ptr = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.032, i64 1\l  %14 = load i32, i32* %num_components, align 4, !tbaa !24\l  %15 = sext i32 %14 to i64\l  %cmp = icmp slt i64 %indvars.iv.next, %15\l  br i1 %cmp, label %for.body, label %cleanup.loopexit, !prof !25\l|{<s0>T|<s1>F}}"];
	Node0x5109d90:s0 -> Node0x5109d90;
	Node0x5109d90:s1 -> Node0x510de80;
	Node0x510de80 [shape=record,label="{cleanup.loopexit:                                 \l  br label %cleanup\l}"];
	Node0x510de80 -> Node0x5109f50;
	Node0x5109f50 [shape=record,label="{cleanup:                                          \l  ret void\l}"];
}
