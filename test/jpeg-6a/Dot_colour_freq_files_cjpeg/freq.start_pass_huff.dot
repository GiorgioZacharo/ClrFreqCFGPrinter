digraph "CFG for 'start_pass_huff' function" {
	label="CFG for 'start_pass_huff' function";

	Node0x6405030 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59\l  %0 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to\l... %struct.huff_entropy_encoder**\l  %1 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %0,\l... align 8, !tbaa !3\l  %tobool = icmp ne i32 %gather_statistics, 0\l  %encode_mcu = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 0, i32 1\l  %encode_mcu_gather.encode_mcu_huff = select i1 %tobool, i32\l... (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_gather, i32\l... (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_huff\l  %finish_pass_gather.finish_pass_huff = select i1 %tobool, void\l... (%struct.jpeg_compress_struct*)* @finish_pass_gather, void\l... (%struct.jpeg_compress_struct*)* @finish_pass_huff\l  store i32 (%struct.jpeg_compress_struct*, [64 x i16]**)*\l... %encode_mcu_gather.encode_mcu_huff, i32 (%struct.jpeg_compress_struct*, [64 x\l... i16]**)** %encode_mcu, align 8, !tbaa !11\l  %2 = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 0, i32 2\l  store void (%struct.jpeg_compress_struct*)*\l... %finish_pass_gather.finish_pass_huff, void (%struct.jpeg_compress_struct*)**\l... %2, align 8\l  %comps_in_scan = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 41\l  %3 = load i32, i32* %comps_in_scan, align 4, !tbaa !16\l  %cmp148 = icmp sgt i32 %3, 0\l  br i1 %cmp148, label %for.body.lr.ph, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x6405030:s0 -> Node0x6408fa0;
	Node0x6405030:s1 -> Node0x6409080;
	Node0x6408fa0 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %4 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %mem = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1\l  br i1 %tobool, label %for.body.us.preheader, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x6408fa0:s0 -> Node0x6409440;
	Node0x6408fa0:s1 -> Node0x6409520;
	Node0x6409520 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader:                               \l  br label %for.body\l}"];
	Node0x6409520 -> Node0x63ed9a0;
	Node0x6409440 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.preheader:                            \l  br label %for.body.us\l}"];
	Node0x6409440 -> Node0x63eda80;
	Node0x63eda80 [shape=record, style = filled, fillcolor = blue, label="{for.body.us:                                      \l  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end61.us ], [ 0,\l... %for.body.us.preheader ]\l  %arrayidx.us = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv\l  %5 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx.us, align 8, !tbaa !17\l  %dc_tbl_no.us = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %5, i64 0, i32 5\l  %6 = load i32, i32* %dc_tbl_no.us, align 4, !tbaa !18\l  %ac_tbl_no.us = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %5, i64 0, i32 6\l  %7 = load i32, i32* %ac_tbl_no.us, align 8, !tbaa !20\l  %8 = icmp ugt i32 %6, 3\l  br i1 %8, label %if.then14.us, label %if.end18.us\l|{<s0>T|<s1>F}}"];
	Node0x63eda80:s0 -> Node0x6408470;
	Node0x63eda80:s1 -> Node0x63daff0;
	Node0x6408470 [shape=record, style = filled, fillcolor = blue, label="{if.then14.us:                                     \l  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !21\l  %msg_code.us = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 5\l  store i32 49, i32* %msg_code.us, align 8, !tbaa !22\l  %arrayidx16.us = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 0\l  store i32 %6, i32* %arrayidx16.us, align 4, !tbaa !24\l  %error_exit.us = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 0\l  %10 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.us, align 8, !tbaa !25\l  tail call void %10(%struct.jpeg_common_struct* nonnull %4) #4\l  br label %if.end18.us\l}"];
	Node0x6408470 -> Node0x63daff0;
	Node0x63daff0 [shape=record, style = filled, fillcolor = blue, label="{if.end18.us:                                      \l  %11 = icmp ugt i32 %7, 3\l  br i1 %11, label %if.then28.us, label %if.end37.us\l|{<s0>T|<s1>F}}"];
	Node0x63daff0:s0 -> Node0x640e430;
	Node0x63daff0:s1 -> Node0x640e4b0;
	Node0x640e430 [shape=record, style = filled, fillcolor = blue, label="{if.then28.us:                                     \l  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !21\l  %msg_code30.us = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %12, i64 0, i32 5\l  store i32 49, i32* %msg_code30.us, align 8, !tbaa !22\l  %arrayidx34.us = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %12, i64 0, i32 6, i32 0, i64 0\l  store i32 %7, i32* %arrayidx34.us, align 4, !tbaa !24\l  %error_exit36.us = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %12, i64 0, i32 0\l  %13 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit36.us, align 8, !tbaa !25\l  tail call void %13(%struct.jpeg_common_struct* %4) #4\l  br label %if.end37.us\l}"];
	Node0x640e430 -> Node0x640e4b0;
	Node0x640e4b0 [shape=record, style = filled, fillcolor = blue, label="{if.end37.us:                                      \l  %idxprom40.us = sext i32 %6 to i64\l  %arrayidx41.us = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 6, i64 %idxprom40.us\l  %14 = load i64*, i64** %arrayidx41.us, align 8, !tbaa !17\l  %cmp42.us = icmp eq i64* %14, null\l  br i1 %cmp42.us, label %if.then43.us, label\l... %if.end37.us.if.end47.us_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x640e4b0:s0 -> Node0x640edb0;
	Node0x640e4b0:s1 -> Node0x640eec0;
	Node0x640eec0 [shape=record, style = filled, fillcolor = blue, label="{if.end37.us.if.end47.us_crit_edge:                \l  %15 = bitcast i64* %14 to i8*\l  br label %if.end47.us\l}"];
	Node0x640eec0 -> Node0x640f070;
	Node0x640edb0 [shape=record, style = filled, fillcolor = blue, label="{if.then43.us:                                     \l  %16 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !26\l  %alloc_small.us = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %16, i64 0, i32 0\l  %17 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small.us, align 8, !tbaa !27\l  %call.us = tail call i8* %17(%struct.jpeg_common_struct* %4, i32 1, i64\l... 2056) #4\l  %18 = bitcast i64** %arrayidx41.us to i8**\l  store i8* %call.us, i8** %18, align 8, !tbaa !17\l  br label %if.end47.us\l}"];
	Node0x640edb0 -> Node0x640f070;
	Node0x640f070 [shape=record, style = filled, fillcolor = blue, label="{if.end47.us:                                      \l  %19 = phi i8* [ %call.us, %if.then43.us ], [ %15,\l... %if.end37.us.if.end47.us_crit_edge ]\l  tail call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 2056, i32 1, i1\l... false)\l  %idxprom51.us = sext i32 %7 to i64\l  %arrayidx52.us = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 7, i64 %idxprom51.us\l  %20 = load i64*, i64** %arrayidx52.us, align 8, !tbaa !17\l  %cmp53.us = icmp eq i64* %20, null\l  br i1 %cmp53.us, label %if.then54.us, label\l... %if.end47.us.if.end61.us_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x640f070:s0 -> Node0x640fa10;
	Node0x640f070:s1 -> Node0x640fb20;
	Node0x640fb20 [shape=record, style = filled, fillcolor = blue, label="{if.end47.us.if.end61.us_crit_edge:                \l  %21 = bitcast i64* %20 to i8*\l  br label %if.end61.us\l}"];
	Node0x640fb20 -> Node0x63edba0;
	Node0x640fa10 [shape=record, style = filled, fillcolor = blue, label="{if.then54.us:                                     \l  %22 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !26\l  %alloc_small56.us = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %22, i64 0, i32 0\l  %23 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small56.us, align 8, !tbaa\l... !27\l  %call57.us = tail call i8* %23(%struct.jpeg_common_struct* %4, i32 1, i64\l... 2056) #4\l  %24 = bitcast i64** %arrayidx52.us to i8**\l  store i8* %call57.us, i8** %24, align 8, !tbaa !17\l  br label %if.end61.us\l}"];
	Node0x640fa10 -> Node0x63edba0;
	Node0x63edba0 [shape=record, style = filled, fillcolor = blue, label="{if.end61.us:                                      \l  %25 = phi i8* [ %call57.us, %if.then54.us ], [ %21,\l... %if.end47.us.if.end61.us_crit_edge ]\l  tail call void @llvm.memset.p0i8.i64(i8* %25, i8 0, i64 2056, i32 1, i1\l... false)\l  %arrayidx78.us = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 1, i32 2, i64 %indvars.iv\l  store i32 0, i32* %arrayidx78.us, align 4, !tbaa !24\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %26 = load i32, i32* %comps_in_scan, align 4, !tbaa !16\l  %27 = sext i32 %26 to i64\l  %cmp.us = icmp slt i64 %indvars.iv.next, %27\l  br i1 %cmp.us, label %for.body.us, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x63edba0:s0 -> Node0x63eda80;
	Node0x63edba0:s1 -> Node0x63db270;
	Node0x63ed9a0 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %indvars.iv151 = phi i64 [ %indvars.iv.next152, %if.end37 ], [ 0,\l... %for.body.preheader ]\l  %arrayidx = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv151\l  %28 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx, align 8, !tbaa !17\l  %dc_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %28, i64 0, i32 5\l  %29 = load i32, i32* %dc_tbl_no, align 4, !tbaa !18\l  %ac_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %28, i64 0, i32 6\l  %30 = load i32, i32* %ac_tbl_no, align 8, !tbaa !20\l  %31 = icmp ugt i32 %29, 3\l  br i1 %31, label %if.then14, label %lor.lhs.false9\l|{<s0>T|<s1>F}}"];
	Node0x63ed9a0:s0 -> Node0x6412200;
	Node0x63ed9a0:s1 -> Node0x64122e0;
	Node0x64122e0 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false9:                                   \l  %idxprom10 = sext i32 %29 to i64\l  %arrayidx11 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 %idxprom10\l  %32 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx11, align 8,\l... !tbaa !17\l  %cmp12 = icmp eq %struct.JHUFF_TBL* %32, null\l  br i1 %cmp12, label %if.then14, label %if.end18\l|{<s0>T|<s1>F}}"];
	Node0x64122e0:s0 -> Node0x6412200;
	Node0x64122e0:s1 -> Node0x64127e0;
	Node0x6412200 [shape=record, style = filled, fillcolor = blue, label="{if.then14:                                        \l  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !21\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %33, i64 0, i32 5\l  store i32 49, i32* %msg_code, align 8, !tbaa !22\l  %arrayidx16 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %33, i64 0, i32 6, i32 0, i64 0\l  store i32 %29, i32* %arrayidx16, align 4, !tbaa !24\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %33, i64 0, i32 0\l  %34 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !25\l  tail call void %34(%struct.jpeg_common_struct* nonnull %4) #4\l  br label %if.end18\l}"];
	Node0x6412200 -> Node0x64127e0;
	Node0x64127e0 [shape=record, style = filled, fillcolor = blue, label="{if.end18:                                         \l  %35 = icmp ugt i32 %30, 3\l  %.pre157 = sext i32 %30 to i64\l  %.pre = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 17, i64 %.pre157\l  br i1 %35, label %if.then28, label %lor.lhs.false22\l|{<s0>T|<s1>F}}"];
	Node0x64127e0:s0 -> Node0x6413040;
	Node0x64127e0:s1 -> Node0x6413120;
	Node0x6413120 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false22:                                  \l  %36 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %.pre, align 8, !tbaa !17\l  %cmp25 = icmp eq %struct.JHUFF_TBL* %36, null\l  br i1 %cmp25, label %if.then28, label %if.end37\l|{<s0>T|<s1>F}}"];
	Node0x6413120:s0 -> Node0x6413040;
	Node0x6413120:s1 -> Node0x6411020;
	Node0x6413040 [shape=record, style = filled, fillcolor = blue, label="{if.then28:                                        \l  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !21\l  %msg_code30 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %37, i64 0, i32 5\l  store i32 49, i32* %msg_code30, align 8, !tbaa !22\l  %arrayidx34 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %37, i64 0, i32 6, i32 0, i64 0\l  store i32 %30, i32* %arrayidx34, align 4, !tbaa !24\l  %error_exit36 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %37, i64 0, i32 0\l  %38 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit36, align 8, !tbaa !25\l  tail call void %38(%struct.jpeg_common_struct* nonnull %4) #4\l  br label %if.end37\l}"];
	Node0x6413040 -> Node0x6411020;
	Node0x6411020 [shape=record, style = filled, fillcolor = blue, label="{if.end37:                                         \l  %idxprom40 = sext i32 %29 to i64\l  %arrayidx68 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 %idxprom40\l  %39 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx68, align 8,\l... !tbaa !17\l  %arrayidx70 = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 4, i64 %idxprom40\l  tail call void @jpeg_make_c_derived_tbl(%struct.jpeg_compress_struct*\l... nonnull %cinfo, %struct.JHUFF_TBL* %39, %struct.c_derived_tbl** %arrayidx70)\l  %40 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %.pre, align 8, !tbaa !17\l  %arrayidx75 = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 5, i64 %.pre157\l  tail call void @jpeg_make_c_derived_tbl(%struct.jpeg_compress_struct*\l... nonnull %cinfo, %struct.JHUFF_TBL* %40, %struct.c_derived_tbl** %arrayidx75)\l  %arrayidx78 = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 1, i32 2, i64 %indvars.iv151\l  store i32 0, i32* %arrayidx78, align 4, !tbaa !24\l  %indvars.iv.next152 = add nuw nsw i64 %indvars.iv151, 1\l  %41 = load i32, i32* %comps_in_scan, align 4, !tbaa !16\l  %42 = sext i32 %41 to i64\l  %cmp = icmp slt i64 %indvars.iv.next152, %42\l  br i1 %cmp, label %for.body, label %for.end.loopexit160\l|{<s0>T|<s1>F}}"];
	Node0x6411020:s0 -> Node0x63ed9a0;
	Node0x6411020:s1 -> Node0x64142b0;
	Node0x63db270 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  br label %for.end\l}"];
	Node0x63db270 -> Node0x6409080;
	Node0x64142b0 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit160:                              \l  br label %for.end\l}"];
	Node0x64142b0 -> Node0x6409080;
	Node0x6409080 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %put_buffer = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 1, i32 0\l  store i64 0, i64* %put_buffer, align 8, !tbaa !29\l  %put_bits = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 1, i32 1\l  store i32 0, i32* %put_bits, align 8, !tbaa !30\l  %restart_interval = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 29\l  %43 = load i32, i32* %restart_interval, align 8, !tbaa !31\l  %restarts_to_go = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 2\l  store i32 %43, i32* %restarts_to_go, align 8, !tbaa !32\l  %next_restart_num = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 3\l  store i32 0, i32* %next_restart_num, align 4, !tbaa !33\l  ret void\l}"];
}
