digraph "CFG for 'h2v1_upsample' function" {
	label="CFG for 'h2v1_upsample' function";

	Node0x5cc6990 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %0 = load i8**, i8*** %output_data_ptr, align 8, !tbaa !2\l  %max_v_samp_factor = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 58\l  %1 = load i32, i32* %max_v_samp_factor, align 8, !tbaa !6\l  %cmp22 = icmp sgt i32 %1, 0\l  br i1 %cmp22, label %for.body.lr.ph, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5cc6990:s0 -> Node0x5cc6c00;
	Node0x5cc6990:s1 -> Node0x5cc6cb0;
	Node0x5cc6c00 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  br label %for.body\l}"];
	Node0x5cc6c00 -> Node0x5cc6eb0;
	Node0x5cc6eb0 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %2 = phi i32 [ %1, %for.body.lr.ph ], [ %22, %for.inc ]\l  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]\l  %arrayidx2 = getelementptr inbounds i8*, i8** %0, i64 %indvars.iv\l  %3 = load i8*, i8** %arrayidx2, align 8, !tbaa !2\l  %4 = load i32, i32* %output_width, align 8, !tbaa !11\l  %idx.ext = zext i32 %4 to i64\l  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext\l  %cmp319 = icmp eq i32 %4, 0\l  br i1 %cmp319, label %for.inc, label %while.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5cc6eb0:s0 -> Node0x5cc7010;
	Node0x5cc6eb0:s1 -> Node0x5cb9cc0;
	Node0x5cb9cc0 [shape=record, style = filled, fillcolor = blue, label="{while.body.preheader:                             \l  %5 = ptrtoint i8* %3 to i64\l  %arrayidx = getelementptr inbounds i8*, i8** %input_data, i64 %indvars.iv\l  %6 = load i8*, i8** %arrayidx, align 8, !tbaa !2\l  %7 = zext i32 %4 to i64\l  %scevgep = getelementptr i8, i8* %3, i64 %7\l  %scevgep24 = getelementptr i8, i8* %3, i64 2\l  %8 = icmp ugt i8* %scevgep, %scevgep24\l  %umax = select i1 %8, i8* %scevgep, i8* %scevgep24\l  %scevgep25 = getelementptr i8, i8* %umax, i64 -1\l  %9 = sub i64 0, %5\l  %scevgep26 = getelementptr i8, i8* %scevgep25, i64 %9\l  %scevgep2627 = ptrtoint i8* %scevgep26 to i64\l  %10 = lshr i64 %scevgep2627, 1\l  %11 = add nuw i64 %10, 1\l  %xtraiter = and i64 %11, 7\l  %lcmp.mod = icmp eq i64 %xtraiter, 0\l  br i1 %lcmp.mod, label %while.body.preheader.split, label\l... %while.body.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5cb9cc0:s0 -> Node0x5cb9ae0;
	Node0x5cb9cc0:s1 -> Node0x5cbaa90;
	Node0x5cbaa90 [shape=record, style = filled, fillcolor = blue, label="{while.body.prol.preheader:                        \l  br label %while.body.prol\l}"];
	Node0x5cbaa90 -> Node0x5cbac40;
	Node0x5cbac40 [shape=record, style = filled, fillcolor = blue, label="{while.body.prol:                                  \l  %inptr.021.prol = phi i8* [ %incdec.ptr.prol, %while.body.prol ], [ %6,\l... %while.body.prol.preheader ]\l  %outptr.020.prol = phi i8* [ %incdec.ptr5.prol, %while.body.prol ], [ %3,\l... %while.body.prol.preheader ]\l  %prol.iter = phi i64 [ %prol.iter.sub, %while.body.prol ], [ %xtraiter,\l... %while.body.prol.preheader ]\l  %incdec.ptr.prol = getelementptr inbounds i8, i8* %inptr.021.prol, i64 1\l  %12 = load i8, i8* %inptr.021.prol, align 1, !tbaa !12\l  %incdec.ptr4.prol = getelementptr inbounds i8, i8* %outptr.020.prol, i64 1\l  store i8 %12, i8* %outptr.020.prol, align 1, !tbaa !12\l  %incdec.ptr5.prol = getelementptr inbounds i8, i8* %outptr.020.prol, i64 2\l  store i8 %12, i8* %incdec.ptr4.prol, align 1, !tbaa !12\l  %prol.iter.sub = add i64 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %while.body.preheader.split.loopexit, label\l... %while.body.prol, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5cbac40:s0 -> Node0x5cbb5d0;
	Node0x5cbac40:s1 -> Node0x5cbac40;
	Node0x5cbb5d0 [shape=record, style = filled, fillcolor = blue, label="{while.body.preheader.split.loopexit:              \l  %incdec.ptr5.prol.lcssa = phi i8* [ %incdec.ptr5.prol, %while.body.prol ]\l  %incdec.ptr.prol.lcssa = phi i8* [ %incdec.ptr.prol, %while.body.prol ]\l  br label %while.body.preheader.split\l}"];
	Node0x5cbb5d0 -> Node0x5cb9ae0;
	Node0x5cb9ae0 [shape=record, style = filled, fillcolor = blue, label="{while.body.preheader.split:                       \l  %inptr.021.unr = phi i8* [ %6, %while.body.preheader ], [\l... %incdec.ptr.prol.lcssa, %while.body.preheader.split.loopexit ]\l  %outptr.020.unr = phi i8* [ %3, %while.body.preheader ], [\l... %incdec.ptr5.prol.lcssa, %while.body.preheader.split.loopexit ]\l  %13 = icmp ult i8* %scevgep26, inttoptr (i64 14 to i8*)\l  br i1 %13, label %for.inc.loopexit, label %while.body.preheader.split.split\l|{<s0>T|<s1>F}}"];
	Node0x5cb9ae0:s0 -> Node0x5ccf020;
	Node0x5cb9ae0:s1 -> Node0x5ccf0f0;
	Node0x5ccf0f0 [shape=record, style = filled, fillcolor = blue, label="{while.body.preheader.split.split:                 \l  br label %while.body\l}"];
	Node0x5ccf0f0 -> Node0x5ccf2a0;
	Node0x5ccf2a0 [shape=record, style = filled, fillcolor = blue, label="{while.body:                                       \l  %inptr.021 = phi i8* [ %inptr.021.unr, %while.body.preheader.split.split ],\l... [ %incdec.ptr.7, %while.body ]\l  %outptr.020 = phi i8* [ %outptr.020.unr, %while.body.preheader.split.split\l... ], [ %incdec.ptr5.7, %while.body ]\l  %incdec.ptr = getelementptr inbounds i8, i8* %inptr.021, i64 1\l  %14 = load i8, i8* %inptr.021, align 1, !tbaa !12\l  %incdec.ptr4 = getelementptr inbounds i8, i8* %outptr.020, i64 1\l  store i8 %14, i8* %outptr.020, align 1, !tbaa !12\l  %incdec.ptr5 = getelementptr inbounds i8, i8* %outptr.020, i64 2\l  store i8 %14, i8* %incdec.ptr4, align 1, !tbaa !12\l  %incdec.ptr.1 = getelementptr inbounds i8, i8* %inptr.021, i64 2\l  %15 = load i8, i8* %incdec.ptr, align 1, !tbaa !12\l  %incdec.ptr4.1 = getelementptr inbounds i8, i8* %outptr.020, i64 3\l  store i8 %15, i8* %incdec.ptr5, align 1, !tbaa !12\l  %incdec.ptr5.1 = getelementptr inbounds i8, i8* %outptr.020, i64 4\l  store i8 %15, i8* %incdec.ptr4.1, align 1, !tbaa !12\l  %incdec.ptr.2 = getelementptr inbounds i8, i8* %inptr.021, i64 3\l  %16 = load i8, i8* %incdec.ptr.1, align 1, !tbaa !12\l  %incdec.ptr4.2 = getelementptr inbounds i8, i8* %outptr.020, i64 5\l  store i8 %16, i8* %incdec.ptr5.1, align 1, !tbaa !12\l  %incdec.ptr5.2 = getelementptr inbounds i8, i8* %outptr.020, i64 6\l  store i8 %16, i8* %incdec.ptr4.2, align 1, !tbaa !12\l  %incdec.ptr.3 = getelementptr inbounds i8, i8* %inptr.021, i64 4\l  %17 = load i8, i8* %incdec.ptr.2, align 1, !tbaa !12\l  %incdec.ptr4.3 = getelementptr inbounds i8, i8* %outptr.020, i64 7\l  store i8 %17, i8* %incdec.ptr5.2, align 1, !tbaa !12\l  %incdec.ptr5.3 = getelementptr inbounds i8, i8* %outptr.020, i64 8\l  store i8 %17, i8* %incdec.ptr4.3, align 1, !tbaa !12\l  %incdec.ptr.4 = getelementptr inbounds i8, i8* %inptr.021, i64 5\l  %18 = load i8, i8* %incdec.ptr.3, align 1, !tbaa !12\l  %incdec.ptr4.4 = getelementptr inbounds i8, i8* %outptr.020, i64 9\l  store i8 %18, i8* %incdec.ptr5.3, align 1, !tbaa !12\l  %incdec.ptr5.4 = getelementptr inbounds i8, i8* %outptr.020, i64 10\l  store i8 %18, i8* %incdec.ptr4.4, align 1, !tbaa !12\l  %incdec.ptr.5 = getelementptr inbounds i8, i8* %inptr.021, i64 6\l  %19 = load i8, i8* %incdec.ptr.4, align 1, !tbaa !12\l  %incdec.ptr4.5 = getelementptr inbounds i8, i8* %outptr.020, i64 11\l  store i8 %19, i8* %incdec.ptr5.4, align 1, !tbaa !12\l  %incdec.ptr5.5 = getelementptr inbounds i8, i8* %outptr.020, i64 12\l  store i8 %19, i8* %incdec.ptr4.5, align 1, !tbaa !12\l  %incdec.ptr.6 = getelementptr inbounds i8, i8* %inptr.021, i64 7\l  %20 = load i8, i8* %incdec.ptr.5, align 1, !tbaa !12\l  %incdec.ptr4.6 = getelementptr inbounds i8, i8* %outptr.020, i64 13\l  store i8 %20, i8* %incdec.ptr5.5, align 1, !tbaa !12\l  %incdec.ptr5.6 = getelementptr inbounds i8, i8* %outptr.020, i64 14\l  store i8 %20, i8* %incdec.ptr4.6, align 1, !tbaa !12\l  %incdec.ptr.7 = getelementptr inbounds i8, i8* %inptr.021, i64 8\l  %21 = load i8, i8* %incdec.ptr.6, align 1, !tbaa !12\l  %incdec.ptr4.7 = getelementptr inbounds i8, i8* %outptr.020, i64 15\l  store i8 %21, i8* %incdec.ptr5.6, align 1, !tbaa !12\l  %incdec.ptr5.7 = getelementptr inbounds i8, i8* %outptr.020, i64 16\l  store i8 %21, i8* %incdec.ptr4.7, align 1, !tbaa !12\l  %cmp3.7 = icmp ult i8* %incdec.ptr5.7, %add.ptr\l  br i1 %cmp3.7, label %while.body, label %for.inc.loopexit.unr-lcssa\l|{<s0>T|<s1>F}}"];
	Node0x5ccf2a0:s0 -> Node0x5ccf2a0;
	Node0x5ccf2a0:s1 -> Node0x5cd1e60;
	Node0x5cd1e60 [shape=record, style = filled, fillcolor = blue, label="{for.inc.loopexit.unr-lcssa:                       \l  br label %for.inc.loopexit\l}"];
	Node0x5cd1e60 -> Node0x5ccf020;
	Node0x5ccf020 [shape=record, style = filled, fillcolor = blue, label="{for.inc.loopexit:                                 \l  %.pre = load i32, i32* %max_v_samp_factor, align 8, !tbaa !6\l  br label %for.inc\l}"];
	Node0x5ccf020 -> Node0x5cc7010;
	Node0x5cc7010 [shape=record, style = filled, fillcolor = blue, label="{for.inc:                                          \l  %22 = phi i32 [ %.pre, %for.inc.loopexit ], [ %2, %for.body ]\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %23 = sext i32 %22 to i64\l  %cmp = icmp slt i64 %indvars.iv.next, %23\l  br i1 %cmp, label %for.body, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5cc7010:s0 -> Node0x5cc6eb0;
	Node0x5cc7010:s1 -> Node0x5cd2140;
	Node0x5cd2140 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  br label %for.end\l}"];
	Node0x5cd2140 -> Node0x5cc6cb0;
	Node0x5cc6cb0 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  ret void\l}"];
}
