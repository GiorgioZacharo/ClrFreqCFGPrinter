digraph "CFG for 'get_8bit_row' function" {
	label="CFG for 'get_8bit_row' function";

	Node0x4da4220 [shape=record, style = filled, fillcolor = blue,  style = filled, fillcolor = blue, label="{entry:\l  %colormap1 = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 1, i32 1\l  %0 = bitcast i32 (%struct.jpeg_compress_struct*,\l... %struct.cjpeg_source_struct*)** %colormap1 to i8***\l  %1 = load i8**, i8*** %0, align 8, !tbaa !3\l  %source_row = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 1, i32 3\l  %2 = bitcast %struct._IO_FILE** %source_row to i32*\l  %3 = load i32, i32* %2, align 8, !tbaa !10\l  %dec = add i32 %3, -1\l  store i32 %dec, i32* %2, align 8, !tbaa !10\l  %mem = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1\l  %4 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !11\l  %access_virt_sarray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %4, i64 0, i32 7\l  %5 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*,\l... i32, i32, i32)*, i8** (%struct.jpeg_common_struct*,\l... %struct.jvirt_sarray_control*, i32, i32, i32)** %access_virt_sarray, align 8,\l... !tbaa !15\l  %6 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %whole_image = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 1, i32 2\l  %7 = bitcast void (%struct.jpeg_compress_struct*,\l... %struct.cjpeg_source_struct*)** %whole_image to %struct.jvirt_sarray_control**\l  %8 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7,\l... align 8, !tbaa !18\l  %call = tail call i8** %5(%struct.jpeg_common_struct* %6,\l... %struct.jvirt_sarray_control* %8, i32 %dec, i32 1, i32 0) #4\l  %image_width = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 6\l  %9 = load i32, i32* %image_width, align 8, !tbaa !19\l  %cmp36 = icmp eq i32 %9, 0\l  br i1 %cmp36, label %for.end, label %for.body.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x4da4220:s0 -> Node0x4da6030;
	Node0x4da4220:s1 -> Node0x4da47a0;
	Node0x4da47a0 [shape=record, style = filled, fillcolor = blue,  style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  %buffer = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 0, i32 4\l  %10 = load i8**, i8*** %buffer, align 8, !tbaa !20\l  %11 = load i8*, i8** %10, align 8, !tbaa !21\l  %12 = load i8*, i8** %call, align 8, !tbaa !21\l  %arrayidx8 = getelementptr inbounds i8*, i8** %1, i64 1\l  %arrayidx12 = getelementptr inbounds i8*, i8** %1, i64 2\l  %xtraiter = and i32 %9, 1\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %for.body.lr.ph.split, label %for.body.prol\l|{<s0>T|<s1>F}}"];
	Node0x4da47a0:s0 -> Node0x4da6da0;
	Node0x4da47a0:s1 -> Node0x4da6ea0;
	Node0x4da6ea0 [shape=record, style = filled, fillcolor = blue, label="{for.body.prol:                                    \l  %incdec.ptr.prol = getelementptr inbounds i8, i8* %12, i64 1\l  %13 = load i8, i8* %12, align 1, !tbaa !22\l  %idxprom.prol = zext i8 %13 to i64\l  %14 = load i8*, i8** %1, align 8, !tbaa !21\l  %arrayidx5.prol = getelementptr inbounds i8, i8* %14, i64 %idxprom.prol\l  %15 = load i8, i8* %arrayidx5.prol, align 1, !tbaa !22\l  %incdec.ptr6.prol = getelementptr inbounds i8, i8* %11, i64 1\l  store i8 %15, i8* %11, align 1, !tbaa !22\l  %16 = load i8*, i8** %arrayidx8, align 8, !tbaa !21\l  %arrayidx9.prol = getelementptr inbounds i8, i8* %16, i64 %idxprom.prol\l  %17 = load i8, i8* %arrayidx9.prol, align 1, !tbaa !22\l  %incdec.ptr10.prol = getelementptr inbounds i8, i8* %11, i64 2\l  store i8 %17, i8* %incdec.ptr6.prol, align 1, !tbaa !22\l  %18 = load i8*, i8** %arrayidx12, align 8, !tbaa !21\l  %arrayidx13.prol = getelementptr inbounds i8, i8* %18, i64 %idxprom.prol\l  %19 = load i8, i8* %arrayidx13.prol, align 1, !tbaa !22\l  %incdec.ptr14.prol = getelementptr inbounds i8, i8* %11, i64 3\l  store i8 %19, i8* %incdec.ptr10.prol, align 1, !tbaa !22\l  %dec15.prol = add i32 %9, -1\l  br label %for.body.lr.ph.split\l}"];
	Node0x4da6ea0 -> Node0x4da6da0;
	Node0x4da6da0 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph.split:                             \l  %col.039.unr = phi i32 [ %9, %for.body.lr.ph ], [ %dec15.prol,\l... %for.body.prol ]\l  %outptr.038.unr = phi i8* [ %11, %for.body.lr.ph ], [ %incdec.ptr14.prol,\l... %for.body.prol ]\l  %inptr.037.unr = phi i8* [ %12, %for.body.lr.ph ], [ %incdec.ptr.prol,\l... %for.body.prol ]\l  %20 = icmp eq i32 %9, 1\l  br i1 %20, label %for.end.loopexit, label %for.body.lr.ph.split.split\l|{<s0>T|<s1>F}}"];
	Node0x4da6da0:s0 -> Node0x4dc7100;
	Node0x4da6da0:s1 -> Node0x4dc71e0;
	Node0x4dc71e0 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph.split.split:                       \l  br label %for.body\l}"];
	Node0x4dc71e0 -> Node0x4dc7390;
	Node0x4dc7390 [shape=record, style = filled, fillcolor = blue,  style = filled, fillcolor = blue, label="{for.body:                                         \l  %col.039 = phi i32 [ %col.039.unr, %for.body.lr.ph.split.split ], [\l... %dec15.1, %for.body ]\l  %outptr.038 = phi i8* [ %outptr.038.unr, %for.body.lr.ph.split.split ], [\l... %incdec.ptr14.1, %for.body ]\l  %inptr.037 = phi i8* [ %inptr.037.unr, %for.body.lr.ph.split.split ], [\l... %incdec.ptr.1, %for.body ]\l  %incdec.ptr = getelementptr inbounds i8, i8* %inptr.037, i64 1\l  %21 = load i8, i8* %inptr.037, align 1, !tbaa !22\l  %idxprom = zext i8 %21 to i64\l  %22 = load i8*, i8** %1, align 8, !tbaa !21\l  %arrayidx5 = getelementptr inbounds i8, i8* %22, i64 %idxprom\l  %23 = load i8, i8* %arrayidx5, align 1, !tbaa !22\l  %incdec.ptr6 = getelementptr inbounds i8, i8* %outptr.038, i64 1\l  store i8 %23, i8* %outptr.038, align 1, !tbaa !22\l  %24 = load i8*, i8** %arrayidx8, align 8, !tbaa !21\l  %arrayidx9 = getelementptr inbounds i8, i8* %24, i64 %idxprom\l  %25 = load i8, i8* %arrayidx9, align 1, !tbaa !22\l  %incdec.ptr10 = getelementptr inbounds i8, i8* %outptr.038, i64 2\l  store i8 %25, i8* %incdec.ptr6, align 1, !tbaa !22\l  %26 = load i8*, i8** %arrayidx12, align 8, !tbaa !21\l  %arrayidx13 = getelementptr inbounds i8, i8* %26, i64 %idxprom\l  %27 = load i8, i8* %arrayidx13, align 1, !tbaa !22\l  %incdec.ptr14 = getelementptr inbounds i8, i8* %outptr.038, i64 3\l  store i8 %27, i8* %incdec.ptr10, align 1, !tbaa !22\l  %incdec.ptr.1 = getelementptr inbounds i8, i8* %inptr.037, i64 2\l  %28 = load i8, i8* %incdec.ptr, align 1, !tbaa !22\l  %idxprom.1 = zext i8 %28 to i64\l  %29 = load i8*, i8** %1, align 8, !tbaa !21\l  %arrayidx5.1 = getelementptr inbounds i8, i8* %29, i64 %idxprom.1\l  %30 = load i8, i8* %arrayidx5.1, align 1, !tbaa !22\l  %incdec.ptr6.1 = getelementptr inbounds i8, i8* %outptr.038, i64 4\l  store i8 %30, i8* %incdec.ptr14, align 1, !tbaa !22\l  %31 = load i8*, i8** %arrayidx8, align 8, !tbaa !21\l  %arrayidx9.1 = getelementptr inbounds i8, i8* %31, i64 %idxprom.1\l  %32 = load i8, i8* %arrayidx9.1, align 1, !tbaa !22\l  %incdec.ptr10.1 = getelementptr inbounds i8, i8* %outptr.038, i64 5\l  store i8 %32, i8* %incdec.ptr6.1, align 1, !tbaa !22\l  %33 = load i8*, i8** %arrayidx12, align 8, !tbaa !21\l  %arrayidx13.1 = getelementptr inbounds i8, i8* %33, i64 %idxprom.1\l  %34 = load i8, i8* %arrayidx13.1, align 1, !tbaa !22\l  %incdec.ptr14.1 = getelementptr inbounds i8, i8* %outptr.038, i64 6\l  store i8 %34, i8* %incdec.ptr10.1, align 1, !tbaa !22\l  %dec15.1 = add i32 %col.039, -2\l  %cmp.1 = icmp eq i32 %dec15.1, 0\l  br i1 %cmp.1, label %for.end.loopexit.unr-lcssa, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x4dc7390:s0 -> Node0x4dc9130;
	Node0x4dc7390:s1 -> Node0x4dc7390;
	Node0x4dc9130 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit.unr-lcssa:                       \l  br label %for.end.loopexit\l}"];
	Node0x4dc9130 -> Node0x4dc7100;
	Node0x4dc7100 [shape=record, style = filled, fillcolor = blue,  style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  br label %for.end\l}"];
	Node0x4dc7100 -> Node0x4da6030;
	Node0x4da6030 [shape=record, style = filled, fillcolor = blue,  style = filled, fillcolor = blue, label="{for.end:                                          \l  ret i32 1\l}"];
}
