digraph "CFG for 'jpeg_add_quant_table' function" {
	label="CFG for 'jpeg_add_quant_table' function";

	Node0x65f5d60 [shape=record, style = filled, fillcolor = skyblue, label="{entry:\l  %idxprom = sext i32 %which_tbl to i64\l  %arrayidx = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 15, i64 %idxprom\l  %global_state = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 4\l  %0 = load i32, i32* %global_state, align 4, !tbaa !3\l  %cmp = icmp eq i32 %0, 100\l  br i1 %cmp, label %if.end, label %if.then, !prof !11\l|{<s0>T|<s1>F}}"];
	Node0x65f5d60:s0 -> Node0x65f87e0;
	Node0x65f5d60:s1 -> Node0x65f88b0;
	Node0x65f88b0 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %1 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !12\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 5\l  store i32 18, i32* %msg_code, align 8, !tbaa !13\l  %arrayidx4 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 6, i32 0, i64 0\l  store i32 %0, i32* %arrayidx4, align 4, !tbaa !16\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 0\l  %2 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !17\l  %3 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %2(%struct.jpeg_common_struct* %3) #4\l  br label %if.end\l}"];
	Node0x65f88b0 -> Node0x65f87e0;
	Node0x65f87e0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end:                                           \l  %4 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %arrayidx, align 8,\l... !tbaa !18\l  %cmp6 = icmp eq %struct.JQUANT_TBL* %4, null\l  br i1 %cmp6, label %if.then7, label %for.cond.preheader, !prof !19\l|{<s0>T|<s1>F}}"];
	Node0x65f87e0:s0 -> Node0x65f9e40;
	Node0x65f87e0:s1 -> Node0x65f9f50;
	Node0x65f9e40 [shape=record, style = filled, fillcolor = skyblue, label="{if.then7:                                         \l  %5 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call %struct.JQUANT_TBL*\l... @jpeg_alloc_quant_table(%struct.jpeg_common_struct* %5) #4\l  store %struct.JQUANT_TBL* %call, %struct.JQUANT_TBL** %arrayidx, align 8,\l... !tbaa !18\l  br label %for.cond.preheader\l}"];
	Node0x65f9e40 -> Node0x65f9f50;
	Node0x65f9f50 [shape=record, style = filled, fillcolor = skyblue, label="{for.cond.preheader:                               \l  %6 = phi %struct.JQUANT_TBL* [ %call, %if.then7 ], [ %4, %if.end ]\l  %conv12 = sext i32 %scale_factor to i64\l  %tobool = icmp eq i32 %force_baseline, 0\l  br i1 %tobool, label %for.body.preheader, label %for.body.us.preheader\l|{<s0>T|<s1>F}}"];
	Node0x65f9f50:s0 -> Node0x65fad40;
	Node0x65f9f50:s1 -> Node0x65fae40;
	Node0x65fae40 [shape=record, style = filled, fillcolor = skyblue, label="{for.body.us.preheader:                            \l  br label %for.body.us\l}"];
	Node0x65fae40 -> Node0x65fafd0;
	Node0x65fad40 [shape=record, style = filled, fillcolor = skyblue, label="{for.body.preheader:                               \l  br label %for.body\l}"];
	Node0x65fad40 -> Node0x65f8ca0;
	Node0x65fafd0 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us:                                      \l  %indvars.iv49 = phi i64 [ 0, %for.body.us.preheader ], [\l... %indvars.iv.next50.1, %for.body.us ]\l  %arrayidx11.us = getelementptr inbounds i32, i32* %basic_table, i64\l... %indvars.iv49\l  %7 = load i32, i32* %arrayidx11.us, align 4, !tbaa !16\l  %conv.us = zext i32 %7 to i64\l  %mul.us = mul nsw i64 %conv.us, %conv12\l  %add.us = add nsw i64 %mul.us, 50\l  %div.us = sdiv i64 %add.us, 100\l  %cmp13.us = icmp slt i64 %div.us, 1\l  %.div.us = select i1 %cmp13.us, i64 1, i64 %div.us\l  %8 = icmp slt i64 %.div.us, 255\l  %9 = select i1 %8, i64 %.div.us, i64 255\l  %10 = trunc i64 %9 to i16\l  %arrayidx27.us = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %6, i64 0, i32 0, i64 %indvars.iv49\l  store i16 %10, i16* %arrayidx27.us, align 2, !tbaa !20\l  %indvars.iv.next50 = or i64 %indvars.iv49, 1\l  %arrayidx11.us.1 = getelementptr inbounds i32, i32* %basic_table, i64\l... %indvars.iv.next50\l  %11 = load i32, i32* %arrayidx11.us.1, align 4, !tbaa !16\l  %conv.us.1 = zext i32 %11 to i64\l  %mul.us.1 = mul nsw i64 %conv.us.1, %conv12\l  %add.us.1 = add nsw i64 %mul.us.1, 50\l  %div.us.1 = sdiv i64 %add.us.1, 100\l  %cmp13.us.1 = icmp slt i64 %div.us.1, 1\l  %.div.us.1 = select i1 %cmp13.us.1, i64 1, i64 %div.us.1\l  %12 = icmp slt i64 %.div.us.1, 255\l  %13 = select i1 %12, i64 %.div.us.1, i64 255\l  %14 = trunc i64 %13 to i16\l  %arrayidx27.us.1 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %6, i64 0, i32 0, i64 %indvars.iv.next50\l  store i16 %14, i16* %arrayidx27.us.1, align 2, !tbaa !20\l  %indvars.iv.next50.1 = add nsw i64 %indvars.iv49, 2\l  %exitcond51.1 = icmp eq i64 %indvars.iv.next50.1, 64\l  br i1 %exitcond51.1, label %for.end.loopexit54, label %for.body.us, !prof !21\l|{<s0>T|<s1>F}}"];
	Node0x65fafd0:s0 -> Node0x65fd8e0;
	Node0x65fafd0:s1 -> Node0x65fafd0;
	Node0x65f8ca0 [shape=record, style = filled, fillcolor = cyan, label="{for.body:                                         \l  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.1,\l... %for.body ]\l  %arrayidx11 = getelementptr inbounds i32, i32* %basic_table, i64 %indvars.iv\l  %15 = load i32, i32* %arrayidx11, align 4, !tbaa !16\l  %conv = zext i32 %15 to i64\l  %mul = mul nsw i64 %conv, %conv12\l  %add = add nsw i64 %mul, 50\l  %div = sdiv i64 %add, 100\l  %cmp13 = icmp slt i64 %div, 1\l  %.div = select i1 %cmp13, i64 1, i64 %div\l  %cmp17 = icmp sgt i64 %.div, 32767\l  %..div = select i1 %cmp17, i64 32767, i64 %.div\l  %16 = trunc i64 %..div to i16\l  %arrayidx27 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL*\l... %6, i64 0, i32 0, i64 %indvars.iv\l  store i16 %16, i16* %arrayidx27, align 2, !tbaa !20\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx11.1 = getelementptr inbounds i32, i32* %basic_table, i64\l... %indvars.iv.next\l  %17 = load i32, i32* %arrayidx11.1, align 4, !tbaa !16\l  %conv.1 = zext i32 %17 to i64\l  %mul.1 = mul nsw i64 %conv.1, %conv12\l  %add.1 = add nsw i64 %mul.1, 50\l  %div.1 = sdiv i64 %add.1, 100\l  %cmp13.1 = icmp slt i64 %div.1, 1\l  %.div.1 = select i1 %cmp13.1, i64 1, i64 %div.1\l  %cmp17.1 = icmp sgt i64 %.div.1, 32767\l  %..div.1 = select i1 %cmp17.1, i64 32767, i64 %.div.1\l  %18 = trunc i64 %..div.1 to i16\l  %arrayidx27.1 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %6, i64 0, i32 0, i64 %indvars.iv.next\l  store i16 %18, i16* %arrayidx27.1, align 2, !tbaa !20\l  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2\l  %exitcond.1 = icmp eq i64 %indvars.iv.next.1, 64\l  br i1 %exitcond.1, label %for.end.loopexit, label %for.body, !prof !21\l|{<s0>T|<s1>F}}"];
	Node0x65f8ca0:s0 -> Node0x65ff1f0;
	Node0x65f8ca0:s1 -> Node0x65f8ca0;
	Node0x65ff1f0 [shape=record, style = filled, fillcolor = skyblue, label="{for.end.loopexit:                                 \l  br label %for.end\l}"];
	Node0x65ff1f0 -> Node0x65ff910;
	Node0x65fd8e0 [shape=record, style = filled, fillcolor = skyblue, label="{for.end.loopexit54:                               \l  br label %for.end\l}"];
	Node0x65fd8e0 -> Node0x65ff910;
	Node0x65ff910 [shape=record, style = filled, fillcolor = skyblue, label="{for.end:                                          \l  %19 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %arrayidx, align 8,\l... !tbaa !18\l  %sent_table = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL*\l... %19, i64 0, i32 1\l  store i32 0, i32* %sent_table, align 4, !tbaa !22\l  ret void\l}"];
}
