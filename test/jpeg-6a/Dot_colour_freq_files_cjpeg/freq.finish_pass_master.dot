digraph "CFG for 'finish_pass_master' function" {
	label="CFG for 'finish_pass_master' function";

	Node0x61c8b60 [shape=record, style = filled, fillcolor = cyan, label="{entry:\l  %master1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 51\l  %0 = bitcast %struct.jpeg_comp_master** %master1 to %struct.my_comp_master**\l  %1 = load %struct.my_comp_master*, %struct.my_comp_master** %0, align 8,\l... !tbaa !3\l  %entropy = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59\l  %2 = load %struct.jpeg_entropy_encoder*, %struct.jpeg_entropy_encoder**\l... %entropy, align 8, !tbaa !11\l  %finish_pass = getelementptr inbounds %struct.jpeg_entropy_encoder,\l... %struct.jpeg_entropy_encoder* %2, i64 0, i32 2\l  %3 = load void (%struct.jpeg_compress_struct*)*, void\l... (%struct.jpeg_compress_struct*)** %finish_pass, align 8, !tbaa !12\l  tail call void %3(%struct.jpeg_compress_struct* %cinfo) #3\l  %pass_type = getelementptr inbounds %struct.my_comp_master,\l... %struct.my_comp_master* %1, i64 0, i32 1\l  %4 = bitcast i32* %pass_type to i64*\l  %5 = load i64, i64* %4, align 8\l  %6 = trunc i64 %5 to i32\l  %7 = lshr i64 %5, 32\l  %8 = trunc i64 %7 to i32\l  switch i32 %6, label %sw.epilog [\l    i32 0, label %sw.bb\l    i32 1, label %sw.bb3\l    i32 2, label %sw.bb5\l  ], !prof !14\l|{<s0>def|<s1>0|<s2>1|<s3>2}}"];
	Node0x61c8b60:s0 -> Node0x6223a20;
	Node0x61c8b60:s1 -> Node0x6223d00;
	Node0x61c8b60:s2 -> Node0x6223db0;
	Node0x61c8b60:s3 -> Node0x6223e80;
	Node0x6223d00 [shape=record, style = filled, fillcolor = skyblue, label="{sw.bb:                                            \l  store i32 2, i32* %pass_type, align 8, !tbaa !15\l  %optimize_coding = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 25\l  %9 = load i32, i32* %optimize_coding, align 8, !tbaa !18\l  %tobool = icmp eq i32 %9, 0\l  br i1 %tobool, label %if.then, label %sw.epilog, !prof !19\l|{<s0>T|<s1>F}}"];
	Node0x6223d00:s0 -> Node0x62243a0;
	Node0x6223d00:s1 -> Node0x6223a20;
	Node0x62243a0 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %scan_number = getelementptr inbounds %struct.my_comp_master,\l... %struct.my_comp_master* %1, i64 0, i32 4\l  %10 = load i32, i32* %scan_number, align 4, !tbaa !20\l  %inc = add nsw i32 %10, 1\l  store i32 %inc, i32* %scan_number, align 4, !tbaa !20\l  br label %sw.epilog\l}"];
	Node0x62243a0 -> Node0x6223a20;
	Node0x6223db0 [shape=record, style = filled, fillcolor = skyblue, label="{sw.bb3:                                           \l  store i32 2, i32* %pass_type, align 8, !tbaa !15\l  br label %sw.epilog\l}"];
	Node0x6223db0 -> Node0x6223a20;
	Node0x6223e80 [shape=record, style = filled, fillcolor = skyblue, label="{sw.bb5:                                           \l  %optimize_coding6 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 25\l  %11 = load i32, i32* %optimize_coding6, align 8, !tbaa !18\l  %tobool7 = icmp eq i32 %11, 0\l  br i1 %tobool7, label %if.end10, label %if.then8, !prof !21\l|{<s0>T|<s1>F}}"];
	Node0x6223e80:s0 -> Node0x6224a60;
	Node0x6223e80:s1 -> Node0x6224b10;
	Node0x6224b10 [shape=record, style = filled, fillcolor = skyblue, label="{if.then8:                                         \l  store i32 1, i32* %pass_type, align 8, !tbaa !15\l  br label %if.end10\l}"];
	Node0x6224b10 -> Node0x6224a60;
	Node0x6224a60 [shape=record, style = filled, fillcolor = skyblue, label="{if.end10:                                         \l  %scan_number11 = getelementptr inbounds %struct.my_comp_master,\l... %struct.my_comp_master* %1, i64 0, i32 4\l  %12 = load i32, i32* %scan_number11, align 4, !tbaa !20\l  %inc12 = add nsw i32 %12, 1\l  store i32 %inc12, i32* %scan_number11, align 4, !tbaa !20\l  br label %sw.epilog\l}"];
	Node0x6224a60 -> Node0x6223a20;
	Node0x6223a20 [shape=record, style = filled, fillcolor = cyan, label="{sw.epilog:                                        \l  %pass_number = getelementptr inbounds %struct.my_comp_master,\l... %struct.my_comp_master* %1, i64 0, i32 2\l  %inc13 = add nsw i32 %8, 1\l  store i32 %inc13, i32* %pass_number, align 4, !tbaa !22\l  ret void\l}"];
}
