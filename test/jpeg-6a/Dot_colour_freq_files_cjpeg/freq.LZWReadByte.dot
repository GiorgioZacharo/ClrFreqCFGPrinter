digraph "CFG for 'LZWReadByte' function" {
	label="CFG for 'LZWReadByte' function";

	Node0x6a05440 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %first_time = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 14\l  %0 = load i32, i32* %first_time, align 4, !tbaa !3\l  %tobool = icmp eq i32 %0, 0\l  br i1 %tobool, label %if.else, label %if.end4.thread\l|{<s0>T|<s1>F}}"];
	Node0x6a05440:s0 -> Node0x6a055d0;
	Node0x6a05440:s1 -> Node0x6a05640;
	Node0x6a05640 [shape=record, style = filled, fillcolor = blue, label="{if.end4.thread:                                   \l  store i32 0, i32* %first_time, align 4, !tbaa !3\l  %clear_code = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 9\l  br label %if.then8\l}"];
	Node0x6a05640 -> Node0x6a25e40;
	Node0x6a055d0 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %sp = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 20\l  %1 = load i8*, i8** %sp, align 8, !tbaa !10\l  %symbol_stack = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 19\l  %2 = load i8*, i8** %symbol_stack, align 8, !tbaa !11\l  %cmp = icmp ugt i8* %1, %2\l  br i1 %cmp, label %if.then2, label %if.end4\l|{<s0>T|<s1>F}}"];
	Node0x6a055d0:s0 -> Node0x6a26e80;
	Node0x6a055d0:s1 -> Node0x6a26f60;
	Node0x6a26e80 [shape=record, style = filled, fillcolor = blue, label="{if.then2:                                         \l  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 -1\l  store i8* %incdec.ptr, i8** %sp, align 8, !tbaa !10\l  %3 = load i8, i8* %incdec.ptr, align 1, !tbaa !12\l  %conv = zext i8 %3 to i32\l  br label %cleanup\l}"];
	Node0x6a26e80 -> Node0x6a27370;
	Node0x6a26f60 [shape=record, style = filled, fillcolor = blue, label="{if.end4:                                          \l  %call = tail call fastcc i32 @GetCode(%struct.gif_source_struct* nonnull\l... %sinfo)\l  %clear_code5.phi.trans.insert = getelementptr inbounds\l... %struct.gif_source_struct, %struct.gif_source_struct* %sinfo, i64 0, i32 9\l  %4 = bitcast i32* %clear_code5.phi.trans.insert to i64*\l  %.pre = load i64, i64* %4, align 8\l  %5 = trunc i64 %.pre to i32\l  %cmp6 = icmp eq i32 %call, %5\l  br i1 %cmp6, label %if.then8, label %if.end21, !prof !13\l|{<s0>T|<s1>F}}"];
	Node0x6a26f60:s0 -> Node0x6a25e40;
	Node0x6a26f60:s1 -> Node0x6a27ae0;
	Node0x6a25e40 [shape=record, style = filled, fillcolor = blue, label="{if.then8:                                         \l  %clear_code5.pre-phi163 = phi i32* [ %clear_code, %if.end4.thread ], [\l... %clear_code5.phi.trans.insert, %if.end4 ]\l  %input_code_size.i = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 8\l  %6 = load i32, i32* %input_code_size.i, align 4, !tbaa !14\l  %add.i = add nsw i32 %6, 1\l  %code_size.i = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 11\l  store i32 %add.i, i32* %code_size.i, align 8, !tbaa !15\l  %7 = load i32, i32* %clear_code5.pre-phi163, align 8, !tbaa !16\l  %shl.i = shl i32 %7, 1\l  %limit_code.i = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 12\l  store i32 %shl.i, i32* %limit_code.i, align 4, !tbaa !17\l  %add2.i = add nsw i32 %7, 2\l  %max_code.i = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 13\l  store i32 %add2.i, i32* %max_code.i, align 8, !tbaa !18\l  %symbol_stack.i = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 19\l  %8 = bitcast i8** %symbol_stack.i to i64*\l  %9 = load i64, i64* %8, align 8, !tbaa !11\l  %sp.i = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 20\l  %10 = bitcast i8** %sp.i to i64*\l  store i64 %9, i64* %10, align 8, !tbaa !10\l  br label %do.body\l}"];
	Node0x6a25e40 -> Node0x6a27910;
	Node0x6a27910 [shape=record, style = filled, fillcolor = blue, label="{do.body:                                          \l  %call9 = tail call fastcc i32 @GetCode(%struct.gif_source_struct* nonnull\l... %sinfo)\l  %11 = load i32, i32* %clear_code5.pre-phi163, align 8, !tbaa !16\l  %cmp11 = icmp eq i32 %call9, %11\l  br i1 %cmp11, label %do.body, label %do.end\l|{<s0>T|<s1>F}}"];
	Node0x6a27910:s0 -> Node0x6a27910;
	Node0x6a27910:s1 -> Node0x6a2a560;
	Node0x6a2a560 [shape=record, style = filled, fillcolor = blue, label="{do.end:                                           \l  %.lcssa = phi i32 [ %11, %do.body ]\l  %call9.lcssa = phi i32 [ %call9, %do.body ]\l  %cmp14 = icmp sgt i32 %call9.lcssa, %.lcssa\l  br i1 %cmp14, label %if.then16, label %if.end20\l|{<s0>T|<s1>F}}"];
	Node0x6a2a560:s0 -> Node0x6a2a840;
	Node0x6a2a560:s1 -> Node0x6a2a920;
	Node0x6a2a840 [shape=record, style = filled, fillcolor = blue, label="{if.then16:                                        \l  %cinfo = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 1\l  %12 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo, align 8, !tbaa !19\l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %12, i64 0, i32 0\l  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !20\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %13, i64 0, i32 5\l  store i32 1021, i32* %msg_code, align 8, !tbaa !24\l  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %13, i64 0, i32 1\l  %14 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !27\l  %15 = bitcast %struct.jpeg_compress_struct* %12 to\l... %struct.jpeg_common_struct*\l  tail call void %14(%struct.jpeg_common_struct* %15, i32 -1) #4\l  br label %if.end20\l}"];
	Node0x6a2a840 -> Node0x6a2a920;
	Node0x6a2a920 [shape=record, style = filled, fillcolor = blue, label="{if.end20:                                         \l  %code.1 = phi i32 [ 0, %if.then16 ], [ %call9.lcssa, %do.end ]\l  %oldcode = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 15\l  store i32 %code.1, i32* %oldcode, align 8, !tbaa !28\l  %firstcode = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 16\l  store i32 %code.1, i32* %firstcode, align 4, !tbaa !29\l  br label %cleanup\l}"];
	Node0x6a2a920 -> Node0x6a27370;
	Node0x6a27ae0 [shape=record, style = filled, fillcolor = blue, label="{if.end21:                                         \l  %.in = lshr i64 %.pre, 32\l  %16 = trunc i64 %.in to i32\l  %cmp22 = icmp eq i32 %call, %16\l  br i1 %cmp22, label %if.then24, label %if.end36\l|{<s0>T|<s1>F}}"];
	Node0x6a27ae0:s0 -> Node0x6a28040;
	Node0x6a27ae0:s1 -> Node0x6a28120;
	Node0x6a28040 [shape=record, style = filled, fillcolor = blue, label="{if.then24:                                        \l  %out_of_blocks = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 7\l  %17 = load i32, i32* %out_of_blocks, align 8, !tbaa !30\l  %tobool25 = icmp eq i32 %17, 0\l  br i1 %tobool25, label %if.then26, label %if.end28\l|{<s0>T|<s1>F}}"];
	Node0x6a28040:s0 -> Node0x6a2c110;
	Node0x6a28040:s1 -> Node0x6a2c1f0;
	Node0x6a2c110 [shape=record, style = filled, fillcolor = blue, label="{if.then26:                                        \l  tail call fastcc void @SkipDataBlocks(%struct.gif_source_struct* nonnull\l... %sinfo)\l  store i32 1, i32* %out_of_blocks, align 8, !tbaa !30\l  br label %if.end28\l}"];
	Node0x6a2c110 -> Node0x6a2c1f0;
	Node0x6a2c1f0 [shape=record, style = filled, fillcolor = blue, label="{if.end28:                                         \l  %cinfo29 = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 1\l  %18 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo29, align 8, !tbaa !19\l  %err30 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %18, i64 0, i32 0\l  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err30, align\l... 8, !tbaa !20\l  %msg_code31 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %19, i64 0, i32 5\l  store i32 1023, i32* %msg_code31, align 8, !tbaa !24\l  %emit_message34 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %19, i64 0, i32 1\l  %20 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message34, align 8, !tbaa !27\l  %21 = bitcast %struct.jpeg_compress_struct* %18 to\l... %struct.jpeg_common_struct*\l  tail call void %20(%struct.jpeg_common_struct* %21, i32 -1) #4\l  br label %cleanup\l}"];
	Node0x6a2c1f0 -> Node0x6a27370;
	Node0x6a28120 [shape=record, style = filled, fillcolor = blue, label="{if.end36:                                         \l  %max_code = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 13\l  %22 = load i32, i32* %max_code, align 8, !tbaa !18\l  %cmp37 = icmp slt i32 %call, %22\l  br i1 %cmp37, label %while.cond.preheader, label %if.then39\l|{<s0>T|<s1>F}}"];
	Node0x6a28120:s0 -> Node0x6a2d300;
	Node0x6a28120:s1 -> Node0x6a2d3e0;
	Node0x6a2d3e0 [shape=record, style = filled, fillcolor = blue, label="{if.then39:                                        \l  %cmp41 = icmp sgt i32 %call, %22\l  br i1 %cmp41, label %if.then43, label %if.end51\l|{<s0>T|<s1>F}}"];
	Node0x6a2d3e0:s0 -> Node0x6a2d5c0;
	Node0x6a2d3e0:s1 -> Node0x6a2d640;
	Node0x6a2d5c0 [shape=record, style = filled, fillcolor = blue, label="{if.then43:                                        \l  %cinfo44 = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 1\l  %23 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo44, align 8, !tbaa !19\l  %err45 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %23, i64 0, i32 0\l  %24 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err45, align\l... 8, !tbaa !20\l  %msg_code46 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %24, i64 0, i32 5\l  store i32 1021, i32* %msg_code46, align 8, !tbaa !24\l  %emit_message49 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %24, i64 0, i32 1\l  %25 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message49, align 8, !tbaa !27\l  %26 = bitcast %struct.jpeg_compress_struct* %23 to\l... %struct.jpeg_common_struct*\l  tail call void %25(%struct.jpeg_common_struct* %26, i32 -1) #4\l  br label %if.end51\l}"];
	Node0x6a2d5c0 -> Node0x6a2d640;
	Node0x6a2d640 [shape=record, style = filled, fillcolor = blue, label="{if.end51:                                         \l  %incode.0 = phi i32 [ 0, %if.then43 ], [ %call, %if.then39 ]\l  %firstcode52 = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 16\l  %27 = load i32, i32* %firstcode52, align 4, !tbaa !29\l  %conv53 = trunc i32 %27 to i8\l  %sp54 = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 20\l  %28 = load i8*, i8** %sp54, align 8, !tbaa !10\l  %incdec.ptr55 = getelementptr inbounds i8, i8* %28, i64 1\l  store i8* %incdec.ptr55, i8** %sp54, align 8, !tbaa !10\l  store i8 %conv53, i8* %28, align 1, !tbaa !12\l  %oldcode56 = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 15\l  %29 = load i32, i32* %oldcode56, align 8, !tbaa !28\l  br label %while.cond.preheader\l}"];
	Node0x6a2d640 -> Node0x6a2d300;
	Node0x6a2d300 [shape=record, style = filled, fillcolor = blue, label="{while.cond.preheader:                             \l  %code.2.ph = phi i32 [ %call, %if.end36 ], [ %29, %if.end51 ]\l  %incode.1.ph = phi i32 [ %call, %if.end36 ], [ %incode.0, %if.end51 ]\l  %30 = load i32, i32* %clear_code5.phi.trans.insert, align 8, !tbaa !16\l  %cmp59158 = icmp slt i32 %code.2.ph, %30\l  br i1 %cmp59158, label %while.end, label %while.body.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x6a2d300:s0 -> Node0x6a2f340;
	Node0x6a2d300:s1 -> Node0x6a2f450;
	Node0x6a2f450 [shape=record, style = filled, fillcolor = blue, label="{while.body.lr.ph:                                 \l  %symbol_tail = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 18\l  %sp61 = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 20\l  %symbol_head = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 17\l  br label %while.body\l}"];
	Node0x6a2f450 -> Node0x6a2f850;
	Node0x6a2f850 [shape=record, style = filled, fillcolor = blue, label="{while.body:                                       \l  %code.2159 = phi i32 [ %code.2.ph, %while.body.lr.ph ], [ %conv65,\l... %while.body ]\l  %idxprom = sext i32 %code.2159 to i64\l  %31 = load i8*, i8** %symbol_tail, align 8, !tbaa !31\l  %arrayidx = getelementptr inbounds i8, i8* %31, i64 %idxprom\l  %32 = load i8, i8* %arrayidx, align 1, !tbaa !12\l  %33 = load i8*, i8** %sp61, align 8, !tbaa !10\l  %incdec.ptr62 = getelementptr inbounds i8, i8* %33, i64 1\l  store i8* %incdec.ptr62, i8** %sp61, align 8, !tbaa !10\l  store i8 %32, i8* %33, align 1, !tbaa !12\l  %34 = load i16*, i16** %symbol_head, align 8, !tbaa !32\l  %arrayidx64 = getelementptr inbounds i16, i16* %34, i64 %idxprom\l  %35 = load i16, i16* %arrayidx64, align 2, !tbaa !33\l  %conv65 = zext i16 %35 to i32\l  %36 = load i32, i32* %clear_code5.phi.trans.insert, align 8, !tbaa !16\l  %cmp59 = icmp slt i32 %conv65, %36\l  br i1 %cmp59, label %while.end.loopexit, label %while.body\l|{<s0>T|<s1>F}}"];
	Node0x6a2f850:s0 -> Node0x6a08f70;
	Node0x6a2f850:s1 -> Node0x6a2f850;
	Node0x6a08f70 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit:                               \l  %conv65.lcssa = phi i32 [ %conv65, %while.body ]\l  br label %while.end\l}"];
	Node0x6a08f70 -> Node0x6a2f340;
	Node0x6a2f340 [shape=record, style = filled, fillcolor = blue, label="{while.end:                                        \l  %code.2.lcssa = phi i32 [ %code.2.ph, %while.cond.preheader ], [\l... %conv65.lcssa, %while.end.loopexit ]\l  %firstcode66 = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 16\l  store i32 %code.2.lcssa, i32* %firstcode66, align 4, !tbaa !29\l  %37 = load i32, i32* %max_code, align 8, !tbaa !18\l  %cmp68 = icmp slt i32 %37, 4096\l  %oldcode71 = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 15\l  br i1 %cmp68, label %if.then70, label %if.end92\l|{<s0>T|<s1>F}}"];
	Node0x6a2f340:s0 -> Node0x6a09510;
	Node0x6a2f340:s1 -> Node0x6a095f0;
	Node0x6a09510 [shape=record, style = filled, fillcolor = blue, label="{if.then70:                                        \l  %38 = bitcast i32* %oldcode71 to i64*\l  %39 = load i64, i64* %38, align 8\l  %conv72 = trunc i64 %39 to i16\l  %idxprom73 = sext i32 %37 to i64\l  %symbol_head74 = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 17\l  %40 = load i16*, i16** %symbol_head74, align 8, !tbaa !32\l  %arrayidx75 = getelementptr inbounds i16, i16* %40, i64 %idxprom73\l  store i16 %conv72, i16* %arrayidx75, align 2, !tbaa !33\l  %41 = lshr i64 %39, 32\l  %conv77 = trunc i64 %41 to i8\l  %symbol_tail79 = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 18\l  %42 = load i8*, i8** %symbol_tail79, align 8, !tbaa !31\l  %arrayidx80 = getelementptr inbounds i8, i8* %42, i64 %idxprom73\l  store i8 %conv77, i8* %arrayidx80, align 1, !tbaa !12\l  %43 = load i32, i32* %max_code, align 8, !tbaa !18\l  %inc = add nsw i32 %43, 1\l  store i32 %inc, i32* %max_code, align 8, !tbaa !18\l  %limit_code = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 12\l  %44 = load i32, i32* %limit_code, align 4, !tbaa !17\l  %cmp83 = icmp slt i32 %inc, %44\l  br i1 %cmp83, label %if.end92, label %land.lhs.true\l|{<s0>T|<s1>F}}"];
	Node0x6a09510:s0 -> Node0x6a095f0;
	Node0x6a09510:s1 -> Node0x6a33620;
	Node0x6a33620 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true:                                    \l  %code_size = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %sinfo, i64 0, i32 11\l  %45 = bitcast i32* %code_size to i64*\l  %46 = load i64, i64* %45, align 8\l  %47 = trunc i64 %46 to i32\l  %cmp85 = icmp slt i32 %47, 12\l  br i1 %cmp85, label %if.then87, label %if.end92\l|{<s0>T|<s1>F}}"];
	Node0x6a33620:s0 -> Node0x6a339c0;
	Node0x6a33620:s1 -> Node0x6a095f0;
	Node0x6a339c0 [shape=record, style = filled, fillcolor = blue, label="{if.then87:                                        \l  %inc89 = add nsw i32 %47, 1\l  store i32 %inc89, i32* %code_size, align 8, !tbaa !15\l  %48 = lshr i64 %46, 31\l  %.tr = trunc i64 %48 to i32\l  %shl = and i32 %.tr, -2\l  store i32 %shl, i32* %limit_code, align 4, !tbaa !17\l  br label %if.end92\l}"];
	Node0x6a339c0 -> Node0x6a095f0;
	Node0x6a095f0 [shape=record, style = filled, fillcolor = blue, label="{if.end92:                                         \l  store i32 %incode.1.ph, i32* %oldcode71, align 8, !tbaa !28\l  %49 = load i32, i32* %firstcode66, align 4, !tbaa !29\l  br label %cleanup\l}"];
	Node0x6a095f0 -> Node0x6a27370;
	Node0x6a27370 [shape=record, style = filled, fillcolor = blue, label="{cleanup:                                          \l  %retval.0 = phi i32 [ %code.1, %if.end20 ], [ 0, %if.end28 ], [ %49,\l... %if.end92 ], [ %conv, %if.then2 ]\l  ret i32 %retval.0\l}"];
}
