digraph "CFG for 'jinit_master_decompress' function" {
	label="CFG for 'jinit_master_decompress' function";

	Node0x60f3b10 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !2\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %0, i64 0, i32 0\l  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !10\l  %2 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %1(%struct.jpeg_common_struct* %2, i32 1, i64 48) #3\l  %master1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 73\l  %3 = bitcast %struct.jpeg_decomp_master** %master1 to i8**\l  store i8* %call, i8** %3, align 8, !tbaa !13\l  %4 = bitcast i8* %call to \<2 x void (%struct.jpeg_decompress_struct*)*\>*\l  store \<2 x void (%struct.jpeg_decompress_struct*)*\> \<void\l... (%struct.jpeg_decompress_struct*)* @prepare_for_output_pass, void\l... (%struct.jpeg_decompress_struct*)* @finish_output_pass\>, \<2 x void\l... (%struct.jpeg_decompress_struct*)*\>* %4, align 8, !tbaa !14\l  %is_dummy_pass = getelementptr inbounds i8, i8* %call, i64 16\l  %5 = bitcast i8* %is_dummy_pass to i32*\l  store i32 0, i32* %5, align 8, !tbaa !15\l  tail call void @jpeg_calc_output_dimensions(%struct.jpeg_decompress_struct*\l... %cinfo) #3\l  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !2\l  %alloc_small.i.i = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %6, i64 0, i32 0\l  %7 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small.i.i, align 8, !tbaa !10\l  %call.i.i = tail call i8* %7(%struct.jpeg_common_struct* %2, i32 1, i64\l... 1408) #3\l  %add.ptr.i.i = getelementptr inbounds i8, i8* %call.i.i, i64 256\l  %sample_range_limit.i.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 61\l  store i8* %add.ptr.i.i, i8** %sample_range_limit.i.i, align 8, !tbaa !18\l  tail call void @llvm.memset.p0i8.i64(i8* %call.i.i, i8 0, i64 256, i32 1, i1\l... false) #3\l  br label %vector.body\l}"];
	Node0x60f3b10 -> Node0x6118500;
	Node0x6118500 [shape=record, style = filled, fillcolor = blue, label="{vector.body:                                      \l  %8 = bitcast i8* %add.ptr.i.i to \<16 x i8\>*\l  store \<16 x i8\> \<i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9,\l... i8 10, i8 11, i8 12, i8 13, i8 14, i8 15\>, \<16 x i8\>* %8, align 1, !tbaa !19\l  %9 = getelementptr inbounds i8, i8* %call.i.i, i64 272\l  %10 = bitcast i8* %9 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 16, i8 17, i8 18, i8 19, i8 20, i8 21, i8 22, i8 23, i8\l... 24, i8 25, i8 26, i8 27, i8 28, i8 29, i8 30, i8 31\>, \<16 x i8\>* %10, align\l... 1, !tbaa !19\l  %11 = getelementptr inbounds i8, i8* %call.i.i, i64 288\l  %12 = bitcast i8* %11 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 32, i8 33, i8 34, i8 35, i8 36, i8 37, i8 38, i8 39, i8\l... 40, i8 41, i8 42, i8 43, i8 44, i8 45, i8 46, i8 47\>, \<16 x i8\>* %12, align\l... 1, !tbaa !19\l  %13 = getelementptr inbounds i8, i8* %call.i.i, i64 304\l  %14 = bitcast i8* %13 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 48, i8 49, i8 50, i8 51, i8 52, i8 53, i8 54, i8 55, i8\l... 56, i8 57, i8 58, i8 59, i8 60, i8 61, i8 62, i8 63\>, \<16 x i8\>* %14, align\l... 1, !tbaa !19\l  %15 = getelementptr inbounds i8, i8* %call.i.i, i64 320\l  %16 = bitcast i8* %15 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 64, i8 65, i8 66, i8 67, i8 68, i8 69, i8 70, i8 71, i8\l... 72, i8 73, i8 74, i8 75, i8 76, i8 77, i8 78, i8 79\>, \<16 x i8\>* %16, align\l... 1, !tbaa !19\l  %17 = getelementptr inbounds i8, i8* %call.i.i, i64 336\l  %18 = bitcast i8* %17 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 80, i8 81, i8 82, i8 83, i8 84, i8 85, i8 86, i8 87, i8\l... 88, i8 89, i8 90, i8 91, i8 92, i8 93, i8 94, i8 95\>, \<16 x i8\>* %18, align\l... 1, !tbaa !19\l  %19 = getelementptr inbounds i8, i8* %call.i.i, i64 352\l  %20 = bitcast i8* %19 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 96, i8 97, i8 98, i8 99, i8 100, i8 101, i8 102, i8 103,\l... i8 104, i8 105, i8 106, i8 107, i8 108, i8 109, i8 110, i8 111\>, \<16 x i8\>*\l... %20, align 1, !tbaa !19\l  %21 = getelementptr inbounds i8, i8* %call.i.i, i64 368\l  %22 = bitcast i8* %21 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 112, i8 113, i8 114, i8 115, i8 116, i8 117, i8 118, i8\l... 119, i8 120, i8 121, i8 122, i8 123, i8 124, i8 125, i8 126, i8 127\>, \<16 x\l... i8\>* %22, align 1, !tbaa !19\l  %23 = getelementptr inbounds i8, i8* %call.i.i, i64 384\l  %24 = bitcast i8* %23 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 -128, i8 -127, i8 -126, i8 -125, i8 -124, i8 -123, i8\l... -122, i8 -121, i8 -120, i8 -119, i8 -118, i8 -117, i8 -116, i8 -115, i8 -114,\l... i8 -113\>, \<16 x i8\>* %24, align 1, !tbaa !19\l  %25 = getelementptr inbounds i8, i8* %call.i.i, i64 400\l  %26 = bitcast i8* %25 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 -112, i8 -111, i8 -110, i8 -109, i8 -108, i8 -107, i8\l... -106, i8 -105, i8 -104, i8 -103, i8 -102, i8 -101, i8 -100, i8 -99, i8 -98,\l... i8 -97\>, \<16 x i8\>* %26, align 1, !tbaa !19\l  %27 = getelementptr inbounds i8, i8* %call.i.i, i64 416\l  %28 = bitcast i8* %27 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 -96, i8 -95, i8 -94, i8 -93, i8 -92, i8 -91, i8 -90, i8\l... -89, i8 -88, i8 -87, i8 -86, i8 -85, i8 -84, i8 -83, i8 -82, i8 -81\>, \<16 x\l... i8\>* %28, align 1, !tbaa !19\l  %29 = getelementptr inbounds i8, i8* %call.i.i, i64 432\l  %30 = bitcast i8* %29 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 -80, i8 -79, i8 -78, i8 -77, i8 -76, i8 -75, i8 -74, i8\l... -73, i8 -72, i8 -71, i8 -70, i8 -69, i8 -68, i8 -67, i8 -66, i8 -65\>, \<16 x\l... i8\>* %30, align 1, !tbaa !19\l  %31 = getelementptr inbounds i8, i8* %call.i.i, i64 448\l  %32 = bitcast i8* %31 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 -64, i8 -63, i8 -62, i8 -61, i8 -60, i8 -59, i8 -58, i8\l... -57, i8 -56, i8 -55, i8 -54, i8 -53, i8 -52, i8 -51, i8 -50, i8 -49\>, \<16 x\l... i8\>* %32, align 1, !tbaa !19\l  %33 = getelementptr inbounds i8, i8* %call.i.i, i64 464\l  %34 = bitcast i8* %33 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 -48, i8 -47, i8 -46, i8 -45, i8 -44, i8 -43, i8 -42, i8\l... -41, i8 -40, i8 -39, i8 -38, i8 -37, i8 -36, i8 -35, i8 -34, i8 -33\>, \<16 x\l... i8\>* %34, align 1, !tbaa !19\l  %35 = getelementptr inbounds i8, i8* %call.i.i, i64 480\l  %36 = bitcast i8* %35 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 -32, i8 -31, i8 -30, i8 -29, i8 -28, i8 -27, i8 -26, i8\l... -25, i8 -24, i8 -23, i8 -22, i8 -21, i8 -20, i8 -19, i8 -18, i8 -17\>, \<16 x\l... i8\>* %36, align 1, !tbaa !19\l  %37 = getelementptr inbounds i8, i8* %call.i.i, i64 496\l  %38 = bitcast i8* %37 to \<16 x i8\>*\l  store \<16 x i8\> \<i8 -16, i8 -15, i8 -14, i8 -13, i8 -12, i8 -11, i8 -10, i8\l... -9, i8 -8, i8 -7, i8 -6, i8 -5, i8 -4, i8 -3, i8 -2, i8 -1\>, \<16 x i8\>* %38,\l... align 1, !tbaa !19\l  %scevgep.i.i = getelementptr i8, i8* %call.i.i, i64 512\l  tail call void @llvm.memset.p0i8.i64(i8* %scevgep.i.i, i8 -1, i64 384, i32\l... 1, i1 false) #3\l  %add.ptr12.i.i = getelementptr inbounds i8, i8* %call.i.i, i64 896\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr12.i.i, i8 0, i64 384, i32\l... 1, i1 false) #3\l  %add.ptr13.i.i = getelementptr inbounds i8, i8* %call.i.i, i64 1280\l  %39 = load i8*, i8** %sample_range_limit.i.i, align 8, !tbaa !18\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr13.i.i, i8* %39, i64\l... 128, i32 1, i1 false) #3\l  %output_width.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %40 = load i32, i32* %output_width.i, align 8, !tbaa !20\l  %conv.i = zext i32 %40 to i64\l  %out_color_components.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  %41 = load i32, i32* %out_color_components.i, align 8, !tbaa !21\l  %conv2.i = sext i32 %41 to i64\l  %mul.i = mul nsw i64 %conv2.i, %conv.i\l  %conv4.i = and i64 %mul.i, 4294967295\l  %cmp.i = icmp eq i64 %conv4.i, %mul.i\l  br i1 %cmp.i, label %if.end.i, label %if.then.i\l|{<s0>T|<s1>F}}"];
	Node0x6118500:s0 -> Node0x6125e10;
	Node0x6118500:s1 -> Node0x6125ec0;
	Node0x6125ec0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i:                                        \l  %err.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %42 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align\l... 8, !tbaa !22\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %42, i64 0, i32 5\l  store i32 69, i32* %msg_code.i, align 8, !tbaa !23\l  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %42, i64 0, i32 0\l  %43 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !25\l  tail call void %43(%struct.jpeg_common_struct* nonnull %2) #3\l  br label %if.end.i\l}"];
	Node0x6125ec0 -> Node0x6125e10;
	Node0x6125e10 [shape=record, style = filled, fillcolor = blue, label="{if.end.i:                                         \l  %pass_number.i = getelementptr inbounds i8, i8* %call, i64 24\l  %44 = bitcast i8* %pass_number.i to i32*\l  store i32 0, i32* %44, align 8, !tbaa !26\l  %do_fancy_upsampling.i.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 17\l  %45 = load i32, i32* %do_fancy_upsampling.i.i, align 4, !tbaa !27\l  %tobool.i.i = icmp eq i32 %45, 0\l  br i1 %tobool.i.i, label %lor.lhs.false.i.i, label\l... %use_merged_upsample.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x6125e10:s0 -> Node0x6127170;
	Node0x6125e10:s1 -> Node0x6127270;
	Node0x6127170 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false.i.i:                                \l  %CCIR601_sampling.i.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 56\l  %46 = load i32, i32* %CCIR601_sampling.i.i, align 8, !tbaa !28\l  %tobool1.i.i = icmp eq i32 %46, 0\l  br i1 %tobool1.i.i, label %if.end.i.i, label %use_merged_upsample.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x6127170:s0 -> Node0x6127bb0;
	Node0x6127170:s1 -> Node0x6127270;
	Node0x6127bb0 [shape=record, style = filled, fillcolor = blue, label="{if.end.i.i:                                       \l  %jpeg_color_space.i.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 9\l  %47 = load i32, i32* %jpeg_color_space.i.i, align 4, !tbaa !29\l  %cmp.i.i = icmp eq i32 %47, 3\l  br i1 %cmp.i.i, label %lor.lhs.false2.i.i, label %use_merged_upsample.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x6127bb0:s0 -> Node0x6127fa0;
	Node0x6127bb0:s1 -> Node0x6127270;
	Node0x6127fa0 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false2.i.i:                               \l  %num_components.i.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %48 = load i32, i32* %num_components.i.i, align 8, !tbaa !30\l  %cmp3.i.i = icmp eq i32 %48, 3\l  br i1 %cmp3.i.i, label %lor.lhs.false4.i.i, label %use_merged_upsample.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x6127fa0:s0 -> Node0x61288f0;
	Node0x6127fa0:s1 -> Node0x6127270;
	Node0x61288f0 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false4.i.i:                               \l  %out_color_space.i.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 10\l  %49 = load i32, i32* %out_color_space.i.i, align 8, !tbaa !31\l  %cmp5.i.i = icmp eq i32 %49, 2\l  br i1 %cmp5.i.i, label %lor.lhs.false6.i.i, label %use_merged_upsample.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x61288f0:s0 -> Node0x61291f0;
	Node0x61288f0:s1 -> Node0x6127270;
	Node0x61291f0 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false6.i.i:                               \l  %50 = load i32, i32* %out_color_components.i, align 8, !tbaa !21\l  %cmp7.i.i = icmp eq i32 %50, 3\l  br i1 %cmp7.i.i, label %if.end9.i.i, label %use_merged_upsample.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x61291f0:s0 -> Node0x61293e0;
	Node0x61291f0:s1 -> Node0x6127270;
	Node0x61293e0 [shape=record, style = filled, fillcolor = blue, label="{if.end9.i.i:                                      \l  %comp_info.i.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43\l  %51 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info.i.i, align 8, !tbaa !32\l  %h_samp_factor.i.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %51, i64 0, i32 2\l  %52 = bitcast i32* %h_samp_factor.i.i to i64*\l  %53 = load i64, i64* %52, align 8\l  %54 = trunc i64 %53 to i32\l  %cmp10.i.i = icmp eq i32 %54, 2\l  %55 = lshr i64 %53, 32\l  %56 = trunc i64 %55 to i32\l  br i1 %cmp10.i.i, label %lor.lhs.false11.i.i, label\l... %use_merged_upsample.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x61293e0:s0 -> Node0x6126200;
	Node0x61293e0:s1 -> Node0x6127270;
	Node0x6126200 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false11.i.i:                              \l  %h_samp_factor14.i.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %51, i64 1, i32 2\l  %57 = bitcast i32* %h_samp_factor14.i.i to i64*\l  %58 = load i64, i64* %57, align 8\l  %59 = trunc i64 %58 to i32\l  %cmp15.i.i = icmp eq i32 %59, 1\l  br i1 %cmp15.i.i, label %lor.lhs.false16.i.i, label\l... %use_merged_upsample.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x6126200:s0 -> Node0x612a080;
	Node0x6126200:s1 -> Node0x6127270;
	Node0x612a080 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false16.i.i:                              \l  %h_samp_factor19.i.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %51, i64 2, i32 2\l  %60 = bitcast i32* %h_samp_factor19.i.i to i64*\l  %61 = load i64, i64* %60, align 8\l  %62 = trunc i64 %61 to i32\l  %notlhs.i.i = icmp eq i32 %62, 1\l  %notrhs.i.i = icmp slt i32 %56, 3\l  %or.cond.not.i.i = and i1 %notrhs.i.i, %notlhs.i.i\l  %.mask.i.i = and i64 %58, -4294967296\l  %cmp29.i.i = icmp eq i64 %.mask.i.i, 4294967296\l  %or.cond72.i.i = and i1 %cmp29.i.i, %or.cond.not.i.i\l  %.mask71.i.i = and i64 %61, -4294967296\l  %cmp34.i.i = icmp eq i64 %.mask71.i.i, 4294967296\l  %or.cond73.i.i = and i1 %cmp34.i.i, %or.cond72.i.i\l  br i1 %or.cond73.i.i, label %if.end36.i.i, label %use_merged_upsample.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x612a080:s0 -> Node0x612a980;
	Node0x612a080:s1 -> Node0x6127270;
	Node0x612a980 [shape=record, style = filled, fillcolor = blue, label="{if.end36.i.i:                                     \l  %DCT_scaled_size.i.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %51, i64 0, i32 9\l  %63 = load i32, i32* %DCT_scaled_size.i.i, align 4, !tbaa !33\l  %min_DCT_scaled_size.i.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 59\l  %64 = load i32, i32* %min_DCT_scaled_size.i.i, align 4, !tbaa !35\l  %cmp39.i.i = icmp eq i32 %63, %64\l  br i1 %cmp39.i.i, label %lor.lhs.false40.i.i, label\l... %use_merged_upsample.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x612a980:s0 -> Node0x6105c40;
	Node0x612a980:s1 -> Node0x6127270;
	Node0x6105c40 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false40.i.i:                              \l  %DCT_scaled_size43.i.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %51, i64 1, i32 9\l  %65 = load i32, i32* %DCT_scaled_size43.i.i, align 4, !tbaa !33\l  %cmp45.i.i = icmp eq i32 %65, %63\l  br i1 %cmp45.i.i, label %lor.lhs.false46.i.i, label\l... %use_merged_upsample.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x6105c40:s0 -> Node0x612b2e0;
	Node0x6105c40:s1 -> Node0x6127270;
	Node0x612b2e0 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false46.i.i:                              \l  %DCT_scaled_size49.i.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %51, i64 2, i32 9\l  %66 = load i32, i32* %DCT_scaled_size49.i.i, align 4, !tbaa !33\l  %cmp51.i.i = icmp eq i32 %66, %63\l  %..i.i = zext i1 %cmp51.i.i to i32\l  br label %use_merged_upsample.exit.i\l}"];
	Node0x612b2e0 -> Node0x6127270;
	Node0x6127270 [shape=record, style = filled, fillcolor = blue, label="{use_merged_upsample.exit.i:                       \l  %call191.i = phi i32 [ %..i.i, %lor.lhs.false46.i.i ], [ 0,\l... %lor.lhs.false40.i.i ], [ 0, %if.end36.i.i ], [ 0, %lor.lhs.false16.i.i ], [\l... 0, %lor.lhs.false11.i.i ], [ 0, %if.end9.i.i ], [ 0, %lor.lhs.false6.i.i ], [\l... 0, %lor.lhs.false4.i.i ], [ 0, %lor.lhs.false2.i.i ], [ 0, %if.end.i.i ], [\l... 0, %lor.lhs.false.i.i ], [ 0, %if.end.i ]\l  %using_merged_upsample.i = getelementptr inbounds i8, i8* %call, i64 28\l  %67 = bitcast i8* %using_merged_upsample.i to i32*\l  store i32 %call191.i, i32* %67, align 4, !tbaa !36\l  %quantizer_1pass.i = getelementptr inbounds i8, i8* %call, i64 32\l  %quantizer_2pass.i = getelementptr inbounds i8, i8* %call, i64 40\l  %quantize_colors.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 19\l  tail call void @llvm.memset.p0i8.i64(i8* %quantizer_1pass.i, i8 0, i64 16,\l... i32 8, i1 false) #3\l  %68 = load i32, i32* %quantize_colors.i, align 4, !tbaa !37\l  %tobool.i = icmp eq i32 %68, 0\l  br i1 %tobool.i, label %if.end9.if.end55_crit_edge.i, label %lor.lhs.false.i\l|{<s0>T|<s1>F}}"];
	Node0x6127270:s0 -> Node0x612c050;
	Node0x6127270:s1 -> Node0x612c170;
	Node0x612c170 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false.i:                                  \l  %buffered_image.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 14\l  %69 = bitcast i32* %buffered_image.i to i64*\l  %70 = load i64, i64* %69, align 8\l  %71 = trunc i64 %70 to i32\l  %tobool7.i = icmp eq i32 %71, 0\l  br i1 %tobool7.i, label %if.end9.i, label %if.then12.i\l|{<s0>T|<s1>F}}"];
	Node0x612c170:s0 -> Node0x612c500;
	Node0x612c170:s1 -> Node0x612c5e0;
	Node0x612c500 [shape=record, style = filled, fillcolor = blue, label="{if.end9.i:                                        \l  %enable_1pass_quant.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 23\l  store i32 0, i32* %enable_1pass_quant.i, align 4, !tbaa !38\l  %enable_external_quant.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 24\l  store i32 0, i32* %enable_external_quant.i, align 8, !tbaa !39\l  %enable_2pass_quant.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 25\l  store i32 0, i32* %enable_2pass_quant.i, align 4, !tbaa !40\l  br label %if.then12.i\l}"];
	Node0x612c500 -> Node0x612c5e0;
	Node0x612c050 [shape=record, style = filled, fillcolor = blue, label="{if.end9.if.end55_crit_edge.i:                     \l  %enable_1pass_quant193.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 23\l  store i32 0, i32* %enable_1pass_quant193.i, align 4, !tbaa !38\l  %enable_external_quant194.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 24\l  store i32 0, i32* %enable_external_quant194.i, align 8, !tbaa !39\l  %enable_2pass_quant195.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 25\l  store i32 0, i32* %enable_2pass_quant195.i, align 4, !tbaa !40\l  %.pre.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 15\l  br label %if.end55.i\l}"];
	Node0x612c050 -> Node0x610e4e0;
	Node0x612c5e0 [shape=record, style = filled, fillcolor = blue, label="{if.then12.i:                                      \l  %raw_data_out.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 15\l  %tobool13.i = icmp ult i64 %70, 4294967296\l  br i1 %tobool13.i, label %if.end19.i, label %if.then14.i\l|{<s0>T|<s1>F}}"];
	Node0x612c5e0:s0 -> Node0x610e710;
	Node0x612c5e0:s1 -> Node0x610e790;
	Node0x610e790 [shape=record, style = filled, fillcolor = blue, label="{if.then14.i:                                      \l  %err15.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %72 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err15.i, align\l... 8, !tbaa !22\l  %msg_code16.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %72, i64 0, i32 5\l  store i32 46, i32* %msg_code16.i, align 8, !tbaa !23\l  %error_exit18.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %72, i64 0, i32 0\l  %73 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit18.i, align 8, !tbaa !25\l  tail call void %73(%struct.jpeg_common_struct* nonnull %2) #3\l  br label %if.end19.i\l}"];
	Node0x610e790 -> Node0x610e710;
	Node0x610e710 [shape=record, style = filled, fillcolor = blue, label="{if.end19.i:                                       \l  %74 = load i32, i32* %out_color_components.i, align 8, !tbaa !21\l  %cmp21.i = icmp eq i32 %74, 3\l  br i1 %cmp21.i, label %if.else.i, label %if.then23.i\l|{<s0>T|<s1>F}}"];
	Node0x610e710:s0 -> Node0x612f8e0;
	Node0x610e710:s1 -> Node0x612f990;
	Node0x612f990 [shape=record, style = filled, fillcolor = blue, label="{if.then23.i:                                      \l  %enable_1pass_quant24.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 23\l  store i32 1, i32* %enable_1pass_quant24.i, align 4, !tbaa !38\l  %enable_external_quant25.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 24\l  store i32 0, i32* %enable_external_quant25.i, align 8, !tbaa !39\l  %enable_2pass_quant26.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 25\l  store i32 0, i32* %enable_2pass_quant26.i, align 4, !tbaa !40\l  %colormap.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 32\l  store i8** null, i8*** %colormap.i, align 8, !tbaa !41\l  br label %if.end40.i\l}"];
	Node0x612f990 -> Node0x612fa10;
	Node0x612f8e0 [shape=record, style = filled, fillcolor = blue, label="{if.else.i:                                        \l  %colormap27.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 32\l  %75 = load i8**, i8*** %colormap27.i, align 8, !tbaa !41\l  %cmp28.i = icmp eq i8** %75, null\l  br i1 %cmp28.i, label %if.else32.i, label %if.then30.i\l|{<s0>T|<s1>F}}"];
	Node0x612f8e0:s0 -> Node0x61308a0;
	Node0x612f8e0:s1 -> Node0x6130980;
	Node0x6130980 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i:                                      \l  %enable_external_quant31.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 24\l  store i32 1, i32* %enable_external_quant31.i, align 8, !tbaa !39\l  br label %if.end40.i\l}"];
	Node0x6130980 -> Node0x612fa10;
	Node0x61308a0 [shape=record, style = filled, fillcolor = blue, label="{if.else32.i:                                      \l  %two_pass_quantize.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 21\l  %76 = load i32, i32* %two_pass_quantize.i, align 4, !tbaa !42\l  %tobool33.i = icmp eq i32 %76, 0\l  br i1 %tobool33.i, label %if.else36.i, label %if.then34.i\l|{<s0>T|<s1>F}}"];
	Node0x61308a0:s0 -> Node0x6108f90;
	Node0x61308a0:s1 -> Node0x6109040;
	Node0x6109040 [shape=record, style = filled, fillcolor = blue, label="{if.then34.i:                                      \l  %enable_2pass_quant35.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 25\l  store i32 1, i32* %enable_2pass_quant35.i, align 4, !tbaa !40\l  br label %if.end40.i\l}"];
	Node0x6109040 -> Node0x612fa10;
	Node0x6108f90 [shape=record, style = filled, fillcolor = blue, label="{if.else36.i:                                      \l  %enable_1pass_quant37.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 23\l  store i32 1, i32* %enable_1pass_quant37.i, align 4, !tbaa !38\l  br label %if.end40.i\l}"];
	Node0x6108f90 -> Node0x612fa10;
	Node0x612fa10 [shape=record, style = filled, fillcolor = blue, label="{if.end40.i:                                       \l  %enable_1pass_quant41.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 23\l  %77 = load i32, i32* %enable_1pass_quant41.i, align 4, !tbaa !38\l  %tobool42.i = icmp eq i32 %77, 0\l  br i1 %tobool42.i, label %if.end45.i, label %if.then43.i\l|{<s0>T|<s1>F}}"];
	Node0x612fa10:s0 -> Node0x61095d0;
	Node0x612fa10:s1 -> Node0x61096b0;
	Node0x61096b0 [shape=record, style = filled, fillcolor = blue, label="{if.then43.i:                                      \l  tail call void @jinit_1pass_quantizer(%struct.jpeg_decompress_struct*\l... nonnull %cinfo) #3\l  %cquantize.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %78 = bitcast %struct.jpeg_color_quantizer** %cquantize.i to i64*\l  %79 = load i64, i64* %78, align 8, !tbaa !43\l  %80 = bitcast i8* %quantizer_1pass.i to i64*\l  store i64 %79, i64* %80, align 8, !tbaa !44\l  br label %if.end45.i\l}"];
	Node0x61096b0 -> Node0x61095d0;
	Node0x61095d0 [shape=record, style = filled, fillcolor = blue, label="{if.end45.i:                                       \l  %enable_2pass_quant46.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 25\l  %81 = load i32, i32* %enable_2pass_quant46.i, align 4, !tbaa !40\l  %tobool47.i = icmp eq i32 %81, 0\l  br i1 %tobool47.i, label %lor.lhs.false48.i, label %if.then51.i\l|{<s0>T|<s1>F}}"];
	Node0x61095d0:s0 -> Node0x610a620;
	Node0x61095d0:s1 -> Node0x610a720;
	Node0x610a620 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false48.i:                                \l  %enable_external_quant49.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 24\l  %82 = load i32, i32* %enable_external_quant49.i, align 8, !tbaa !39\l  %tobool50.i = icmp eq i32 %82, 0\l  br i1 %tobool50.i, label %if.end55.i, label %if.then51.i\l|{<s0>T|<s1>F}}"];
	Node0x610a620:s0 -> Node0x610e4e0;
	Node0x610a620:s1 -> Node0x610a720;
	Node0x610a720 [shape=record, style = filled, fillcolor = blue, label="{if.then51.i:                                      \l  tail call void @jinit_2pass_quantizer(%struct.jpeg_decompress_struct*\l... nonnull %cinfo) #3\l  %cquantize52.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %83 = bitcast %struct.jpeg_color_quantizer** %cquantize52.i to i64*\l  %84 = load i64, i64* %83, align 8, !tbaa !43\l  %85 = bitcast i8* %quantizer_2pass.i to i64*\l  store i64 %84, i64* %85, align 8, !tbaa !45\l  br label %if.end55.i\l}"];
	Node0x610a720 -> Node0x610e4e0;
	Node0x610e4e0 [shape=record, style = filled, fillcolor = blue, label="{if.end55.i:                                       \l  %raw_data_out56.pre-phi.i = phi i32* [ %.pre.i,\l... %if.end9.if.end55_crit_edge.i ], [ %raw_data_out.i, %lor.lhs.false48.i ], [\l... %raw_data_out.i, %if.then51.i ]\l  %86 = load i32, i32* %raw_data_out56.pre-phi.i, align 4, !tbaa !46\l  %tobool57.i = icmp eq i32 %86, 0\l  br i1 %tobool57.i, label %if.then58.i, label %if.end65.i\l|{<s0>T|<s1>F}}"];
	Node0x610e4e0:s0 -> Node0x6135880;
	Node0x610e4e0:s1 -> Node0x6135960;
	Node0x6135880 [shape=record, style = filled, fillcolor = blue, label="{if.then58.i:                                      \l  %87 = load i32, i32* %67, align 4, !tbaa !36\l  %tobool60.i = icmp eq i32 %87, 0\l  br i1 %tobool60.i, label %if.else62.i, label %if.then61.i\l|{<s0>T|<s1>F}}"];
	Node0x6135880:s0 -> Node0x6136160;
	Node0x6135880:s1 -> Node0x6136240;
	Node0x6136240 [shape=record, style = filled, fillcolor = blue, label="{if.then61.i:                                      \l  tail call void @jinit_merged_upsampler(%struct.jpeg_decompress_struct*\l... nonnull %cinfo) #3\l  br label %if.end63.i\l}"];
	Node0x6136240 -> Node0x6136640;
	Node0x6136160 [shape=record, style = filled, fillcolor = blue, label="{if.else62.i:                                      \l  tail call void @jinit_color_deconverter(%struct.jpeg_decompress_struct*\l... nonnull %cinfo) #3\l  tail call void @jinit_upsampler(%struct.jpeg_decompress_struct* nonnull\l... %cinfo) #3\l  br label %if.end63.i\l}"];
	Node0x6136160 -> Node0x6136640;
	Node0x6136640 [shape=record, style = filled, fillcolor = blue, label="{if.end63.i:                                       \l  %enable_2pass_quant64.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 25\l  %88 = load i32, i32* %enable_2pass_quant64.i, align 4, !tbaa !40\l  tail call void @jinit_d_post_controller(%struct.jpeg_decompress_struct*\l... nonnull %cinfo, i32 %88) #3\l  br label %if.end65.i\l}"];
	Node0x6136640 -> Node0x6135960;
	Node0x6135960 [shape=record, style = filled, fillcolor = blue, label="{if.end65.i:                                       \l  tail call void @jinit_inverse_dct(%struct.jpeg_decompress_struct* nonnull\l... %cinfo) #3\l  %arith_code.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 45\l  %89 = load i32, i32* %arith_code.i, align 4, !tbaa !47\l  %tobool66.i = icmp eq i32 %89, 0\l  br i1 %tobool66.i, label %if.else72.i, label %if.then67.i\l|{<s0>T|<s1>F}}"];
	Node0x6135960:s0 -> Node0x6137640;
	Node0x6135960:s1 -> Node0x6137720;
	Node0x6137720 [shape=record, style = filled, fillcolor = blue, label="{if.then67.i:                                      \l  %err68.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %90 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err68.i, align\l... 8, !tbaa !22\l  %msg_code69.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %90, i64 0, i32 5\l  store i32 1, i32* %msg_code69.i, align 8, !tbaa !23\l  %error_exit71.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %90, i64 0, i32 0\l  %91 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit71.i, align 8, !tbaa !25\l  tail call void %91(%struct.jpeg_common_struct* nonnull %2) #3\l  br label %if.end77.i\l}"];
	Node0x6137720 -> Node0x6137cf0;
	Node0x6137640 [shape=record, style = filled, fillcolor = blue, label="{if.else72.i:                                      \l  %progressive_mode.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 44\l  %92 = load i32, i32* %progressive_mode.i, align 8, !tbaa !48\l  %tobool73.i = icmp eq i32 %92, 0\l  br i1 %tobool73.i, label %if.else75.i, label %if.then74.i\l|{<s0>T|<s1>F}}"];
	Node0x6137640:s0 -> Node0x6138130;
	Node0x6137640:s1 -> Node0x6138210;
	Node0x6138210 [shape=record, style = filled, fillcolor = blue, label="{if.then74.i:                                      \l  tail call void @jinit_phuff_decoder(%struct.jpeg_decompress_struct* nonnull\l... %cinfo) #3\l  br label %if.end77.i\l}"];
	Node0x6138210 -> Node0x6137cf0;
	Node0x6138130 [shape=record, style = filled, fillcolor = blue, label="{if.else75.i:                                      \l  tail call void @jinit_huff_decoder(%struct.jpeg_decompress_struct* nonnull\l... %cinfo) #3\l  br label %if.end77.i\l}"];
	Node0x6138130 -> Node0x6137cf0;
	Node0x6137cf0 [shape=record, style = filled, fillcolor = blue, label="{if.end77.i:                                       \l  %inputctl.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 77\l  %93 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller**\l... %inputctl.i, align 8, !tbaa !49\l  %has_multiple_scans.i = getelementptr inbounds\l... %struct.jpeg_input_controller, %struct.jpeg_input_controller* %93, i64 0, i32\l... 4\l  %94 = load i32, i32* %has_multiple_scans.i, align 8, !tbaa !50\l  %tobool78.i = icmp eq i32 %94, 0\l  br i1 %tobool78.i, label %lor.rhs.i, label %lor.end.i\l|{<s0>T|<s1>F}}"];
	Node0x6137cf0:s0 -> Node0x6138e10;
	Node0x6137cf0:s1 -> Node0x6138ef0;
	Node0x6138e10 [shape=record, style = filled, fillcolor = blue, label="{lor.rhs.i:                                        \l  %buffered_image79.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 14\l  %95 = load i32, i32* %buffered_image79.i, align 8, !tbaa !52\l  %tobool80.i = icmp ne i32 %95, 0\l  br label %lor.end.i\l}"];
	Node0x6138e10 -> Node0x6138ef0;
	Node0x6138ef0 [shape=record, style = filled, fillcolor = blue, label="{lor.end.i:                                        \l  %96 = phi i1 [ true, %if.end77.i ], [ %tobool80.i, %lor.rhs.i ]\l  %lor.ext.i = zext i1 %96 to i32\l  tail call void @jinit_d_coef_controller(%struct.jpeg_decompress_struct*\l... nonnull %cinfo, i32 %lor.ext.i) #3\l  %97 = load i32, i32* %raw_data_out56.pre-phi.i, align 4, !tbaa !46\l  %tobool82.i = icmp eq i32 %97, 0\l  br i1 %tobool82.i, label %if.then83.i, label %if.end84.i\l|{<s0>T|<s1>F}}"];
	Node0x6138ef0:s0 -> Node0x6139e50;
	Node0x6138ef0:s1 -> Node0x6139f30;
	Node0x6139e50 [shape=record, style = filled, fillcolor = blue, label="{if.then83.i:                                      \l  tail call void @jinit_d_main_controller(%struct.jpeg_decompress_struct*\l... nonnull %cinfo, i32 0) #3\l  br label %if.end84.i\l}"];
	Node0x6139e50 -> Node0x6139f30;
	Node0x6139f30 [shape=record, style = filled, fillcolor = blue, label="{if.end84.i:                                       \l  %98 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %realize_virt_arrays.i = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %98, i64 0, i32 6\l  %realize_virt_arrays85.i = bitcast \{\}** %realize_virt_arrays.i to void\l... (%struct.jpeg_common_struct*)**\l  %99 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %realize_virt_arrays85.i, align 8, !tbaa !53\l  tail call void %99(%struct.jpeg_common_struct* nonnull %2) #3\l  %100 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller**\l... %inputctl.i, align 8, !tbaa !49\l  %start_input_pass.i = getelementptr inbounds %struct.jpeg_input_controller,\l... %struct.jpeg_input_controller* %100, i64 0, i32 2\l  %start_input_pass87.i = bitcast \{\}** %start_input_pass.i to void\l... (%struct.jpeg_decompress_struct*)**\l  %101 = load void (%struct.jpeg_decompress_struct*)*, void\l... (%struct.jpeg_decompress_struct*)** %start_input_pass87.i, align 8, !tbaa !54\l  tail call void %101(%struct.jpeg_decompress_struct* nonnull %cinfo) #3\l  %progress.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 2\l  %102 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr**\l... %progress.i, align 8, !tbaa !55\l  %cmp88.i = icmp eq %struct.jpeg_progress_mgr* %102, null\l  br i1 %cmp88.i, label %master_selection.exit, label %land.lhs.true.i\l|{<s0>T|<s1>F}}"];
	Node0x6139f30:s0 -> Node0x613b510;
	Node0x6139f30:s1 -> Node0x613b610;
	Node0x613b610 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true.i:                                  \l  %buffered_image90.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 14\l  %103 = load i32, i32* %buffered_image90.i, align 8, !tbaa !52\l  %tobool91.i = icmp eq i32 %103, 0\l  br i1 %tobool91.i, label %land.lhs.true92.i, label %master_selection.exit\l|{<s0>T|<s1>F}}"];
	Node0x613b610:s0 -> Node0x613bf10;
	Node0x613b610:s1 -> Node0x613b510;
	Node0x613bf10 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true92.i:                                \l  %104 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller**\l... %inputctl.i, align 8, !tbaa !49\l  %has_multiple_scans94.i = getelementptr inbounds\l... %struct.jpeg_input_controller, %struct.jpeg_input_controller* %104, i64 0,\l... i32 4\l  %105 = load i32, i32* %has_multiple_scans94.i, align 8, !tbaa !50\l  %tobool95.i = icmp eq i32 %105, 0\l  br i1 %tobool95.i, label %master_selection.exit, label %if.then96.i\l|{<s0>T|<s1>F}}"];
	Node0x613bf10:s0 -> Node0x613b510;
	Node0x613bf10:s1 -> Node0x613c8c0;
	Node0x613c8c0 [shape=record, style = filled, fillcolor = blue, label="{if.then96.i:                                      \l  %progressive_mode97.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 44\l  %106 = load i32, i32* %progressive_mode97.i, align 8, !tbaa !48\l  %tobool98.i = icmp eq i32 %106, 0\l  %num_components.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %107 = load i32, i32* %num_components.i, align 8, !tbaa !30\l  %mul100.i = mul nsw i32 %107, 3\l  %add.i = add nsw i32 %mul100.i, 2\l  %nscans.0.i = select i1 %tobool98.i, i32 %107, i32 %add.i\l  %pass_counter.i = getelementptr inbounds %struct.jpeg_progress_mgr,\l... %struct.jpeg_progress_mgr* %102, i64 0, i32 1\l  store i64 0, i64* %pass_counter.i, align 8, !tbaa !56\l  %total_iMCU_rows.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 60\l  %108 = load i32, i32* %total_iMCU_rows.i, align 8, !tbaa !58\l  %conv105.i = zext i32 %108 to i64\l  %conv106.i = sext i32 %nscans.0.i to i64\l  %mul107.i = mul nsw i64 %conv106.i, %conv105.i\l  %pass_limit.i = getelementptr inbounds %struct.jpeg_progress_mgr,\l... %struct.jpeg_progress_mgr* %102, i64 0, i32 2\l  store i64 %mul107.i, i64* %pass_limit.i, align 8, !tbaa !59\l  %completed_passes.i = getelementptr inbounds %struct.jpeg_progress_mgr,\l... %struct.jpeg_progress_mgr* %102, i64 0, i32 3\l  store i32 0, i32* %completed_passes.i, align 8, !tbaa !60\l  %enable_2pass_quant110.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 25\l  %109 = load i32, i32* %enable_2pass_quant110.i, align 4, !tbaa !40\l  %tobool111.i = icmp ne i32 %109, 0\l  %cond.i = select i1 %tobool111.i, i32 3, i32 2\l  %total_passes.i = getelementptr inbounds %struct.jpeg_progress_mgr,\l... %struct.jpeg_progress_mgr* %102, i64 0, i32 4\l  store i32 %cond.i, i32* %total_passes.i, align 4, !tbaa !61\l  %110 = load i32, i32* %44, align 8, !tbaa !26\l  %inc.i = add nsw i32 %110, 1\l  store i32 %inc.i, i32* %44, align 8, !tbaa !26\l  br label %master_selection.exit\l}"];
	Node0x613c8c0 -> Node0x613b510;
	Node0x613b510 [shape=record, style = filled, fillcolor = blue, label="{master_selection.exit:                            \l  ret void\l}"];
}
