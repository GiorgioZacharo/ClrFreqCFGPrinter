digraph "CFG for 'decode_mcu_DC_first' function" {
	label="CFG for 'decode_mcu_DC_first' function";

	Node0x4faf3f0 [shape=record,label="{entry:\l  %br_state = alloca %struct.bitread_working_state, align 16\l  %state = alloca %struct.savable_state, align 4\l  %entropy1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 79\l  %0 = bitcast %struct.jpeg_entropy_decoder** %entropy1 to\l... %struct.phuff_entropy_decoder**\l  %1 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder**\l... %0, align 8, !tbaa !2\l  %Al2 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 71\l  %2 = bitcast i32* %Al2 to i64*\l  %3 = load i64, i64* %2, align 8\l  %4 = trunc i64 %3 to i32\l  %5 = bitcast %struct.bitread_working_state* %br_state to i8*\l  call void @llvm.lifetime.start(i64 56, i8* %5) #3\l  %6 = bitcast %struct.savable_state* %state to i8*\l  call void @llvm.lifetime.start(i64 20, i8* %6) #3\l  %restart_interval = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 49\l  %7 = load i32, i32* %restart_interval, align 8, !tbaa !10\l  %tobool = icmp eq i32 %7, 0\l  %8 = lshr i64 %3, 32\l  %9 = trunc i64 %8 to i32\l  br i1 %tobool, label %if.end7, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x4faf3f0:s0 -> Node0x4faf880;
	Node0x4faf3f0:s1 -> Node0x4fb0590;
	Node0x4fb0590 [shape=record,label="{if.then:                                          \l  %restarts_to_go = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 3\l  %10 = load i32, i32* %restarts_to_go, align 4, !tbaa !11\l  %cmp = icmp eq i32 %10, 0\l  br i1 %cmp, label %if.then3, label %if.end7\l|{<s0>T|<s1>F}}"];
	Node0x4fb0590:s0 -> Node0x4faf310;
	Node0x4fb0590:s1 -> Node0x4faf880;
	Node0x4faf310 [shape=record,label="{if.then3:                                         \l  %bits_left.i = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 1, i32 1\l  %11 = load i32, i32* %bits_left.i, align 8, !tbaa !17\l  %div.i = sdiv i32 %11, 8\l  %marker.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 78\l  %12 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader**\l... %marker.i, align 8, !tbaa !18\l  %discarded_bytes.i = getelementptr inbounds %struct.jpeg_marker_reader,\l... %struct.jpeg_marker_reader* %12, i64 0, i32 8\l  %13 = load i32, i32* %discarded_bytes.i, align 4, !tbaa !19\l  %add.i = add i32 %13, %div.i\l  store i32 %add.i, i32* %discarded_bytes.i, align 4, !tbaa !19\l  store i32 0, i32* %bits_left.i, align 8, !tbaa !17\l  %read_restart_marker.i = getelementptr inbounds %struct.jpeg_marker_reader,\l... %struct.jpeg_marker_reader* %12, i64 0, i32 2\l  %14 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %read_restart_marker.i, align 8, !tbaa !21\l  %call.i = tail call i32 %14(%struct.jpeg_decompress_struct* nonnull %cinfo)\l... #3\l  %tobool.i = icmp eq i32 %call.i, 0\l  br i1 %tobool.i, label %cleanup102, label %for.cond.preheader.i\l|{<s0>T|<s1>F}}"];
	Node0x4faf310:s0 -> Node0x4fa3910;
	Node0x4faf310:s1 -> Node0x4fa3a20;
	Node0x4fa3a20 [shape=record,label="{for.cond.preheader.i:                             \l  %comps_in_scan.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 62\l  %15 = load i32, i32* %comps_in_scan.i, align 8, !tbaa !22\l  %cmp22.i = icmp sgt i32 %15, 0\l  br i1 %cmp22.i, label %for.body.i.preheader, label %process_restart.exit\l|{<s0>T|<s1>F}}"];
	Node0x4fa3a20:s0 -> Node0x4fb0ed0;
	Node0x4fa3a20:s1 -> Node0x4fa3f90;
	Node0x4fb0ed0 [shape=record,label="{for.body.i.preheader:                             \l  br label %for.body.i\l}"];
	Node0x4fb0ed0 -> Node0x4fa4120;
	Node0x4fa4120 [shape=record,label="{for.body.i:                                       \l  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0,\l... %for.body.i.preheader ]\l  %arrayidx.i = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 2, i32 1, i64 %indvars.iv.i\l  store i32 0, i32* %arrayidx.i, align 4, !tbaa !23\l  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1\l  %16 = load i32, i32* %comps_in_scan.i, align 8, !tbaa !22\l  %17 = sext i32 %16 to i64\l  %cmp.i = icmp slt i64 %indvars.iv.next.i, %17\l  br i1 %cmp.i, label %for.body.i, label %process_restart.exit.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x4fa4120:s0 -> Node0x4fa4120;
	Node0x4fa4120:s1 -> Node0x4fa4710;
	Node0x4fa4710 [shape=record,label="{process_restart.exit.loopexit:                    \l  br label %process_restart.exit\l}"];
	Node0x4fa4710 -> Node0x4fa3f90;
	Node0x4fa3f90 [shape=record,label="{process_restart.exit:                             \l  %EOBRUN.i = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 2, i32 0\l  store i32 0, i32* %EOBRUN.i, align 8, !tbaa !24\l  %18 = load i32, i32* %restart_interval, align 8, !tbaa !10\l  store i32 %18, i32* %restarts_to_go, align 4, !tbaa !11\l  %printed_eod.i = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 1, i32 2\l  store i32 0, i32* %printed_eod.i, align 4, !tbaa !25\l  %unread_marker.phi.trans.insert = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 72\l  %.pre = load i32, i32* %unread_marker.phi.trans.insert, align 4, !tbaa !26\l  br label %if.end7\l}"];
	Node0x4fa3f90 -> Node0x4faf880;
	Node0x4faf880 [shape=record,label="{if.end7:                                          \l  %19 = phi i32 [ %.pre, %process_restart.exit ], [ %9, %entry ], [ %9,\l... %if.then ]\l  %cinfo8 = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %br_state, i64 0, i32 5\l  store %struct.jpeg_decompress_struct* %cinfo,\l... %struct.jpeg_decompress_struct** %cinfo8, align 8, !tbaa !27\l  %src = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5\l  %20 = bitcast %struct.jpeg_source_mgr** %src to i64**\l  %21 = load i64*, i64** %20, align 8, !tbaa !29\l  %22 = bitcast i64* %21 to \<2 x i64\>*\l  %23 = load \<2 x i64\>, \<2 x i64\>* %22, align 8, !tbaa !30\l  %24 = bitcast %struct.bitread_working_state* %br_state to \<2 x i64\>*\l  store \<2 x i64\> %23, \<2 x i64\>* %24, align 16, !tbaa !30\l  %unread_marker = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 72\l  %unread_marker12 = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %br_state, i64 0, i32 2\l  store i32 %19, i32* %unread_marker12, align 16, !tbaa !31\l  %get_buffer13 = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 1, i32 0\l  %25 = load i64, i64* %get_buffer13, align 8, !tbaa !32\l  %bits_left15 = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 1, i32 1\l  %26 = load i32, i32* %bits_left15, align 8, !tbaa !17\l  %printed_eod = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 1, i32 2\l  %printed_eod_ptr = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %br_state, i64 0, i32 6\l  store i32* %printed_eod, i32** %printed_eod_ptr, align 16, !tbaa !33\l  %saved = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 2\l  %27 = bitcast %struct.savable_state* %saved to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %27, i64 20, i32 4, i1\l... false), !tbaa.struct !34\l  %blocks_in_MCU = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 66\l  %28 = load i32, i32* %blocks_in_MCU, align 8, !tbaa !35\l  %cmp17191 = icmp sgt i32 %28, 0\l  br i1 %cmp17191, label %for.body.lr.ph, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x4faf880:s0 -> Node0x4fa3c50;
	Node0x4faf880:s1 -> Node0x4fa3d30;
	Node0x4fa3c50 [shape=record,label="{for.body.lr.ph:                                   \l  %get_buffer30 = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %br_state, i64 0, i32 3\l  %bits_left31 = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %br_state, i64 0, i32 4\l  br label %for.body\l}"];
	Node0x4fa3c50 -> Node0x4fb9ca0;
	Node0x4fb9ca0 [shape=record,label="{for.body:                                         \l  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end78 ]\l  %bits_left.0193 = phi i32 [ %26, %for.body.lr.ph ], [ %bits_left.6,\l... %if.end78 ]\l  %get_buffer.0192 = phi i64 [ %25, %for.body.lr.ph ], [ %get_buffer.6,\l... %if.end78 ]\l  %arrayidx = getelementptr inbounds [64 x i16]*, [64 x i16]** %MCU_data, i64\l... %indvars.iv\l  %29 = load [64 x i16]*, [64 x i16]** %arrayidx, align 8, !tbaa !36\l  %arrayidx19 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 67, i64 %indvars.iv\l  %30 = load i32, i32* %arrayidx19, align 4, !tbaa !23\l  %idxprom20 = sext i32 %30 to i64\l  %arrayidx21 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 63, i64 %idxprom20\l  %31 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx21, align 8, !tbaa !36\l  %dc_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %31, i64 0, i32 5\l  %32 = load i32, i32* %dc_tbl_no, align 4, !tbaa !37\l  %idxprom22 = sext i32 %32 to i64\l  %arrayidx23 = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 4, i64 %idxprom22\l  %33 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %arrayidx23,\l... align 8, !tbaa !36\l  %cmp24 = icmp slt i32 %bits_left.0193, 8\l  br i1 %cmp24, label %if.then25, label %if.end35\l|{<s0>T|<s1>F}}"];
	Node0x4fb9ca0:s0 -> Node0x4fbb290;
	Node0x4fb9ca0:s1 -> Node0x4fbb340;
	Node0x4fbb290 [shape=record,label="{if.then25:                                        \l  %call26 = call i32 @jpeg_fill_bit_buffer(%struct.bitread_working_state*\l... nonnull %br_state, i64 %get_buffer.0192, i32 %bits_left.0193, i32 0) #3\l  %tobool27 = icmp eq i32 %call26, 0\l  br i1 %tobool27, label %cleanup102.loopexit, label %if.end29\l|{<s0>T|<s1>F}}"];
	Node0x4fbb290:s0 -> Node0x4fbb830;
	Node0x4fbb290:s1 -> Node0x4fbb930;
	Node0x4fbb930 [shape=record,label="{if.end29:                                         \l  %34 = load i64, i64* %get_buffer30, align 8, !tbaa !39\l  %35 = load i32, i32* %bits_left31, align 16, !tbaa !40\l  %cmp32 = icmp slt i32 %35, 8\l  br i1 %cmp32, label %label1, label %if.end35\l|{<s0>T|<s1>F}}"];
	Node0x4fbb930:s0 -> Node0x4fbbdd0;
	Node0x4fbb930:s1 -> Node0x4fbb340;
	Node0x4fbb340 [shape=record,label="{if.end35:                                         \l  %get_buffer.1 = phi i64 [ %34, %if.end29 ], [ %get_buffer.0192, %for.body ]\l  %bits_left.1 = phi i32 [ %35, %if.end29 ], [ %bits_left.0193, %for.body ]\l  %sub = add nsw i32 %bits_left.1, -8\l  %sh_prom = zext i32 %sub to i64\l  %shr = ashr i64 %get_buffer.1, %sh_prom\l  %and = and i64 %shr, 255\l  %arrayidx37 = getelementptr inbounds %struct.d_derived_tbl,\l... %struct.d_derived_tbl* %33, i64 0, i32 4, i64 %and\l  %36 = load i32, i32* %arrayidx37, align 4, !tbaa !23\l  %cmp38 = icmp eq i32 %36, 0\l  br i1 %cmp38, label %label1, label %if.then40\l|{<s0>T|<s1>F}}"];
	Node0x4fbb340:s0 -> Node0x4fbbdd0;
	Node0x4fbb340:s1 -> Node0x4fbc560;
	Node0x4fbc560 [shape=record,label="{if.then40:                                        \l  %sub41 = sub nsw i32 %bits_left.1, %36\l  %arrayidx43 = getelementptr inbounds %struct.d_derived_tbl,\l... %struct.d_derived_tbl* %33, i64 0, i32 5, i64 %and\l  %37 = load i8, i8* %arrayidx43, align 1, !tbaa !30\l  %conv44 = zext i8 %37 to i32\l  br label %cleanup.cont\l}"];
	Node0x4fbc560 -> Node0x4fbc8e0;
	Node0x4fbbdd0 [shape=record,label="{label1:                                           \l  %get_buffer.2 = phi i64 [ %34, %if.end29 ], [ %get_buffer.1, %if.end35 ]\l  %bits_left.2 = phi i32 [ %35, %if.end29 ], [ %bits_left.1, %if.end35 ]\l  %nb.0 = phi i32 [ 1, %if.end29 ], [ 9, %if.end35 ]\l  %call45 = call i32 @jpeg_huff_decode(%struct.bitread_working_state* nonnull\l... %br_state, i64 %get_buffer.2, i32 %bits_left.2, %struct.d_derived_tbl* %33,\l... i32 %nb.0) #3\l  %cmp46 = icmp slt i32 %call45, 0\l  br i1 %cmp46, label %cleanup102.loopexit, label %if.end49\l|{<s0>T|<s1>F}}"];
	Node0x4fbbdd0:s0 -> Node0x4fbb830;
	Node0x4fbbdd0:s1 -> Node0x4fbe0a0;
	Node0x4fbe0a0 [shape=record,label="{if.end49:                                         \l  %38 = load i64, i64* %get_buffer30, align 8, !tbaa !39\l  %39 = load i32, i32* %bits_left31, align 16, !tbaa !40\l  br label %cleanup.cont\l}"];
	Node0x4fbe0a0 -> Node0x4fbc8e0;
	Node0x4fbc8e0 [shape=record,label="{cleanup.cont:                                     \l  %get_buffer.4.ph = phi i64 [ %get_buffer.1, %if.then40 ], [ %38, %if.end49 ]\l  %bits_left.4.ph = phi i32 [ %sub41, %if.then40 ], [ %39, %if.end49 ]\l  %s.2.ph = phi i32 [ %conv44, %if.then40 ], [ %call45, %if.end49 ]\l  %tobool54 = icmp eq i32 %s.2.ph, 0\l  br i1 %tobool54, label %if.end78, label %if.then55\l|{<s0>T|<s1>F}}"];
	Node0x4fbc8e0:s0 -> Node0x4fb9df0;
	Node0x4fbc8e0:s1 -> Node0x4fb95b0;
	Node0x4fb95b0 [shape=record,label="{if.then55:                                        \l  %cmp56 = icmp slt i32 %bits_left.4.ph, %s.2.ph\l  br i1 %cmp56, label %if.then58, label %if.end65\l|{<s0>T|<s1>F}}"];
	Node0x4fb95b0:s0 -> Node0x4fb97c0;
	Node0x4fb95b0:s1 -> Node0x4fb9840;
	Node0x4fb97c0 [shape=record,label="{if.then58:                                        \l  %call59 = call i32 @jpeg_fill_bit_buffer(%struct.bitread_working_state*\l... nonnull %br_state, i64 %get_buffer.4.ph, i32 %bits_left.4.ph, i32 %s.2.ph) #3\l  %tobool60 = icmp eq i32 %call59, 0\l  br i1 %tobool60, label %cleanup102.loopexit, label %if.end62\l|{<s0>T|<s1>F}}"];
	Node0x4fb97c0:s0 -> Node0x4fbb830;
	Node0x4fb97c0:s1 -> Node0x4fbfe40;
	Node0x4fbfe40 [shape=record,label="{if.end62:                                         \l  %40 = load i64, i64* %get_buffer30, align 8, !tbaa !39\l  %41 = load i32, i32* %bits_left31, align 16, !tbaa !40\l  br label %if.end65\l}"];
	Node0x4fbfe40 -> Node0x4fb9840;
	Node0x4fb9840 [shape=record,label="{if.end65:                                         \l  %get_buffer.5 = phi i64 [ %40, %if.end62 ], [ %get_buffer.4.ph, %if.then55 ]\l  %bits_left.5 = phi i32 [ %41, %if.end62 ], [ %bits_left.4.ph, %if.then55 ]\l  %sub66 = sub nsw i32 %bits_left.5, %s.2.ph\l  %sh_prom67 = zext i32 %sub66 to i64\l  %shr68 = ashr i64 %get_buffer.5, %sh_prom67\l  %conv69 = trunc i64 %shr68 to i32\l  %shl = shl i32 1, %s.2.ph\l  %sub70 = add nsw i32 %shl, -1\l  %and71 = and i32 %conv69, %sub70\l  %idxprom72 = sext i32 %s.2.ph to i64\l  %arrayidx73 = getelementptr inbounds [16 x i32], [16 x i32]* @extend_test,\l... i64 0, i64 %idxprom72\l  %42 = load i32, i32* %arrayidx73, align 4, !tbaa !23\l  %cmp74 = icmp slt i32 %and71, %42\l  br i1 %cmp74, label %cond.true, label %if.end78\l|{<s0>T|<s1>F}}"];
	Node0x4fb9840:s0 -> Node0x4fc0780;
	Node0x4fb9840:s1 -> Node0x4fb9df0;
	Node0x4fc0780 [shape=record,label="{cond.true:                                        \l  %arrayidx77 = getelementptr inbounds [16 x i32], [16 x i32]* @extend_offset,\l... i64 0, i64 %idxprom72\l  %43 = load i32, i32* %arrayidx77, align 4, !tbaa !23\l  %add = add nsw i32 %43, %and71\l  br label %if.end78\l}"];
	Node0x4fc0780 -> Node0x4fb9df0;
	Node0x4fb9df0 [shape=record,label="{if.end78:                                         \l  %get_buffer.6 = phi i64 [ %get_buffer.4.ph, %cleanup.cont ], [\l... %get_buffer.5, %if.end65 ], [ %get_buffer.5, %cond.true ]\l  %bits_left.6 = phi i32 [ %bits_left.4.ph, %cleanup.cont ], [ %sub66,\l... %if.end65 ], [ %sub66, %cond.true ]\l  %s.3 = phi i32 [ 0, %cleanup.cont ], [ %and71, %if.end65 ], [ %add,\l... %cond.true ]\l  %arrayidx80 = getelementptr inbounds %struct.savable_state,\l... %struct.savable_state* %state, i64 0, i32 1, i64 %idxprom20\l  %44 = load i32, i32* %arrayidx80, align 4, !tbaa !23\l  %add81 = add nsw i32 %44, %s.3\l  store i32 %add81, i32* %arrayidx80, align 4, !tbaa !23\l  %shl85 = shl i32 %add81, %4\l  %conv86 = trunc i32 %shl85 to i16\l  %arrayidx87 = getelementptr inbounds [64 x i16], [64 x i16]* %29, i64 0, i64\l... 0\l  store i16 %conv86, i16* %arrayidx87, align 2, !tbaa !41\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %45 = load i32, i32* %blocks_in_MCU, align 8, !tbaa !35\l  %46 = sext i32 %45 to i64\l  %cmp17 = icmp slt i64 %indvars.iv.next, %46\l  br i1 %cmp17, label %for.body, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x4fb9df0:s0 -> Node0x4fb9ca0;
	Node0x4fb9df0:s1 -> Node0x4fc1d80;
	Node0x4fc1d80 [shape=record,label="{for.end.loopexit:                                 \l  %bits_left.6.lcssa = phi i32 [ %bits_left.6, %if.end78 ]\l  %get_buffer.6.lcssa = phi i64 [ %get_buffer.6, %if.end78 ]\l  %.pre197 = load i64*, i64** %20, align 8, !tbaa !29\l  %47 = bitcast %struct.bitread_working_state* %br_state to \<2 x i64\>*\l  %48 = load \<2 x i64\>, \<2 x i64\>* %47, align 16, !tbaa !30\l  %.pre199 = load i32, i32* %unread_marker12, align 16, !tbaa !31\l  br label %for.end\l}"];
	Node0x4fc1d80 -> Node0x4fa3d30;
	Node0x4fa3d30 [shape=record,label="{for.end:                                          \l  %49 = phi i32 [ %19, %if.end7 ], [ %.pre199, %for.end.loopexit ]\l  %.in = phi i64* [ %21, %if.end7 ], [ %.pre197, %for.end.loopexit ]\l  %bits_left.0.lcssa = phi i32 [ %26, %if.end7 ], [ %bits_left.6.lcssa,\l... %for.end.loopexit ]\l  %get_buffer.0.lcssa = phi i64 [ %25, %if.end7 ], [ %get_buffer.6.lcssa,\l... %for.end.loopexit ]\l  %50 = phi \<2 x i64\> [ %23, %if.end7 ], [ %48, %for.end.loopexit ]\l  %51 = bitcast i64* %.in to \<2 x i64\>*\l  store \<2 x i64\> %50, \<2 x i64\>* %51, align 8, !tbaa !30\l  store i32 %49, i32* %unread_marker, align 4, !tbaa !26\l  store i64 %get_buffer.0.lcssa, i64* %get_buffer13, align 8, !tbaa !32\l  store i32 %bits_left.0.lcssa, i32* %bits_left15, align 8, !tbaa !17\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* nonnull %6, i64 20, i32 4,\l... i1 false), !tbaa.struct !34\l  %restarts_to_go101 = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 3\l  %52 = load i32, i32* %restarts_to_go101, align 4, !tbaa !11\l  %dec = add i32 %52, -1\l  store i32 %dec, i32* %restarts_to_go101, align 4, !tbaa !11\l  br label %cleanup102\l}"];
	Node0x4fa3d30 -> Node0x4fa3910;
	Node0x4fbb830 [shape=record,label="{cleanup102.loopexit:                              \l  br label %cleanup102\l}"];
	Node0x4fbb830 -> Node0x4fa3910;
	Node0x4fa3910 [shape=record,label="{cleanup102:                                       \l  %retval.2 = phi i32 [ 1, %for.end ], [ 0, %if.then3 ], [ 0,\l... %cleanup102.loopexit ]\l  call void @llvm.lifetime.end(i64 20, i8* %6) #3\l  call void @llvm.lifetime.end(i64 56, i8* %5) #3\l  ret i32 %retval.2\l}"];
}
