digraph "CFG for 'per_scan_setup' function" {
	label="CFG for 'per_scan_setup' function";

	Node0x6214680 [shape=record, style = filled, fillcolor = skyblue, label="{entry:\l  %comps_in_scan = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 41\l  %0 = load i32, i32* %comps_in_scan, align 4, !tbaa !3\l  %cmp = icmp eq i32 %0, 1\l  br i1 %cmp, label %if.then, label %if.else, !prof !11\l|{<s0>T|<s1>F}}"];
	Node0x6214680:s0 -> Node0x61fbb00;
	Node0x6214680:s1 -> Node0x61fbbd0;
	Node0x61fbb00 [shape=record, style = filled, fillcolor = skyblue, label="{if.then:                                          \l  %arrayidx = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 0\l  %1 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx, align 8, !tbaa !12\l  %width_in_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %1, i64 0, i32 7\l  %2 = load i32, i32* %width_in_blocks, align 4, !tbaa !13\l  %MCUs_per_row = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 43\l  store i32 %2, i32* %MCUs_per_row, align 8, !tbaa !15\l  %height_in_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %1, i64 0, i32 8\l  %3 = load i32, i32* %height_in_blocks, align 8, !tbaa !16\l  %MCU_rows_in_scan = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 44\l  store i32 %3, i32* %MCU_rows_in_scan, align 4, !tbaa !17\l  %MCU_width = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %1, i64 0, i32 13\l  %4 = bitcast i32* %MCU_width to \<4 x i32\>*\l  store \<4 x i32\> \<i32 1, i32 1, i32 1, i32 8\>, \<4 x i32\>* %4, align 4, !tbaa\l... !18\l  %last_col_width = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %1, i64 0, i32 17\l  store i32 1, i32* %last_col_width, align 4, !tbaa !19\l  %v_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %1, i64 0, i32 3\l  %5 = load i32, i32* %v_samp_factor, align 4, !tbaa !20\l  %rem = urem i32 %3, %5\l  %cmp3 = icmp eq i32 %rem, 0\l  %.rem = select i1 %cmp3, i32 %5, i32 %rem\l  %last_row_height = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %1, i64 0, i32 18\l  store i32 %.rem, i32* %last_row_height, align 8, !tbaa !21\l  %blocks_in_MCU = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 45\l  store i32 1, i32* %blocks_in_MCU, align 8, !tbaa !22\l  %arrayidx6 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 46, i64 0\l  store i32 0, i32* %arrayidx6, align 4, !tbaa !18\l  br label %if.end81\l}"];
	Node0x61fbb00 -> Node0x61fd700;
	Node0x61fbbd0 [shape=record, style = filled, fillcolor = skyblue, label="{if.else:                                          \l  %.off = add i32 %0, -1\l  %6 = icmp ugt i32 %.off, 3\l  br i1 %6, label %if.then11, label %if.end20, !prof !23\l|{<s0>T|<s1>F}}"];
	Node0x61fbbd0:s0 -> Node0x61fd960;
	Node0x61fbbd0:s1 -> Node0x61fd9b0;
	Node0x61fd960 [shape=record, style = filled, fillcolor = skyblue, label="{if.then11:                                        \l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %7 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !24\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %7, i64 0, i32 5\l  store i32 24, i32* %msg_code, align 8, !tbaa !25\l  %arrayidx14 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %7, i64 0, i32 6, i32 0, i64 0\l  store i32 %0, i32* %arrayidx14, align 4, !tbaa !18\l  %arrayidx18 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %7, i64 0, i32 6, i32 0, i64 1\l  store i32 4, i32* %arrayidx18, align 4, !tbaa !18\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %7, i64 0, i32 0\l  %8 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !28\l  %9 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %8(%struct.jpeg_common_struct* %9) #3\l  br label %if.end20\l}"];
	Node0x61fd960 -> Node0x61fd9b0;
	Node0x61fd9b0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end20:                                         \l  %image_width = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 6\l  %10 = load i32, i32* %image_width, align 8, !tbaa !29\l  %conv = zext i32 %10 to i64\l  %max_h_samp_factor = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 38\l  %11 = load i32, i32* %max_h_samp_factor, align 8, !tbaa !30\l  %mul = shl nsw i32 %11, 3\l  %conv21 = sext i32 %mul to i64\l  %call = tail call i64 @jdiv_round_up(i64 %conv, i64 %conv21) #3\l  %conv22 = trunc i64 %call to i32\l  %MCUs_per_row23 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 43\l  store i32 %conv22, i32* %MCUs_per_row23, align 8, !tbaa !15\l  %image_height = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 7\l  %12 = load i32, i32* %image_height, align 4, !tbaa !31\l  %conv24 = zext i32 %12 to i64\l  %max_v_samp_factor = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 39\l  %13 = load i32, i32* %max_v_samp_factor, align 4, !tbaa !32\l  %mul25 = shl nsw i32 %13, 3\l  %conv26 = sext i32 %mul25 to i64\l  %call27 = tail call i64 @jdiv_round_up(i64 %conv24, i64 %conv26) #3\l  %conv28 = trunc i64 %call27 to i32\l  %MCU_rows_in_scan29 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 44\l  store i32 %conv28, i32* %MCU_rows_in_scan29, align 4, !tbaa !17\l  %blocks_in_MCU30 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 45\l  store i32 0, i32* %blocks_in_MCU30, align 8, !tbaa !22\l  %14 = load i32, i32* %comps_in_scan, align 4, !tbaa !3\l  %cmp32170 = icmp sgt i32 %14, 0\l  br i1 %cmp32170, label %for.body.lr.ph, label %if.end81, !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x61fd9b0:s0 -> Node0x6200d50;
	Node0x61fd9b0:s1 -> Node0x61fd700;
	Node0x6200d50 [shape=record, style = filled, fillcolor = skyblue, label="{for.body.lr.ph:                                   \l  %err69 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %15 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  br label %for.body\l}"];
	Node0x6200d50 -> Node0x62016d0;
	Node0x62016d0 [shape=record, style = filled, fillcolor = skyblue, label="{for.body:                                         \l  %16 = phi i32 [ 0, %for.body.lr.ph ], [ %.pre, %for.inc.for.body_crit_edge ]\l  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next,\l... %for.inc.for.body_crit_edge ]\l  %arrayidx35 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv\l  %17 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx35, align 8, !tbaa !12\l  %h_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %17, i64 0, i32 2\l  %18 = bitcast i32* %h_samp_factor to i64*\l  %19 = load i64, i64* %18, align 8\l  %20 = trunc i64 %19 to i32\l  %MCU_width36 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %17, i64 0, i32 13\l  store i32 %20, i32* %MCU_width36, align 4, !tbaa !34\l  %21 = lshr i64 %19, 32\l  %22 = trunc i64 %21 to i32\l  %MCU_height38 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %17, i64 0, i32 14\l  store i32 %22, i32* %MCU_height38, align 8, !tbaa !35\l  %mul41 = mul nsw i32 %22, %20\l  %MCU_blocks42 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %17, i64 0, i32 15\l  store i32 %mul41, i32* %MCU_blocks42, align 4, !tbaa !36\l  %mul44 = shl nsw i32 %20, 3\l  %MCU_sample_width45 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %17, i64 0, i32 16\l  store i32 %mul44, i32* %MCU_sample_width45, align 8, !tbaa !37\l  %width_in_blocks46 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %17, i64 0, i32 7\l  %23 = load i32, i32* %width_in_blocks46, align 4, !tbaa !13\l  %rem48 = urem i32 %23, %20\l  %cmp49 = icmp eq i32 %rem48, 0\l  %.rem48 = select i1 %cmp49, i32 %20, i32 %rem48\l  %last_col_width54 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %17, i64 0, i32 17\l  store i32 %.rem48, i32* %last_col_width54, align 4, !tbaa !19\l  %height_in_blocks55 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %17, i64 0, i32 8\l  %24 = load i32, i32* %height_in_blocks55, align 8, !tbaa !16\l  %rem57 = urem i32 %24, %22\l  %cmp58 = icmp eq i32 %rem57, 0\l  %tmp.2 = select i1 %cmp58, i32 %22, i32 %rem57\l  %last_row_height63 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %17, i64 0, i32 18\l  store i32 %tmp.2, i32* %last_row_height63, align 8, !tbaa !21\l  %add = add nsw i32 %16, %mul41\l  %cmp66 = icmp sgt i32 %add, 10\l  br i1 %cmp66, label %if.then68, label %while.cond.preheader, !prof !38\l|{<s0>T|<s1>F}}"];
	Node0x62016d0:s0 -> Node0x623cf50;
	Node0x62016d0:s1 -> Node0x623d060;
	Node0x623cf50 [shape=record, style = filled, fillcolor = blue, label="{if.then68:                                        \l  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err69, align\l... 8, !tbaa !24\l  %msg_code70 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %25, i64 0, i32 5\l  store i32 11, i32* %msg_code70, align 8, !tbaa !25\l  %error_exit72 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %25, i64 0, i32 0\l  %26 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit72, align 8, !tbaa !28\l  tail call void %26(%struct.jpeg_common_struct* nonnull %15) #3\l  br label %while.cond.preheader\l}"];
	Node0x623cf50 -> Node0x623d060;
	Node0x623d060 [shape=record, style = filled, fillcolor = skyblue, label="{while.cond.preheader:                             \l  %cmp74168 = icmp sgt i32 %mul41, 0\l  br i1 %cmp74168, label %while.body.preheader, label %for.inc, !prof !39\l|{<s0>T|<s1>F}}"];
	Node0x623d060:s0 -> Node0x623d7d0;
	Node0x623d060:s1 -> Node0x623d850;
	Node0x623d7d0 [shape=record, style = filled, fillcolor = skyblue, label="{while.body.preheader:                             \l  %27 = trunc i64 %indvars.iv to i32\l  br label %while.body\l}"];
	Node0x623d7d0 -> Node0x623dac0;
	Node0x623dac0 [shape=record, style = filled, fillcolor = skyblue, label="{while.body:                                       \l  %mcublks.0169 = phi i32 [ %dec, %while.body ], [ %mul41,\l... %while.body.preheader ]\l  %dec = add nsw i32 %mcublks.0169, -1\l  %28 = load i32, i32* %blocks_in_MCU30, align 8, !tbaa !22\l  %inc = add nsw i32 %28, 1\l  store i32 %inc, i32* %blocks_in_MCU30, align 8, !tbaa !22\l  %idxprom77 = sext i32 %28 to i64\l  %arrayidx79 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 46, i64 %idxprom77\l  store i32 %27, i32* %arrayidx79, align 4, !tbaa !18\l  %cmp74 = icmp sgt i32 %mcublks.0169, 1\l  br i1 %cmp74, label %while.body, label %for.inc.loopexit, !prof !39\l|{<s0>T|<s1>F}}"];
	Node0x623dac0:s0 -> Node0x623dac0;
	Node0x623dac0:s1 -> Node0x623e130;
	Node0x623e130 [shape=record, style = filled, fillcolor = skyblue, label="{for.inc.loopexit:                                 \l  br label %for.inc\l}"];
	Node0x623e130 -> Node0x623d850;
	Node0x623d850 [shape=record, style = filled, fillcolor = skyblue, label="{for.inc:                                          \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %29 = load i32, i32* %comps_in_scan, align 4, !tbaa !3\l  %30 = sext i32 %29 to i64\l  %cmp32 = icmp slt i64 %indvars.iv.next, %30\l  br i1 %cmp32, label %for.inc.for.body_crit_edge, label %if.end81.loopexit,\l... !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x623d850:s0 -> Node0x61fe2e0;
	Node0x623d850:s1 -> Node0x623e9d0;
	Node0x61fe2e0 [shape=record, style = filled, fillcolor = skyblue, label="{for.inc.for.body_crit_edge:                       \l  %.pre = load i32, i32* %blocks_in_MCU30, align 8, !tbaa !22\l  br label %for.body\l}"];
	Node0x61fe2e0 -> Node0x62016d0;
	Node0x623e9d0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end81.loopexit:                                \l  br label %if.end81\l}"];
	Node0x623e9d0 -> Node0x61fd700;
	Node0x61fd700 [shape=record, style = filled, fillcolor = skyblue, label="{if.end81:                                         \l  %restart_in_rows = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 30\l  %31 = load i32, i32* %restart_in_rows, align 4, !tbaa !40\l  %cmp82 = icmp sgt i32 %31, 0\l  br i1 %cmp82, label %if.then84, label %if.end94, !prof !41\l|{<s0>T|<s1>F}}"];
	Node0x61fd700:s0 -> Node0x623f350;
	Node0x61fd700:s1 -> Node0x623f400;
	Node0x623f350 [shape=record, style = filled, fillcolor = blue, label="{if.then84:                                        \l  %conv87 = sext i32 %31 to i64\l  %MCUs_per_row88 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 43\l  %32 = load i32, i32* %MCUs_per_row88, align 8, !tbaa !15\l  %conv89 = zext i32 %32 to i64\l  %mul90 = mul nsw i64 %conv89, %conv87\l  %cmp91 = icmp slt i64 %mul90, 65535\l  %cond = select i1 %cmp91, i64 %mul90, i64 65535\l  %conv93 = trunc i64 %cond to i32\l  %restart_interval = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 29\l  store i32 %conv93, i32* %restart_interval, align 8, !tbaa !42\l  br label %if.end94\l}"];
	Node0x623f350 -> Node0x623f400;
	Node0x623f400 [shape=record, style = filled, fillcolor = skyblue, label="{if.end94:                                         \l  ret void\l}"];
}
