digraph "CFG for 'put_pixel_rows' function" {
	label="CFG for 'put_pixel_rows' function";

	Node0x4fa1810 [shape=record,label="{entry:\l  %0 = bitcast %struct.djpeg_dest_struct* %dinfo to %struct.bmp_dest_struct*\l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %1 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !2\l  %access_virt_sarray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %1, i64 0, i32 7\l  %2 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*,\l... i32, i32, i32)*, i8** (%struct.jpeg_common_struct*,\l... %struct.jvirt_sarray_control*, i32, i32, i32)** %access_virt_sarray, align 8,\l... !tbaa !10\l  %3 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %whole_image = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 1, i32 1\l  %4 = bitcast void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*, i32)** %whole_image to\l... %struct.jvirt_sarray_control**\l  %5 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %4,\l... align 8, !tbaa !13\l  %cur_output_row = getelementptr inbounds %struct.bmp_dest_struct,\l... %struct.bmp_dest_struct* %0, i64 0, i32 6\l  %6 = load i32, i32* %cur_output_row, align 4, !tbaa !16\l  %call = tail call i8** %2(%struct.jpeg_common_struct* %3,\l... %struct.jvirt_sarray_control* %5, i32 %6, i32 1, i32 1) #6\l  %7 = load i32, i32* %cur_output_row, align 4, !tbaa !16\l  %inc = add i32 %7, 1\l  store i32 %inc, i32* %cur_output_row, align 4, !tbaa !16\l  %8 = load i8*, i8** %call, align 8, !tbaa !17\l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %9 = load i32, i32* %output_width, align 8, !tbaa !18\l  %cmp33 = icmp eq i32 %9, 0\l  br i1 %cmp33, label %for.end, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4fa1810:s0 -> Node0x4fbe6a0;
	Node0x4fa1810:s1 -> Node0x4fa17a0;
	Node0x4fa17a0 [shape=record,label="{for.body.preheader:                               \l  %buffer = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 0, i32 4\l  %10 = load i8**, i8*** %buffer, align 8, !tbaa !19\l  %11 = load i8*, i8** %10, align 8, !tbaa !17\l  %12 = add i32 %9, -1\l  %13 = zext i32 %12 to i64\l  %14 = mul nuw nsw i64 %13, 3\l  %15 = add nuw nsw i64 %14, 3\l  %xtraiter = and i32 %9, 1\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %for.body.preheader.split, label %for.body.prol\l|{<s0>T|<s1>F}}"];
	Node0x4fa17a0:s0 -> Node0x4fa2d80;
	Node0x4fa17a0:s1 -> Node0x4fa2ea0;
	Node0x4fa2ea0 [shape=record,label="{for.body.prol:                                    \l  %incdec.ptr.prol = getelementptr inbounds i8, i8* %11, i64 1\l  %16 = load i8, i8* %11, align 1, !tbaa !20\l  %arrayidx3.prol = getelementptr inbounds i8, i8* %8, i64 2\l  store i8 %16, i8* %arrayidx3.prol, align 1, !tbaa !20\l  %incdec.ptr4.prol = getelementptr inbounds i8, i8* %11, i64 2\l  %17 = load i8, i8* %incdec.ptr.prol, align 1, !tbaa !20\l  %arrayidx5.prol = getelementptr inbounds i8, i8* %8, i64 1\l  store i8 %17, i8* %arrayidx5.prol, align 1, !tbaa !20\l  %incdec.ptr6.prol = getelementptr inbounds i8, i8* %11, i64 3\l  %18 = load i8, i8* %incdec.ptr4.prol, align 1, !tbaa !20\l  store i8 %18, i8* %8, align 1, !tbaa !20\l  %add.ptr.prol = getelementptr inbounds i8, i8* %8, i64 3\l  %dec.prol = add i32 %9, -1\l  br label %for.body.preheader.split\l}"];
	Node0x4fa2ea0 -> Node0x4fa2d80;
	Node0x4fa2d80 [shape=record,label="{for.body.preheader.split:                         \l  %col.036.unr = phi i32 [ %9, %for.body.preheader ], [ %dec.prol,\l... %for.body.prol ]\l  %outptr.035.unr = phi i8* [ %8, %for.body.preheader ], [ %add.ptr.prol,\l... %for.body.prol ]\l  %inptr.034.unr = phi i8* [ %11, %for.body.preheader ], [ %incdec.ptr6.prol,\l... %for.body.prol ]\l  %19 = icmp eq i32 %12, 0\l  br i1 %19, label %for.end.loopexit, label %for.body.preheader.split.split\l|{<s0>T|<s1>F}}"];
	Node0x4fa2d80:s0 -> Node0x4fa4880;
	Node0x4fa2d80:s1 -> Node0x4fa4980;
	Node0x4fa4980 [shape=record,label="{for.body.preheader.split.split:                   \l  br label %for.body\l}"];
	Node0x4fa4980 -> Node0x4fa4b30;
	Node0x4fa4b30 [shape=record,label="{for.body:                                         \l  %col.036 = phi i32 [ %col.036.unr, %for.body.preheader.split.split ], [\l... %dec.1, %for.body ]\l  %outptr.035 = phi i8* [ %outptr.035.unr, %for.body.preheader.split.split ],\l... [ %add.ptr.1, %for.body ]\l  %inptr.034 = phi i8* [ %inptr.034.unr, %for.body.preheader.split.split ], [\l... %incdec.ptr6.1, %for.body ]\l  %incdec.ptr = getelementptr inbounds i8, i8* %inptr.034, i64 1\l  %20 = load i8, i8* %inptr.034, align 1, !tbaa !20\l  %arrayidx3 = getelementptr inbounds i8, i8* %outptr.035, i64 2\l  store i8 %20, i8* %arrayidx3, align 1, !tbaa !20\l  %incdec.ptr4 = getelementptr inbounds i8, i8* %inptr.034, i64 2\l  %21 = load i8, i8* %incdec.ptr, align 1, !tbaa !20\l  %arrayidx5 = getelementptr inbounds i8, i8* %outptr.035, i64 1\l  store i8 %21, i8* %arrayidx5, align 1, !tbaa !20\l  %incdec.ptr6 = getelementptr inbounds i8, i8* %inptr.034, i64 3\l  %22 = load i8, i8* %incdec.ptr4, align 1, !tbaa !20\l  store i8 %22, i8* %outptr.035, align 1, !tbaa !20\l  %add.ptr = getelementptr inbounds i8, i8* %outptr.035, i64 3\l  %incdec.ptr.1 = getelementptr inbounds i8, i8* %inptr.034, i64 4\l  %23 = load i8, i8* %incdec.ptr6, align 1, !tbaa !20\l  %arrayidx3.1 = getelementptr inbounds i8, i8* %outptr.035, i64 5\l  store i8 %23, i8* %arrayidx3.1, align 1, !tbaa !20\l  %incdec.ptr4.1 = getelementptr inbounds i8, i8* %inptr.034, i64 5\l  %24 = load i8, i8* %incdec.ptr.1, align 1, !tbaa !20\l  %arrayidx5.1 = getelementptr inbounds i8, i8* %outptr.035, i64 4\l  store i8 %24, i8* %arrayidx5.1, align 1, !tbaa !20\l  %incdec.ptr6.1 = getelementptr inbounds i8, i8* %inptr.034, i64 6\l  %25 = load i8, i8* %incdec.ptr4.1, align 1, !tbaa !20\l  store i8 %25, i8* %add.ptr, align 1, !tbaa !20\l  %add.ptr.1 = getelementptr inbounds i8, i8* %outptr.035, i64 6\l  %dec.1 = add i32 %col.036, -2\l  %cmp.1 = icmp eq i32 %dec.1, 0\l  br i1 %cmp.1, label %for.end.loopexit.unr-lcssa, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x4fa4b30:s0 -> Node0x4fa4a10;
	Node0x4fa4b30:s1 -> Node0x4fa4b30;
	Node0x4fa4a10 [shape=record,label="{for.end.loopexit.unr-lcssa:                       \l  br label %for.end.loopexit\l}"];
	Node0x4fa4a10 -> Node0x4fa4880;
	Node0x4fa4880 [shape=record,label="{for.end.loopexit:                                 \l  %scevgep = getelementptr i8, i8* %8, i64 %15\l  br label %for.end\l}"];
	Node0x4fa4880 -> Node0x4fbe6a0;
	Node0x4fbe6a0 [shape=record,label="{for.end:                                          \l  %outptr.0.lcssa = phi i8* [ %8, %entry ], [ %scevgep, %for.end.loopexit ]\l  %pad_bytes = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 1, i32 3\l  %26 = bitcast %struct._IO_FILE** %pad_bytes to i32*\l  %27 = load i32, i32* %26, align 8, !tbaa !21\l  %cmp930 = icmp sgt i32 %27, 0\l  br i1 %cmp930, label %while.body.preheader, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x4fbe6a0:s0 -> Node0x4fc7390;
	Node0x4fbe6a0:s1 -> Node0x4fc7490;
	Node0x4fc7390 [shape=record,label="{while.body.preheader:                             \l  %28 = add i32 %27, -1\l  %29 = zext i32 %28 to i64\l  %30 = add nuw nsw i64 %29, 1\l  call void @llvm.memset.p0i8.i64(i8* %outptr.0.lcssa, i8 0, i64 %30, i32 1,\l... i1 false)\l  br label %while.end\l}"];
	Node0x4fc7390 -> Node0x4fc7490;
	Node0x4fc7490 [shape=record,label="{while.end:                                        \l  ret void\l}"];
}
