digraph "CFG for 'jpeg_new_colormap' function" {
	label="CFG for 'jpeg_new_colormap' function";

	Node0x610e1c0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %master1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 73\l  %0 = bitcast %struct.jpeg_decomp_master** %master1 to\l... %struct.my_decomp_master**\l  %1 = load %struct.my_decomp_master*, %struct.my_decomp_master** %0, align 8,\l... !tbaa !2\l  %global_state = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 4\l  %2 = load i32, i32* %global_state, align 4, !tbaa !10\l  %cmp = icmp eq i32 %2, 207\l  br i1 %cmp, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x610e1c0:s0 -> Node0x610f040;
	Node0x610e1c0:s1 -> Node0x610f110;
	Node0x610f110 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %3 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !11\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %3, i64 0, i32 5\l  store i32 18, i32* %msg_code, align 8, !tbaa !12\l  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %3, i64 0, i32 6, i32 0, i64 0\l  store i32 %2, i32* %arrayidx, align 4, !tbaa !15\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %3, i64 0, i32 0\l  %4 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !16\l  %5 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %4(%struct.jpeg_common_struct* %5) #3\l  br label %if.end\l}"];
	Node0x610f110 -> Node0x610f040;
	Node0x610f040 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %quantize_colors = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 19\l  %6 = load i32, i32* %quantize_colors, align 4, !tbaa !17\l  %tobool = icmp eq i32 %6, 0\l  br i1 %tobool, label %if.else, label %land.lhs.true\l|{<s0>T|<s1>F}}"];
	Node0x610f040:s0 -> Node0x610d6a0;
	Node0x610f040:s1 -> Node0x6111a40;
	Node0x6111a40 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true:                                    \l  %enable_external_quant = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 24\l  %7 = load i32, i32* %enable_external_quant, align 8, !tbaa !18\l  %tobool5 = icmp eq i32 %7, 0\l  br i1 %tobool5, label %if.else, label %land.lhs.true6\l|{<s0>T|<s1>F}}"];
	Node0x6111a40:s0 -> Node0x610d6a0;
	Node0x6111a40:s1 -> Node0x6111ef0;
	Node0x6111ef0 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true6:                                   \l  %colormap = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 32\l  %8 = load i8**, i8*** %colormap, align 8, !tbaa !19\l  %cmp7 = icmp eq i8** %8, null\l  br i1 %cmp7, label %if.else, label %if.then8\l|{<s0>T|<s1>F}}"];
	Node0x6111ef0:s0 -> Node0x610d6a0;
	Node0x6111ef0:s1 -> Node0x6112760;
	Node0x6112760 [shape=record, style = filled, fillcolor = blue, label="{if.then8:                                         \l  %quantizer_2pass = getelementptr inbounds %struct.my_decomp_master,\l... %struct.my_decomp_master* %1, i64 0, i32 4\l  %9 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer**\l... %quantizer_2pass, align 8, !tbaa !20\l  %cquantize = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  store %struct.jpeg_color_quantizer* %9, %struct.jpeg_color_quantizer**\l... %cquantize, align 8, !tbaa !23\l  %new_color_map = getelementptr inbounds %struct.jpeg_color_quantizer,\l... %struct.jpeg_color_quantizer* %9, i64 0, i32 3\l  %new_color_map10 = bitcast \{\}** %new_color_map to void\l... (%struct.jpeg_decompress_struct*)**\l  %10 = load void (%struct.jpeg_decompress_struct*)*, void\l... (%struct.jpeg_decompress_struct*)** %new_color_map10, align 8, !tbaa !24\l  tail call void %10(%struct.jpeg_decompress_struct* nonnull %cinfo) #3\l  %is_dummy_pass = getelementptr inbounds %struct.my_decomp_master,\l... %struct.my_decomp_master* %1, i64 0, i32 0, i32 2\l  store i32 0, i32* %is_dummy_pass, align 8, !tbaa !26\l  br label %if.end15\l}"];
	Node0x6112760 -> Node0x6113620;
	Node0x610d6a0 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %err11 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err11, align\l... 8, !tbaa !11\l  %msg_code12 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 5\l  store i32 45, i32* %msg_code12, align 8, !tbaa !12\l  %error_exit14 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 0\l  %12 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit14, align 8, !tbaa !16\l  %13 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %12(%struct.jpeg_common_struct* %13) #3\l  br label %if.end15\l}"];
	Node0x610d6a0 -> Node0x6113620;
	Node0x6113620 [shape=record, style = filled, fillcolor = blue, label="{if.end15:                                         \l  ret void\l}"];
}
