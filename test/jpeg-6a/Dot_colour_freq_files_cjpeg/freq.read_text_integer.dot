digraph "CFG for 'read_text_integer' function" {
	label="CFG for 'read_text_integer' function";

	Node0x5e36930 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  br label %do.body\l}"];
	Node0x5e36930 -> Node0x5e36180;
	Node0x5e36180 [shape=record, style = filled, fillcolor = blue, label="{do.body:                                          \l  %call.i = tail call i32 @_IO_getc(%struct._IO_FILE* %file) #5\l  %cmp.i = icmp eq i32 %call.i, 35\l  br i1 %cmp.i, label %do.body.i.preheader, label %text_getc.exit\l|{<s0>T|<s1>F}}"];
	Node0x5e36180:s0 -> Node0x5e3e230;
	Node0x5e36180:s1 -> Node0x5e3e330;
	Node0x5e3e230 [shape=record, style = filled, fillcolor = blue, label="{do.body.i.preheader:                              \l  br label %do.body.i\l}"];
	Node0x5e3e230 -> Node0x5e3e4a0;
	Node0x5e3e4a0 [shape=record, style = filled, fillcolor = blue, label="{do.body.i:                                        \l  %call1.i = tail call i32 @_IO_getc(%struct._IO_FILE* %file) #5\l  switch i32 %call1.i, label %do.body.i [\l    i32 -1, label %text_getc.exit.loopexit\l    i32 10, label %text_getc.exit.loopexit\l  ]\l|{<s0>def|<s1>-1|<s2>10}}"];
	Node0x5e3e4a0:s0 -> Node0x5e3e4a0;
	Node0x5e3e4a0:s1 -> Node0x5e3e680;
	Node0x5e3e4a0:s2 -> Node0x5e3e680;
	Node0x5e3e680 [shape=record, style = filled, fillcolor = blue, label="{text_getc.exit.loopexit:                          \l  %call1.i.lcssa = phi i32 [ %call1.i, %do.body.i ], [ %call1.i, %do.body.i ]\l  br label %text_getc.exit\l}"];
	Node0x5e3e680 -> Node0x5e3e330;
	Node0x5e3e330 [shape=record, style = filled, fillcolor = blue, label="{text_getc.exit:                                   \l  %ch.0.i = phi i32 [ %call.i, %do.body ], [ %call1.i.lcssa,\l... %text_getc.exit.loopexit ]\l  %cmp = icmp eq i32 %ch.0.i, -1\l  br i1 %cmp, label %if.then, label %do.cond\l|{<s0>T|<s1>F}}"];
	Node0x5e3e330:s0 -> Node0x5e3eb00;
	Node0x5e3e330:s1 -> Node0x5e3ebd0;
	Node0x5e3eb00 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  store i32 -1, i32* %termchar, align 4, !tbaa !3\l  br label %cleanup\l}"];
	Node0x5e3eb00 -> Node0x5e3edb0;
	Node0x5e3ebd0 [shape=record, style = filled, fillcolor = blue, label="{do.cond:                                          \l  %idxprom = sext i32 %ch.0.i to i64\l  %call1 = tail call i16** @__ctype_b_loc() #6\l  %0 = load i16*, i16** %call1, align 8, !tbaa !7\l  %arrayidx = getelementptr inbounds i16, i16* %0, i64 %idxprom\l  %1 = load i16, i16* %arrayidx, align 2, !tbaa !9\l  %conv = zext i16 %1 to i32\l  %and = and i32 %conv, 8192\l  %tobool = icmp eq i32 %and, 0\l  br i1 %tobool, label %do.end, label %do.body\l|{<s0>T|<s1>F}}"];
	Node0x5e3ebd0:s0 -> Node0x5e39d90;
	Node0x5e3ebd0:s1 -> Node0x5e36180;
	Node0x5e39d90 [shape=record, style = filled, fillcolor = blue, label="{do.end:                                           \l  %conv.lcssa = phi i32 [ %conv, %do.cond ]\l  %call1.lcssa = phi i16** [ %call1, %do.cond ]\l  %ch.0.i.lcssa49 = phi i32 [ %ch.0.i, %do.cond ]\l  %and6 = and i32 %conv.lcssa, 2048\l  %tobool7 = icmp eq i32 %and6, 0\l  br i1 %tobool7, label %if.then8, label %if.end9\l|{<s0>T|<s1>F}}"];
	Node0x5e39d90:s0 -> Node0x5e40400;
	Node0x5e39d90:s1 -> Node0x5e404e0;
	Node0x5e40400 [shape=record, style = filled, fillcolor = blue, label="{if.then8:                                         \l  store i32 %ch.0.i.lcssa49, i32* %termchar, align 4, !tbaa !3\l  br label %cleanup\l}"];
	Node0x5e40400 -> Node0x5e3edb0;
	Node0x5e404e0 [shape=record, style = filled, fillcolor = blue, label="{if.end9:                                          \l  %sub = add nsw i32 %ch.0.i.lcssa49, -48\l  %conv10 = sext i32 %sub to i64\l  br label %while.cond\l}"];
	Node0x5e404e0 -> Node0x5e407c0;
	Node0x5e407c0 [shape=record, style = filled, fillcolor = blue, label="{while.cond:                                       \l  %val.0 = phi i64 [ %conv10, %if.end9 ], [ %add, %if.end21 ]\l  %call.i38 = tail call i32 @_IO_getc(%struct._IO_FILE* %file) #5\l  %cmp.i39 = icmp eq i32 %call.i38, 35\l  br i1 %cmp.i39, label %do.body.i41.preheader, label %text_getc.exit43\l|{<s0>T|<s1>F}}"];
	Node0x5e407c0:s0 -> Node0x5e40d10;
	Node0x5e407c0:s1 -> Node0x5e40e10;
	Node0x5e40d10 [shape=record, style = filled, fillcolor = blue, label="{do.body.i41.preheader:                            \l  br label %do.body.i41\l}"];
	Node0x5e40d10 -> Node0x5e40fa0;
	Node0x5e40fa0 [shape=record, style = filled, fillcolor = blue, label="{do.body.i41:                                      \l  %call1.i40 = tail call i32 @_IO_getc(%struct._IO_FILE* %file) #5\l  switch i32 %call1.i40, label %do.body.i41 [\l    i32 -1, label %text_getc.exit43.loopexit\l    i32 10, label %text_getc.exit43.loopexit\l  ]\l|{<s0>def|<s1>-1|<s2>10}}"];
	Node0x5e40fa0:s0 -> Node0x5e40fa0;
	Node0x5e40fa0:s1 -> Node0x5e411b0;
	Node0x5e40fa0:s2 -> Node0x5e411b0;
	Node0x5e411b0 [shape=record, style = filled, fillcolor = blue, label="{text_getc.exit43.loopexit:                        \l  %call1.i40.lcssa = phi i32 [ %call1.i40, %do.body.i41 ], [ %call1.i40,\l... %do.body.i41 ]\l  br label %text_getc.exit43\l}"];
	Node0x5e411b0 -> Node0x5e40e10;
	Node0x5e40e10 [shape=record, style = filled, fillcolor = blue, label="{text_getc.exit43:                                 \l  %ch.0.i42 = phi i32 [ %call.i38, %while.cond ], [ %call1.i40.lcssa,\l... %text_getc.exit43.loopexit ]\l  %cmp12 = icmp eq i32 %ch.0.i42, -1\l  br i1 %cmp12, label %while.end, label %while.body\l|{<s0>T|<s1>F}}"];
	Node0x5e40e10:s0 -> Node0x5e41520;
	Node0x5e40e10:s1 -> Node0x5e41600;
	Node0x5e41600 [shape=record, style = filled, fillcolor = blue, label="{while.body:                                       \l  %idxprom14 = sext i32 %ch.0.i42 to i64\l  %2 = load i16*, i16** %call1.lcssa, align 8, !tbaa !7\l  %arrayidx16 = getelementptr inbounds i16, i16* %2, i64 %idxprom14\l  %3 = load i16, i16* %arrayidx16, align 2, !tbaa !9\l  %and18 = and i16 %3, 2048\l  %tobool19 = icmp eq i16 %and18, 0\l  br i1 %tobool19, label %while.end, label %if.end21\l|{<s0>T|<s1>F}}"];
	Node0x5e41600:s0 -> Node0x5e41520;
	Node0x5e41600:s1 -> Node0x5e40960;
	Node0x5e40960 [shape=record, style = filled, fillcolor = blue, label="{if.end21:                                         \l  %mul = mul nsw i64 %val.0, 10\l  %sub22 = add nsw i32 %ch.0.i42, -48\l  %conv23 = sext i32 %sub22 to i64\l  %add = add nsw i64 %conv23, %mul\l  br label %while.cond\l}"];
	Node0x5e40960 -> Node0x5e407c0;
	Node0x5e41520 [shape=record, style = filled, fillcolor = blue, label="{while.end:                                        \l  %val.0.lcssa = phi i64 [ %val.0, %while.body ], [ %val.0, %text_getc.exit43 ]\l  %ch.0.i42.lcssa = phi i32 [ %ch.0.i42, %while.body ], [ -1,\l... %text_getc.exit43 ]\l  store i64 %val.0.lcssa, i64* %result, align 8, !tbaa !11\l  store i32 %ch.0.i42.lcssa, i32* %termchar, align 4, !tbaa !3\l  br label %cleanup\l}"];
	Node0x5e41520 -> Node0x5e3edb0;
	Node0x5e3edb0 [shape=record, style = filled, fillcolor = blue, label="{cleanup:                                          \l  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %while.end ], [ 0, %if.then8 ]\l  ret i32 %retval.0\l}"];
}
