digraph "CFG for 'consume_markers' function" {
	label="CFG for 'consume_markers' function";

	Node0x5178bf0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %inputctl1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 77\l  %0 = bitcast %struct.jpeg_input_controller** %inputctl1 to\l... %struct.my_input_controller**\l  %1 = load %struct.my_input_controller*, %struct.my_input_controller** %0,\l... align 8, !tbaa !2\l  %eoi_reached = getelementptr inbounds %struct.my_input_controller,\l... %struct.my_input_controller* %1, i64 0, i32 0, i32 5\l  %2 = load i32, i32* %eoi_reached, align 4, !tbaa !10\l  %tobool = icmp eq i32 %2, 0\l  br i1 %tobool, label %if.end, label %cleanup\l|{<s0>T|<s1>F}}"];
	Node0x5178bf0:s0 -> Node0x5179bc0;
	Node0x5178bf0:s1 -> Node0x5179c70;
	Node0x5179bc0 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %marker = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 78\l  %3 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %marker,\l... align 8, !tbaa !13\l  %read_markers = getelementptr inbounds %struct.jpeg_marker_reader,\l... %struct.jpeg_marker_reader* %3, i64 0, i32 1\l  %4 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %read_markers, align 8, !tbaa !14\l  %call = tail call i32 %4(%struct.jpeg_decompress_struct* nonnull %cinfo) #4\l  switch i32 %call, label %cleanup [\l    i32 1, label %sw.bb\l    i32 2, label %sw.bb11\l  ]\l|{<s0>def|<s1>1|<s2>2}}"];
	Node0x5179bc0:s0 -> Node0x5179c70;
	Node0x5179bc0:s1 -> Node0x517a410;
	Node0x5179bc0:s2 -> Node0x517a520;
	Node0x517a410 [shape=record, style = filled, fillcolor = blue, label="{sw.bb:                                            \l  %inheaders = getelementptr inbounds %struct.my_input_controller,\l... %struct.my_input_controller* %1, i64 0, i32 1\l  %5 = load i32, i32* %inheaders, align 8, !tbaa !16\l  %tobool2 = icmp eq i32 %5, 0\l  br i1 %tobool2, label %if.else, label %if.then3\l|{<s0>T|<s1>F}}"];
	Node0x517a410:s0 -> Node0x517af70;
	Node0x517a410:s1 -> Node0x517b020;
	Node0x517b020 [shape=record, style = filled, fillcolor = blue, label="{if.then3:                                         \l  %image_height.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 7\l  %6 = load i32, i32* %image_height.i, align 4, !tbaa !17\l  %cmp.i = icmp ugt i32 %6, 65500\l  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i\l|{<s0>T|<s1>F}}"];
	Node0x517b020:s0 -> Node0x517b490;
	Node0x517b020:s1 -> Node0x517b570;
	Node0x517b570 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false.i:                                  \l  %image_width.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 6\l  %7 = load i32, i32* %image_width.i, align 8, !tbaa !18\l  %cmp3.i = icmp ugt i32 %7, 65500\l  br i1 %cmp3.i, label %if.then.i, label %if.end.i\l|{<s0>T|<s1>F}}"];
	Node0x517b570:s0 -> Node0x517b490;
	Node0x517b570:s1 -> Node0x517b9c0;
	Node0x517b490 [shape=record, style = filled, fillcolor = blue, label="{if.then.i:                                        \l  %err.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8,\l... !tbaa !19\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 5\l  store i32 40, i32* %msg_code.i, align 8, !tbaa !20\l  %arrayidx.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 6, i32 0, i64 0\l  store i32 65500, i32* %arrayidx.i, align 4, !tbaa !23\l  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 0\l  %9 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !24\l  %10 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %9(%struct.jpeg_common_struct* %10) #4\l  br label %if.end.i\l}"];
	Node0x517b490 -> Node0x517b9c0;
	Node0x517b9c0 [shape=record, style = filled, fillcolor = blue, label="{if.end.i:                                         \l  %data_precision.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 42\l  %11 = load i32, i32* %data_precision.i, align 8, !tbaa !25\l  %cmp7.i = icmp eq i32 %11, 8\l  br i1 %cmp7.i, label %if.end19.i, label %if.then9.i\l|{<s0>T|<s1>F}}"];
	Node0x517b9c0:s0 -> Node0x517cc00;
	Node0x517b9c0:s1 -> Node0x5174200;
	Node0x5174200 [shape=record, style = filled, fillcolor = blue, label="{if.then9.i:                                       \l  %err10.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err10.i, align\l... 8, !tbaa !19\l  %msg_code11.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %12, i64 0, i32 5\l  store i32 13, i32* %msg_code11.i, align 8, !tbaa !20\l  %arrayidx16.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %12, i64 0, i32 6, i32 0, i64 0\l  store i32 %11, i32* %arrayidx16.i, align 4, !tbaa !23\l  %error_exit18.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %12, i64 0, i32 0\l  %13 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit18.i, align 8, !tbaa !24\l  %14 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %13(%struct.jpeg_common_struct* %14) #4\l  br label %if.end19.i\l}"];
	Node0x5174200 -> Node0x517cc00;
	Node0x517cc00 [shape=record, style = filled, fillcolor = blue, label="{if.end19.i:                                       \l  %num_components.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %15 = load i32, i32* %num_components.i, align 8, !tbaa !26\l  %cmp20.i = icmp sgt i32 %15, 10\l  br i1 %cmp20.i, label %if.then22.i, label %if.end36.i\l|{<s0>T|<s1>F}}"];
	Node0x517cc00:s0 -> Node0x517f430;
	Node0x517cc00:s1 -> Node0x517f4e0;
	Node0x517f430 [shape=record, style = filled, fillcolor = blue, label="{if.then22.i:                                      \l  %err23.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err23.i, align\l... 8, !tbaa !19\l  %msg_code24.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %16, i64 0, i32 5\l  store i32 24, i32* %msg_code24.i, align 8, !tbaa !20\l  %arrayidx29.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %16, i64 0, i32 6, i32 0, i64 0\l  store i32 %15, i32* %arrayidx29.i, align 4, !tbaa !23\l  %arrayidx33.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %16, i64 0, i32 6, i32 0, i64 1\l  store i32 10, i32* %arrayidx33.i, align 4, !tbaa !23\l  %error_exit35.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %16, i64 0, i32 0\l  %17 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit35.i, align 8, !tbaa !24\l  %18 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %17(%struct.jpeg_common_struct* %18) #4\l  %.pre.i = load i32, i32* %num_components.i, align 8, !tbaa !26\l  br label %if.end36.i\l}"];
	Node0x517f430 -> Node0x517f4e0;
	Node0x517f4e0 [shape=record, style = filled, fillcolor = blue, label="{if.end36.i:                                       \l  %19 = phi i32 [ %.pre.i, %if.then22.i ], [ %15, %if.end19.i ]\l  %max_h_samp_factor.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 57\l  store i32 1, i32* %max_h_samp_factor.i, align 4, !tbaa !27\l  %max_v_samp_factor.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 58\l  store i32 1, i32* %max_v_samp_factor.i, align 8, !tbaa !28\l  %comp_info.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43\l  %cmp38218.i = icmp sgt i32 %19, 0\l  br i1 %cmp38218.i, label %for.body.lr.ph.i, label %for.end.thread.i\l|{<s0>T|<s1>F}}"];
	Node0x517f4e0:s0 -> Node0x517beb0;
	Node0x517f4e0:s1 -> Node0x517bfb0;
	Node0x517bfb0 [shape=record, style = filled, fillcolor = blue, label="{for.end.thread.i:                                 \l  %min_DCT_scaled_size229.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 59\l  store i32 8, i32* %min_DCT_scaled_size229.i, align 4, !tbaa !29\l  br label %for.end122.i\l}"];
	Node0x517bfb0 -> Node0x5181630;
	Node0x517beb0 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph.i:                                 \l  %20 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info.i, align 8, !tbaa !30\l  %err54.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %21 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  br label %for.body.i\l}"];
	Node0x517beb0 -> Node0x51818f0;
	Node0x51818f0 [shape=record, style = filled, fillcolor = blue, label="{for.body.i:                                       \l  %22 = phi i32 [ %19, %for.body.lr.ph.i ], [ %37, %if.end58.i ]\l  %23 = phi i32 [ 1, %for.body.lr.ph.i ], [ %cond75.i, %if.end58.i ]\l  %24 = phi i32 [ 1, %for.body.lr.ph.i ], [ %..i, %if.end58.i ]\l  %compptr.0220.i = phi %struct.jpeg_component_info* [ %20, %for.body.lr.ph.i\l... ], [ %incdec.ptr.i, %if.end58.i ]\l  %ci.0219.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %if.end58.i ]\l  %h_samp_factor.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0220.i, i64 0, i32 2\l  %25 = bitcast i32* %h_samp_factor.i to i64*\l  %26 = load i64, i64* %25, align 8\l  %27 = trunc i64 %26 to i32\l  %.off.i = add i32 %27, -1\l  %28 = lshr i64 %26, 32\l  %29 = trunc i64 %28 to i32\l  %.off214.i = add i32 %29, -1\l  %30 = or i32 %.off214.i, %.off.i\l  %31 = icmp ugt i32 %30, 3\l  br i1 %31, label %if.then53.i, label %if.end58.i\l|{<s0>T|<s1>F}}"];
	Node0x51818f0:s0 -> Node0x5182760;
	Node0x51818f0:s1 -> Node0x5181a80;
	Node0x5182760 [shape=record, style = filled, fillcolor = blue, label="{if.then53.i:                                      \l  %32 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err54.i, align\l... 8, !tbaa !19\l  %msg_code55.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %32, i64 0, i32 5\l  store i32 16, i32* %msg_code55.i, align 8, !tbaa !20\l  %error_exit57.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %32, i64 0, i32 0\l  %33 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit57.i, align 8, !tbaa !24\l  tail call void %33(%struct.jpeg_common_struct* %21) #4\l  %.pre221.i = load i32, i32* %max_h_samp_factor.i, align 4, !tbaa !27\l  %.pre222.i = load i64, i64* %25, align 8\l  %34 = trunc i64 %.pre222.i to i32\l  %.pre223.i = load i32, i32* %max_v_samp_factor.i, align 8, !tbaa !28\l  %35 = lshr i64 %.pre222.i, 32\l  %36 = trunc i64 %35 to i32\l  %.pre224.i = load i32, i32* %num_components.i, align 8, !tbaa !26\l  br label %if.end58.i\l}"];
	Node0x5182760 -> Node0x5181a80;
	Node0x5181a80 [shape=record, style = filled, fillcolor = blue, label="{if.end58.i:                                       \l  %37 = phi i32 [ %.pre224.i, %if.then53.i ], [ %22, %for.body.i ]\l  %38 = phi i32 [ %36, %if.then53.i ], [ %29, %for.body.i ]\l  %39 = phi i32 [ %.pre223.i, %if.then53.i ], [ %23, %for.body.i ]\l  %40 = phi i32 [ %34, %if.then53.i ], [ %27, %for.body.i ]\l  %41 = phi i32 [ %.pre221.i, %if.then53.i ], [ %24, %for.body.i ]\l  %cmp61.i = icmp sgt i32 %41, %40\l  %..i = select i1 %cmp61.i, i32 %41, i32 %40\l  store i32 %..i, i32* %max_h_samp_factor.i, align 4, !tbaa !27\l  %cmp68.i = icmp sgt i32 %39, %38\l  %cond75.i = select i1 %cmp68.i, i32 %39, i32 %38\l  store i32 %cond75.i, i32* %max_v_samp_factor.i, align 8, !tbaa !28\l  %inc.i = add nuw nsw i32 %ci.0219.i, 1\l  %incdec.ptr.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0220.i, i64 1\l  %cmp38.i = icmp slt i32 %inc.i, %37\l  br i1 %cmp38.i, label %for.body.i, label %for.end.i\l|{<s0>T|<s1>F}}"];
	Node0x5181a80:s0 -> Node0x51818f0;
	Node0x5181a80:s1 -> Node0x5184560;
	Node0x5184560 [shape=record, style = filled, fillcolor = blue, label="{for.end.i:                                        \l  %cond75.i.lcssa = phi i32 [ %cond75.i, %if.end58.i ]\l  %..i.lcssa = phi i32 [ %..i, %if.end58.i ]\l  %.lcssa = phi i32 [ %37, %if.end58.i ]\l  %min_DCT_scaled_size.i = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 59\l  store i32 8, i32* %min_DCT_scaled_size.i, align 4, !tbaa !29\l  %cmp80215.i = icmp sgt i32 %.lcssa, 0\l  br i1 %cmp80215.i, label %for.body82.lr.ph.i, label %for.end122.i\l|{<s0>T|<s1>F}}"];
	Node0x5184560:s0 -> Node0x517d3f0;
	Node0x5184560:s1 -> Node0x5181630;
	Node0x517d3f0 [shape=record, style = filled, fillcolor = blue, label="{for.body82.lr.ph.i:                               \l  %42 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info.i, align 8, !tbaa !30\l  %image_width83.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 6\l  br label %for.body82.i\l}"];
	Node0x517d3f0 -> Node0x5185ee0;
	Node0x5185ee0 [shape=record, style = filled, fillcolor = blue, label="{for.body82.i:                                     \l  %43 = phi i32 [ %..i.lcssa, %for.body82.lr.ph.i ], [ %.pre225.i,\l... %for.body82.for.body82_crit_edge.i ]\l  %compptr.1217.i = phi %struct.jpeg_component_info* [ %42,\l... %for.body82.lr.ph.i ], [ %incdec.ptr121.i, %for.body82.for.body82_crit_edge.i\l... ]\l  %ci.1216.i = phi i32 [ 0, %for.body82.lr.ph.i ], [ %inc120.i,\l... %for.body82.for.body82_crit_edge.i ]\l  %DCT_scaled_size.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1217.i, i64 0, i32 9\l  store i32 8, i32* %DCT_scaled_size.i, align 4, !tbaa !31\l  %44 = load i32, i32* %image_width83.i, align 8, !tbaa !18\l  %conv84.i = zext i32 %44 to i64\l  %h_samp_factor85.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1217.i, i64 0, i32 2\l  %45 = load i32, i32* %h_samp_factor85.i, align 8, !tbaa !33\l  %conv86.i = sext i32 %45 to i64\l  %mul.i = mul nsw i64 %conv86.i, %conv84.i\l  %mul88.i = shl nsw i32 %43, 3\l  %conv89.i = sext i32 %mul88.i to i64\l  %call.i = tail call i64 @jdiv_round_up(i64 %mul.i, i64 %conv89.i) #4\l  %conv90.i = trunc i64 %call.i to i32\l  %width_in_blocks.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1217.i, i64 0, i32 7\l  store i32 %conv90.i, i32* %width_in_blocks.i, align 4, !tbaa !34\l  %46 = load i32, i32* %image_height.i, align 4, !tbaa !17\l  %conv92.i = zext i32 %46 to i64\l  %v_samp_factor93.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1217.i, i64 0, i32 3\l  %47 = load i32, i32* %v_samp_factor93.i, align 4, !tbaa !35\l  %conv94.i = sext i32 %47 to i64\l  %mul95.i = mul nsw i64 %conv94.i, %conv92.i\l  %48 = load i32, i32* %max_v_samp_factor.i, align 8, !tbaa !28\l  %mul97.i = shl nsw i32 %48, 3\l  %conv98.i = sext i32 %mul97.i to i64\l  %call99.i = tail call i64 @jdiv_round_up(i64 %mul95.i, i64 %conv98.i) #4\l  %conv100.i = trunc i64 %call99.i to i32\l  %height_in_blocks.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1217.i, i64 0, i32 8\l  store i32 %conv100.i, i32* %height_in_blocks.i, align 8, !tbaa !36\l  %49 = load i32, i32* %image_width83.i, align 8, !tbaa !18\l  %conv102.i = zext i32 %49 to i64\l  %50 = load i32, i32* %h_samp_factor85.i, align 8, !tbaa !33\l  %conv104.i = sext i32 %50 to i64\l  %mul105.i = mul nsw i64 %conv104.i, %conv102.i\l  %51 = load i32, i32* %max_h_samp_factor.i, align 4, !tbaa !27\l  %conv107.i = sext i32 %51 to i64\l  %call108.i = tail call i64 @jdiv_round_up(i64 %mul105.i, i64 %conv107.i) #4\l  %conv109.i = trunc i64 %call108.i to i32\l  %downsampled_width.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1217.i, i64 0, i32 10\l  store i32 %conv109.i, i32* %downsampled_width.i, align 8, !tbaa !37\l  %52 = load i32, i32* %image_height.i, align 4, !tbaa !17\l  %conv111.i = zext i32 %52 to i64\l  %53 = load i32, i32* %v_samp_factor93.i, align 4, !tbaa !35\l  %conv113.i = sext i32 %53 to i64\l  %mul114.i = mul nsw i64 %conv113.i, %conv111.i\l  %54 = load i32, i32* %max_v_samp_factor.i, align 8, !tbaa !28\l  %conv116.i = sext i32 %54 to i64\l  %call117.i = tail call i64 @jdiv_round_up(i64 %mul114.i, i64 %conv116.i) #4\l  %conv118.i = trunc i64 %call117.i to i32\l  %downsampled_height.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1217.i, i64 0, i32 11\l  store i32 %conv118.i, i32* %downsampled_height.i, align 4, !tbaa !38\l  %component_needed.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1217.i, i64 0, i32 12\l  store i32 1, i32* %component_needed.i, align 8, !tbaa !39\l  %quant_table.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1217.i, i64 0, i32 19\l  store %struct.JQUANT_TBL* null, %struct.JQUANT_TBL** %quant_table.i, align\l... 8, !tbaa !40\l  %inc120.i = add nuw nsw i32 %ci.1216.i, 1\l  %55 = load i32, i32* %num_components.i, align 8, !tbaa !26\l  %cmp80.i = icmp slt i32 %inc120.i, %55\l  br i1 %cmp80.i, label %for.body82.for.body82_crit_edge.i, label\l... %for.end122.loopexit.i\l|{<s0>T|<s1>F}}"];
	Node0x5185ee0:s0 -> Node0x5186090;
	Node0x5185ee0:s1 -> Node0x518cb30;
	Node0x5186090 [shape=record, style = filled, fillcolor = blue, label="{for.body82.for.body82_crit_edge.i:                \l  %incdec.ptr121.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.1217.i, i64 1\l  %.pre225.i = load i32, i32* %max_h_samp_factor.i, align 4, !tbaa !27\l  br label %for.body82.i\l}"];
	Node0x5186090 -> Node0x5185ee0;
	Node0x518cb30 [shape=record, style = filled, fillcolor = blue, label="{for.end122.loopexit.i:                            \l  %.pre226.i = load i32, i32* %max_v_samp_factor.i, align 8, !tbaa !28\l  br label %for.end122.i\l}"];
	Node0x518cb30 -> Node0x5181630;
	Node0x5181630 [shape=record, style = filled, fillcolor = blue, label="{for.end122.i:                                     \l  %56 = phi i32 [ %.pre226.i, %for.end122.loopexit.i ], [ %cond75.i.lcssa,\l... %for.end.i ], [ 1, %for.end.thread.i ]\l  %57 = load i32, i32* %image_height.i, align 4, !tbaa !17\l  %conv124.i = zext i32 %57 to i64\l  %mul126.i = shl nsw i32 %56, 3\l  %conv127.i = sext i32 %mul126.i to i64\l  %call128.i = tail call i64 @jdiv_round_up(i64 %conv124.i, i64 %conv127.i) #4\l  %conv129.i = trunc i64 %call128.i to i32\l  %total_iMCU_rows.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 60\l  store i32 %conv129.i, i32* %total_iMCU_rows.i, align 8, !tbaa !41\l  %comps_in_scan.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 62\l  %58 = load i32, i32* %comps_in_scan.i, align 8, !tbaa !42\l  %59 = load i32, i32* %num_components.i, align 8, !tbaa !26\l  %cmp131.i = icmp slt i32 %58, %59\l  br i1 %cmp131.i, label %if.then134.i, label %lor.lhs.false133.i\l|{<s0>T|<s1>F}}"];
	Node0x5181630:s0 -> Node0x518d740;
	Node0x5181630:s1 -> Node0x518d850;
	Node0x518d850 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false133.i:                               \l  %progressive_mode.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 44\l  %60 = load i32, i32* %progressive_mode.i, align 8, !tbaa !43\l  %tobool.i = icmp eq i32 %60, 0\l  br i1 %tobool.i, label %if.else.i, label %if.then134.i\l|{<s0>T|<s1>F}}"];
	Node0x518d850:s0 -> Node0x518dcb0;
	Node0x518d850:s1 -> Node0x518d740;
	Node0x518d740 [shape=record, style = filled, fillcolor = blue, label="{if.then134.i:                                     \l  %61 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller**\l... %inputctl1, align 8, !tbaa !2\l  %has_multiple_scans.i = getelementptr inbounds\l... %struct.jpeg_input_controller, %struct.jpeg_input_controller* %61, i64 0, i32\l... 4\l  store i32 1, i32* %has_multiple_scans.i, align 8, !tbaa !44\l  br label %initial_setup.exit\l}"];
	Node0x518d740 -> Node0x518e0e0;
	Node0x518dcb0 [shape=record, style = filled, fillcolor = blue, label="{if.else.i:                                        \l  %62 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller**\l... %inputctl1, align 8, !tbaa !2\l  %has_multiple_scans136.i = getelementptr inbounds\l... %struct.jpeg_input_controller, %struct.jpeg_input_controller* %62, i64 0, i32\l... 4\l  store i32 0, i32* %has_multiple_scans136.i, align 8, !tbaa !44\l  br label %initial_setup.exit\l}"];
	Node0x518dcb0 -> Node0x518e0e0;
	Node0x518e0e0 [shape=record, style = filled, fillcolor = blue, label="{initial_setup.exit:                               \l  store i32 0, i32* %inheaders, align 8, !tbaa !16\l  br label %cleanup\l}"];
	Node0x518e0e0 -> Node0x5179c70;
	Node0x517af70 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %has_multiple_scans = getelementptr inbounds %struct.my_input_controller,\l... %struct.my_input_controller* %1, i64 0, i32 0, i32 4\l  %63 = load i32, i32* %has_multiple_scans, align 8, !tbaa !45\l  %tobool6 = icmp eq i32 %63, 0\l  br i1 %tobool6, label %if.then7, label %if.end9\l|{<s0>T|<s1>F}}"];
	Node0x517af70:s0 -> Node0x518f1d0;
	Node0x517af70:s1 -> Node0x518f2b0;
	Node0x518f1d0 [shape=record, style = filled, fillcolor = blue, label="{if.then7:                                         \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %64 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !19\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %64, i64 0, i32 5\l  store i32 34, i32* %msg_code, align 8, !tbaa !20\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %64, i64 0, i32 0\l  %65 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !24\l  %66 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %65(%struct.jpeg_common_struct* %66) #4\l  br label %if.end9\l}"];
	Node0x518f1d0 -> Node0x518f2b0;
	Node0x518f2b0 [shape=record, style = filled, fillcolor = blue, label="{if.end9:                                          \l  tail call void @start_input_pass(%struct.jpeg_decompress_struct* nonnull\l... %cinfo)\l  br label %cleanup\l}"];
	Node0x518f2b0 -> Node0x5179c70;
	Node0x517a520 [shape=record, style = filled, fillcolor = blue, label="{sw.bb11:                                          \l  store i32 1, i32* %eoi_reached, align 4, !tbaa !10\l  %inheaders14 = getelementptr inbounds %struct.my_input_controller,\l... %struct.my_input_controller* %1, i64 0, i32 1\l  %67 = load i32, i32* %inheaders14, align 8, !tbaa !16\l  %tobool15 = icmp eq i32 %67, 0\l  br i1 %tobool15, label %if.else25, label %if.then16\l|{<s0>T|<s1>F}}"];
	Node0x517a520:s0 -> Node0x518fe30;
	Node0x517a520:s1 -> Node0x518ff10;
	Node0x518ff10 [shape=record, style = filled, fillcolor = blue, label="{if.then16:                                        \l  %68 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader**\l... %marker, align 8, !tbaa !13\l  %saw_SOF = getelementptr inbounds %struct.jpeg_marker_reader,\l... %struct.jpeg_marker_reader* %68, i64 0, i32 6\l  %69 = load i32, i32* %saw_SOF, align 4, !tbaa !46\l  %tobool18 = icmp eq i32 %69, 0\l  br i1 %tobool18, label %cleanup, label %if.then19\l|{<s0>T|<s1>F}}"];
	Node0x518ff10:s0 -> Node0x5179c70;
	Node0x518ff10:s1 -> Node0x5190970;
	Node0x5190970 [shape=record, style = filled, fillcolor = blue, label="{if.then19:                                        \l  %err20 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %70 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err20, align\l... 8, !tbaa !19\l  %msg_code21 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %70, i64 0, i32 5\l  store i32 58, i32* %msg_code21, align 8, !tbaa !20\l  %error_exit23 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %70, i64 0, i32 0\l  %71 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit23, align 8, !tbaa !24\l  %72 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %71(%struct.jpeg_common_struct* %72) #4\l  br label %cleanup\l}"];
	Node0x5190970 -> Node0x5179c70;
	Node0x518fe30 [shape=record, style = filled, fillcolor = blue, label="{if.else25:                                        \l  %output_scan_number = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 36\l  %73 = load i32, i32* %output_scan_number, align 4, !tbaa !47\l  %input_scan_number = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 34\l  %74 = load i32, i32* %input_scan_number, align 4, !tbaa !48\l  %cmp = icmp sgt i32 %73, %74\l  br i1 %cmp, label %if.then26, label %cleanup\l|{<s0>T|<s1>F}}"];
	Node0x518fe30:s0 -> Node0x5191580;
	Node0x518fe30:s1 -> Node0x5179c70;
	Node0x5191580 [shape=record, style = filled, fillcolor = blue, label="{if.then26:                                        \l  store i32 %74, i32* %output_scan_number, align 4, !tbaa !47\l  br label %cleanup\l}"];
	Node0x5191580 -> Node0x5179c70;
	Node0x5179c70 [shape=record, style = filled, fillcolor = blue, label="{cleanup:                                          \l  %retval.0 = phi i32 [ 2, %entry ], [ 2, %if.then16 ], [ 2, %if.then19 ], [\l... 2, %if.then26 ], [ 2, %if.else25 ], [ 1, %initial_setup.exit ], [ 1, %if.end9\l... ], [ %call, %if.end ]\l  ret i32 %retval.0\l}"];
}
