digraph "CFG for 'start_pass_fdctmgr' function" {
	label="CFG for 'start_pass_fdctmgr' function";

	Node0x5643dc0 [shape=record, style = filled, fillcolor = skyblue, label="{entry:\l  %fdct1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 58\l  %0 = bitcast %struct.jpeg_forward_dct** %fdct1 to\l... %struct.my_fdct_controller**\l  %1 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %0,\l... align 8, !tbaa !3\l  %num_components = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12\l  %2 = load i32, i32* %num_components, align 4, !tbaa !11\l  %cmp195 = icmp sgt i32 %2, 0\l  br i1 %cmp195, label %for.body.lr.ph, label %for.end116, !prof !12\l|{<s0>T|<s1>F}}"];
	Node0x5643dc0:s0 -> Node0x564a530;
	Node0x5643dc0:s1 -> Node0x564a5e0;
	Node0x564a530 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  %comp_info = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14\l  %3 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !13\l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %4 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %dct_method = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 28\l  %mem = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1\l  br label %for.body\l}"];
	Node0x564a530 -> Node0x564ad90;
	Node0x564ad90 [shape=record, style = filled, fillcolor = skyblue, label="{for.body:                                         \l  %ci.0197 = phi i32 [ 0, %for.body.lr.ph ], [ %inc115, %for.inc114 ]\l  %compptr.0196 = phi %struct.jpeg_component_info* [ %3, %for.body.lr.ph ], [\l... %incdec.ptr, %for.inc114 ]\l  %quant_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0196, i64 0, i32 4\l  %5 = load i32, i32* %quant_tbl_no, align 8, !tbaa !14\l  %6 = icmp ugt i32 %5, 3\l  %.pre214 = sext i32 %5 to i64\l  %.pre = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 15, i64 %.pre214\l  br i1 %6, label %if.then, label %lor.lhs.false4, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x564ad90:s0 -> Node0x563f360;
	Node0x564ad90:s1 -> Node0x563f430;
	Node0x563f430 [shape=record, style = filled, fillcolor = skyblue, label="{lor.lhs.false4:                                   \l  %7 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %.pre, align 8, !tbaa !17\l  %cmp5 = icmp eq %struct.JQUANT_TBL* %7, null\l  br i1 %cmp5, label %if.then, label %if.end, !prof !18\l|{<s0>T|<s1>F}}"];
	Node0x563f430:s0 -> Node0x563f360;
	Node0x563f430:s1 -> Node0x564cac0;
	Node0x563f360 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !19\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 5\l  store i32 51, i32* %msg_code, align 8, !tbaa !20\l  %arrayidx8 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 6, i32 0, i64 0\l  store i32 %5, i32* %arrayidx8, align 4, !tbaa !23\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 0\l  %9 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !24\l  tail call void %9(%struct.jpeg_common_struct* %4) #3\l  %.pre213 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %.pre, align 8,\l... !tbaa !17\l  br label %if.end\l}"];
	Node0x563f360 -> Node0x564cac0;
	Node0x564cac0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end:                                           \l  %10 = phi %struct.JQUANT_TBL* [ %.pre213, %if.then ], [ %7, %lor.lhs.false4 ]\l  %11 = load i32, i32* %dct_method, align 4, !tbaa !25\l  switch i32 %11, label %sw.default [\l    i32 0, label %sw.bb\l    i32 1, label %sw.bb31\l    i32 2, label %sw.bb65\l  ], !prof !26\l|{<s0>def|<s1>0|<s2>1|<s3>2}}"];
	Node0x564cac0:s0 -> Node0x564efc0;
	Node0x564cac0:s1 -> Node0x564f0a0;
	Node0x564cac0:s2 -> Node0x564f150;
	Node0x564cac0:s3 -> Node0x564f220;
	Node0x564f0a0 [shape=record, style = filled, fillcolor = skyblue, label="{sw.bb:                                            \l  %arrayidx14 = getelementptr inbounds %struct.my_fdct_controller,\l... %struct.my_fdct_controller* %1, i64 0, i32 2, i64 %.pre214\l  %12 = load i32*, i32** %arrayidx14, align 8, !tbaa !17\l  %cmp15 = icmp eq i32* %12, null\l  br i1 %cmp15, label %if.then16, label %vector.ph, !prof !27\l|{<s0>T|<s1>F}}"];
	Node0x564f0a0:s0 -> Node0x564f710;
	Node0x564f0a0:s1 -> Node0x564f7f0;
	Node0x564f710 [shape=record, style = filled, fillcolor = blue, label="{if.then16:                                        \l  %13 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !28\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %13, i64 0, i32 0\l  %14 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !29\l  %call = tail call i8* %14(%struct.jpeg_common_struct* nonnull %4, i32 1, i64\l... 256) #3\l  %15 = bitcast i32** %arrayidx14 to i8**\l  store i8* %call, i8** %15, align 8, !tbaa !17\l  %16 = bitcast i8* %call to i32*\l  br label %vector.ph\l}"];
	Node0x564f710 -> Node0x564f7f0;
	Node0x564f7f0 [shape=record, style = filled, fillcolor = skyblue, label="{vector.ph:                                        \l  %17 = phi i32* [ %16, %if.then16 ], [ %12, %sw.bb ]\l  br label %vector.body\l}"];
	Node0x564f7f0 -> Node0x5650cd0;
	Node0x5650cd0 [shape=record, style = filled, fillcolor = skyblue, label="{vector.body:                                      \l  %18 = bitcast %struct.JQUANT_TBL* %10 to \<4 x i16\>*\l  %wide.load = load \<4 x i16\>, \<4 x i16\>* %18, align 2, !tbaa !31\l  %19 = zext \<4 x i16\> %wide.load to \<4 x i32\>\l  %20 = shl nuw nsw \<4 x i32\> %19, \<i32 3, i32 3, i32 3, i32 3\>\l  %21 = bitcast i32* %17 to \<4 x i32\>*\l  store \<4 x i32\> %20, \<4 x i32\>* %21, align 4, !tbaa !23\l  %22 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 4\l  %23 = bitcast i16* %22 to \<4 x i16\>*\l  %wide.load.1 = load \<4 x i16\>, \<4 x i16\>* %23, align 2, !tbaa !31\l  %24 = zext \<4 x i16\> %wide.load.1 to \<4 x i32\>\l  %25 = shl nuw nsw \<4 x i32\> %24, \<i32 3, i32 3, i32 3, i32 3\>\l  %26 = getelementptr inbounds i32, i32* %17, i64 4\l  %27 = bitcast i32* %26 to \<4 x i32\>*\l  store \<4 x i32\> %25, \<4 x i32\>* %27, align 4, !tbaa !23\l  %28 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 8\l  %29 = bitcast i16* %28 to \<4 x i16\>*\l  %wide.load.2 = load \<4 x i16\>, \<4 x i16\>* %29, align 2, !tbaa !31\l  %30 = zext \<4 x i16\> %wide.load.2 to \<4 x i32\>\l  %31 = shl nuw nsw \<4 x i32\> %30, \<i32 3, i32 3, i32 3, i32 3\>\l  %32 = getelementptr inbounds i32, i32* %17, i64 8\l  %33 = bitcast i32* %32 to \<4 x i32\>*\l  store \<4 x i32\> %31, \<4 x i32\>* %33, align 4, !tbaa !23\l  %34 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 12\l  %35 = bitcast i16* %34 to \<4 x i16\>*\l  %wide.load.3 = load \<4 x i16\>, \<4 x i16\>* %35, align 2, !tbaa !31\l  %36 = zext \<4 x i16\> %wide.load.3 to \<4 x i32\>\l  %37 = shl nuw nsw \<4 x i32\> %36, \<i32 3, i32 3, i32 3, i32 3\>\l  %38 = getelementptr inbounds i32, i32* %17, i64 12\l  %39 = bitcast i32* %38 to \<4 x i32\>*\l  store \<4 x i32\> %37, \<4 x i32\>* %39, align 4, !tbaa !23\l  %40 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 16\l  %41 = bitcast i16* %40 to \<4 x i16\>*\l  %wide.load.4 = load \<4 x i16\>, \<4 x i16\>* %41, align 2, !tbaa !31\l  %42 = zext \<4 x i16\> %wide.load.4 to \<4 x i32\>\l  %43 = shl nuw nsw \<4 x i32\> %42, \<i32 3, i32 3, i32 3, i32 3\>\l  %44 = getelementptr inbounds i32, i32* %17, i64 16\l  %45 = bitcast i32* %44 to \<4 x i32\>*\l  store \<4 x i32\> %43, \<4 x i32\>* %45, align 4, !tbaa !23\l  %46 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 20\l  %47 = bitcast i16* %46 to \<4 x i16\>*\l  %wide.load.5 = load \<4 x i16\>, \<4 x i16\>* %47, align 2, !tbaa !31\l  %48 = zext \<4 x i16\> %wide.load.5 to \<4 x i32\>\l  %49 = shl nuw nsw \<4 x i32\> %48, \<i32 3, i32 3, i32 3, i32 3\>\l  %50 = getelementptr inbounds i32, i32* %17, i64 20\l  %51 = bitcast i32* %50 to \<4 x i32\>*\l  store \<4 x i32\> %49, \<4 x i32\>* %51, align 4, !tbaa !23\l  %52 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 24\l  %53 = bitcast i16* %52 to \<4 x i16\>*\l  %wide.load.6 = load \<4 x i16\>, \<4 x i16\>* %53, align 2, !tbaa !31\l  %54 = zext \<4 x i16\> %wide.load.6 to \<4 x i32\>\l  %55 = shl nuw nsw \<4 x i32\> %54, \<i32 3, i32 3, i32 3, i32 3\>\l  %56 = getelementptr inbounds i32, i32* %17, i64 24\l  %57 = bitcast i32* %56 to \<4 x i32\>*\l  store \<4 x i32\> %55, \<4 x i32\>* %57, align 4, !tbaa !23\l  %58 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 28\l  %59 = bitcast i16* %58 to \<4 x i16\>*\l  %wide.load.7 = load \<4 x i16\>, \<4 x i16\>* %59, align 2, !tbaa !31\l  %60 = zext \<4 x i16\> %wide.load.7 to \<4 x i32\>\l  %61 = shl nuw nsw \<4 x i32\> %60, \<i32 3, i32 3, i32 3, i32 3\>\l  %62 = getelementptr inbounds i32, i32* %17, i64 28\l  %63 = bitcast i32* %62 to \<4 x i32\>*\l  store \<4 x i32\> %61, \<4 x i32\>* %63, align 4, !tbaa !23\l  %64 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 32\l  %65 = bitcast i16* %64 to \<4 x i16\>*\l  %wide.load.8 = load \<4 x i16\>, \<4 x i16\>* %65, align 2, !tbaa !31\l  %66 = zext \<4 x i16\> %wide.load.8 to \<4 x i32\>\l  %67 = shl nuw nsw \<4 x i32\> %66, \<i32 3, i32 3, i32 3, i32 3\>\l  %68 = getelementptr inbounds i32, i32* %17, i64 32\l  %69 = bitcast i32* %68 to \<4 x i32\>*\l  store \<4 x i32\> %67, \<4 x i32\>* %69, align 4, !tbaa !23\l  %70 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 36\l  %71 = bitcast i16* %70 to \<4 x i16\>*\l  %wide.load.9 = load \<4 x i16\>, \<4 x i16\>* %71, align 2, !tbaa !31\l  %72 = zext \<4 x i16\> %wide.load.9 to \<4 x i32\>\l  %73 = shl nuw nsw \<4 x i32\> %72, \<i32 3, i32 3, i32 3, i32 3\>\l  %74 = getelementptr inbounds i32, i32* %17, i64 36\l  %75 = bitcast i32* %74 to \<4 x i32\>*\l  store \<4 x i32\> %73, \<4 x i32\>* %75, align 4, !tbaa !23\l  %76 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 40\l  %77 = bitcast i16* %76 to \<4 x i16\>*\l  %wide.load.10 = load \<4 x i16\>, \<4 x i16\>* %77, align 2, !tbaa !31\l  %78 = zext \<4 x i16\> %wide.load.10 to \<4 x i32\>\l  %79 = shl nuw nsw \<4 x i32\> %78, \<i32 3, i32 3, i32 3, i32 3\>\l  %80 = getelementptr inbounds i32, i32* %17, i64 40\l  %81 = bitcast i32* %80 to \<4 x i32\>*\l  store \<4 x i32\> %79, \<4 x i32\>* %81, align 4, !tbaa !23\l  %82 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 44\l  %83 = bitcast i16* %82 to \<4 x i16\>*\l  %wide.load.11 = load \<4 x i16\>, \<4 x i16\>* %83, align 2, !tbaa !31\l  %84 = zext \<4 x i16\> %wide.load.11 to \<4 x i32\>\l  %85 = shl nuw nsw \<4 x i32\> %84, \<i32 3, i32 3, i32 3, i32 3\>\l  %86 = getelementptr inbounds i32, i32* %17, i64 44\l  %87 = bitcast i32* %86 to \<4 x i32\>*\l  store \<4 x i32\> %85, \<4 x i32\>* %87, align 4, !tbaa !23\l  %88 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 48\l  %89 = bitcast i16* %88 to \<4 x i16\>*\l  %wide.load.12 = load \<4 x i16\>, \<4 x i16\>* %89, align 2, !tbaa !31\l  %90 = zext \<4 x i16\> %wide.load.12 to \<4 x i32\>\l  %91 = shl nuw nsw \<4 x i32\> %90, \<i32 3, i32 3, i32 3, i32 3\>\l  %92 = getelementptr inbounds i32, i32* %17, i64 48\l  %93 = bitcast i32* %92 to \<4 x i32\>*\l  store \<4 x i32\> %91, \<4 x i32\>* %93, align 4, !tbaa !23\l  %94 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 52\l  %95 = bitcast i16* %94 to \<4 x i16\>*\l  %wide.load.13 = load \<4 x i16\>, \<4 x i16\>* %95, align 2, !tbaa !31\l  %96 = zext \<4 x i16\> %wide.load.13 to \<4 x i32\>\l  %97 = shl nuw nsw \<4 x i32\> %96, \<i32 3, i32 3, i32 3, i32 3\>\l  %98 = getelementptr inbounds i32, i32* %17, i64 52\l  %99 = bitcast i32* %98 to \<4 x i32\>*\l  store \<4 x i32\> %97, \<4 x i32\>* %99, align 4, !tbaa !23\l  %100 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 56\l  %101 = bitcast i16* %100 to \<4 x i16\>*\l  %wide.load.14 = load \<4 x i16\>, \<4 x i16\>* %101, align 2, !tbaa !31\l  %102 = zext \<4 x i16\> %wide.load.14 to \<4 x i32\>\l  %103 = shl nuw nsw \<4 x i32\> %102, \<i32 3, i32 3, i32 3, i32 3\>\l  %104 = getelementptr inbounds i32, i32* %17, i64 56\l  %105 = bitcast i32* %104 to \<4 x i32\>*\l  store \<4 x i32\> %103, \<4 x i32\>* %105, align 4, !tbaa !23\l  %106 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 60\l  %107 = bitcast i16* %106 to \<4 x i16\>*\l  %wide.load.15 = load \<4 x i16\>, \<4 x i16\>* %107, align 2, !tbaa !31\l  %108 = zext \<4 x i16\> %wide.load.15 to \<4 x i32\>\l  %109 = shl nuw nsw \<4 x i32\> %108, \<i32 3, i32 3, i32 3, i32 3\>\l  %110 = getelementptr inbounds i32, i32* %17, i64 60\l  %111 = bitcast i32* %110 to \<4 x i32\>*\l  store \<4 x i32\> %109, \<4 x i32\>* %111, align 4, !tbaa !23\l  br label %for.inc114\l}"];
	Node0x5650cd0 -> Node0x563fff0;
	Node0x564f150 [shape=record, style = filled, fillcolor = blue, label="{sw.bb31:                                          \l  %arrayidx34 = getelementptr inbounds %struct.my_fdct_controller,\l... %struct.my_fdct_controller* %1, i64 0, i32 2, i64 %.pre214\l  %112 = load i32*, i32** %arrayidx34, align 8, !tbaa !17\l  %cmp35 = icmp eq i32* %112, null\l  br i1 %cmp35, label %if.then37, label %vector.ph223\l|{<s0>T|<s1>F}}"];
	Node0x564f150:s0 -> Node0x5657830;
	Node0x564f150:s1 -> Node0x5657910;
	Node0x5657830 [shape=record, style = filled, fillcolor = blue, label="{if.then37:                                        \l  %113 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !28\l  %alloc_small39 = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %113, i64 0, i32 0\l  %114 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small39, align 8, !tbaa !29\l  %call40 = tail call i8* %114(%struct.jpeg_common_struct* nonnull %4, i32 1,\l... i64 256) #3\l  %115 = bitcast i32** %arrayidx34 to i8**\l  store i8* %call40, i8** %115, align 8, !tbaa !17\l  %116 = bitcast i8* %call40 to i32*\l  br label %vector.ph223\l}"];
	Node0x5657830 -> Node0x5657910;
	Node0x5657910 [shape=record, style = filled, fillcolor = blue, label="{vector.ph223:                                     \l  %117 = phi i32* [ %116, %if.then37 ], [ %112, %sw.bb31 ]\l  br label %vector.body219\l}"];
	Node0x5657910 -> Node0x564b200;
	Node0x564b200 [shape=record, style = filled, fillcolor = skyblue, label="{vector.body219:                                   \l  %index224 = phi i64 [ 0, %vector.ph223 ], [ %index.next225.1,\l... %vector.body219 ]\l  %118 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 %index224\l  %119 = bitcast i16* %118 to \<2 x i16\>*\l  %wide.load231 = load \<2 x i16\>, \<2 x i16\>* %119, align 2, !tbaa !31\l  %120 = zext \<2 x i16\> %wide.load231 to \<2 x i64\>\l  %121 = getelementptr inbounds [64 x i16], [64 x i16]*\l... @start_pass_fdctmgr.aanscales, i64 0, i64 %index224\l  %122 = bitcast i16* %121 to \<2 x i16\>*\l  %wide.load232 = load \<2 x i16\>, \<2 x i16\>* %122, align 8, !tbaa !31\l  %123 = sext \<2 x i16\> %wide.load232 to \<2 x i64\>\l  %124 = mul nsw \<2 x i64\> %123, %120\l  %125 = add nsw \<2 x i64\> %124, \<i64 1024, i64 1024\>\l  %126 = lshr \<2 x i64\> %125, \<i64 11, i64 11\>\l  %127 = trunc \<2 x i64\> %126 to \<2 x i32\>\l  %128 = getelementptr inbounds i32, i32* %117, i64 %index224\l  %129 = bitcast i32* %128 to \<2 x i32\>*\l  store \<2 x i32\> %127, \<2 x i32\>* %129, align 4, !tbaa !23\l  %index.next225 = or i64 %index224, 2\l  %130 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10,\l... i64 0, i32 0, i64 %index.next225\l  %131 = bitcast i16* %130 to \<2 x i16\>*\l  %wide.load231.1 = load \<2 x i16\>, \<2 x i16\>* %131, align 2, !tbaa !31\l  %132 = zext \<2 x i16\> %wide.load231.1 to \<2 x i64\>\l  %133 = getelementptr inbounds [64 x i16], [64 x i16]*\l... @start_pass_fdctmgr.aanscales, i64 0, i64 %index.next225\l  %134 = bitcast i16* %133 to \<2 x i16\>*\l  %wide.load232.1 = load \<2 x i16\>, \<2 x i16\>* %134, align 4, !tbaa !31\l  %135 = sext \<2 x i16\> %wide.load232.1 to \<2 x i64\>\l  %136 = mul nsw \<2 x i64\> %135, %132\l  %137 = add nsw \<2 x i64\> %136, \<i64 1024, i64 1024\>\l  %138 = lshr \<2 x i64\> %137, \<i64 11, i64 11\>\l  %139 = trunc \<2 x i64\> %138 to \<2 x i32\>\l  %140 = getelementptr inbounds i32, i32* %117, i64 %index.next225\l  %141 = bitcast i32* %140 to \<2 x i32\>*\l  store \<2 x i32\> %139, \<2 x i32\>* %141, align 4, !tbaa !23\l  %index.next225.1 = add nsw i64 %index224, 4\l  %142 = icmp eq i64 %index.next225.1, 64\l  br i1 %142, label %for.inc114.loopexit233, label %vector.body219, !llvm.loop\l... !32\l|{<s0>T|<s1>F}}"];
	Node0x564b200:s0 -> Node0x5659fd0;
	Node0x564b200:s1 -> Node0x564b200;
	Node0x564f220 [shape=record, style = filled, fillcolor = blue, label="{sw.bb65:                                          \l  %arrayidx67 = getelementptr inbounds %struct.my_fdct_controller,\l... %struct.my_fdct_controller* %1, i64 0, i32 4, i64 %.pre214\l  %143 = load float*, float** %arrayidx67, align 8, !tbaa !17\l  %cmp68 = icmp eq float* %143, null\l  br i1 %cmp68, label %if.then70, label %if.end77\l|{<s0>T|<s1>F}}"];
	Node0x564f220:s0 -> Node0x565a380;
	Node0x564f220:s1 -> Node0x565a460;
	Node0x565a380 [shape=record, style = filled, fillcolor = blue, label="{if.then70:                                        \l  %144 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !28\l  %alloc_small72 = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %144, i64 0, i32 0\l  %145 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small72, align 8, !tbaa !29\l  %call73 = tail call i8* %145(%struct.jpeg_common_struct* nonnull %4, i32 1,\l... i64 256) #3\l  %146 = bitcast float** %arrayidx67 to i8**\l  store i8* %call73, i8** %146, align 8, !tbaa !17\l  %147 = bitcast i8* %call73 to float*\l  br label %if.end77\l}"];
	Node0x565a380 -> Node0x565a460;
	Node0x565a460 [shape=record, style = filled, fillcolor = blue, label="{if.end77:                                         \l  %148 = phi float* [ %147, %if.then70 ], [ %143, %sw.bb65 ]\l  br label %for.cond85.preheader\l}"];
	Node0x565a460 -> Node0x565aa90;
	Node0x565aa90 [shape=record, style = filled, fillcolor = skyblue, label="{for.cond85.preheader:                             \l  %indvars.iv204 = phi i64 [ 0, %if.end77 ], [ %indvars.iv.next205,\l... %for.cond85.preheader ]\l  %indvars.iv202 = phi i64 [ 0, %if.end77 ], [ %indvars.iv.next203,\l... %for.cond85.preheader ]\l  %arrayidx94 = getelementptr inbounds [8 x double], [8 x double]*\l... @start_pass_fdctmgr.aanscalefactor, i64 0, i64 %indvars.iv202\l  %149 = load double, double* %arrayidx94, align 8\l  %arrayidx91 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL*\l... %10, i64 0, i32 0, i64 %indvars.iv204\l  %150 = load i16, i16* %arrayidx91, align 2, !tbaa !31\l  %conv92 = uitofp i16 %150 to double\l  %arrayidx102 = getelementptr inbounds float, float* %148, i64 %indvars.iv204\l  %indvars.iv.next201 = or i64 %indvars.iv204, 1\l  %arrayidx91.1 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %10, i64 0, i32 0, i64 %indvars.iv.next201\l  %151 = load i16, i16* %arrayidx91.1, align 2, !tbaa !31\l  %conv92.1 = uitofp i16 %151 to double\l  %mul95.1 = fmul double %conv92.1, %149\l  %indvars.iv.next201.1 = add nsw i64 %indvars.iv.next201, 1\l  %arrayidx91.2 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %10, i64 0, i32 0, i64 %indvars.iv.next201.1\l  %152 = load i16, i16* %arrayidx91.2, align 2, !tbaa !31\l  %conv92.2 = uitofp i16 %152 to double\l  %mul95.2 = fmul double %conv92.2, %149\l  %indvars.iv.next201.2 = or i64 %indvars.iv204, 3\l  %arrayidx91.3 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %10, i64 0, i32 0, i64 %indvars.iv.next201.2\l  %153 = load i16, i16* %arrayidx91.3, align 2, !tbaa !31\l  %conv92.3 = uitofp i16 %153 to double\l  %mul95.3 = fmul double %conv92.3, %149\l  %154 = insertelement \<4 x double\> undef, double %conv92, i32 0\l  %155 = insertelement \<4 x double\> %154, double %mul95.1, i32 1\l  %156 = insertelement \<4 x double\> %155, double %mul95.2, i32 2\l  %157 = insertelement \<4 x double\> %156, double %mul95.3, i32 3\l  %158 = insertelement \<4 x double\> undef, double %149, i32 0\l  %159 = insertelement \<4 x double\> %158, double 0x3FF63150B14861EF, i32 1\l  %160 = insertelement \<4 x double\> %159, double 0x3FF4E7AE914D6FCA, i32 2\l  %161 = insertelement \<4 x double\> %160, double 0x3FF2D062EF6C11AA, i32 3\l  %162 = fmul \<4 x double\> %157, %161\l  %163 = fmul \<4 x double\> %162, \<double 8.000000e+00, double 8.000000e+00,\l... double 8.000000e+00, double 8.000000e+00\>\l  %164 = fdiv \<4 x double\> \<double 1.000000e+00, double 1.000000e+00, double\l... 1.000000e+00, double 1.000000e+00\>, %163\l  %165 = fptrunc \<4 x double\> %164 to \<4 x float\>\l  %166 = bitcast float* %arrayidx102 to \<4 x float\>*\l  store \<4 x float\> %165, \<4 x float\>* %166, align 4, !tbaa !35\l  %indvars.iv.next201.3 = add nsw i64 %indvars.iv.next201.2, 1\l  %arrayidx91.4 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %10, i64 0, i32 0, i64 %indvars.iv.next201.3\l  %167 = load i16, i16* %arrayidx91.4, align 2, !tbaa !31\l  %conv92.4 = uitofp i16 %167 to double\l  %arrayidx102.4 = getelementptr inbounds float, float* %148, i64\l... %indvars.iv.next201.3\l  %indvars.iv.next201.4 = add nsw i64 %indvars.iv.next201.2, 2\l  %arrayidx91.5 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %10, i64 0, i32 0, i64 %indvars.iv.next201.4\l  %168 = load i16, i16* %arrayidx91.5, align 2, !tbaa !31\l  %conv92.5 = uitofp i16 %168 to double\l  %mul95.5 = fmul double %conv92.5, %149\l  %indvars.iv.next201.5 = add nsw i64 %indvars.iv.next201.2, 3\l  %arrayidx91.6 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %10, i64 0, i32 0, i64 %indvars.iv.next201.5\l  %169 = load i16, i16* %arrayidx91.6, align 2, !tbaa !31\l  %conv92.6 = uitofp i16 %169 to double\l  %mul95.6 = fmul double %conv92.6, %149\l  %indvars.iv.next201.6 = or i64 %indvars.iv204, 7\l  %arrayidx91.7 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %10, i64 0, i32 0, i64 %indvars.iv.next201.6\l  %170 = load i16, i16* %arrayidx91.7, align 2, !tbaa !31\l  %conv92.7 = uitofp i16 %170 to double\l  %mul95.7 = fmul double %conv92.7, %149\l  %171 = insertelement \<4 x double\> undef, double %conv92.4, i32 0\l  %172 = insertelement \<4 x double\> %171, double %mul95.5, i32 1\l  %173 = insertelement \<4 x double\> %172, double %mul95.6, i32 2\l  %174 = insertelement \<4 x double\> %173, double %mul95.7, i32 3\l  %175 = insertelement \<4 x double\> %158, double 0x3FE92469C0A7BF3B, i32 1\l  %176 = insertelement \<4 x double\> %175, double 5.411961e-01, i32 2\l  %177 = insertelement \<4 x double\> %176, double 0x3FD1A855DE72AB5D, i32 3\l  %178 = fmul \<4 x double\> %174, %177\l  %179 = fmul \<4 x double\> %178, \<double 8.000000e+00, double 8.000000e+00,\l... double 8.000000e+00, double 8.000000e+00\>\l  %180 = fdiv \<4 x double\> \<double 1.000000e+00, double 1.000000e+00, double\l... 1.000000e+00, double 1.000000e+00\>, %179\l  %181 = fptrunc \<4 x double\> %180 to \<4 x float\>\l  %182 = bitcast float* %arrayidx102.4 to \<4 x float\>*\l  store \<4 x float\> %181, \<4 x float\>* %182, align 4, !tbaa !35\l  %indvars.iv.next203 = add nuw nsw i64 %indvars.iv202, 1\l  %indvars.iv.next205 = add nuw nsw i64 %indvars.iv204, 8\l  %exitcond206 = icmp eq i64 %indvars.iv.next203, 8\l  br i1 %exitcond206, label %for.inc114.loopexit234, label\l... %for.cond85.preheader\l|{<s0>T|<s1>F}}"];
	Node0x565aa90:s0 -> Node0x5653490;
	Node0x565aa90:s1 -> Node0x565aa90;
	Node0x564efc0 [shape=record, style = filled, fillcolor = blue, label="{sw.default:                                       \l  %183 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !19\l  %msg_code111 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %183, i64 0, i32 5\l  store i32 47, i32* %msg_code111, align 8, !tbaa !20\l  %error_exit113 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %183, i64 0, i32 0\l  %184 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit113, align 8, !tbaa !24\l  tail call void %184(%struct.jpeg_common_struct* nonnull %4) #3\l  br label %for.inc114\l}"];
	Node0x564efc0 -> Node0x563fff0;
	Node0x5659fd0 [shape=record, style = filled, fillcolor = blue, label="{for.inc114.loopexit233:                           \l  br label %for.inc114\l}"];
	Node0x5659fd0 -> Node0x563fff0;
	Node0x5653490 [shape=record, style = filled, fillcolor = blue, label="{for.inc114.loopexit234:                           \l  br label %for.inc114\l}"];
	Node0x5653490 -> Node0x563fff0;
	Node0x563fff0 [shape=record, style = filled, fillcolor = skyblue, label="{for.inc114:                                       \l  %inc115 = add nuw nsw i32 %ci.0197, 1\l  %incdec.ptr = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0196, i64 1\l  %185 = load i32, i32* %num_components, align 4, !tbaa !11\l  %cmp = icmp slt i32 %inc115, %185\l  br i1 %cmp, label %for.body, label %for.end116.loopexit, !prof !12\l|{<s0>T|<s1>F}}"];
	Node0x563fff0:s0 -> Node0x564ad90;
	Node0x563fff0:s1 -> Node0x5654060;
	Node0x5654060 [shape=record, style = filled, fillcolor = blue, label="{for.end116.loopexit:                              \l  br label %for.end116\l}"];
	Node0x5654060 -> Node0x564a5e0;
	Node0x564a5e0 [shape=record, style = filled, fillcolor = skyblue, label="{for.end116:                                       \l  ret void\l}"];
}
