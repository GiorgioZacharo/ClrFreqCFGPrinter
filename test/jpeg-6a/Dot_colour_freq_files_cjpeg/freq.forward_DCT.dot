digraph "CFG for 'forward_DCT' function" {
	label="CFG for 'forward_DCT' function";

	Node0x56591b0 [shape=record, style = filled, fillcolor = cyan, label="{entry:\l  %workspace = alloca [64 x i32], align 16\l  %fdct1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 58\l  %0 = bitcast %struct.jpeg_forward_dct** %fdct1 to\l... %struct.my_fdct_controller**\l  %1 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %0,\l... align 8, !tbaa !3\l  %do_dct2 = getelementptr inbounds %struct.my_fdct_controller,\l... %struct.my_fdct_controller* %1, i64 0, i32 1\l  %2 = load void (i32*)*, void (i32*)** %do_dct2, align 8, !tbaa !11\l  %quant_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr, i64 0, i32 4\l  %3 = load i32, i32* %quant_tbl_no, align 8, !tbaa !14\l  %idxprom = sext i32 %3 to i64\l  %arrayidx = getelementptr inbounds %struct.my_fdct_controller,\l... %struct.my_fdct_controller* %1, i64 0, i32 2, i64 %idxprom\l  %4 = load i32*, i32** %arrayidx, align 8, !tbaa !16\l  %5 = bitcast [64 x i32]* %workspace to i8*\l  call void @llvm.lifetime.start(i64 256, i8* %5) #3\l  %idx.ext = zext i32 %start_row to i64\l  %add.ptr = getelementptr inbounds i8*, i8** %sample_data, i64 %idx.ext\l  %cmp132 = icmp eq i32 %num_blocks, 0\l  br i1 %cmp132, label %for.end78, label %for.body.lr.ph, !prof !17\l|{<s0>T|<s1>F}}"];
	Node0x56591b0:s0 -> Node0x5654980;
	Node0x56591b0:s1 -> Node0x5654a30;
	Node0x5654a30 [shape=record, style = filled, fillcolor = cyan, label="{for.body.lr.ph:                                   \l  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %workspace, i64\l... 0, i64 0\l  br label %for.body\l}"];
	Node0x5654a30 -> Node0x5665c60;
	Node0x5665c60 [shape=record, style = filled, fillcolor = green, label="{for.body:                                         \l  %indvars.iv138 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next139,\l... %for.end74 ]\l  %start_col.addr.0134 = phi i32 [ %start_col, %for.body.lr.ph ], [ %add77,\l... %for.end74 ]\l  %idx.ext9 = zext i32 %start_col.addr.0134 to i64\l  br label %for.body6\l}"];
	Node0x5665c60 -> Node0x56543e0;
	Node0x56543e0 [shape=record, style = filled, fillcolor = yellow, label="{for.body6:                                        \l  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body6 ]\l  %workspaceptr.0129 = phi i32* [ %arraydecay, %for.body ], [ %incdec.ptr39,\l... %for.body6 ]\l  %arrayidx8 = getelementptr inbounds i8*, i8** %add.ptr, i64 %indvars.iv\l  %6 = load i8*, i8** %arrayidx8, align 8, !tbaa !16\l  %add.ptr10 = getelementptr inbounds i8, i8* %6, i64 %idx.ext9\l  %incdec.ptr = getelementptr inbounds i8, i8* %add.ptr10, i64 1\l  %7 = load i8, i8* %add.ptr10, align 1, !tbaa !18\l  %conv = zext i8 %7 to i32\l  %sub = add nsw i32 %conv, -128\l  %incdec.ptr11 = getelementptr inbounds i32, i32* %workspaceptr.0129, i64 1\l  store i32 %sub, i32* %workspaceptr.0129, align 4, !tbaa !19\l  %incdec.ptr12 = getelementptr inbounds i8, i8* %incdec.ptr, i64 1\l  %8 = load i8, i8* %incdec.ptr, align 1, !tbaa !18\l  %conv13 = zext i8 %8 to i32\l  %sub14 = add nsw i32 %conv13, -128\l  %incdec.ptr15 = getelementptr inbounds i32, i32* %workspaceptr.0129, i64 2\l  store i32 %sub14, i32* %incdec.ptr11, align 4, !tbaa !19\l  %incdec.ptr16 = getelementptr inbounds i8, i8* %incdec.ptr12, i64 1\l  %9 = load i8, i8* %incdec.ptr12, align 1, !tbaa !18\l  %conv17 = zext i8 %9 to i32\l  %sub18 = add nsw i32 %conv17, -128\l  %incdec.ptr19 = getelementptr inbounds i32, i32* %workspaceptr.0129, i64 3\l  store i32 %sub18, i32* %incdec.ptr15, align 4, !tbaa !19\l  %incdec.ptr20 = getelementptr inbounds i8, i8* %incdec.ptr16, i64 1\l  %10 = load i8, i8* %incdec.ptr16, align 1, !tbaa !18\l  %conv21 = zext i8 %10 to i32\l  %sub22 = add nsw i32 %conv21, -128\l  %incdec.ptr23 = getelementptr inbounds i32, i32* %workspaceptr.0129, i64 4\l  store i32 %sub22, i32* %incdec.ptr19, align 4, !tbaa !19\l  %incdec.ptr24 = getelementptr inbounds i8, i8* %incdec.ptr20, i64 1\l  %11 = load i8, i8* %incdec.ptr20, align 1, !tbaa !18\l  %conv25 = zext i8 %11 to i32\l  %sub26 = add nsw i32 %conv25, -128\l  %incdec.ptr27 = getelementptr inbounds i32, i32* %workspaceptr.0129, i64 5\l  store i32 %sub26, i32* %incdec.ptr23, align 4, !tbaa !19\l  %incdec.ptr28 = getelementptr inbounds i8, i8* %incdec.ptr24, i64 1\l  %12 = load i8, i8* %incdec.ptr24, align 1, !tbaa !18\l  %conv29 = zext i8 %12 to i32\l  %sub30 = add nsw i32 %conv29, -128\l  %incdec.ptr31 = getelementptr inbounds i32, i32* %workspaceptr.0129, i64 6\l  store i32 %sub30, i32* %incdec.ptr27, align 4, !tbaa !19\l  %incdec.ptr32 = getelementptr inbounds i8, i8* %incdec.ptr28, i64 1\l  %13 = load i8, i8* %incdec.ptr28, align 1, !tbaa !18\l  %conv33 = zext i8 %13 to i32\l  %sub34 = add nsw i32 %conv33, -128\l  %incdec.ptr35 = getelementptr inbounds i32, i32* %workspaceptr.0129, i64 7\l  store i32 %sub34, i32* %incdec.ptr31, align 4, !tbaa !19\l  %14 = load i8, i8* %incdec.ptr32, align 1, !tbaa !18\l  %conv37 = zext i8 %14 to i32\l  %sub38 = add nsw i32 %conv37, -128\l  %incdec.ptr39 = getelementptr inbounds i32, i32* %workspaceptr.0129, i64 8\l  store i32 %sub38, i32* %incdec.ptr35, align 4, !tbaa !19\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond = icmp eq i64 %indvars.iv.next, 8\l  br i1 %exitcond, label %for.end, label %for.body6, !prof !20\l|{<s0>T|<s1>F}}"];
	Node0x56543e0:s0 -> Node0x566a100;
	Node0x56543e0:s1 -> Node0x56543e0;
	Node0x566a100 [shape=record, style = filled, fillcolor = green, label="{for.end:                                          \l  call void %2(i32* %arraydecay) #3\l  br label %for.body47\l}"];
	Node0x566a100 -> Node0x566a3d0;
	Node0x566a3d0 [shape=record, style = filled, fillcolor = orange, label="{for.body47:                                       \l  %indvars.iv135 = phi i64 [ 0, %for.end ], [ %indvars.iv.next136, %if.end68 ]\l  %arrayidx49 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv135\l  %15 = load i32, i32* %arrayidx49, align 4, !tbaa !19\l  %arrayidx51 = getelementptr inbounds [64 x i32], [64 x i32]* %workspace, i64\l... 0, i64 %indvars.iv135\l  %16 = load i32, i32* %arrayidx51, align 4, !tbaa !19\l  %cmp52 = icmp slt i32 %16, 0\l  %shr = ashr i32 %15, 1\l  br i1 %cmp52, label %if.then, label %if.else59, !prof !21\l|{<s0>T|<s1>F}}"];
	Node0x566a3d0:s0 -> Node0x566aa70;
	Node0x566a3d0:s1 -> Node0x566ab40;
	Node0x566aa70 [shape=record, style = filled, fillcolor = orange, label="{if.then:                                          \l  %add = sub i32 %shr, %16\l  %cmp55 = icmp slt i32 %add, %15\l  br i1 %cmp55, label %if.end, label %if.then57, !prof !22\l|{<s0>T|<s1>F}}"];
	Node0x566aa70:s0 -> Node0x566af20;
	Node0x566aa70:s1 -> Node0x566af90;
	Node0x566af90 [shape=record, style = filled, fillcolor = yellow, label="{if.then57:                                        \l  %div = sdiv i32 %add, %15\l  br label %if.end\l}"];
	Node0x566af90 -> Node0x566af20;
	Node0x566af20 [shape=record, style = filled, fillcolor = orange, label="{if.end:                                           \l  %temp.0 = phi i32 [ %div, %if.then57 ], [ 0, %if.then ]\l  %sub58 = sub nsw i32 0, %temp.0\l  br label %if.end68\l}"];
	Node0x566af20 -> Node0x566a4c0;
	Node0x566ab40 [shape=record, style = filled, fillcolor = orange, label="{if.else59:                                        \l  %add61 = add nsw i32 %16, %shr\l  %cmp62 = icmp slt i32 %add61, %15\l  br i1 %cmp62, label %if.end68, label %if.then64, !prof !23\l|{<s0>T|<s1>F}}"];
	Node0x566ab40:s0 -> Node0x566a4c0;
	Node0x566ab40:s1 -> Node0x566b580;
	Node0x566b580 [shape=record, style = filled, fillcolor = yellow, label="{if.then64:                                        \l  %div65 = sdiv i32 %add61, %15\l  br label %if.end68\l}"];
	Node0x566b580 -> Node0x566a4c0;
	Node0x566a4c0 [shape=record, style = filled, fillcolor = orange, label="{if.end68:                                         \l  %temp.1 = phi i32 [ %sub58, %if.end ], [ %div65, %if.then64 ], [ 0,\l... %if.else59 ]\l  %conv69 = trunc i32 %temp.1 to i16\l  %arrayidx71 = getelementptr inbounds [64 x i16], [64 x i16]* %coef_blocks,\l... i64 %indvars.iv138, i64 %indvars.iv135\l  store i16 %conv69, i16* %arrayidx71, align 2, !tbaa !24\l  %indvars.iv.next136 = add nuw nsw i64 %indvars.iv135, 1\l  %exitcond137 = icmp eq i64 %indvars.iv.next136, 64\l  br i1 %exitcond137, label %for.end74, label %for.body47, !prof !25\l|{<s0>T|<s1>F}}"];
	Node0x566a4c0:s0 -> Node0x5665de0;
	Node0x566a4c0:s1 -> Node0x566a3d0;
	Node0x5665de0 [shape=record, style = filled, fillcolor = green, label="{for.end74:                                        \l  %indvars.iv.next139 = add nuw nsw i64 %indvars.iv138, 1\l  %add77 = add i32 %start_col.addr.0134, 8\l  %lftr.wideiv = trunc i64 %indvars.iv.next139 to i32\l  %exitcond140 = icmp eq i32 %lftr.wideiv, %num_blocks\l  br i1 %exitcond140, label %for.end78.loopexit, label %for.body, !prof !17\l|{<s0>T|<s1>F}}"];
	Node0x5665de0:s0 -> Node0x566bf90;
	Node0x5665de0:s1 -> Node0x5665c60;
	Node0x566bf90 [shape=record, style = filled, fillcolor = cyan, label="{for.end78.loopexit:                               \l  br label %for.end78\l}"];
	Node0x566bf90 -> Node0x5654980;
	Node0x5654980 [shape=record, style = filled, fillcolor = cyan, label="{for.end78:                                        \l  call void @llvm.lifetime.end(i64 256, i8* %5) #3\l  ret void\l}"];
}
