digraph "CFG for 'copy_pixel_rows' function" {
	label="CFG for 'copy_pixel_rows' function";

	Node0x580e970 [shape=record,label="{entry:\l  %iobuffer = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 1\l  %0 = bitcast %struct.djpeg_dest_struct* %iobuffer to i8**\l  %1 = load i8*, i8** %0, align 8, !tbaa !2\l  %samples_per_row = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 1, i32 3\l  %2 = bitcast %struct._IO_FILE** %samples_per_row to i32*\l  %3 = load i32, i32* %2, align 8, !tbaa !10\l  %cmp15 = icmp eq i32 %3, 0\l  br i1 %cmp15, label %for.end, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x580e970:s0 -> Node0x580f8e0;
	Node0x580e970:s1 -> Node0x580f9c0;
	Node0x580f9c0 [shape=record,label="{for.body.preheader:                               \l  %buffer = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 0, i32 4\l  %4 = load i8**, i8*** %buffer, align 8, !tbaa !11\l  %5 = load i8*, i8** %4, align 8, !tbaa !12\l  %6 = add i32 %3, -1\l  %7 = zext i32 %6 to i64\l  %8 = add nuw nsw i64 %7, 1\l  %min.iters.check = icmp ult i64 %8, 32\l  br i1 %min.iters.check, label %for.body.preheader152, label\l... %min.iters.checked\l|{<s0>T|<s1>F}}"];
	Node0x580f9c0:s0 -> Node0x580fc30;
	Node0x580f9c0:s1 -> Node0x5807b60;
	Node0x5807b60 [shape=record,label="{min.iters.checked:                                \l  %n.vec = and i64 %8, 8589934560\l  %cmp.zero = icmp eq i64 %n.vec, 0\l  br i1 %cmp.zero, label %for.body.preheader152, label %vector.memcheck\l|{<s0>T|<s1>F}}"];
	Node0x5807b60:s0 -> Node0x580fc30;
	Node0x5807b60:s1 -> Node0x5807f80;
	Node0x5807f80 [shape=record,label="{vector.memcheck:                                  \l  %9 = add i32 %3, -1\l  %10 = zext i32 %9 to i64\l  %scevgep = getelementptr i8, i8* %1, i64 %10\l  %scevgep19 = getelementptr i8, i8* %5, i64 %10\l  %bound0 = icmp ule i8* %1, %scevgep19\l  %bound1 = icmp ule i8* %5, %scevgep\l  %memcheck.conflict = and i1 %bound0, %bound1\l  %cast.crd = trunc i64 %n.vec to i32\l  %ind.end = sub i32 %3, %cast.crd\l  %ind.end21 = getelementptr i8, i8* %5, i64 %n.vec\l  %ind.end23 = getelementptr i8, i8* %1, i64 %n.vec\l  br i1 %memcheck.conflict, label %for.body.preheader152, label\l... %vector.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5807f80:s0 -> Node0x580fc30;
	Node0x5807f80:s1 -> Node0x5807c10;
	Node0x5807c10 [shape=record,label="{vector.body.preheader:                            \l  %11 = add i32 %3, -1\l  %12 = zext i32 %11 to i64\l  %13 = add nuw nsw i64 %12, 1\l  %14 = and i64 %13, 8589934560\l  %15 = add nsw i64 %14, -32\l  %16 = lshr exact i64 %15, 5\l  %17 = add nuw nsw i64 %16, 1\l  %xtraiter153 = and i64 %17, 3\l  %lcmp.mod154 = icmp eq i64 %xtraiter153, 0\l  br i1 %lcmp.mod154, label %vector.body.preheader.split, label\l... %vector.body.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5807c10:s0 -> Node0x5811dd0;
	Node0x5807c10:s1 -> Node0x5811ef0;
	Node0x5811ef0 [shape=record,label="{vector.body.prol.preheader:                       \l  br label %vector.body.prol\l}"];
	Node0x5811ef0 -> Node0x58120a0;
	Node0x58120a0 [shape=record,label="{vector.body.prol:                                 \l  %index.prol = phi i64 [ %index.next.prol, %vector.body.prol ], [ 0,\l... %vector.body.prol.preheader ]\l  %prol.iter155 = phi i64 [ %prol.iter155.sub, %vector.body.prol ], [\l... %xtraiter153, %vector.body.prol.preheader ]\l  %next.gep.prol = getelementptr i8, i8* %5, i64 %index.prol\l  %next.gep87.prol = getelementptr i8, i8* %1, i64 %index.prol\l  %18 = bitcast i8* %next.gep.prol to \<16 x i8\>*\l  %wide.load.prol = load \<16 x i8\>, \<16 x i8\>* %18, align 1, !tbaa !13\l  %19 = getelementptr i8, i8* %next.gep.prol, i64 16\l  %20 = bitcast i8* %19 to \<16 x i8\>*\l  %wide.load151.prol = load \<16 x i8\>, \<16 x i8\>* %20, align 1, !tbaa !13\l  %21 = bitcast i8* %next.gep87.prol to \<16 x i8\>*\l  store \<16 x i8\> %wide.load.prol, \<16 x i8\>* %21, align 1, !tbaa !13\l  %22 = getelementptr i8, i8* %next.gep87.prol, i64 16\l  %23 = bitcast i8* %22 to \<16 x i8\>*\l  store \<16 x i8\> %wide.load151.prol, \<16 x i8\>* %23, align 1, !tbaa !13\l  %index.next.prol = add i64 %index.prol, 32\l  %prol.iter155.sub = add i64 %prol.iter155, -1\l  %prol.iter155.cmp = icmp eq i64 %prol.iter155.sub, 0\l  br i1 %prol.iter155.cmp, label %vector.body.preheader.split.loopexit, label\l... %vector.body.prol, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x58120a0:s0 -> Node0x58139c0;
	Node0x58120a0:s1 -> Node0x58120a0;
	Node0x58139c0 [shape=record,label="{vector.body.preheader.split.loopexit:             \l  %index.next.prol.lcssa = phi i64 [ %index.next.prol, %vector.body.prol ]\l  br label %vector.body.preheader.split\l}"];
	Node0x58139c0 -> Node0x5811dd0;
	Node0x5811dd0 [shape=record,label="{vector.body.preheader.split:                      \l  %index.unr = phi i64 [ 0, %vector.body.preheader ], [\l... %index.next.prol.lcssa, %vector.body.preheader.split.loopexit ]\l  %24 = icmp ult i64 %15, 96\l  br i1 %24, label %middle.block, label %vector.body.preheader.split.split\l|{<s0>T|<s1>F}}"];
	Node0x5811dd0:s0 -> Node0x5813d40;
	Node0x5811dd0:s1 -> Node0x5813df0;
	Node0x5813df0 [shape=record,label="{vector.body.preheader.split.split:                \l  br label %vector.body\l}"];
	Node0x5813df0 -> Node0x5813fa0;
	Node0x5813fa0 [shape=record,label="{vector.body:                                      \l  %index = phi i64 [ %index.unr, %vector.body.preheader.split.split ], [\l... %index.next.3, %vector.body ]\l  %next.gep = getelementptr i8, i8* %5, i64 %index\l  %next.gep87 = getelementptr i8, i8* %1, i64 %index\l  %25 = bitcast i8* %next.gep to \<16 x i8\>*\l  %wide.load = load \<16 x i8\>, \<16 x i8\>* %25, align 1, !tbaa !13\l  %26 = getelementptr i8, i8* %next.gep, i64 16\l  %27 = bitcast i8* %26 to \<16 x i8\>*\l  %wide.load151 = load \<16 x i8\>, \<16 x i8\>* %27, align 1, !tbaa !13\l  %28 = bitcast i8* %next.gep87 to \<16 x i8\>*\l  store \<16 x i8\> %wide.load, \<16 x i8\>* %28, align 1, !tbaa !13\l  %29 = getelementptr i8, i8* %next.gep87, i64 16\l  %30 = bitcast i8* %29 to \<16 x i8\>*\l  store \<16 x i8\> %wide.load151, \<16 x i8\>* %30, align 1, !tbaa !13\l  %index.next = add i64 %index, 32\l  %next.gep.1 = getelementptr i8, i8* %5, i64 %index.next\l  %next.gep87.1 = getelementptr i8, i8* %1, i64 %index.next\l  %31 = bitcast i8* %next.gep.1 to \<16 x i8\>*\l  %wide.load.1 = load \<16 x i8\>, \<16 x i8\>* %31, align 1, !tbaa !13\l  %32 = getelementptr i8, i8* %next.gep.1, i64 16\l  %33 = bitcast i8* %32 to \<16 x i8\>*\l  %wide.load151.1 = load \<16 x i8\>, \<16 x i8\>* %33, align 1, !tbaa !13\l  %34 = bitcast i8* %next.gep87.1 to \<16 x i8\>*\l  store \<16 x i8\> %wide.load.1, \<16 x i8\>* %34, align 1, !tbaa !13\l  %35 = getelementptr i8, i8* %next.gep87.1, i64 16\l  %36 = bitcast i8* %35 to \<16 x i8\>*\l  store \<16 x i8\> %wide.load151.1, \<16 x i8\>* %36, align 1, !tbaa !13\l  %index.next.1 = add i64 %index, 64\l  %next.gep.2 = getelementptr i8, i8* %5, i64 %index.next.1\l  %next.gep87.2 = getelementptr i8, i8* %1, i64 %index.next.1\l  %37 = bitcast i8* %next.gep.2 to \<16 x i8\>*\l  %wide.load.2 = load \<16 x i8\>, \<16 x i8\>* %37, align 1, !tbaa !13\l  %38 = getelementptr i8, i8* %next.gep.2, i64 16\l  %39 = bitcast i8* %38 to \<16 x i8\>*\l  %wide.load151.2 = load \<16 x i8\>, \<16 x i8\>* %39, align 1, !tbaa !13\l  %40 = bitcast i8* %next.gep87.2 to \<16 x i8\>*\l  store \<16 x i8\> %wide.load.2, \<16 x i8\>* %40, align 1, !tbaa !13\l  %41 = getelementptr i8, i8* %next.gep87.2, i64 16\l  %42 = bitcast i8* %41 to \<16 x i8\>*\l  store \<16 x i8\> %wide.load151.2, \<16 x i8\>* %42, align 1, !tbaa !13\l  %index.next.2 = add i64 %index, 96\l  %next.gep.3 = getelementptr i8, i8* %5, i64 %index.next.2\l  %next.gep87.3 = getelementptr i8, i8* %1, i64 %index.next.2\l  %43 = bitcast i8* %next.gep.3 to \<16 x i8\>*\l  %wide.load.3 = load \<16 x i8\>, \<16 x i8\>* %43, align 1, !tbaa !13\l  %44 = getelementptr i8, i8* %next.gep.3, i64 16\l  %45 = bitcast i8* %44 to \<16 x i8\>*\l  %wide.load151.3 = load \<16 x i8\>, \<16 x i8\>* %45, align 1, !tbaa !13\l  %46 = bitcast i8* %next.gep87.3 to \<16 x i8\>*\l  store \<16 x i8\> %wide.load.3, \<16 x i8\>* %46, align 1, !tbaa !13\l  %47 = getelementptr i8, i8* %next.gep87.3, i64 16\l  %48 = bitcast i8* %47 to \<16 x i8\>*\l  store \<16 x i8\> %wide.load151.3, \<16 x i8\>* %48, align 1, !tbaa !13\l  %index.next.3 = add i64 %index, 128\l  %49 = icmp eq i64 %index.next.3, %n.vec\l  br i1 %49, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5813fa0:s0 -> Node0x58171f0;
	Node0x5813fa0:s1 -> Node0x5813fa0;
	Node0x58171f0 [shape=record,label="{middle.block.unr-lcssa:                           \l  br label %middle.block\l}"];
	Node0x58171f0 -> Node0x5813d40;
	Node0x5813d40 [shape=record,label="{middle.block:                                     \l  %cmp.n = icmp eq i64 %8, %n.vec\l  br i1 %cmp.n, label %for.end.loopexit, label %for.body.preheader152\l|{<s0>T|<s1>F}}"];
	Node0x5813d40:s0 -> Node0x5817450;
	Node0x5813d40:s1 -> Node0x580fc30;
	Node0x580fc30 [shape=record,label="{for.body.preheader152:                            \l  %col.018.ph = phi i32 [ %3, %vector.memcheck ], [ %3, %min.iters.checked ],\l... [ %3, %for.body.preheader ], [ %ind.end, %middle.block ]\l  %ptr.017.ph = phi i8* [ %5, %vector.memcheck ], [ %5, %min.iters.checked ],\l... [ %5, %for.body.preheader ], [ %ind.end21, %middle.block ]\l  %bufferptr.016.ph = phi i8* [ %1, %vector.memcheck ], [ %1,\l... %min.iters.checked ], [ %1, %for.body.preheader ], [ %ind.end23,\l... %middle.block ]\l  %50 = add i32 %col.018.ph, -1\l  %xtraiter = and i32 %col.018.ph, 7\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %for.body.preheader152.split, label\l... %for.body.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x580fc30:s0 -> Node0x5817b00;
	Node0x580fc30:s1 -> Node0x5817c20;
	Node0x5817c20 [shape=record,label="{for.body.prol.preheader:                          \l  br label %for.body.prol\l}"];
	Node0x5817c20 -> Node0x5817d90;
	Node0x5817d90 [shape=record,label="{for.body.prol:                                    \l  %col.018.prol = phi i32 [ %dec.prol, %for.body.prol ], [ %col.018.ph,\l... %for.body.prol.preheader ]\l  %ptr.017.prol = phi i8* [ %incdec.ptr.prol, %for.body.prol ], [ %ptr.017.ph,\l... %for.body.prol.preheader ]\l  %bufferptr.016.prol = phi i8* [ %incdec.ptr2.prol, %for.body.prol ], [\l... %bufferptr.016.ph, %for.body.prol.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %for.body.prol ], [ %xtraiter,\l... %for.body.prol.preheader ]\l  %incdec.ptr.prol = getelementptr inbounds i8, i8* %ptr.017.prol, i64 1\l  %51 = load i8, i8* %ptr.017.prol, align 1, !tbaa !13\l  %incdec.ptr2.prol = getelementptr inbounds i8, i8* %bufferptr.016.prol, i64 1\l  store i8 %51, i8* %bufferptr.016.prol, align 1, !tbaa !13\l  %dec.prol = add i32 %col.018.prol, -1\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %for.body.preheader152.split.loopexit, label\l... %for.body.prol, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5817d90:s0 -> Node0x58187f0;
	Node0x5817d90:s1 -> Node0x5817d90;
	Node0x58187f0 [shape=record,label="{for.body.preheader152.split.loopexit:             \l  %dec.prol.lcssa = phi i32 [ %dec.prol, %for.body.prol ]\l  %incdec.ptr2.prol.lcssa = phi i8* [ %incdec.ptr2.prol, %for.body.prol ]\l  %incdec.ptr.prol.lcssa = phi i8* [ %incdec.ptr.prol, %for.body.prol ]\l  br label %for.body.preheader152.split\l}"];
	Node0x58187f0 -> Node0x5817b00;
	Node0x5817b00 [shape=record,label="{for.body.preheader152.split:                      \l  %col.018.unr = phi i32 [ %col.018.ph, %for.body.preheader152 ], [\l... %dec.prol.lcssa, %for.body.preheader152.split.loopexit ]\l  %ptr.017.unr = phi i8* [ %ptr.017.ph, %for.body.preheader152 ], [\l... %incdec.ptr.prol.lcssa, %for.body.preheader152.split.loopexit ]\l  %bufferptr.016.unr = phi i8* [ %bufferptr.016.ph, %for.body.preheader152 ],\l... [ %incdec.ptr2.prol.lcssa, %for.body.preheader152.split.loopexit ]\l  %52 = icmp ult i32 %50, 7\l  br i1 %52, label %for.end.loopexit.loopexit, label\l... %for.body.preheader152.split.split\l|{<s0>T|<s1>F}}"];
	Node0x5817b00:s0 -> Node0x5818da0;
	Node0x5817b00:s1 -> Node0x5818e80;
	Node0x5818e80 [shape=record,label="{for.body.preheader152.split.split:                \l  br label %for.body\l}"];
	Node0x5818e80 -> Node0x5819030;
	Node0x5819030 [shape=record,label="{for.body:                                         \l  %col.018 = phi i32 [ %col.018.unr, %for.body.preheader152.split.split ], [\l... %dec.7, %for.body ]\l  %ptr.017 = phi i8* [ %ptr.017.unr, %for.body.preheader152.split.split ], [\l... %incdec.ptr.7, %for.body ]\l  %bufferptr.016 = phi i8* [ %bufferptr.016.unr,\l... %for.body.preheader152.split.split ], [ %incdec.ptr2.7, %for.body ]\l  %incdec.ptr = getelementptr inbounds i8, i8* %ptr.017, i64 1\l  %53 = load i8, i8* %ptr.017, align 1, !tbaa !13\l  %incdec.ptr2 = getelementptr inbounds i8, i8* %bufferptr.016, i64 1\l  store i8 %53, i8* %bufferptr.016, align 1, !tbaa !13\l  %incdec.ptr.1 = getelementptr inbounds i8, i8* %ptr.017, i64 2\l  %54 = load i8, i8* %incdec.ptr, align 1, !tbaa !13\l  %incdec.ptr2.1 = getelementptr inbounds i8, i8* %bufferptr.016, i64 2\l  store i8 %54, i8* %incdec.ptr2, align 1, !tbaa !13\l  %incdec.ptr.2 = getelementptr inbounds i8, i8* %ptr.017, i64 3\l  %55 = load i8, i8* %incdec.ptr.1, align 1, !tbaa !13\l  %incdec.ptr2.2 = getelementptr inbounds i8, i8* %bufferptr.016, i64 3\l  store i8 %55, i8* %incdec.ptr2.1, align 1, !tbaa !13\l  %incdec.ptr.3 = getelementptr inbounds i8, i8* %ptr.017, i64 4\l  %56 = load i8, i8* %incdec.ptr.2, align 1, !tbaa !13\l  %incdec.ptr2.3 = getelementptr inbounds i8, i8* %bufferptr.016, i64 4\l  store i8 %56, i8* %incdec.ptr2.2, align 1, !tbaa !13\l  %incdec.ptr.4 = getelementptr inbounds i8, i8* %ptr.017, i64 5\l  %57 = load i8, i8* %incdec.ptr.3, align 1, !tbaa !13\l  %incdec.ptr2.4 = getelementptr inbounds i8, i8* %bufferptr.016, i64 5\l  store i8 %57, i8* %incdec.ptr2.3, align 1, !tbaa !13\l  %incdec.ptr.5 = getelementptr inbounds i8, i8* %ptr.017, i64 6\l  %58 = load i8, i8* %incdec.ptr.4, align 1, !tbaa !13\l  %incdec.ptr2.5 = getelementptr inbounds i8, i8* %bufferptr.016, i64 6\l  store i8 %58, i8* %incdec.ptr2.4, align 1, !tbaa !13\l  %incdec.ptr.6 = getelementptr inbounds i8, i8* %ptr.017, i64 7\l  %59 = load i8, i8* %incdec.ptr.5, align 1, !tbaa !13\l  %incdec.ptr2.6 = getelementptr inbounds i8, i8* %bufferptr.016, i64 7\l  store i8 %59, i8* %incdec.ptr2.5, align 1, !tbaa !13\l  %incdec.ptr.7 = getelementptr inbounds i8, i8* %ptr.017, i64 8\l  %60 = load i8, i8* %incdec.ptr.6, align 1, !tbaa !13\l  %incdec.ptr2.7 = getelementptr inbounds i8, i8* %bufferptr.016, i64 8\l  store i8 %60, i8* %incdec.ptr2.6, align 1, !tbaa !13\l  %dec.7 = add i32 %col.018, -8\l  %cmp.7 = icmp eq i32 %dec.7, 0\l  br i1 %cmp.7, label %for.end.loopexit.loopexit.unr-lcssa, label %for.body,\l... !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5819030:s0 -> Node0x5810fd0;
	Node0x5819030:s1 -> Node0x5819030;
	Node0x5810fd0 [shape=record,label="{for.end.loopexit.loopexit.unr-lcssa:              \l  br label %for.end.loopexit.loopexit\l}"];
	Node0x5810fd0 -> Node0x5818da0;
	Node0x5818da0 [shape=record,label="{for.end.loopexit.loopexit:                        \l  br label %for.end.loopexit\l}"];
	Node0x5818da0 -> Node0x5817450;
	Node0x5817450 [shape=record,label="{for.end.loopexit:                                 \l  %.pre = load i8*, i8** %0, align 8, !tbaa !2\l  br label %for.end\l}"];
	Node0x5817450 -> Node0x580f8e0;
	Node0x580f8e0 [shape=record,label="{for.end:                                          \l  %61 = phi i8* [ %.pre, %for.end.loopexit ], [ %1, %entry ]\l  %buffer_width = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 1, i32 2\l  %62 = bitcast void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*)** %buffer_width to i64*\l  %63 = load i64, i64* %62, align 8, !tbaa !21\l  %output_file = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 0, i32 3\l  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %output_file, align 8,\l... !tbaa !22\l  %call = tail call i64 @fwrite(i8* %61, i64 1, i64 %63, %struct._IO_FILE* %64)\l  ret void\l}"];
}
