digraph "CFG for 'jpeg_fill_bit_buffer' function" {
	label="CFG for 'jpeg_fill_bit_buffer' function";

	Node0x4e6bcc0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %next_input_byte1 = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %state, i64 0, i32 0\l  %0 = load i8*, i8** %next_input_byte1, align 8, !tbaa !2\l  %bytes_in_buffer2 = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %state, i64 0, i32 1\l  %1 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !9\l  %cmp113 = icmp slt i32 %bits_left, 25\l  br i1 %cmp113, label %while.body.lr.ph, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x4e6bcc0:s0 -> Node0x4e60540;
	Node0x4e6bcc0:s1 -> Node0x4e605c0;
	Node0x4e60540 [shape=record, style = filled, fillcolor = blue, label="{while.body.lr.ph:                                 \l  %unread_marker = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %state, i64 0, i32 2\l  %cinfo = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %state, i64 0, i32 5\l  %printed_eod_ptr = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %state, i64 0, i32 6\l  br label %while.body\l}"];
	Node0x4e60540 -> Node0x4e6bb80;
	Node0x4e6bb80 [shape=record, style = filled, fillcolor = blue, label="{while.body:                                       \l  %bytes_in_buffer.0119 = phi i64 [ %1, %while.body.lr.ph ], [\l... %bytes_in_buffer.5, %if.end59 ]\l  %next_input_byte.0118 = phi i8* [ %0, %while.body.lr.ph ], [\l... %next_input_byte.5, %if.end59 ]\l  %bits_left.addr.0116 = phi i32 [ %bits_left, %while.body.lr.ph ], [ %add,\l... %if.end59 ]\l  %get_buffer.addr.0114 = phi i64 [ %get_buffer, %while.body.lr.ph ], [ %or,\l... %if.end59 ]\l  %2 = load i32, i32* %unread_marker, align 8, !tbaa !10\l  %cmp3 = icmp eq i32 %2, 0\l  br i1 %cmp3, label %if.end, label %no_more_data\l|{<s0>T|<s1>F}}"];
	Node0x4e6bb80:s0 -> Node0x4e76160;
	Node0x4e6bb80:s1 -> Node0x4e76230;
	Node0x4e76160 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %cmp4 = icmp eq i64 %bytes_in_buffer.0119, 0\l  br i1 %cmp4, label %if.then5, label %if.end15\l|{<s0>T|<s1>F}}"];
	Node0x4e76160:s0 -> Node0x4e76440;
	Node0x4e76160:s1 -> Node0x4e76490;
	Node0x4e76440 [shape=record, style = filled, fillcolor = blue, label="{if.then5:                                         \l  %3 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct**\l... %cinfo, align 8, !tbaa !11\l  %src = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %3, i64 0, i32 5\l  %4 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align 8,\l... !tbaa !12\l  %fill_input_buffer = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %4, i64 0, i32 3\l  %5 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer, align 8, !tbaa !16\l  %call = tail call i32 %5(%struct.jpeg_decompress_struct* %3) #2\l  %tobool = icmp eq i32 %call, 0\l  br i1 %tobool, label %cleanup.loopexit139, label %if.end8\l|{<s0>T|<s1>F}}"];
	Node0x4e76440:s0 -> Node0x4e76f90;
	Node0x4e76440:s1 -> Node0x4e77090;
	Node0x4e77090 [shape=record, style = filled, fillcolor = blue, label="{if.end8:                                          \l  %6 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct**\l... %cinfo, align 8, !tbaa !11\l  %src10 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %6, i64 0, i32 5\l  %7 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src10, align\l... 8, !tbaa !12\l  %next_input_byte11 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %7, i64 0, i32 0\l  %8 = load i8*, i8** %next_input_byte11, align 8, !tbaa !18\l  %bytes_in_buffer14 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %7, i64 0, i32 1\l  %9 = load i64, i64* %bytes_in_buffer14, align 8, !tbaa !19\l  br label %if.end15\l}"];
	Node0x4e77090 -> Node0x4e76490;
	Node0x4e76490 [shape=record, style = filled, fillcolor = blue, label="{if.end15:                                         \l  %next_input_byte.1 = phi i8* [ %8, %if.end8 ], [ %next_input_byte.0118,\l... %if.end ]\l  %bytes_in_buffer.1 = phi i64 [ %9, %if.end8 ], [ %bytes_in_buffer.0119,\l... %if.end ]\l  %dec = add i64 %bytes_in_buffer.1, -1\l  %incdec.ptr = getelementptr inbounds i8, i8* %next_input_byte.1, i64 1\l  %10 = load i8, i8* %next_input_byte.1, align 1, !tbaa !20\l  %conv = zext i8 %10 to i64\l  %cmp16 = icmp eq i8 %10, -1\l  br i1 %cmp16, label %do.body.preheader, label %if.end59\l|{<s0>T|<s1>F}}"];
	Node0x4e76490:s0 -> Node0x4e78920;
	Node0x4e76490:s1 -> Node0x4e75880;
	Node0x4e78920 [shape=record, style = filled, fillcolor = blue, label="{do.body.preheader:                                \l  br label %do.body\l}"];
	Node0x4e78920 -> Node0x4e78ab0;
	Node0x4e78ab0 [shape=record, style = filled, fillcolor = blue, label="{do.body:                                          \l  %next_input_byte.2 = phi i8* [ %incdec.ptr38, %if.end36 ], [ %incdec.ptr,\l... %do.body.preheader ]\l  %bytes_in_buffer.2 = phi i64 [ %dec37, %if.end36 ], [ %dec,\l... %do.body.preheader ]\l  %cmp19 = icmp eq i64 %bytes_in_buffer.2, 0\l  br i1 %cmp19, label %if.then21, label %if.end36\l|{<s0>T|<s1>F}}"];
	Node0x4e78ab0:s0 -> Node0x4e78fd0;
	Node0x4e78ab0:s1 -> Node0x4e78ba0;
	Node0x4e78fd0 [shape=record, style = filled, fillcolor = blue, label="{if.then21:                                        \l  %11 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct**\l... %cinfo, align 8, !tbaa !11\l  %src23 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %11, i64 0, i32 5\l  %12 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src23, align\l... 8, !tbaa !12\l  %fill_input_buffer24 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %12, i64 0, i32 3\l  %13 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer24, align 8, !tbaa !16\l  %call26 = tail call i32 %13(%struct.jpeg_decompress_struct* %11) #2\l  %tobool27 = icmp eq i32 %call26, 0\l  br i1 %tobool27, label %cleanup.loopexit, label %if.end29\l|{<s0>T|<s1>F}}"];
	Node0x4e78fd0:s0 -> Node0x4e76770;
	Node0x4e78fd0:s1 -> Node0x4e79f90;
	Node0x4e79f90 [shape=record, style = filled, fillcolor = blue, label="{if.end29:                                         \l  %14 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct**\l... %cinfo, align 8, !tbaa !11\l  %src31 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %14, i64 0, i32 5\l  %15 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src31, align\l... 8, !tbaa !12\l  %next_input_byte32 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %15, i64 0, i32 0\l  %16 = load i8*, i8** %next_input_byte32, align 8, !tbaa !18\l  %bytes_in_buffer35 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %15, i64 0, i32 1\l  %17 = load i64, i64* %bytes_in_buffer35, align 8, !tbaa !19\l  br label %if.end36\l}"];
	Node0x4e79f90 -> Node0x4e78ba0;
	Node0x4e78ba0 [shape=record, style = filled, fillcolor = blue, label="{if.end36:                                         \l  %next_input_byte.3 = phi i8* [ %16, %if.end29 ], [ %next_input_byte.2,\l... %do.body ]\l  %bytes_in_buffer.3 = phi i64 [ %17, %if.end29 ], [ %bytes_in_buffer.2,\l... %do.body ]\l  %dec37 = add i64 %bytes_in_buffer.3, -1\l  %incdec.ptr38 = getelementptr inbounds i8, i8* %next_input_byte.3, i64 1\l  %18 = load i8, i8* %next_input_byte.3, align 1, !tbaa !20\l  switch i8 %18, label %if.else [\l    i8 -1, label %do.body\l    i8 0, label %if.end59.loopexit\l  ]\l|{<s0>def|<s1>-1|<s2>0}}"];
	Node0x4e78ba0:s0 -> Node0x4e7b3d0;
	Node0x4e78ba0:s1 -> Node0x4e78ab0;
	Node0x4e78ba0:s2 -> Node0x4e7b440;
	Node0x4e7b3d0 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %.lcssa = phi i8 [ %18, %if.end36 ]\l  %incdec.ptr38.lcssa = phi i8* [ %incdec.ptr38, %if.end36 ]\l  %dec37.lcssa = phi i64 [ %dec37, %if.end36 ]\l  %conv39 = zext i8 %.lcssa to i32\l  store i32 %conv39, i32* %unread_marker, align 8, !tbaa !10\l  br label %no_more_data\l}"];
	Node0x4e7b3d0 -> Node0x4e76230;
	Node0x4e76230 [shape=record, style = filled, fillcolor = blue, label="{no_more_data:                                     \l  %next_input_byte.4 = phi i8* [ %next_input_byte.0118, %while.body ], [\l... %incdec.ptr38.lcssa, %if.else ]\l  %bytes_in_buffer.4 = phi i64 [ %bytes_in_buffer.0119, %while.body ], [\l... %dec37.lcssa, %if.else ]\l  %cmp46 = icmp slt i32 %bits_left.addr.0116, %nbits\l  br i1 %cmp46, label %if.end49, label %while.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x4e76230:s0 -> Node0x4e7c180;
	Node0x4e76230:s1 -> Node0x4e7c260;
	Node0x4e7c180 [shape=record, style = filled, fillcolor = blue, label="{if.end49:                                         \l  %19 = load i32*, i32** %printed_eod_ptr, align 8, !tbaa !21\l  %20 = load i32, i32* %19, align 4, !tbaa !22\l  %tobool50 = icmp eq i32 %20, 0\l  br i1 %tobool50, label %if.then51, label %if.end59\l|{<s0>T|<s1>F}}"];
	Node0x4e7c180:s0 -> Node0x4e7c580;
	Node0x4e7c180:s1 -> Node0x4e75880;
	Node0x4e7c580 [shape=record, style = filled, fillcolor = blue, label="{if.then51:                                        \l  %21 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct**\l... %cinfo, align 8, !tbaa !11\l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %21, i64 0, i32 0\l  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !23\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %22, i64 0, i32 5\l  store i32 113, i32* %msg_code, align 8, !tbaa !24\l  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %22, i64 0, i32 1\l  %23 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !26\l  %24 = bitcast %struct.jpeg_decompress_struct* %21 to\l... %struct.jpeg_common_struct*\l  tail call void %23(%struct.jpeg_common_struct* %24, i32 -1) #2\l  %25 = load i32*, i32** %printed_eod_ptr, align 8, !tbaa !21\l  store i32 1, i32* %25, align 4, !tbaa !22\l  br label %if.end59\l}"];
	Node0x4e7c580 -> Node0x4e75880;
	Node0x4e7b440 [shape=record, style = filled, fillcolor = blue, label="{if.end59.loopexit:                                \l  %incdec.ptr38.lcssa144 = phi i8* [ %incdec.ptr38, %if.end36 ]\l  %dec37.lcssa143 = phi i64 [ %dec37, %if.end36 ]\l  br label %if.end59\l}"];
	Node0x4e7b440 -> Node0x4e75880;
	Node0x4e75880 [shape=record, style = filled, fillcolor = blue, label="{if.end59:                                         \l  %next_input_byte.5 = phi i8* [ %incdec.ptr, %if.end15 ], [\l... %next_input_byte.4, %if.end49 ], [ %next_input_byte.4, %if.then51 ], [\l... %incdec.ptr38.lcssa144, %if.end59.loopexit ]\l  %bytes_in_buffer.5 = phi i64 [ %dec, %if.end15 ], [ %bytes_in_buffer.4,\l... %if.end49 ], [ %bytes_in_buffer.4, %if.then51 ], [ %dec37.lcssa143,\l... %if.end59.loopexit ]\l  %c.0 = phi i64 [ %conv, %if.end15 ], [ 0, %if.end49 ], [ 0, %if.then51 ], [\l... 255, %if.end59.loopexit ]\l  %shl = shl i64 %get_buffer.addr.0114, 8\l  %or = or i64 %c.0, %shl\l  %add = add nsw i32 %bits_left.addr.0116, 8\l  %cmp = icmp slt i32 %add, 25\l  br i1 %cmp, label %while.body, label %while.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x4e75880:s0 -> Node0x4e6bb80;
	Node0x4e75880:s1 -> Node0x4e7c260;
	Node0x4e7c260 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit:                               \l  %bits_left.addr.0.lcssa.ph = phi i32 [ %bits_left.addr.0116, %no_more_data\l... ], [ %add, %if.end59 ]\l  %get_buffer.addr.0.lcssa.ph = phi i64 [ %get_buffer.addr.0114, %no_more_data\l... ], [ %or, %if.end59 ]\l  %next_input_byte.6.ph = phi i8* [ %next_input_byte.4, %no_more_data ], [\l... %next_input_byte.5, %if.end59 ]\l  %bytes_in_buffer.6.ph = phi i64 [ %bytes_in_buffer.4, %no_more_data ], [\l... %bytes_in_buffer.5, %if.end59 ]\l  br label %while.end\l}"];
	Node0x4e7c260 -> Node0x4e605c0;
	Node0x4e605c0 [shape=record, style = filled, fillcolor = blue, label="{while.end:                                        \l  %bits_left.addr.0.lcssa = phi i32 [ %bits_left, %entry ], [\l... %bits_left.addr.0.lcssa.ph, %while.end.loopexit ]\l  %get_buffer.addr.0.lcssa = phi i64 [ %get_buffer, %entry ], [\l... %get_buffer.addr.0.lcssa.ph, %while.end.loopexit ]\l  %next_input_byte.6 = phi i8* [ %0, %entry ], [ %next_input_byte.6.ph,\l... %while.end.loopexit ]\l  %bytes_in_buffer.6 = phi i64 [ %1, %entry ], [ %bytes_in_buffer.6.ph,\l... %while.end.loopexit ]\l  store i8* %next_input_byte.6, i8** %next_input_byte1, align 8, !tbaa !2\l  store i64 %bytes_in_buffer.6, i64* %bytes_in_buffer2, align 8, !tbaa !9\l  %get_buffer63 = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %state, i64 0, i32 3\l  store i64 %get_buffer.addr.0.lcssa, i64* %get_buffer63, align 8, !tbaa !27\l  %bits_left64 = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %state, i64 0, i32 4\l  store i32 %bits_left.addr.0.lcssa, i32* %bits_left64, align 8, !tbaa !28\l  br label %cleanup\l}"];
	Node0x4e605c0 -> Node0x4e80450;
	Node0x4e76770 [shape=record, style = filled, fillcolor = blue, label="{cleanup.loopexit:                                 \l  br label %cleanup\l}"];
	Node0x4e76770 -> Node0x4e80450;
	Node0x4e76f90 [shape=record, style = filled, fillcolor = blue, label="{cleanup.loopexit139:                              \l  br label %cleanup\l}"];
	Node0x4e76f90 -> Node0x4e80450;
	Node0x4e80450 [shape=record, style = filled, fillcolor = blue, label="{cleanup:                                          \l  %retval.0 = phi i32 [ 1, %while.end ], [ 0, %cleanup.loopexit ], [ 0,\l... %cleanup.loopexit139 ]\l  ret i32 %retval.0\l}"];
}
