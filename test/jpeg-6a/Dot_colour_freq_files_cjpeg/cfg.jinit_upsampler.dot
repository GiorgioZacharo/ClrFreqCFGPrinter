digraph "CFG for 'jinit_upsampler' function" {
	label="CFG for 'jinit_upsampler' function";

	Node0x5ca3250 [shape=record,label="{entry:\l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !2\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %0, i64 0, i32 0\l  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !10\l  %2 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %1(%struct.jpeg_common_struct* %2, i32 1, i64 256) #4\l  %upsample1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 81\l  %3 = bitcast %struct.jpeg_upsampler** %upsample1 to i8**\l  store i8* %call, i8** %3, align 8, !tbaa !13\l  %start_pass2 = bitcast i8* %call to void (%struct.jpeg_decompress_struct*)**\l  store void (%struct.jpeg_decompress_struct*)* @start_pass_upsample, void\l... (%struct.jpeg_decompress_struct*)** %start_pass2, align 8, !tbaa !14\l  %upsample4 = getelementptr inbounds i8, i8* %call, i64 8\l  %4 = bitcast i8* %upsample4 to void (%struct.jpeg_decompress_struct*, i8***,\l... i32*, i32, i8**, i32*, i32)**\l  store void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*,\l... i32)* @sep_upsample, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32,\l... i8**, i32*, i32)** %4, align 8, !tbaa !17\l  %need_context_rows = getelementptr inbounds i8, i8* %call, i64 16\l  %5 = bitcast i8* %need_context_rows to i32*\l  store i32 0, i32* %5, align 8, !tbaa !18\l  %CCIR601_sampling = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 56\l  %6 = load i32, i32* %CCIR601_sampling, align 8, !tbaa !19\l  %tobool = icmp eq i32 %6, 0\l  br i1 %tobool, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x5ca3250:s0 -> Node0x5ca9540;
	Node0x5ca3250:s1 -> Node0x5ca9610;
	Node0x5ca9610 [shape=record,label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %7 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !20\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %7, i64 0, i32 5\l  store i32 23, i32* %msg_code, align 8, !tbaa !21\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %7, i64 0, i32 0\l  %8 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !23\l  tail call void %8(%struct.jpeg_common_struct* %2) #4\l  br label %if.end\l}"];
	Node0x5ca9610 -> Node0x5ca9540;
	Node0x5ca9540 [shape=record,label="{if.end:                                           \l  %do_fancy_upsampling = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 17\l  %9 = load i32, i32* %do_fancy_upsampling, align 4, !tbaa !24\l  %tobool7 = icmp eq i32 %9, 0\l  br i1 %tobool7, label %land.end, label %land.rhs\l|{<s0>T|<s1>F}}"];
	Node0x5ca9540:s0 -> Node0x5caa400;
	Node0x5ca9540:s1 -> Node0x5caa4b0;
	Node0x5caa4b0 [shape=record,label="{land.rhs:                                         \l  %min_DCT_scaled_size = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 59\l  %10 = load i32, i32* %min_DCT_scaled_size, align 4, !tbaa !25\l  %cmp = icmp sgt i32 %10, 1\l  br label %land.end\l}"];
	Node0x5caa4b0 -> Node0x5caa400;
	Node0x5caa400 [shape=record,label="{land.end:                                         \l  %11 = phi i1 [ false, %if.end ], [ %cmp, %land.rhs ]\l  %num_components = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %12 = load i32, i32* %num_components, align 8, !tbaa !26\l  %cmp8193 = icmp sgt i32 %12, 0\l  br i1 %cmp8193, label %for.body.lr.ph, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5caa400:s0 -> Node0x5caad30;
	Node0x5caa400:s1 -> Node0x5ca96e0;
	Node0x5caad30 [shape=record,label="{for.body.lr.ph:                                   \l  %comp_info = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43\l  %13 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !27\l  %min_DCT_scaled_size9 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 59\l  %max_h_samp_factor = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 57\l  %max_v_samp_factor = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 58\l  %rowgroup_height = getelementptr inbounds i8, i8* %call, i64 192\l  %14 = bitcast i8* %rowgroup_height to [10 x i32]*\l  %methods = getelementptr inbounds i8, i8* %call, i64 104\l  %15 = bitcast i8* %methods to [10 x void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)*]*\l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %color_buf = getelementptr inbounds i8, i8* %call, i64 24\l  %16 = bitcast i8* %color_buf to [10 x i8**]*\l  %h_expand = getelementptr inbounds i8, i8* %call, i64 232\l  %v_expand = getelementptr inbounds i8, i8* %call, i64 242\l  %err81 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  br label %for.body\l}"];
	Node0x5caad30 -> Node0x5cabe80;
	Node0x5cabe80 [shape=record,label="{for.body:                                         \l  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]\l  %compptr.0194 = phi %struct.jpeg_component_info* [ %13, %for.body.lr.ph ], [\l... %incdec.ptr, %for.inc ]\l  %h_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0194, i64 0, i32 2\l  %17 = bitcast i32* %h_samp_factor to i64*\l  %18 = load i64, i64* %17, align 8\l  %19 = trunc i64 %18 to i32\l  %DCT_scaled_size = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0194, i64 0, i32 9\l  %20 = load i32, i32* %DCT_scaled_size, align 4, !tbaa !28\l  %mul = mul nsw i32 %20, %19\l  %21 = load i32, i32* %min_DCT_scaled_size9, align 4, !tbaa !25\l  %div = sdiv i32 %mul, %21\l  %22 = lshr i64 %18, 32\l  %23 = trunc i64 %22 to i32\l  %mul11 = mul nsw i32 %23, %20\l  %div13 = sdiv i32 %mul11, %21\l  %24 = load i32, i32* %max_h_samp_factor, align 4, !tbaa !30\l  %25 = load i32, i32* %max_v_samp_factor, align 8, !tbaa !31\l  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* %14, i64 0, i64\l... %indvars.iv\l  store i32 %div13, i32* %arrayidx, align 4, !tbaa !32\l  %component_needed = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0194, i64 0, i32 12\l  %26 = load i32, i32* %component_needed, align 8, !tbaa !33\l  %tobool14 = icmp eq i32 %26, 0\l  br i1 %tobool14, label %if.then15, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5cabe80:s0 -> Node0x5caafc0;
	Node0x5cabe80:s1 -> Node0x5cae360;
	Node0x5caafc0 [shape=record,label="{if.then15:                                        \l  %arrayidx17 = getelementptr inbounds [10 x void\l... (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i8**,\l... i8***)*], [10 x void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)*]* %15, i64 0, i64 %indvars.iv\l  store void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*,\l... i8**, i8***)* @noop_upsample, void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)** %arrayidx17, align 8, !tbaa !34\l  br label %for.inc\l}"];
	Node0x5caafc0 -> Node0x5cac000;
	Node0x5cae360 [shape=record,label="{if.else:                                          \l  %cmp18 = icmp eq i32 %div, %24\l  %cmp19 = icmp eq i32 %div13, %25\l  %or.cond = and i1 %cmp18, %cmp19\l  br i1 %or.cond, label %if.then20, label %if.else24\l|{<s0>T|<s1>F}}"];
	Node0x5cae360:s0 -> Node0x5caea70;
	Node0x5cae360:s1 -> Node0x5caeaf0;
	Node0x5caea70 [shape=record,label="{if.then20:                                        \l  %arrayidx23 = getelementptr inbounds [10 x void\l... (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i8**,\l... i8***)*], [10 x void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)*]* %15, i64 0, i64 %indvars.iv\l  store void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*,\l... i8**, i8***)* @fullsize_upsample, void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)** %arrayidx23, align 8, !tbaa !34\l  br label %for.inc\l}"];
	Node0x5caea70 -> Node0x5cac000;
	Node0x5caeaf0 [shape=record,label="{if.else24:                                        \l  %mul25 = shl nsw i32 %div, 1\l  %cmp26 = icmp eq i32 %mul25, %24\l  %or.cond186 = and i1 %cmp26, %cmp19\l  br i1 %or.cond186, label %if.then29, label %if.else42\l|{<s0>T|<s1>F}}"];
	Node0x5caeaf0:s0 -> Node0x5caf760;
	Node0x5caeaf0:s1 -> Node0x5caf7e0;
	Node0x5caf760 [shape=record,label="{if.then29:                                        \l  br i1 %11, label %land.lhs.true31, label %if.else37\l|{<s0>T|<s1>F}}"];
	Node0x5caf760:s0 -> Node0x5caf950;
	Node0x5caf760:s1 -> Node0x5caf9d0;
	Node0x5caf950 [shape=record,label="{land.lhs.true31:                                  \l  %downsampled_width = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0194, i64 0, i32 10\l  %27 = load i32, i32* %downsampled_width, align 8, !tbaa !35\l  %cmp32 = icmp ugt i32 %27, 2\l  br i1 %cmp32, label %if.then33, label %if.else37\l|{<s0>T|<s1>F}}"];
	Node0x5caf950:s0 -> Node0x5cafe80;
	Node0x5caf950:s1 -> Node0x5caf9d0;
	Node0x5cafe80 [shape=record,label="{if.then33:                                        \l  %arrayidx36 = getelementptr inbounds [10 x void\l... (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i8**,\l... i8***)*], [10 x void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)*]* %15, i64 0, i64 %indvars.iv\l  store void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*,\l... i8**, i8***)* @h2v1_fancy_upsample, void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)** %arrayidx36, align 8, !tbaa !34\l  br label %if.then91\l}"];
	Node0x5cafe80 -> Node0x5cb0250;
	Node0x5caf9d0 [shape=record,label="{if.else37:                                        \l  %arrayidx40 = getelementptr inbounds [10 x void\l... (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i8**,\l... i8***)*], [10 x void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)*]* %15, i64 0, i64 %indvars.iv\l  store void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*,\l... i8**, i8***)* @h2v1_upsample, void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)** %arrayidx40, align 8, !tbaa !34\l  br label %if.then91\l}"];
	Node0x5caf9d0 -> Node0x5cb0250;
	Node0x5caf7e0 [shape=record,label="{if.else42:                                        \l  %mul46 = shl nsw i32 %div13, 1\l  %cmp47 = icmp eq i32 %mul46, %25\l  %or.cond187 = and i1 %cmp26, %cmp47\l  br i1 %or.cond187, label %if.then48, label %if.else64\l|{<s0>T|<s1>F}}"];
	Node0x5caf7e0:s0 -> Node0x5cb0820;
	Node0x5caf7e0:s1 -> Node0x5cb08a0;
	Node0x5cb0820 [shape=record,label="{if.then48:                                        \l  br i1 %11, label %land.lhs.true50, label %if.else59\l|{<s0>T|<s1>F}}"];
	Node0x5cb0820:s0 -> Node0x5cb0a10;
	Node0x5cb0820:s1 -> Node0x5cb0a90;
	Node0x5cb0a10 [shape=record,label="{land.lhs.true50:                                  \l  %downsampled_width51 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0194, i64 0, i32 10\l  %28 = load i32, i32* %downsampled_width51, align 8, !tbaa !35\l  %cmp52 = icmp ugt i32 %28, 2\l  br i1 %cmp52, label %if.then53, label %if.else59\l|{<s0>T|<s1>F}}"];
	Node0x5cb0a10:s0 -> Node0x5cb13b0;
	Node0x5cb0a10:s1 -> Node0x5cb0a90;
	Node0x5cb13b0 [shape=record,label="{if.then53:                                        \l  %arrayidx56 = getelementptr inbounds [10 x void\l... (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i8**,\l... i8***)*], [10 x void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)*]* %15, i64 0, i64 %indvars.iv\l  store void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*,\l... i8**, i8***)* @h2v2_fancy_upsample, void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)** %arrayidx56, align 8, !tbaa !34\l  store i32 1, i32* %5, align 8, !tbaa !18\l  br label %if.then91\l}"];
	Node0x5cb13b0 -> Node0x5cb0250;
	Node0x5cb0a90 [shape=record,label="{if.else59:                                        \l  %arrayidx62 = getelementptr inbounds [10 x void\l... (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i8**,\l... i8***)*], [10 x void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)*]* %15, i64 0, i64 %indvars.iv\l  store void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*,\l... i8**, i8***)* @h2v2_upsample, void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)** %arrayidx62, align 8, !tbaa !34\l  br label %if.then91\l}"];
	Node0x5cb0a90 -> Node0x5cb0250;
	Node0x5cb08a0 [shape=record,label="{if.else64:                                        \l  %rem = srem i32 %24, %div\l  %cmp65 = icmp eq i32 %rem, 0\l  br i1 %cmp65, label %land.lhs.true66, label %if.else80\l|{<s0>T|<s1>F}}"];
	Node0x5cb08a0:s0 -> Node0x5cac740;
	Node0x5cb08a0:s1 -> Node0x5cac7c0;
	Node0x5cac740 [shape=record,label="{land.lhs.true66:                                  \l  %rem67 = srem i32 %25, %div13\l  %cmp68 = icmp eq i32 %rem67, 0\l  br i1 %cmp68, label %if.then69, label %if.else80\l|{<s0>T|<s1>F}}"];
	Node0x5cac740:s0 -> Node0x5caca70;
	Node0x5cac740:s1 -> Node0x5cac7c0;
	Node0x5caca70 [shape=record,label="{if.then69:                                        \l  %arrayidx72 = getelementptr inbounds [10 x void\l... (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i8**,\l... i8***)*], [10 x void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)*]* %15, i64 0, i64 %indvars.iv\l  store void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*,\l... i8**, i8***)* @int_upsample, void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i8**, i8***)** %arrayidx72, align 8, !tbaa !34\l  %div73 = sdiv i32 %24, %div\l  %conv = trunc i32 %div73 to i8\l  %arrayidx75 = getelementptr inbounds i8, i8* %h_expand, i64 %indvars.iv\l  store i8 %conv, i8* %arrayidx75, align 1, !tbaa !36\l  %div76 = sdiv i32 %25, %div13\l  %conv77 = trunc i32 %div76 to i8\l  %arrayidx79 = getelementptr inbounds i8, i8* %v_expand, i64 %indvars.iv\l  store i8 %conv77, i8* %arrayidx79, align 1, !tbaa !36\l  br label %if.then91\l}"];
	Node0x5caca70 -> Node0x5cb0250;
	Node0x5cac7c0 [shape=record,label="{if.else80:                                        \l  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err81, align\l... 8, !tbaa !20\l  %msg_code82 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %29, i64 0, i32 5\l  store i32 37, i32* %msg_code82, align 8, !tbaa !21\l  %error_exit84 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %29, i64 0, i32 0\l  %30 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit84, align 8, !tbaa !23\l  tail call void %30(%struct.jpeg_common_struct* nonnull %2) #4\l  br label %if.then91\l}"];
	Node0x5cac7c0 -> Node0x5cb0250;
	Node0x5cb0250 [shape=record,label="{if.then91:                                        \l  %31 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_sarray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %31, i64 0, i32 2\l  %32 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8**\l... (%struct.jpeg_common_struct*, i32, i32, i32)** %alloc_sarray, align 8, !tbaa\l... !37\l  %33 = load i32, i32* %output_width, align 8, !tbaa !38\l  %conv93 = zext i32 %33 to i64\l  %34 = load i32, i32* %max_h_samp_factor, align 4, !tbaa !30\l  %conv95 = sext i32 %34 to i64\l  %call96 = tail call i64 @jround_up(i64 %conv93, i64 %conv95) #4\l  %conv97 = trunc i64 %call96 to i32\l  %35 = load i32, i32* %max_v_samp_factor, align 8, !tbaa !31\l  %call99 = tail call i8** %32(%struct.jpeg_common_struct* nonnull %2, i32 1,\l... i32 %conv97, i32 %35) #4\l  %arrayidx101 = getelementptr inbounds [10 x i8**], [10 x i8**]* %16, i64 0,\l... i64 %indvars.iv\l  store i8** %call99, i8*** %arrayidx101, align 8, !tbaa !34\l  br label %for.inc\l}"];
	Node0x5cb0250 -> Node0x5cac000;
	Node0x5cac000 [shape=record,label="{for.inc:                                          \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %incdec.ptr = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0194, i64 1\l  %36 = load i32, i32* %num_components, align 8, !tbaa !26\l  %37 = sext i32 %36 to i64\l  %cmp8 = icmp slt i64 %indvars.iv.next, %37\l  br i1 %cmp8, label %for.body, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5cac000:s0 -> Node0x5cabe80;
	Node0x5cac000:s1 -> Node0x5cac070;
	Node0x5cac070 [shape=record,label="{for.end.loopexit:                                 \l  br label %for.end\l}"];
	Node0x5cac070 -> Node0x5ca96e0;
	Node0x5ca96e0 [shape=record,label="{for.end:                                          \l  ret void\l}"];
}
