digraph "CFG for 'decompress_smooth_data' function" {
	label="CFG for 'decompress_smooth_data' function";

	Node0x58850f0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %workspace = alloca [64 x i16], align 16\l  %coef1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 75\l  %0 = bitcast %struct.jpeg_d_coef_controller** %coef1 to\l... %struct.my_coef_controller**\l  %1 = load %struct.my_coef_controller*, %struct.my_coef_controller** %0,\l... align 8, !tbaa !2\l  %total_iMCU_rows = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 60\l  %2 = load i32, i32* %total_iMCU_rows, align 8, !tbaa !10\l  %sub = add i32 %2, -1\l  %3 = bitcast [64 x i16]* %workspace to i8*\l  call void @llvm.lifetime.start(i64 128, i8* %3) #5\l  %input_scan_number = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 34\l  %output_scan_number = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 36\l  %inputctl = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 77\l  %Ss = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 68\l  %input_iMCU_row = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 35\l  %output_iMCU_row = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 37\l  br label %while.cond\l}"];
	Node0x58850f0 -> Node0x5884fe0;
	Node0x5884fe0 [shape=record, style = filled, fillcolor = blue, label="{while.cond:                                       \l  %4 = load i32, i32* %input_scan_number, align 4, !tbaa !11\l  %5 = load i32, i32* %output_scan_number, align 4, !tbaa !12\l  %cmp = icmp sgt i32 %4, %5\l  br i1 %cmp, label %while.end, label %land.rhs\l|{<s0>T|<s1>F}}"];
	Node0x5884fe0:s0 -> Node0x5863b70;
	Node0x5884fe0:s1 -> Node0x5863c20;
	Node0x5863c20 [shape=record, style = filled, fillcolor = blue, label="{land.rhs:                                         \l  %6 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller**\l... %inputctl, align 8, !tbaa !13\l  %eoi_reached = getelementptr inbounds %struct.jpeg_input_controller,\l... %struct.jpeg_input_controller* %6, i64 0, i32 5\l  %7 = load i32, i32* %eoi_reached, align 4, !tbaa !14\l  %lnot = icmp eq i32 %7, 0\l  br i1 %lnot, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x5863c20:s0 -> Node0x588f6b0;
	Node0x5863c20:s1 -> Node0x5863b70;
	Node0x588f6b0 [shape=record, style = filled, fillcolor = blue, label="{while.body:                                       \l  %cmp4 = icmp eq i32 %4, %5\l  br i1 %cmp4, label %if.then, label %if.end8\l|{<s0>T|<s1>F}}"];
	Node0x588f6b0:s0 -> Node0x588f8c0;
	Node0x588f6b0:s1 -> Node0x588f930;
	Node0x588f8c0 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %8 = load i32, i32* %Ss, align 4, !tbaa !16\l  %cmp5 = icmp eq i32 %8, 0\l  %cond = zext i1 %cmp5 to i32\l  %9 = load i32, i32* %input_iMCU_row, align 8, !tbaa !17\l  %10 = load i32, i32* %output_iMCU_row, align 8, !tbaa !18\l  %add = add i32 %10, %cond\l  %not.cmp6 = icmp ugt i32 %9, %add\l  br i1 %not.cmp6, label %while.end, label %if.end8\l|{<s0>T|<s1>F}}"];
	Node0x588f8c0:s0 -> Node0x5863b70;
	Node0x588f8c0:s1 -> Node0x588f930;
	Node0x588f930 [shape=record, style = filled, fillcolor = blue, label="{if.end8:                                          \l  %consume_input = getelementptr inbounds %struct.jpeg_input_controller,\l... %struct.jpeg_input_controller* %6, i64 0, i32 0\l  %11 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %consume_input, align 8, !tbaa !19\l  %call = tail call i32 %11(%struct.jpeg_decompress_struct* nonnull %cinfo) #5\l  %cmp10 = icmp eq i32 %call, 0\l  br i1 %cmp10, label %cleanup407.loopexit, label %while.cond\l|{<s0>T|<s1>F}}"];
	Node0x588f930:s0 -> Node0x5890a20;
	Node0x588f930:s1 -> Node0x5884fe0;
	Node0x5863b70 [shape=record, style = filled, fillcolor = blue, label="{while.end:                                        \l  %num_components = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %12 = load i32, i32* %num_components, align 8, !tbaa !20\l  %cmp13665 = icmp sgt i32 %12, 0\l  br i1 %cmp13665, label %for.body.lr.ph, label %for.end399\l|{<s0>T|<s1>F}}"];
	Node0x5863b70:s0 -> Node0x5890d00;
	Node0x5863b70:s1 -> Node0x5890de0;
	Node0x5890d00 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  %comp_info = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43\l  %13 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !21\l  %mem38 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %14 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %coef_bits_latch = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 6\l  %idct = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 80\l  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %workspace, i64\l... 0, i64 0\l  %arrayidx336 = getelementptr inbounds [64 x i16], [64 x i16]* %workspace,\l... i64 0, i64 2\l  %arrayidx282 = getelementptr inbounds [64 x i16], [64 x i16]* %workspace,\l... i64 0, i64 9\l  %arrayidx228 = getelementptr inbounds [64 x i16], [64 x i16]* %workspace,\l... i64 0, i64 16\l  %arrayidx176 = getelementptr inbounds [64 x i16], [64 x i16]* %workspace,\l... i64 0, i64 8\l  %arrayidx126 = getelementptr inbounds [64 x i16], [64 x i16]* %workspace,\l... i64 0, i64 1\l  %15 = bitcast i16* %arrayidx176 to i32*\l  br label %for.body\l}"];
	Node0x5890d00 -> Node0x5891850;
	Node0x5891850 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %indvars.iv676 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next677,\l... %for.inc396 ]\l  %compptr.0666 = phi %struct.jpeg_component_info* [ %13, %for.body.lr.ph ], [\l... %incdec.ptr398, %for.inc396 ]\l  %component_needed = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0666, i64 0, i32 12\l  %16 = load i32, i32* %component_needed, align 8, !tbaa !22\l  %tobool14 = icmp eq i32 %16, 0\l  br i1 %tobool14, label %for.inc396, label %if.end16\l|{<s0>T|<s1>F}}"];
	Node0x5891850:s0 -> Node0x5891a50;
	Node0x5891850:s1 -> Node0x588fbc0;
	Node0x588fbc0 [shape=record, style = filled, fillcolor = blue, label="{if.end16:                                         \l  %17 = load i32, i32* %output_iMCU_row, align 8, !tbaa !18\l  %cmp18 = icmp ult i32 %17, %sub\l  %18 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0666, i64 0, i32 3\l  %19 = load i32, i32* %18, align 4\l  br i1 %cmp18, label %if.then19, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x588fbc0:s0 -> Node0x5892c50;
	Node0x588fbc0:s1 -> Node0x5892d00;
	Node0x5892c50 [shape=record, style = filled, fillcolor = blue, label="{if.then19:                                        \l  %mul = shl nsw i32 %19, 1\l  br label %if.end25\l}"];
	Node0x5892c50 -> Node0x5892f00;
	Node0x5892d00 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %height_in_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0666, i64 0, i32 8\l  %20 = load i32, i32* %height_in_blocks, align 8, !tbaa !24\l  %rem = urem i32 %20, %19\l  %cmp21 = icmp eq i32 %rem, 0\l  %.rem = select i1 %cmp21, i32 %19, i32 %rem\l  br label %if.end25\l}"];
	Node0x5892d00 -> Node0x5892f00;
	Node0x5892f00 [shape=record, style = filled, fillcolor = blue, label="{if.end25:                                         \l  %last_row.0 = phi i32 [ 0, %if.then19 ], [ 1, %if.else ]\l  %access_rows.0 = phi i32 [ %mul, %if.then19 ], [ %.rem, %if.else ]\l  %block_rows.1 = phi i32 [ %19, %if.then19 ], [ %.rem, %if.else ]\l  %cmp27 = icmp eq i32 %17, 0\l  br i1 %cmp27, label %if.else37, label %if.then28\l|{<s0>T|<s1>F}}"];
	Node0x5892f00:s0 -> Node0x58935e0;
	Node0x5892f00:s1 -> Node0x58936c0;
	Node0x58936c0 [shape=record, style = filled, fillcolor = blue, label="{if.then28:                                        \l  %add30 = add nsw i32 %19, %access_rows.0\l  %21 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem38, align\l... 8, !tbaa !25\l  %access_virt_barray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %21, i64 0, i32 8\l  %22 = load [64 x i16]** (%struct.jpeg_common_struct*,\l... %struct.jvirt_barray_control*, i32, i32, i32)*, [64 x i16]**\l... (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)**\l... %access_virt_barray, align 8, !tbaa !26\l  %arrayidx = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 5, i64 %indvars.iv676\l  %23 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control**\l... %arrayidx, align 8, !tbaa !29\l  %sub32 = add i32 %17, -1\l  %mul34 = mul i32 %19, %sub32\l  %call35 = call [64 x i16]** %22(%struct.jpeg_common_struct* nonnull %14,\l... %struct.jvirt_barray_control* %23, i32 %mul34, i32 %add30, i32 0) #5\l  %24 = load i32, i32* %18, align 4, !tbaa !30\l  %idx.ext = sext i32 %24 to i64\l  %add.ptr = getelementptr inbounds [64 x i16]*, [64 x i16]** %call35, i64\l... %idx.ext\l  br label %if.end44\l}"];
	Node0x58936c0 -> Node0x5894000;
	Node0x58935e0 [shape=record, style = filled, fillcolor = blue, label="{if.else37:                                        \l  %25 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem38, align\l... 8, !tbaa !25\l  %access_virt_barray39 = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %25, i64 0, i32 8\l  %26 = load [64 x i16]** (%struct.jpeg_common_struct*,\l... %struct.jvirt_barray_control*, i32, i32, i32)*, [64 x i16]**\l... (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)**\l... %access_virt_barray39, align 8, !tbaa !26\l  %arrayidx42 = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 5, i64 %indvars.iv676\l  %27 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control**\l... %arrayidx42, align 8, !tbaa !29\l  %call43 = call [64 x i16]** %26(%struct.jpeg_common_struct* nonnull %14,\l... %struct.jvirt_barray_control* %27, i32 0, i32 %access_rows.0, i32 0) #5\l  br label %if.end44\l}"];
	Node0x58935e0 -> Node0x5894000;
	Node0x5894000 [shape=record, style = filled, fillcolor = blue, label="{if.end44:                                         \l  %first_row.0 = phi i32 [ 0, %if.then28 ], [ 1, %if.else37 ]\l  %buffer.0 = phi [64 x i16]** [ %add.ptr, %if.then28 ], [ %call43, %if.else37\l... ]\l  %28 = load i32*, i32** %coef_bits_latch, align 8, !tbaa !31\l  %29 = mul nsw i64 %indvars.iv676, 6\l  %add.ptr47 = getelementptr inbounds i32, i32* %28, i64 %29\l  %quant_table = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0666, i64 0, i32 19\l  %30 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %quant_table, align 8,\l... !tbaa !34\l  %31 = bitcast %struct.JQUANT_TBL* %30 to i32*\l  %32 = load i32, i32* %31, align 4\l  %33 = zext i32 %32 to i64\l  %conv = and i64 %33, 65535\l  %34 = lshr i32 %32, 16\l  %35 = zext i32 %34 to i64\l  %arrayidx53 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL*\l... %30, i64 0, i32 0, i64 8\l  %36 = bitcast i16* %arrayidx53 to i32*\l  %37 = load i32, i32* %36, align 4\l  %38 = zext i32 %37 to i64\l  %conv54 = and i64 %38, 65535\l  %arrayidx56 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL*\l... %30, i64 0, i32 0, i64 16\l  %39 = load i16, i16* %arrayidx56, align 4, !tbaa !35\l  %conv57 = zext i16 %39 to i64\l  %40 = lshr i32 %37, 16\l  %41 = zext i32 %40 to i64\l  %arrayidx62 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL*\l... %30, i64 0, i32 0, i64 2\l  %42 = load i16, i16* %arrayidx62, align 4, !tbaa !35\l  %conv63 = zext i16 %42 to i64\l  %43 = load %struct.jpeg_inverse_dct*, %struct.jpeg_inverse_dct** %idct,\l... align 8, !tbaa !36\l  %arrayidx66 = getelementptr inbounds %struct.jpeg_inverse_dct,\l... %struct.jpeg_inverse_dct* %43, i64 0, i32 1, i64 %indvars.iv676\l  %44 = load void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i16*, i8**, i32)*, void\l... (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i16*, i8**,\l... i32)** %arrayidx66, align 8, !tbaa !29\l  %cmp70662 = icmp sgt i32 %block_rows.1, 0\l  br i1 %cmp70662, label %for.body72.lr.ph, label %for.inc396\l|{<s0>T|<s1>F}}"];
	Node0x5894000:s0 -> Node0x5895720;
	Node0x5894000:s1 -> Node0x5891a50;
	Node0x5895720 [shape=record, style = filled, fillcolor = blue, label="{for.body72.lr.ph:                                 \l  %arrayidx68 = getelementptr inbounds i8**, i8*** %output_buf, i64\l... %indvars.iv676\l  %45 = load i8**, i8*** %arrayidx68, align 8, !tbaa !29\l  %tobool75 = icmp ne i32 %first_row.0, 0\l  %tobool84 = icmp ne i32 %last_row.0, 0\l  %sub86 = add nsw i32 %block_rows.1, -1\l  %width_in_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0666, i64 0, i32 7\l  %arrayidx122 = getelementptr inbounds i32, i32* %add.ptr47, i64 1\l  %arrayidx172 = getelementptr inbounds i32, i32* %add.ptr47, i64 2\l  %arrayidx224 = getelementptr inbounds i32, i32* %add.ptr47, i64 3\l  %arrayidx278 = getelementptr inbounds i32, i32* %add.ptr47, i64 4\l  %arrayidx332 = getelementptr inbounds i32, i32* %add.ptr47, i64 5\l  %DCT_scaled_size = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0666, i64 0, i32 9\l  %mul341 = mul nuw nsw i64 %conv, 9\l  %shl350 = shl nuw nsw i64 %conv63, 7\l  %shl352 = shl nuw nsw i64 %conv63, 8\l  %mul287 = mul nuw nsw i64 %conv, 5\l  %shl296 = shl nuw nsw i64 %41, 7\l  %shl298 = shl nuw nsw i64 %41, 8\l  %shl242 = shl nuw nsw i64 %conv57, 7\l  %shl244 = shl nuw nsw i64 %conv57, 8\l  %mul181 = mul nuw nsw i64 %conv, 36\l  %shl188 = shl nuw nsw i64 %conv54, 7\l  %shl190 = shl nuw nsw i64 %conv54, 8\l  %shl = shl nuw nsw i64 %35, 7\l  %shl139 = shl nuw nsw i64 %35, 8\l  %46 = zext i32 %sub86 to i64\l  br label %for.body72\l}"];
	Node0x5895720 -> Node0x5896f70;
	Node0x5896f70 [shape=record, style = filled, fillcolor = blue, label="{for.body72:                                       \l  %indvars.iv = phi i64 [ 0, %for.body72.lr.ph ], [ %indvars.iv.next, %for.end\l... ]\l  %output_ptr.0663 = phi i8** [ %45, %for.body72.lr.ph ], [ %add.ptr392,\l... %for.end ]\l  %arrayidx74 = getelementptr inbounds [64 x i16]*, [64 x i16]** %buffer.0,\l... i64 %indvars.iv\l  %47 = load [64 x i16]*, [64 x i16]** %arrayidx74, align 8, !tbaa !29\l  %cmp76 = icmp eq i64 %indvars.iv, 0\l  %or.cond = and i1 %tobool75, %cmp76\l  br i1 %or.cond, label %if.end83, label %if.else79\l|{<s0>T|<s1>F}}"];
	Node0x5896f70:s0 -> Node0x58479e0;
	Node0x5896f70:s1 -> Node0x5847ac0;
	Node0x5847ac0 [shape=record, style = filled, fillcolor = blue, label="{if.else79:                                        \l  %48 = add nsw i64 %indvars.iv, -1\l  %arrayidx82 = getelementptr inbounds [64 x i16]*, [64 x i16]** %buffer.0,\l... i64 %48\l  %49 = load [64 x i16]*, [64 x i16]** %arrayidx82, align 8, !tbaa !29\l  br label %if.end83\l}"];
	Node0x5847ac0 -> Node0x58479e0;
	Node0x58479e0 [shape=record, style = filled, fillcolor = blue, label="{if.end83:                                         \l  %prev_block_row.0 = phi [64 x i16]* [ %49, %if.else79 ], [ %47, %for.body72 ]\l  %cmp87 = icmp eq i64 %indvars.iv, %46\l  %or.cond649 = and i1 %tobool84, %cmp87\l  br i1 %or.cond649, label %if.end94, label %if.else90\l|{<s0>T|<s1>F}}"];
	Node0x58479e0:s0 -> Node0x5897ce0;
	Node0x58479e0:s1 -> Node0x5897dc0;
	Node0x5897dc0 [shape=record, style = filled, fillcolor = blue, label="{if.else90:                                        \l  %50 = add nuw nsw i64 %indvars.iv, 1\l  %arrayidx93 = getelementptr inbounds [64 x i16]*, [64 x i16]** %buffer.0,\l... i64 %50\l  %51 = load [64 x i16]*, [64 x i16]** %arrayidx93, align 8, !tbaa !29\l  br label %if.end94\l}"];
	Node0x5897dc0 -> Node0x5897ce0;
	Node0x5897ce0 [shape=record, style = filled, fillcolor = blue, label="{if.end94:                                         \l  %next_block_row.0 = phi [64 x i16]* [ %51, %if.else90 ], [ %47, %if.end83 ]\l  %arrayidx96 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %prev_block_row.0, i64 0, i64 0\l  %52 = load i16, i16* %arrayidx96, align 2, !tbaa !35\l  %conv97 = sext i16 %52 to i32\l  %arrayidx99 = getelementptr inbounds [64 x i16], [64 x i16]* %47, i64 0, i64\l... 0\l  %53 = load i16, i16* %arrayidx99, align 2, !tbaa !35\l  %conv100 = sext i16 %53 to i32\l  %arrayidx102 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %next_block_row.0, i64 0, i64 0\l  %54 = load i16, i16* %arrayidx102, align 2, !tbaa !35\l  %conv103 = sext i16 %54 to i32\l  %55 = load i32, i32* %width_in_blocks, align 4, !tbaa !37\l  %sub104 = add i32 %55, -1\l  br label %for.body108\l}"];
	Node0x5897ce0 -> Node0x5898760;
	Node0x5898760 [shape=record, style = filled, fillcolor = blue, label="{for.body108:                                      \l  %DC8.0661 = phi i32 [ %conv103, %if.end94 ], [ %DC9.1, %if.end385 ]\l  %DC7.0660 = phi i32 [ %conv103, %if.end94 ], [ %DC8.0661, %if.end385 ]\l  %DC5.0659 = phi i32 [ %conv100, %if.end94 ], [ %DC6.1, %if.end385 ]\l  %DC4.0658 = phi i32 [ %conv100, %if.end94 ], [ %DC5.0659, %if.end385 ]\l  %DC2.0657 = phi i32 [ %conv97, %if.end94 ], [ %DC3.1, %if.end385 ]\l  %DC1.0656 = phi i32 [ %conv97, %if.end94 ], [ %DC2.0657, %if.end385 ]\l  %block_num.0655 = phi i32 [ 0, %if.end94 ], [ %inc, %if.end385 ]\l  %buffer_ptr.0654 = phi [64 x i16]* [ %47, %if.end94 ], [ %incdec.ptr,\l... %if.end385 ]\l  %prev_block_row.1653 = phi [64 x i16]* [ %prev_block_row.0, %if.end94 ], [\l... %incdec.ptr387, %if.end385 ]\l  %next_block_row.1652 = phi [64 x i16]* [ %next_block_row.0, %if.end94 ], [\l... %incdec.ptr388, %if.end385 ]\l  %output_col.0651 = phi i32 [ 0, %if.end94 ], [ %add389, %if.end385 ]\l  call void @jcopy_block_row([64 x i16]* %buffer_ptr.0654, [64 x i16]* nonnull\l... %workspace, i32 1) #5\l  %cmp109 = icmp ult i32 %block_num.0655, %sub104\l  br i1 %cmp109, label %if.then111, label %if.end121\l|{<s0>T|<s1>F}}"];
	Node0x5898760:s0 -> Node0x5873a90;
	Node0x5898760:s1 -> Node0x5873b70;
	Node0x5873a90 [shape=record, style = filled, fillcolor = blue, label="{if.then111:                                       \l  %arrayidx113 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %prev_block_row.1653, i64 1, i64 0\l  %56 = load i16, i16* %arrayidx113, align 2, !tbaa !35\l  %conv114 = sext i16 %56 to i32\l  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %buffer_ptr.0654, i64 1, i64 0\l  %57 = load i16, i16* %arrayidx116, align 2, !tbaa !35\l  %conv117 = sext i16 %57 to i32\l  %arrayidx119 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %next_block_row.1652, i64 1, i64 0\l  %58 = load i16, i16* %arrayidx119, align 2, !tbaa !35\l  %conv120 = sext i16 %58 to i32\l  br label %if.end121\l}"];
	Node0x5873a90 -> Node0x5873b70;
	Node0x5873b70 [shape=record, style = filled, fillcolor = blue, label="{if.end121:                                        \l  %DC3.1 = phi i32 [ %conv114, %if.then111 ], [ %DC2.0657, %for.body108 ]\l  %DC6.1 = phi i32 [ %conv117, %if.then111 ], [ %DC5.0659, %for.body108 ]\l  %DC9.1 = phi i32 [ %conv120, %if.then111 ], [ %DC8.0661, %for.body108 ]\l  %59 = load i32, i32* %arrayidx122, align 4, !tbaa !38\l  %cmp123 = icmp ne i32 %59, 0\l  %60 = load i16, i16* %arrayidx126, align 2\l  %cmp128 = icmp eq i16 %60, 0\l  %or.cond669 = and i1 %cmp123, %cmp128\l  br i1 %or.cond669, label %if.then130, label %if.end171\l|{<s0>T|<s1>F}}"];
	Node0x5873b70:s0 -> Node0x58744e0;
	Node0x5873b70:s1 -> Node0x58745c0;
	Node0x58744e0 [shape=record, style = filled, fillcolor = blue, label="{if.then130:                                       \l  %sub132 = sub nsw i32 %DC4.0658, %DC6.1\l  %conv133 = sext i32 %sub132 to i64\l  %mul134 = mul nsw i64 %mul181, %conv133\l  %cmp135 = icmp sgt i64 %mul134, -1\l  br i1 %cmp135, label %if.then137, label %if.else151\l|{<s0>T|<s1>F}}"];
	Node0x58744e0:s0 -> Node0x5874930;
	Node0x58744e0:s1 -> Node0x5874a10;
	Node0x5874930 [shape=record, style = filled, fillcolor = blue, label="{if.then137:                                       \l  %add138 = add nsw i64 %mul134, %shl\l  %div = sdiv i64 %add138, %shl139\l  %conv140 = trunc i64 %div to i32\l  %cmp141 = icmp sgt i32 %59, 0\l  br i1 %cmp141, label %land.lhs.true143, label %if.end168\l|{<s0>T|<s1>F}}"];
	Node0x5874930:s0 -> Node0x5874db0;
	Node0x5874930:s1 -> Node0x5874eb0;
	Node0x5874db0 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true143:                                 \l  %shl144 = shl i32 1, %59\l  %cmp145 = icmp slt i32 %conv140, %shl144\l  %sub149 = add nsw i32 %shl144, -1\l  %conv140.sub149 = select i1 %cmp145, i32 %conv140, i32 %sub149\l  br label %if.end168\l}"];
	Node0x5874db0 -> Node0x5874eb0;
	Node0x5874a10 [shape=record, style = filled, fillcolor = blue, label="{if.else151:                                       \l  %sub153 = sub nsw i64 %shl, %mul134\l  %div155 = sdiv i64 %sub153, %shl139\l  %conv156 = trunc i64 %div155 to i32\l  %cmp157 = icmp sgt i32 %59, 0\l  br i1 %cmp157, label %land.lhs.true159, label %if.end166\l|{<s0>T|<s1>F}}"];
	Node0x5874a10:s0 -> Node0x58754a0;
	Node0x5874a10:s1 -> Node0x58755a0;
	Node0x58754a0 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true159:                                 \l  %shl160 = shl i32 1, %59\l  %cmp161 = icmp slt i32 %conv156, %shl160\l  %sub165 = add nsw i32 %shl160, -1\l  %conv156.sub165 = select i1 %cmp161, i32 %conv156, i32 %sub165\l  br label %if.end166\l}"];
	Node0x58754a0 -> Node0x58755a0;
	Node0x58755a0 [shape=record, style = filled, fillcolor = blue, label="{if.end166:                                        \l  %pred.0 = phi i32 [ %conv156, %if.else151 ], [ %conv156.sub165,\l... %land.lhs.true159 ]\l  %sub167 = sub nsw i32 0, %pred.0\l  br label %if.end168\l}"];
	Node0x58755a0 -> Node0x5874eb0;
	Node0x5874eb0 [shape=record, style = filled, fillcolor = blue, label="{if.end168:                                        \l  %pred.1 = phi i32 [ %conv140, %if.then137 ], [ %sub167, %if.end166 ], [\l... %conv140.sub149, %land.lhs.true143 ]\l  %conv169 = trunc i32 %pred.1 to i16\l  store i16 %conv169, i16* %arrayidx126, align 2, !tbaa !35\l  br label %if.end171\l}"];
	Node0x5874eb0 -> Node0x58745c0;
	Node0x58745c0 [shape=record, style = filled, fillcolor = blue, label="{if.end171:                                        \l  %61 = load i32, i32* %arrayidx172, align 4, !tbaa !38\l  %cmp173 = icmp ne i32 %61, 0\l  %62 = load i32, i32* %15, align 16\l  %63 = trunc i32 %62 to i16\l  %cmp178 = icmp eq i16 %63, 0\l  %or.cond670 = and i1 %cmp173, %cmp178\l  br i1 %or.cond670, label %if.then180, label %if.end223\l|{<s0>T|<s1>F}}"];
	Node0x58745c0:s0 -> Node0x5895f10;
	Node0x58745c0:s1 -> Node0x5895ff0;
	Node0x5895f10 [shape=record, style = filled, fillcolor = blue, label="{if.then180:                                       \l  %sub182 = sub nsw i32 %DC2.0657, %DC8.0661\l  %conv183 = sext i32 %sub182 to i64\l  %mul184 = mul nsw i64 %mul181, %conv183\l  %cmp185 = icmp sgt i64 %mul184, -1\l  br i1 %cmp185, label %if.then187, label %if.else203\l|{<s0>T|<s1>F}}"];
	Node0x5895f10:s0 -> Node0x5896360;
	Node0x5895f10:s1 -> Node0x5896440;
	Node0x5896360 [shape=record, style = filled, fillcolor = blue, label="{if.then187:                                       \l  %add189 = add nsw i64 %mul184, %shl188\l  %div191 = sdiv i64 %add189, %shl190\l  %conv192 = trunc i64 %div191 to i32\l  %cmp193 = icmp sgt i32 %61, 0\l  br i1 %cmp193, label %land.lhs.true195, label %if.end220\l|{<s0>T|<s1>F}}"];
	Node0x5896360:s0 -> Node0x5896710;
	Node0x5896360:s1 -> Node0x58a1730;
	Node0x5896710 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true195:                                 \l  %shl196 = shl i32 1, %61\l  %cmp197 = icmp slt i32 %conv192, %shl196\l  %sub201 = add nsw i32 %shl196, -1\l  %conv192.sub201 = select i1 %cmp197, i32 %conv192, i32 %sub201\l  br label %if.end220\l}"];
	Node0x5896710 -> Node0x58a1730;
	Node0x5896440 [shape=record, style = filled, fillcolor = blue, label="{if.else203:                                       \l  %sub205 = sub nsw i64 %shl188, %mul184\l  %div207 = sdiv i64 %sub205, %shl190\l  %conv208 = trunc i64 %div207 to i32\l  %cmp209 = icmp sgt i32 %61, 0\l  br i1 %cmp209, label %land.lhs.true211, label %if.end218\l|{<s0>T|<s1>F}}"];
	Node0x5896440:s0 -> Node0x58a1d50;
	Node0x5896440:s1 -> Node0x58a1e50;
	Node0x58a1d50 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true211:                                 \l  %shl212 = shl i32 1, %61\l  %cmp213 = icmp slt i32 %conv208, %shl212\l  %sub217 = add nsw i32 %shl212, -1\l  %conv208.sub217 = select i1 %cmp213, i32 %conv208, i32 %sub217\l  br label %if.end218\l}"];
	Node0x58a1d50 -> Node0x58a1e50;
	Node0x58a1e50 [shape=record, style = filled, fillcolor = blue, label="{if.end218:                                        \l  %pred.2 = phi i32 [ %conv208, %if.else203 ], [ %conv208.sub217,\l... %land.lhs.true211 ]\l  %sub219 = sub nsw i32 0, %pred.2\l  br label %if.end220\l}"];
	Node0x58a1e50 -> Node0x58a1730;
	Node0x58a1730 [shape=record, style = filled, fillcolor = blue, label="{if.end220:                                        \l  %pred.3 = phi i32 [ %conv192, %if.then187 ], [ %sub219, %if.end218 ], [\l... %conv192.sub201, %land.lhs.true195 ]\l  %conv221 = trunc i32 %pred.3 to i16\l  store i16 %conv221, i16* %arrayidx176, align 16, !tbaa !35\l  br label %if.end223\l}"];
	Node0x58a1730 -> Node0x5895ff0;
	Node0x5895ff0 [shape=record, style = filled, fillcolor = blue, label="{if.end223:                                        \l  %64 = load i32, i32* %arrayidx224, align 4, !tbaa !38\l  %cmp225 = icmp ne i32 %64, 0\l  %65 = load i16, i16* %arrayidx228, align 16\l  %cmp230 = icmp eq i16 %65, 0\l  %or.cond671 = and i1 %cmp225, %cmp230\l  br i1 %or.cond671, label %if.then232, label %if.end277\l|{<s0>T|<s1>F}}"];
	Node0x5895ff0:s0 -> Node0x5894bf0;
	Node0x5895ff0:s1 -> Node0x58a2a90;
	Node0x5894bf0 [shape=record, style = filled, fillcolor = blue, label="{if.then232:                                       \l  %mul235 = shl nsw i32 %DC5.0659, 1\l  %add234 = sub i32 %DC2.0657, %mul235\l  %sub236 = add i32 %add234, %DC8.0661\l  %conv237 = sext i32 %sub236 to i64\l  %mul238 = mul nsw i64 %mul341, %conv237\l  %cmp239 = icmp sgt i64 %mul238, -1\l  br i1 %cmp239, label %if.then241, label %if.else257\l|{<s0>T|<s1>F}}"];
	Node0x5894bf0:s0 -> Node0x58a2f20;
	Node0x5894bf0:s1 -> Node0x58a3000;
	Node0x58a2f20 [shape=record, style = filled, fillcolor = blue, label="{if.then241:                                       \l  %add243 = add nsw i64 %mul238, %shl242\l  %div245 = sdiv i64 %add243, %shl244\l  %conv246 = trunc i64 %div245 to i32\l  %cmp247 = icmp sgt i32 %64, 0\l  br i1 %cmp247, label %land.lhs.true249, label %if.end274\l|{<s0>T|<s1>F}}"];
	Node0x58a2f20:s0 -> Node0x58a33a0;
	Node0x58a2f20:s1 -> Node0x58a34a0;
	Node0x58a33a0 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true249:                                 \l  %shl250 = shl i32 1, %64\l  %cmp251 = icmp slt i32 %conv246, %shl250\l  %sub255 = add nsw i32 %shl250, -1\l  %conv246.sub255 = select i1 %cmp251, i32 %conv246, i32 %sub255\l  br label %if.end274\l}"];
	Node0x58a33a0 -> Node0x58a34a0;
	Node0x58a3000 [shape=record, style = filled, fillcolor = blue, label="{if.else257:                                       \l  %sub259 = sub nsw i64 %shl242, %mul238\l  %div261 = sdiv i64 %sub259, %shl244\l  %conv262 = trunc i64 %div261 to i32\l  %cmp263 = icmp sgt i32 %64, 0\l  br i1 %cmp263, label %land.lhs.true265, label %if.end272\l|{<s0>T|<s1>F}}"];
	Node0x58a3000:s0 -> Node0x58a3a90;
	Node0x58a3000:s1 -> Node0x58a3b90;
	Node0x58a3a90 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true265:                                 \l  %shl266 = shl i32 1, %64\l  %cmp267 = icmp slt i32 %conv262, %shl266\l  %sub271 = add nsw i32 %shl266, -1\l  %conv262.sub271 = select i1 %cmp267, i32 %conv262, i32 %sub271\l  br label %if.end272\l}"];
	Node0x58a3a90 -> Node0x58a3b90;
	Node0x58a3b90 [shape=record, style = filled, fillcolor = blue, label="{if.end272:                                        \l  %pred.4 = phi i32 [ %conv262, %if.else257 ], [ %conv262.sub271,\l... %land.lhs.true265 ]\l  %sub273 = sub nsw i32 0, %pred.4\l  br label %if.end274\l}"];
	Node0x58a3b90 -> Node0x58a34a0;
	Node0x58a34a0 [shape=record, style = filled, fillcolor = blue, label="{if.end274:                                        \l  %pred.5 = phi i32 [ %conv246, %if.then241 ], [ %sub273, %if.end272 ], [\l... %conv246.sub255, %land.lhs.true249 ]\l  %conv275 = trunc i32 %pred.5 to i16\l  store i16 %conv275, i16* %arrayidx228, align 16, !tbaa !35\l  br label %if.end277\l}"];
	Node0x58a34a0 -> Node0x58a2a90;
	Node0x58a2a90 [shape=record, style = filled, fillcolor = blue, label="{if.end277:                                        \l  %66 = load i32, i32* %arrayidx278, align 4, !tbaa !38\l  %cmp279 = icmp ne i32 %66, 0\l  %cmp284 = icmp ult i32 %62, 65536\l  %or.cond672 = and i1 %cmp279, %cmp284\l  br i1 %or.cond672, label %if.then286, label %if.end331\l|{<s0>T|<s1>F}}"];
	Node0x58a2a90:s0 -> Node0x58a44a0;
	Node0x58a2a90:s1 -> Node0x58a4580;
	Node0x58a44a0 [shape=record, style = filled, fillcolor = blue, label="{if.then286:                                       \l  %sub288 = sub i32 %DC1.0656, %DC7.0660\l  %sub289 = sub i32 %sub288, %DC3.1\l  %add290 = add i32 %sub289, %DC9.1\l  %conv291 = sext i32 %add290 to i64\l  %mul292 = mul nsw i64 %mul287, %conv291\l  %cmp293 = icmp sgt i64 %mul292, -1\l  br i1 %cmp293, label %if.then295, label %if.else311\l|{<s0>T|<s1>F}}"];
	Node0x58a44a0:s0 -> Node0x58a4a30;
	Node0x58a44a0:s1 -> Node0x58a4b10;
	Node0x58a4a30 [shape=record, style = filled, fillcolor = blue, label="{if.then295:                                       \l  %add297 = add nsw i64 %mul292, %shl296\l  %div299 = sdiv i64 %add297, %shl298\l  %conv300 = trunc i64 %div299 to i32\l  %cmp301 = icmp sgt i32 %66, 0\l  br i1 %cmp301, label %land.lhs.true303, label %if.end328\l|{<s0>T|<s1>F}}"];
	Node0x58a4a30:s0 -> Node0x58a4eb0;
	Node0x58a4a30:s1 -> Node0x58a4fb0;
	Node0x58a4eb0 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true303:                                 \l  %shl304 = shl i32 1, %66\l  %cmp305 = icmp slt i32 %conv300, %shl304\l  %sub309 = add nsw i32 %shl304, -1\l  %conv300.sub309 = select i1 %cmp305, i32 %conv300, i32 %sub309\l  br label %if.end328\l}"];
	Node0x58a4eb0 -> Node0x58a4fb0;
	Node0x58a4b10 [shape=record, style = filled, fillcolor = blue, label="{if.else311:                                       \l  %sub313 = sub nsw i64 %shl296, %mul292\l  %div315 = sdiv i64 %sub313, %shl298\l  %conv316 = trunc i64 %div315 to i32\l  %cmp317 = icmp sgt i32 %66, 0\l  br i1 %cmp317, label %land.lhs.true319, label %if.end326\l|{<s0>T|<s1>F}}"];
	Node0x58a4b10:s0 -> Node0x58a55a0;
	Node0x58a4b10:s1 -> Node0x58a56a0;
	Node0x58a55a0 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true319:                                 \l  %shl320 = shl i32 1, %66\l  %cmp321 = icmp slt i32 %conv316, %shl320\l  %sub325 = add nsw i32 %shl320, -1\l  %conv316.sub325 = select i1 %cmp321, i32 %conv316, i32 %sub325\l  br label %if.end326\l}"];
	Node0x58a55a0 -> Node0x58a56a0;
	Node0x58a56a0 [shape=record, style = filled, fillcolor = blue, label="{if.end326:                                        \l  %pred.6 = phi i32 [ %conv316, %if.else311 ], [ %conv316.sub325,\l... %land.lhs.true319 ]\l  %sub327 = sub nsw i32 0, %pred.6\l  br label %if.end328\l}"];
	Node0x58a56a0 -> Node0x58a4fb0;
	Node0x58a4fb0 [shape=record, style = filled, fillcolor = blue, label="{if.end328:                                        \l  %pred.7 = phi i32 [ %conv300, %if.then295 ], [ %sub327, %if.end326 ], [\l... %conv300.sub309, %land.lhs.true303 ]\l  %conv329 = trunc i32 %pred.7 to i16\l  store i16 %conv329, i16* %arrayidx282, align 2, !tbaa !35\l  br label %if.end331\l}"];
	Node0x58a4fb0 -> Node0x58a4580;
	Node0x58a4580 [shape=record, style = filled, fillcolor = blue, label="{if.end331:                                        \l  %67 = load i32, i32* %arrayidx332, align 4, !tbaa !38\l  %cmp333 = icmp ne i32 %67, 0\l  %68 = load i16, i16* %arrayidx336, align 4\l  %cmp338 = icmp eq i16 %68, 0\l  %or.cond673 = and i1 %cmp333, %cmp338\l  br i1 %or.cond673, label %if.then340, label %if.end385\l|{<s0>T|<s1>F}}"];
	Node0x58a4580:s0 -> Node0x58a6010;
	Node0x58a4580:s1 -> Node0x5898900;
	Node0x58a6010 [shape=record, style = filled, fillcolor = blue, label="{if.then340:                                       \l  %mul343 = shl nsw i32 %DC5.0659, 1\l  %add342 = sub i32 %DC4.0658, %mul343\l  %sub344 = add i32 %add342, %DC6.1\l  %conv345 = sext i32 %sub344 to i64\l  %mul346 = mul nsw i64 %mul341, %conv345\l  %cmp347 = icmp sgt i64 %mul346, -1\l  br i1 %cmp347, label %if.then349, label %if.else365\l|{<s0>T|<s1>F}}"];
	Node0x58a6010:s0 -> Node0x58a64c0;
	Node0x58a6010:s1 -> Node0x58a65a0;
	Node0x58a64c0 [shape=record, style = filled, fillcolor = blue, label="{if.then349:                                       \l  %add351 = add nsw i64 %mul346, %shl350\l  %div353 = sdiv i64 %add351, %shl352\l  %conv354 = trunc i64 %div353 to i32\l  %cmp355 = icmp sgt i32 %67, 0\l  br i1 %cmp355, label %land.lhs.true357, label %if.end382\l|{<s0>T|<s1>F}}"];
	Node0x58a64c0:s0 -> Node0x58a6940;
	Node0x58a64c0:s1 -> Node0x58a6a40;
	Node0x58a6940 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true357:                                 \l  %shl358 = shl i32 1, %67\l  %cmp359 = icmp slt i32 %conv354, %shl358\l  %sub363 = add nsw i32 %shl358, -1\l  %conv354.sub363 = select i1 %cmp359, i32 %conv354, i32 %sub363\l  br label %if.end382\l}"];
	Node0x58a6940 -> Node0x58a6a40;
	Node0x58a65a0 [shape=record, style = filled, fillcolor = blue, label="{if.else365:                                       \l  %sub367 = sub nsw i64 %shl350, %mul346\l  %div369 = sdiv i64 %sub367, %shl352\l  %conv370 = trunc i64 %div369 to i32\l  %cmp371 = icmp sgt i32 %67, 0\l  br i1 %cmp371, label %land.lhs.true373, label %if.end380\l|{<s0>T|<s1>F}}"];
	Node0x58a65a0:s0 -> Node0x58a7030;
	Node0x58a65a0:s1 -> Node0x58a7130;
	Node0x58a7030 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true373:                                 \l  %shl374 = shl i32 1, %67\l  %cmp375 = icmp slt i32 %conv370, %shl374\l  %sub379 = add nsw i32 %shl374, -1\l  %conv370.sub379 = select i1 %cmp375, i32 %conv370, i32 %sub379\l  br label %if.end380\l}"];
	Node0x58a7030 -> Node0x58a7130;
	Node0x58a7130 [shape=record, style = filled, fillcolor = blue, label="{if.end380:                                        \l  %pred.8 = phi i32 [ %conv370, %if.else365 ], [ %conv370.sub379,\l... %land.lhs.true373 ]\l  %sub381 = sub nsw i32 0, %pred.8\l  br label %if.end382\l}"];
	Node0x58a7130 -> Node0x58a6a40;
	Node0x58a6a40 [shape=record, style = filled, fillcolor = blue, label="{if.end382:                                        \l  %pred.9 = phi i32 [ %conv354, %if.then349 ], [ %sub381, %if.end380 ], [\l... %conv354.sub363, %land.lhs.true357 ]\l  %conv383 = trunc i32 %pred.9 to i16\l  store i16 %conv383, i16* %arrayidx336, align 4, !tbaa !35\l  br label %if.end385\l}"];
	Node0x58a6a40 -> Node0x5898900;
	Node0x5898900 [shape=record, style = filled, fillcolor = blue, label="{if.end385:                                        \l  call void %44(%struct.jpeg_decompress_struct* %cinfo,\l... %struct.jpeg_component_info* %compptr.0666, i16* nonnull %arraydecay, i8**\l... %output_ptr.0663, i32 %output_col.0651) #5\l  %incdec.ptr = getelementptr inbounds [64 x i16], [64 x i16]*\l... %buffer_ptr.0654, i64 1\l  %incdec.ptr387 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %prev_block_row.1653, i64 1\l  %incdec.ptr388 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %next_block_row.1652, i64 1\l  %69 = load i32, i32* %DCT_scaled_size, align 4, !tbaa !39\l  %add389 = add i32 %69, %output_col.0651\l  %inc = add i32 %block_num.0655, 1\l  %cmp106 = icmp ugt i32 %inc, %sub104\l  br i1 %cmp106, label %for.end, label %for.body108\l|{<s0>T|<s1>F}}"];
	Node0x5898900:s0 -> Node0x58970f0;
	Node0x5898900:s1 -> Node0x5898760;
	Node0x58970f0 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %.lcssa = phi i32 [ %69, %if.end385 ]\l  %idx.ext391 = sext i32 %.lcssa to i64\l  %add.ptr392 = getelementptr inbounds i8*, i8** %output_ptr.0663, i64\l... %idx.ext391\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %lftr.wideiv = trunc i64 %indvars.iv.next to i32\l  %exitcond = icmp eq i32 %lftr.wideiv, %block_rows.1\l  br i1 %exitcond, label %for.inc396.loopexit, label %for.body72\l|{<s0>T|<s1>F}}"];
	Node0x58970f0:s0 -> Node0x58a8060;
	Node0x58970f0:s1 -> Node0x5896f70;
	Node0x58a8060 [shape=record, style = filled, fillcolor = blue, label="{for.inc396.loopexit:                              \l  br label %for.inc396\l}"];
	Node0x58a8060 -> Node0x5891a50;
	Node0x5891a50 [shape=record, style = filled, fillcolor = blue, label="{for.inc396:                                       \l  %indvars.iv.next677 = add nuw nsw i64 %indvars.iv676, 1\l  %incdec.ptr398 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0666, i64 1\l  %70 = load i32, i32* %num_components, align 8, !tbaa !20\l  %71 = sext i32 %70 to i64\l  %cmp13 = icmp slt i64 %indvars.iv.next677, %71\l  br i1 %cmp13, label %for.body, label %for.end399.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5891a50:s0 -> Node0x5891850;
	Node0x5891a50:s1 -> Node0x58a8350;
	Node0x58a8350 [shape=record, style = filled, fillcolor = blue, label="{for.end399.loopexit:                              \l  br label %for.end399\l}"];
	Node0x58a8350 -> Node0x5890de0;
	Node0x5890de0 [shape=record, style = filled, fillcolor = blue, label="{for.end399:                                       \l  %72 = load i32, i32* %output_iMCU_row, align 8, !tbaa !18\l  %inc401 = add i32 %72, 1\l  store i32 %inc401, i32* %output_iMCU_row, align 8, !tbaa !18\l  %73 = load i32, i32* %total_iMCU_rows, align 8, !tbaa !10\l  %cmp403 = icmp ult i32 %inc401, %73\l  %.650 = select i1 %cmp403, i32 3, i32 4\l  br label %cleanup407\l}"];
	Node0x5890de0 -> Node0x58a86b0;
	Node0x5890a20 [shape=record, style = filled, fillcolor = blue, label="{cleanup407.loopexit:                              \l  br label %cleanup407\l}"];
	Node0x5890a20 -> Node0x58a86b0;
	Node0x58a86b0 [shape=record, style = filled, fillcolor = blue, label="{cleanup407:                                       \l  %retval.0 = phi i32 [ %.650, %for.end399 ], [ 0, %cleanup407.loopexit ]\l  call void @llvm.lifetime.end(i64 128, i8* %3) #5\l  ret i32 %retval.0\l}"];
}
