digraph "CFG for 'get_word_rgb_row' function" {
	label="CFG for 'get_word_rgb_row' function";

	Node0x58102a0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %rescale1 = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 1, i32 3\l  %0 = bitcast %struct._IO_FILE** %rescale1 to i8**\l  %1 = load i8*, i8** %0, align 8, !tbaa !3\l  %iobuffer = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 1\l  %2 = bitcast %struct.cjpeg_source_struct* %iobuffer to i8**\l  %3 = load i8*, i8** %2, align 8, !tbaa !11\l  %buffer_width = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 1, i32 2\l  %4 = bitcast void (%struct.jpeg_compress_struct*,\l... %struct.cjpeg_source_struct*)** %buffer_width to i64*\l  %5 = load i64, i64* %4, align 8, !tbaa !12\l  %input_file = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 0, i32 3\l  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %input_file, align 8, !tbaa\l... !13\l  %call = tail call i64 @fread(i8* %3, i64 1, i64 %5, %struct._IO_FILE* %6)\l  %7 = load i64, i64* %4, align 8, !tbaa !12\l  %cmp = icmp eq i64 %call, %7\l  br i1 %cmp, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x58102a0:s0 -> Node0x5810a40;
	Node0x58102a0:s1 -> Node0x5810b10;
	Node0x5810b10 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !14\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 5\l  store i32 42, i32* %msg_code, align 8, !tbaa !18\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 0\l  %9 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !20\l  %10 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %9(%struct.jpeg_common_struct* %10) #3\l  br label %if.end\l}"];
	Node0x5810b10 -> Node0x5810a40;
	Node0x5810a40 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %image_width = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 6\l  %11 = load i32, i32* %image_width, align 8, !tbaa !21\l  %cmp662 = icmp eq i32 %11, 0\l  br i1 %cmp662, label %for.end, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5810a40:s0 -> Node0x58113b0;
	Node0x5810a40:s1 -> Node0x58114b0;
	Node0x58114b0 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader:                               \l  %12 = load i8*, i8** %2, align 8, !tbaa !11\l  %buffer = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 0, i32 4\l  %13 = load i8**, i8*** %buffer, align 8, !tbaa !22\l  %14 = load i8*, i8** %13, align 8, !tbaa !23\l  br label %for.body\l}"];
	Node0x58114b0 -> Node0x58117a0;
	Node0x58117a0 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %ptr.065 = phi i8* [ %incdec.ptr28, %for.body ], [ %14, %for.body.preheader ]\l  %col.064 = phi i32 [ %dec, %for.body ], [ %11, %for.body.preheader ]\l  %bufferptr.063 = phi i8* [ %incdec.ptr22, %for.body ], [ %12,\l... %for.body.preheader ]\l  %incdec.ptr = getelementptr inbounds i8, i8* %bufferptr.063, i64 1\l  %15 = load i8, i8* %bufferptr.063, align 1, !tbaa !24\l  %conv = zext i8 %15 to i64\l  %incdec.ptr7 = getelementptr inbounds i8, i8* %bufferptr.063, i64 2\l  %16 = load i8, i8* %incdec.ptr, align 1, !tbaa !24\l  %conv8 = zext i8 %16 to i64\l  %shl = shl nuw nsw i64 %conv8, 8\l  %or = or i64 %shl, %conv\l  %arrayidx9 = getelementptr inbounds i8, i8* %1, i64 %or\l  %17 = load i8, i8* %arrayidx9, align 1, !tbaa !24\l  %incdec.ptr10 = getelementptr inbounds i8, i8* %ptr.065, i64 1\l  store i8 %17, i8* %ptr.065, align 1, !tbaa !24\l  %incdec.ptr11 = getelementptr inbounds i8, i8* %bufferptr.063, i64 3\l  %18 = load i8, i8* %incdec.ptr7, align 1, !tbaa !24\l  %conv12 = zext i8 %18 to i64\l  %incdec.ptr13 = getelementptr inbounds i8, i8* %bufferptr.063, i64 4\l  %19 = load i8, i8* %incdec.ptr11, align 1, !tbaa !24\l  %conv14 = zext i8 %19 to i64\l  %shl15 = shl nuw nsw i64 %conv14, 8\l  %or16 = or i64 %shl15, %conv12\l  %arrayidx18 = getelementptr inbounds i8, i8* %1, i64 %or16\l  %20 = load i8, i8* %arrayidx18, align 1, !tbaa !24\l  %incdec.ptr19 = getelementptr inbounds i8, i8* %ptr.065, i64 2\l  store i8 %20, i8* %incdec.ptr10, align 1, !tbaa !24\l  %incdec.ptr20 = getelementptr inbounds i8, i8* %bufferptr.063, i64 5\l  %21 = load i8, i8* %incdec.ptr13, align 1, !tbaa !24\l  %conv21 = zext i8 %21 to i64\l  %incdec.ptr22 = getelementptr inbounds i8, i8* %bufferptr.063, i64 6\l  %22 = load i8, i8* %incdec.ptr20, align 1, !tbaa !24\l  %conv23 = zext i8 %22 to i64\l  %shl24 = shl nuw nsw i64 %conv23, 8\l  %or25 = or i64 %shl24, %conv21\l  %arrayidx27 = getelementptr inbounds i8, i8* %1, i64 %or25\l  %23 = load i8, i8* %arrayidx27, align 1, !tbaa !24\l  %incdec.ptr28 = getelementptr inbounds i8, i8* %ptr.065, i64 3\l  store i8 %23, i8* %incdec.ptr19, align 1, !tbaa !24\l  %dec = add i32 %col.064, -1\l  %cmp6 = icmp eq i32 %dec, 0\l  br i1 %cmp6, label %for.end.loopexit, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x58117a0:s0 -> Node0x5811a40;
	Node0x58117a0:s1 -> Node0x58117a0;
	Node0x5811a40 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  br label %for.end\l}"];
	Node0x5811a40 -> Node0x58113b0;
	Node0x58113b0 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  ret i32 1\l}"];
}
