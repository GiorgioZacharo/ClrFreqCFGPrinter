; ModuleID = 'jcomapi.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32 }
%struct.jpeg_error_mgr = type { {}*, void (%struct.jpeg_common_struct*, i32)*, {}*, void (%struct.jpeg_common_struct*, i8*)*, {}*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }

; Function Attrs: nounwind uwtable
define void @jpeg_abort(%struct.jpeg_common_struct* %cinfo) #0 !prof !2 {
entry:
  %mem = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %cinfo, i64 0, i32 1
  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !3
  %free_pool = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %0, i64 0, i32 9
  %1 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %free_pool, align 8, !tbaa !9
  tail call void %1(%struct.jpeg_common_struct* %cinfo, i32 1) #1
  %is_decompressor = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %cinfo, i64 0, i32 3
  %2 = load i32, i32* %is_decompressor, align 8, !tbaa !12
  %tobool = icmp ne i32 %2, 0
  %cond = select i1 %tobool, i32 200, i32 100
  %global_state = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %cinfo, i64 0, i32 4
  store i32 %cond, i32* %global_state, align 4, !tbaa !13
  ret void
}

; Function Attrs: nounwind uwtable
define void @jpeg_destroy(%struct.jpeg_common_struct* %cinfo) #0 !prof !2 {
entry:
  %mem = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %cinfo, i64 0, i32 1
  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !3
  %cmp = icmp eq %struct.jpeg_memory_mgr* %0, null
  br i1 %cmp, label %if.end, label %if.then, !prof !14

if.then:                                          ; preds = %entry
  %self_destruct = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %0, i64 0, i32 10
  %self_destruct2 = bitcast {}** %self_destruct to void (%struct.jpeg_common_struct*)**
  %1 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %self_destruct2, align 8, !tbaa !15
  tail call void %1(%struct.jpeg_common_struct* nonnull %cinfo) #1
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  store %struct.jpeg_memory_mgr* null, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !3
  %global_state = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %cinfo, i64 0, i32 4
  store i32 0, i32* %global_state, align 4, !tbaa !13
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct* %cinfo) #0 !prof !16 {
entry:
  %mem = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %cinfo, i64 0, i32 1
  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !3
  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %0, i64 0, i32 0
  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !17
  %call = tail call i8* %1(%struct.jpeg_common_struct* %cinfo, i32 0, i64 132) #1
  %2 = bitcast i8* %call to %struct.JQUANT_TBL*
  %sent_table = getelementptr inbounds i8, i8* %call, i64 128
  %3 = bitcast i8* %sent_table to i32*
  store i32 0, i32* %3, align 4, !tbaa !18
  ret %struct.JQUANT_TBL* %2
}

; Function Attrs: nounwind uwtable
define %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %cinfo) #0 !prof !20 {
entry:
  %mem = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %cinfo, i64 0, i32 1
  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !3
  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %0, i64 0, i32 0
  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !17
  %call = tail call i8* %1(%struct.jpeg_common_struct* %cinfo, i32 0, i64 280) #1
  %2 = bitcast i8* %call to %struct.JHUFF_TBL*
  %sent_table = getelementptr inbounds i8, i8* %call, i64 276
  %3 = bitcast i8* %sent_table to i32*
  store i32 0, i32* %3, align 4, !tbaa !21
  ret %struct.JHUFF_TBL* %2
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"MaxFunctionCount", i32 150581}
!1 = !{!"clang version 3.8.0 (trunk 257473)"}
!2 = !{!"function_entry_count", i64 1}
!3 = !{!4, !5, i64 8}
!4 = !{!"jpeg_common_struct", !5, i64 0, !5, i64 8, !5, i64 16, !8, i64 24, !8, i64 28}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = !{!"int", !6, i64 0}
!9 = !{!10, !5, i64 72}
!10 = !{!"jpeg_memory_mgr", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !5, i64 32, !5, i64 40, !5, i64 48, !5, i64 56, !5, i64 64, !5, i64 72, !5, i64 80, !11, i64 88}
!11 = !{!"long", !6, i64 0}
!12 = !{!4, !8, i64 24}
!13 = !{!4, !8, i64 28}
!14 = !{!"branch_weights", i32 1, i32 2}
!15 = !{!10, !5, i64 80}
!16 = !{!"function_entry_count", i64 2}
!17 = !{!10, !5, i64 0}
!18 = !{!19, !8, i64 128}
!19 = !{!"", !6, i64 0, !8, i64 128}
!20 = !{!"function_entry_count", i64 4}
!21 = !{!22, !8, i64 276}
!22 = !{!"", !6, i64 0, !6, i64 17, !8, i64 276}
