; ModuleID = 'jcphuff.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_compress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_destination_mgr*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master*, %struct.jpeg_c_main_controller*, %struct.jpeg_c_prep_controller*, %struct.jpeg_c_coef_controller*, %struct.jpeg_marker_writer*, %struct.jpeg_color_converter*, %struct.jpeg_downsampler*, %struct.jpeg_forward_dct*, %struct.jpeg_entropy_encoder* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_destination_mgr = type { i8*, i64, {}*, i32 (%struct.jpeg_compress_struct*)*, {}* }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_scan_info = type { i32, [4 x i32], i32, i32, i32, i32 }
%struct.jpeg_comp_master = type { {}*, {}*, {}*, i32, i32 }
%struct.jpeg_c_main_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller = type { void (%struct.jpeg_compress_struct*, i32)*, i32 (%struct.jpeg_compress_struct*, i8***)* }
%struct.jpeg_marker_writer = type { void (%struct.jpeg_compress_struct*, i32, i8*, i32)*, {}*, {}*, {}*, {}*, {}* }
%struct.jpeg_color_converter = type { {}*, void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler = type { {}*, void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct = type { {}*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder = type { void (%struct.jpeg_compress_struct*, i32)*, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)*, {}* }
%struct.c_derived_tbl = type { [256 x i32], [256 x i8] }
%struct.phuff_entropy_encoder = type { %struct.jpeg_entropy_encoder, i32, i8*, i64, i64, i32, %struct.jpeg_compress_struct*, [4 x i32], i32, i32, i32, i8*, i32, i32, [4 x %struct.c_derived_tbl*], [4 x i64*] }

@jpeg_natural_order = external constant [0 x i32], align 4

; Function Attrs: nounwind uwtable
define void @jinit_phuff_encoder(%struct.jpeg_compress_struct* %cinfo) #0 !prof !2 {
entry:
  %mem = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1
  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !3
  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %0, i64 0, i32 0
  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !11
  %2 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %call = tail call i8* %1(%struct.jpeg_common_struct* %2, i32 1, i64 184) #3
  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59
  %3 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to i8**
  store i8* %call, i8** %3, align 8, !tbaa !14
  %start_pass = bitcast i8* %call to void (%struct.jpeg_compress_struct*, i32)**
  store void (%struct.jpeg_compress_struct*, i32)* @start_pass_phuff, void (%struct.jpeg_compress_struct*, i32)** %start_pass, align 8, !tbaa !15
  %derived_tbls = getelementptr inbounds i8, i8* %call, i64 120
  %count_ptrs = getelementptr inbounds i8, i8* %call, i64 152
  %4 = bitcast i8* %derived_tbls to <2 x %struct.c_derived_tbl*>*
  store <2 x %struct.c_derived_tbl*> zeroinitializer, <2 x %struct.c_derived_tbl*>* %4, align 8, !tbaa !18
  %5 = bitcast i8* %count_ptrs to <2 x i64*>*
  store <2 x i64*> zeroinitializer, <2 x i64*>* %5, align 8, !tbaa !18
  %arrayidx.2 = getelementptr inbounds i8, i8* %call, i64 136
  %arrayidx3.2 = getelementptr inbounds i8, i8* %call, i64 168
  %6 = bitcast i8* %arrayidx.2 to <2 x %struct.c_derived_tbl*>*
  store <2 x %struct.c_derived_tbl*> zeroinitializer, <2 x %struct.c_derived_tbl*>* %6, align 8, !tbaa !18
  %7 = bitcast i8* %arrayidx3.2 to <2 x i64*>*
  store <2 x i64*> zeroinitializer, <2 x i64*>* %7, align 8, !tbaa !18
  %bit_buffer = getelementptr inbounds i8, i8* %call, i64 104
  %8 = bitcast i8* %bit_buffer to i8**
  store i8* null, i8** %8, align 8, !tbaa !19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal void @start_pass_phuff(%struct.jpeg_compress_struct* %cinfo, i32 %gather_statistics) #0 !prof !20 {
entry:
  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59
  %0 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to %struct.phuff_entropy_encoder**
  %1 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %0, align 8, !tbaa !14
  %cinfo2 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  store %struct.jpeg_compress_struct* %cinfo, %struct.jpeg_compress_struct** %cinfo2, align 8, !tbaa !21
  %gather_statistics3 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 1
  store i32 %gather_statistics, i32* %gather_statistics3, align 8, !tbaa !22
  %Ss = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 47
  %2 = load i32, i32* %Ss, align 4, !tbaa !23
  %cmp = icmp eq i32 %2, 0
  %Ah = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 49
  %3 = load i32, i32* %Ah, align 4, !tbaa !24
  %cmp4 = icmp eq i32 %3, 0
  %encode_mcu = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 0, i32 1
  br i1 %cmp4, label %if.then, label %if.else9, !prof !25

if.then:                                          ; preds = %entry
  br i1 %cmp, label %if.then6, label %if.else, !prof !26

if.then6:                                         ; preds = %if.then
  store i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_DC_first, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)** %encode_mcu, align 8, !tbaa !27
  br label %if.end23

if.else:                                          ; preds = %if.then
  store i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_AC_first, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)** %encode_mcu, align 8, !tbaa !27
  br label %if.end23

if.else9:                                         ; preds = %entry
  br i1 %cmp, label %if.then11, label %if.else14, !prof !28

if.then11:                                        ; preds = %if.else9
  store i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_DC_refine, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)** %encode_mcu, align 8, !tbaa !27
  br label %if.end23

if.else14:                                        ; preds = %if.else9
  store i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_AC_refine, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)** %encode_mcu, align 8, !tbaa !27
  %bit_buffer = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 11
  %4 = load i8*, i8** %bit_buffer, align 8, !tbaa !19
  %cmp17 = icmp eq i8* %4, null
  br i1 %cmp17, label %if.then19, label %if.end23, !prof !29

if.then19:                                        ; preds = %if.else14
  %mem = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1
  %5 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !3
  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %5, i64 0, i32 0
  %6 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !11
  %7 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %call = tail call i8* %6(%struct.jpeg_common_struct* %7, i32 1, i64 1000) #3
  store i8* %call, i8** %bit_buffer, align 8, !tbaa !19
  br label %if.end23

if.end23:                                         ; preds = %if.then11, %if.then19, %if.else14, %if.then6, %if.else
  %tobool24 = icmp ne i32 %gather_statistics, 0
  %finish_pass = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 0, i32 2
  %finish_pass27 = bitcast {}** %finish_pass to void (%struct.jpeg_compress_struct*)**
  %finish_pass_gather_phuff.finish_pass_phuff = select i1 %tobool24, void (%struct.jpeg_compress_struct*)* @finish_pass_gather_phuff, void (%struct.jpeg_compress_struct*)* @finish_pass_phuff
  store void (%struct.jpeg_compress_struct*)* %finish_pass_gather_phuff.finish_pass_phuff, void (%struct.jpeg_compress_struct*)** %finish_pass27, align 8, !tbaa !30
  %comps_in_scan = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 41
  %8 = load i32, i32* %comps_in_scan, align 4, !tbaa !31
  %cmp33190 = icmp sgt i32 %8, 0
  br i1 %cmp33190, label %for.body.lr.ph, label %for.end, !prof !32

for.body.lr.ph:                                   ; preds = %if.end23
  %err = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %9 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %mem91 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1
  %ac_tbl_no60 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 8
  br i1 %cmp, label %for.body.us.preheader, label %for.body.preheader, !prof !33

for.body.preheader:                               ; preds = %for.body.lr.ph
  br label %for.body

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.inc.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.us ], [ 0, %for.body.us.preheader ]
  %arrayidx.us = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv
  %10 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %arrayidx.us, align 8, !tbaa !18
  %arrayidx36.us = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 7, i64 %indvars.iv
  store i32 0, i32* %arrayidx36.us, align 4, !tbaa !34
  %11 = load i32, i32* %Ah, align 4, !tbaa !24
  %cmp40.us = icmp eq i32 %11, 0
  br i1 %cmp40.us, label %if.end43.us, label %for.inc.us, !prof !35

if.end43.us:                                      ; preds = %for.body.us
  %dc_tbl_no.us = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %10, i64 0, i32 5
  %12 = load i32, i32* %dc_tbl_no.us, align 4, !tbaa !36
  %13 = icmp ugt i32 %12, 3
  %.pre196 = sext i32 %12 to i64
  br i1 %13, label %if.then54.us, label %lor.lhs.false48.us, !prof !38

lor.lhs.false48.us:                               ; preds = %if.end43.us
  %arrayidx50.us = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 %.pre196
  %14 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx50.us, align 8, !tbaa !18
  %cmp51.us = icmp ne %struct.JHUFF_TBL* %14, null
  %or.cond118.us = or i1 %tobool24, %cmp51.us
  br i1 %or.cond118.us, label %if.end83.us, label %if.then54.us

if.then54.us:                                     ; preds = %if.end43.us, %lor.lhs.false48.us
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !39
  %msg_code.us = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i64 0, i32 5
  store i32 49, i32* %msg_code.us, align 8, !tbaa !40
  %arrayidx56.us = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i64 0, i32 6, i32 0, i64 0
  store i32 %12, i32* %arrayidx56.us, align 4, !tbaa !34
  %error_exit.us = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i64 0, i32 0
  %16 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.us, align 8, !tbaa !42
  tail call void %16(%struct.jpeg_common_struct* nonnull %9) #3
  br label %if.end83.us

if.end83.us:                                      ; preds = %if.then54.us, %lor.lhs.false48.us
  br i1 %tobool24, label %if.then85.us, label %if.then103.us, !prof !43

if.then103.us:                                    ; preds = %if.end83.us
  %arrayidx106.us = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 %.pre196
  %17 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx106.us, align 8, !tbaa !18
  %arrayidx108.us = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %.pre196
  tail call void @jpeg_make_c_derived_tbl(%struct.jpeg_compress_struct* nonnull %cinfo, %struct.JHUFF_TBL* %17, %struct.c_derived_tbl** %arrayidx108.us) #3
  br label %for.inc.us

if.then85.us:                                     ; preds = %if.end83.us
  %arrayidx87.us = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %.pre196
  %18 = load i64*, i64** %arrayidx87.us, align 8, !tbaa !18
  %cmp88.us = icmp eq i64* %18, null
  br i1 %cmp88.us, label %if.then90.us, label %if.then85.us.if.end97.us_crit_edge, !prof !44

if.then85.us.if.end97.us_crit_edge:               ; preds = %if.then85.us
  %19 = bitcast i64* %18 to i8*
  br label %if.end97.us

if.then90.us:                                     ; preds = %if.then85.us
  %20 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem91, align 8, !tbaa !3
  %alloc_small92.us = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %20, i64 0, i32 0
  %21 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %alloc_small92.us, align 8, !tbaa !11
  %call93.us = tail call i8* %21(%struct.jpeg_common_struct* nonnull %9, i32 1, i64 2056) #3
  %22 = bitcast i64** %arrayidx87.us to i8**
  store i8* %call93.us, i8** %22, align 8, !tbaa !18
  br label %if.end97.us

if.end97.us:                                      ; preds = %if.then85.us.if.end97.us_crit_edge, %if.then90.us
  %23 = phi i8* [ %call93.us, %if.then90.us ], [ %19, %if.then85.us.if.end97.us_crit_edge ]
  tail call void @llvm.memset.p0i8.i64(i8* %23, i8 0, i64 2056, i32 1, i1 false)
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.end97.us, %if.then103.us, %for.body.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %24 = load i32, i32* %comps_in_scan, align 4, !tbaa !31
  %25 = sext i32 %24 to i64
  %cmp33.us = icmp slt i64 %indvars.iv.next, %25
  br i1 %cmp33.us, label %for.body.us, label %for.end.loopexit, !prof !32

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv193 = phi i64 [ %indvars.iv.next194, %for.inc ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv193
  %26 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %arrayidx, align 8, !tbaa !18
  %arrayidx36 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 7, i64 %indvars.iv193
  store i32 0, i32* %arrayidx36, align 4, !tbaa !34
  %ac_tbl_no = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i64 0, i32 6
  %27 = load i32, i32* %ac_tbl_no, align 8, !tbaa !45
  store i32 %27, i32* %ac_tbl_no60, align 8, !tbaa !46
  %28 = icmp ugt i32 %27, 3
  %.pre198 = sext i32 %27 to i64
  br i1 %28, label %if.then73, label %lor.lhs.false66, !prof !47

lor.lhs.false66:                                  ; preds = %for.body
  %arrayidx68 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 17, i64 %.pre198
  %29 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx68, align 8, !tbaa !18
  %cmp69 = icmp ne %struct.JHUFF_TBL* %29, null
  %or.cond120 = or i1 %tobool24, %cmp69
  br i1 %or.cond120, label %if.end83, label %if.then73

if.then73:                                        ; preds = %for.body, %lor.lhs.false66
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !39
  %msg_code75 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 5
  store i32 49, i32* %msg_code75, align 8, !tbaa !40
  %arrayidx79 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 6, i32 0, i64 0
  store i32 %27, i32* %arrayidx79, align 4, !tbaa !34
  %error_exit81 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 0
  %31 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit81, align 8, !tbaa !42
  tail call void %31(%struct.jpeg_common_struct* nonnull %9) #3
  br label %if.end83

if.end83:                                         ; preds = %if.then73, %lor.lhs.false66
  br i1 %tobool24, label %if.then85, label %if.else109, !prof !43

if.then85:                                        ; preds = %if.end83
  %arrayidx87 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %.pre198
  %32 = load i64*, i64** %arrayidx87, align 8, !tbaa !18
  %cmp88 = icmp eq i64* %32, null
  br i1 %cmp88, label %if.then90, label %if.then85.if.end97_crit_edge, !prof !44

if.then85.if.end97_crit_edge:                     ; preds = %if.then85
  %33 = bitcast i64* %32 to i8*
  br label %if.end97

if.then90:                                        ; preds = %if.then85
  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem91, align 8, !tbaa !3
  %alloc_small92 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %34, i64 0, i32 0
  %35 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %alloc_small92, align 8, !tbaa !11
  %call93 = tail call i8* %35(%struct.jpeg_common_struct* nonnull %9, i32 1, i64 2056) #3
  %36 = bitcast i64** %arrayidx87 to i8**
  store i8* %call93, i8** %36, align 8, !tbaa !18
  br label %if.end97

if.end97:                                         ; preds = %if.then85.if.end97_crit_edge, %if.then90
  %37 = phi i8* [ %call93, %if.then90 ], [ %33, %if.then85.if.end97_crit_edge ]
  tail call void @llvm.memset.p0i8.i64(i8* %37, i8 0, i64 2056, i32 1, i1 false)
  br label %for.inc

if.else109:                                       ; preds = %if.end83
  %arrayidx112 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 17, i64 %.pre198
  %38 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx112, align 8, !tbaa !18
  %arrayidx115 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %.pre198
  tail call void @jpeg_make_c_derived_tbl(%struct.jpeg_compress_struct* nonnull %cinfo, %struct.JHUFF_TBL* %38, %struct.c_derived_tbl** %arrayidx115) #3
  br label %for.inc

for.inc:                                          ; preds = %if.end97, %if.else109
  %indvars.iv.next194 = add nuw nsw i64 %indvars.iv193, 1
  %39 = load i32, i32* %comps_in_scan, align 4, !tbaa !31
  %40 = sext i32 %39 to i64
  %cmp33 = icmp slt i64 %indvars.iv.next194, %40
  br i1 %cmp33, label %for.body, label %for.end.loopexit202, !prof !32

for.end.loopexit:                                 ; preds = %for.inc.us
  br label %for.end

for.end.loopexit202:                              ; preds = %for.inc
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit202, %for.end.loopexit, %if.end23
  %EOBRUN = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 9
  store i32 0, i32* %EOBRUN, align 4, !tbaa !48
  %BE = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 10
  store i32 0, i32* %BE, align 8, !tbaa !49
  %put_buffer = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  store i64 0, i64* %put_buffer, align 8, !tbaa !50
  %put_bits = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  store i32 0, i32* %put_bits, align 8, !tbaa !51
  %restart_interval = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 29
  %41 = load i32, i32* %restart_interval, align 8, !tbaa !52
  %restarts_to_go = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 12
  store i32 %41, i32* %restarts_to_go, align 8, !tbaa !53
  %next_restart_num = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 13
  store i32 0, i32* %next_restart_num, align 4, !tbaa !54
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal i32 @encode_mcu_DC_first(%struct.jpeg_compress_struct* nocapture readonly %cinfo, [64 x i16]** nocapture readonly %MCU_data) #0 !prof !55 {
entry:
  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59
  %0 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to %struct.phuff_entropy_encoder**
  %1 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %0, align 8, !tbaa !14
  %Al2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 50
  %2 = load i32, i32* %Al2, align 8, !tbaa !56
  %dest = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 5
  %3 = bitcast %struct.jpeg_destination_mgr** %dest to <2 x i64>**
  %4 = load <2 x i64>*, <2 x i64>** %3, align 8, !tbaa !57
  %next_output_byte3 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 2
  %5 = load <2 x i64>, <2 x i64>* %4, align 8, !tbaa !58
  %free_in_buffer5 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 3
  %6 = bitcast i8** %next_output_byte3 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %6, align 8, !tbaa !58
  %restart_interval = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 29
  %7 = load i32, i32* %restart_interval, align 8, !tbaa !52
  %tobool = icmp eq i32 %7, 0
  br i1 %tobool, label %for.cond.preheader, label %if.then, !prof !59

if.then:                                          ; preds = %entry
  %restarts_to_go = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 12
  %8 = bitcast i32* %restarts_to_go to i64*
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %cmp = icmp eq i32 %10, 0
  br i1 %cmp, label %if.then6, label %for.cond.preheader

if.then6:                                         ; preds = %if.then
  %11 = lshr i64 %9, 32
  %12 = trunc i64 %11 to i32
  tail call fastcc void @emit_restart(%struct.phuff_entropy_encoder* nonnull %1, i32 %12)
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry, %if.then, %if.then6
  %blocks_in_MCU = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 45
  %13 = load i32, i32* %blocks_in_MCU, align 8, !tbaa !60
  %cmp8211 = icmp sgt i32 %13, 0
  br i1 %cmp8211, label %for.body.lr.ph, label %for.end, !prof !61

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %gather_statistics.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 1
  %put_bits1.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %cinfo.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %put_buffer11.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %14 = bitcast i8** %next_output_byte3 to <2 x i64>*
  %15 = bitcast i8** %next_output_byte3 to <2 x i64>*
  %16 = bitcast i8** %next_output_byte3 to <2 x i64>*
  %17 = bitcast i8** %next_output_byte3 to <2 x i64>*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds [64 x i16]*, [64 x i16]** %MCU_data, i64 %indvars.iv
  %18 = load [64 x i16]*, [64 x i16]** %arrayidx, align 8, !tbaa !18
  %arrayidx10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 46, i64 %indvars.iv
  %19 = load i32, i32* %arrayidx10, align 4, !tbaa !34
  %idxprom11 = sext i32 %19 to i64
  %arrayidx12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %idxprom11
  %20 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %arrayidx12, align 8, !tbaa !18
  %arrayidx13 = getelementptr inbounds [64 x i16], [64 x i16]* %18, i64 0, i64 0
  %21 = load i16, i16* %arrayidx13, align 2, !tbaa !62
  %conv = sext i16 %21 to i32
  %shr = ashr i32 %conv, %2
  %arrayidx15 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 7, i64 %idxprom11
  %22 = load i32, i32* %arrayidx15, align 4, !tbaa !34
  %sub = sub nsw i32 %shr, %22
  store i32 %shr, i32* %arrayidx15, align 4, !tbaa !34
  %cmp19 = icmp slt i32 %sub, 0
  %sub22 = sub nsw i32 0, %sub
  %sub.lobit = ashr i32 %sub, 31
  %temp2.0 = add nsw i32 %sub.lobit, %sub
  %temp.0 = select i1 %cmp19, i32 %sub22, i32 %sub
  %tobool24208 = icmp eq i32 %temp.0, 0
  br i1 %tobool24208, label %while.end, label %while.body.preheader, !prof !63

while.body.preheader:                             ; preds = %for.body
  br label %while.body

while.body:                                       ; preds = %while.body.preheader, %while.body
  %temp.1210 = phi i32 [ %shr25, %while.body ], [ %temp.0, %while.body.preheader ]
  %nbits.0209 = phi i32 [ %inc, %while.body ], [ 0, %while.body.preheader ]
  %inc = add nuw nsw i32 %nbits.0209, 1
  %shr25 = ashr i32 %temp.1210, 1
  %tobool24 = icmp eq i32 %shr25, 0
  br i1 %tobool24, label %while.end.loopexit, label %while.body, !prof !63

while.end.loopexit:                               ; preds = %while.body
  %inc.lcssa = phi i32 [ %inc, %while.body ]
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %for.body
  %nbits.0.lcssa = phi i32 [ 0, %for.body ], [ %inc.lcssa, %while.end.loopexit ]
  %dc_tbl_no = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %20, i64 0, i32 5
  %23 = load i32, i32* %dc_tbl_no, align 4, !tbaa !36
  %24 = load i32, i32* %gather_statistics.i, align 8, !tbaa !22
  %tobool.i = icmp eq i32 %24, 0
  br i1 %tobool.i, label %if.else.i, label %if.then.i, !prof !64

if.then.i:                                        ; preds = %while.end
  %idxprom.i = sext i32 %nbits.0.lcssa to i64
  %idxprom1.i = sext i32 %23 to i64
  %arrayidx.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i
  %25 = load i64*, i64** %arrayidx.i, align 8, !tbaa !18
  %arrayidx2.i = getelementptr inbounds i64, i64* %25, i64 %idxprom.i
  %26 = load i64, i64* %arrayidx2.i, align 8, !tbaa !65
  %inc.i = add nsw i64 %26, 1
  store i64 %inc.i, i64* %arrayidx2.i, align 8, !tbaa !65
  br label %emit_symbol.exit

if.else.i:                                        ; preds = %while.end
  %idxprom3.i = sext i32 %23 to i64
  %arrayidx4.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i
  %27 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i, align 8, !tbaa !18
  %idxprom5.i = sext i32 %nbits.0.lcssa to i64
  %arrayidx6.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %27, i64 0, i32 0, i64 %idxprom5.i
  %28 = load i32, i32* %arrayidx6.i, align 4, !tbaa !34
  %arrayidx8.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %27, i64 0, i32 1, i64 %idxprom5.i
  %29 = load i8, i8* %arrayidx8.i, align 1, !tbaa !58
  %conv.i = sext i8 %29 to i32
  %conv.i102 = zext i32 %28 to i64
  %30 = load i32, i32* %put_bits1.i, align 8, !tbaa !51
  %cmp.i = icmp eq i8 %29, 0
  br i1 %cmp.i, label %if.end.i, label %if.end7.i, !prof !66

if.end.i:                                         ; preds = %if.else.i
  %31 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %err.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %31, i64 0, i32 0
  %32 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !39
  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %32, i64 0, i32 5
  store i32 39, i32* %msg_code.i, align 8, !tbaa !40
  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %32, i64 0, i32 0
  %33 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !42
  %34 = bitcast %struct.jpeg_compress_struct* %31 to %struct.jpeg_common_struct*
  tail call void %33(%struct.jpeg_common_struct* %34) #3
  %.pre = load i32, i32* %gather_statistics.i, align 8, !tbaa !22
  %tobool.i105 = icmp eq i32 %.pre, 0
  br i1 %tobool.i105, label %if.end7.i, label %emit_symbol.exit, !prof !67

if.end7.i:                                        ; preds = %if.else.i, %if.end.i
  %sh_prom.i = zext i32 %conv.i to i64
  %shl.i = shl i64 1, %sh_prom.i
  %sub.i = add i64 %shl.i, 4294967295
  %and.i = and i64 %sub.i, %conv.i102
  %add.i = add i32 %30, %conv.i
  %sub8.i = sub nsw i32 24, %add.i
  %sh_prom9.i = zext i32 %sub8.i to i64
  %shl10.i = shl i64 %and.i, %sh_prom9.i
  %35 = load i64, i64* %put_buffer11.i, align 8, !tbaa !50
  %or.i = or i64 %35, %shl10.i
  %cmp1267.i = icmp sgt i32 %add.i, 7
  br i1 %cmp1267.i, label %while.body.i.preheader, label %while.end.i, !prof !68

while.body.i.preheader:                           ; preds = %if.end7.i
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i.preheader, %if.end32.i
  %put_buffer.069.i = phi i64 [ %shl33.i, %if.end32.i ], [ %or.i, %while.body.i.preheader ]
  %put_bits.068.i = phi i32 [ %sub34.i, %if.end32.i ], [ %add.i, %while.body.i.preheader ]
  %shr66.i = lshr i64 %put_buffer.069.i, 16
  %conv16.i = trunc i64 %shr66.i to i8
  %36 = load i8*, i8** %next_output_byte3, align 8, !tbaa !69
  %incdec.ptr.i = getelementptr inbounds i8, i8* %36, i64 1
  store i8* %incdec.ptr.i, i8** %next_output_byte3, align 8, !tbaa !69
  store i8 %conv16.i, i8* %36, align 1, !tbaa !58
  %37 = load i64, i64* %free_in_buffer5, align 8, !tbaa !70
  %dec.i = add i64 %37, -1
  store i64 %dec.i, i64* %free_in_buffer5, align 8, !tbaa !70
  %cmp17.i = icmp eq i64 %dec.i, 0
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i, !prof !71

if.then19.i:                                      ; preds = %while.body.i
  %38 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %dest1.i181 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %38, i64 0, i32 5
  %39 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i181, align 8, !tbaa !57
  %empty_output_buffer.i182 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %39, i64 0, i32 3
  %40 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i182, align 8, !tbaa !72
  %call.i183 = tail call i32 %40(%struct.jpeg_compress_struct* %38) #3
  %tobool.i184 = icmp eq i32 %call.i183, 0
  br i1 %tobool.i184, label %if.then.i188, label %dump_buffer.exit193, !prof !74

if.then.i188:                                     ; preds = %if.then19.i
  %41 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %err.i185 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %41, i64 0, i32 0
  %42 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i185, align 8, !tbaa !39
  %msg_code.i186 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %42, i64 0, i32 5
  store i32 22, i32* %msg_code.i186, align 8, !tbaa !40
  %error_exit.i187 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %42, i64 0, i32 0
  %43 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i187, align 8, !tbaa !42
  %44 = bitcast %struct.jpeg_compress_struct* %41 to %struct.jpeg_common_struct*
  tail call void %43(%struct.jpeg_common_struct* %44) #3
  br label %dump_buffer.exit193

dump_buffer.exit193:                              ; preds = %if.then19.i, %if.then.i188
  %45 = bitcast %struct.jpeg_destination_mgr* %39 to <2 x i64>*
  %46 = load <2 x i64>, <2 x i64>* %45, align 8, !tbaa !58
  store <2 x i64> %46, <2 x i64>* %14, align 8, !tbaa !58
  br label %if.end20.i

if.end20.i:                                       ; preds = %dump_buffer.exit193, %while.body.i
  %conv15.i = and i64 %shr66.i, 255
  %cmp21.i = icmp eq i64 %conv15.i, 255
  br i1 %cmp21.i, label %if.then23.i, label %if.end32.i, !prof !75

if.then23.i:                                      ; preds = %if.end20.i
  %47 = load i8*, i8** %next_output_byte3, align 8, !tbaa !69
  %incdec.ptr25.i = getelementptr inbounds i8, i8* %47, i64 1
  store i8* %incdec.ptr25.i, i8** %next_output_byte3, align 8, !tbaa !69
  store i8 0, i8* %47, align 1, !tbaa !58
  %48 = load i64, i64* %free_in_buffer5, align 8, !tbaa !70
  %dec27.i = add i64 %48, -1
  store i64 %dec27.i, i64* %free_in_buffer5, align 8, !tbaa !70
  %cmp28.i = icmp eq i64 %dec27.i, 0
  br i1 %cmp28.i, label %if.then30.i, label %if.end32.i, !prof !76

if.then30.i:                                      ; preds = %if.then23.i
  %49 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %dest1.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %49, i64 0, i32 5
  %50 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i, align 8, !tbaa !57
  %empty_output_buffer.i = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %50, i64 0, i32 3
  %51 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i, align 8, !tbaa !72
  %call.i = tail call i32 %51(%struct.jpeg_compress_struct* %49) #3
  %tobool.i107 = icmp eq i32 %call.i, 0
  br i1 %tobool.i107, label %if.then.i111, label %dump_buffer.exit, !prof !74

if.then.i111:                                     ; preds = %if.then30.i
  %52 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %err.i108 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %52, i64 0, i32 0
  %53 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i108, align 8, !tbaa !39
  %msg_code.i109 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %53, i64 0, i32 5
  store i32 22, i32* %msg_code.i109, align 8, !tbaa !40
  %error_exit.i110 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %53, i64 0, i32 0
  %54 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i110, align 8, !tbaa !42
  %55 = bitcast %struct.jpeg_compress_struct* %52 to %struct.jpeg_common_struct*
  tail call void %54(%struct.jpeg_common_struct* %55) #3
  br label %dump_buffer.exit

dump_buffer.exit:                                 ; preds = %if.then30.i, %if.then.i111
  %56 = bitcast %struct.jpeg_destination_mgr* %50 to <2 x i64>*
  %57 = load <2 x i64>, <2 x i64>* %56, align 8, !tbaa !58
  store <2 x i64> %57, <2 x i64>* %15, align 8, !tbaa !58
  br label %if.end32.i

if.end32.i:                                       ; preds = %dump_buffer.exit, %if.then23.i, %if.end20.i
  %shl33.i = shl i64 %put_buffer.069.i, 8
  %sub34.i = add nsw i32 %put_bits.068.i, -8
  %cmp12.i = icmp sgt i32 %sub34.i, 7
  br i1 %cmp12.i, label %while.body.i, label %while.end.loopexit.i, !prof !68

while.end.loopexit.i:                             ; preds = %if.end32.i
  %shl33.i.lcssa = phi i64 [ %shl33.i, %if.end32.i ]
  %58 = and i32 %add.i, 7
  br label %while.end.i

while.end.i:                                      ; preds = %while.end.loopexit.i, %if.end7.i
  %put_buffer.0.lcssa.i = phi i64 [ %or.i, %if.end7.i ], [ %shl33.i.lcssa, %while.end.loopexit.i ]
  %put_bits.0.lcssa.i = phi i32 [ %add.i, %if.end7.i ], [ %58, %while.end.loopexit.i ]
  store i64 %put_buffer.0.lcssa.i, i64* %put_buffer11.i, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i, i32* %put_bits1.i, align 8, !tbaa !51
  br label %emit_symbol.exit

emit_symbol.exit:                                 ; preds = %while.end.i, %if.end.i, %if.then.i
  %tobool26 = icmp eq i32 %nbits.0.lcssa, 0
  br i1 %tobool26, label %for.inc, label %if.end.i124, !prof !77

if.end.i124:                                      ; preds = %emit_symbol.exit
  %59 = load i32, i32* %gather_statistics.i, align 8, !tbaa !22
  %tobool.i123 = icmp eq i32 %59, 0
  br i1 %tobool.i123, label %if.end7.i136, label %for.inc, !prof !78

if.end7.i136:                                     ; preds = %if.end.i124
  %60 = load i32, i32* %put_bits1.i, align 8, !tbaa !51
  %conv.i114 = zext i32 %temp2.0 to i64
  %sh_prom.i125 = zext i32 %nbits.0.lcssa to i64
  %shl.i126 = shl i64 1, %sh_prom.i125
  %sub.i127 = add i64 %shl.i126, 4294967295
  %and.i128 = and i64 %sub.i127, %conv.i114
  %add.i129 = add i32 %60, %nbits.0.lcssa
  %sub8.i130 = sub nsw i32 24, %add.i129
  %sh_prom9.i131 = zext i32 %sub8.i130 to i64
  %shl10.i132 = shl i64 %and.i128, %sh_prom9.i131
  %61 = load i64, i64* %put_buffer11.i, align 8, !tbaa !50
  %or.i134 = or i64 %shl10.i132, %61
  %cmp1267.i135 = icmp sgt i32 %add.i129, 7
  br i1 %cmp1267.i135, label %while.body.i147.preheader, label %while.end.i164, !prof !68

while.body.i147.preheader:                        ; preds = %if.end7.i136
  br label %while.body.i147

while.body.i147:                                  ; preds = %while.body.i147.preheader, %if.end32.i160
  %put_buffer.069.i140 = phi i64 [ %shl33.i157, %if.end32.i160 ], [ %or.i134, %while.body.i147.preheader ]
  %put_bits.068.i141 = phi i32 [ %sub34.i158, %if.end32.i160 ], [ %add.i129, %while.body.i147.preheader ]
  %shr66.i142 = lshr i64 %put_buffer.069.i140, 16
  %conv16.i143 = trunc i64 %shr66.i142 to i8
  %62 = load i8*, i8** %next_output_byte3, align 8, !tbaa !69
  %incdec.ptr.i144 = getelementptr inbounds i8, i8* %62, i64 1
  store i8* %incdec.ptr.i144, i8** %next_output_byte3, align 8, !tbaa !69
  store i8 %conv16.i143, i8* %62, align 1, !tbaa !58
  %63 = load i64, i64* %free_in_buffer5, align 8, !tbaa !70
  %dec.i145 = add i64 %63, -1
  store i64 %dec.i145, i64* %free_in_buffer5, align 8, !tbaa !70
  %cmp17.i146 = icmp eq i64 %dec.i145, 0
  br i1 %cmp17.i146, label %if.then19.i148, label %if.end20.i151, !prof !71

if.then19.i148:                                   ; preds = %while.body.i147
  %64 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %dest1.i195 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %64, i64 0, i32 5
  %65 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i195, align 8, !tbaa !57
  %empty_output_buffer.i196 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %65, i64 0, i32 3
  %66 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i196, align 8, !tbaa !72
  %call.i197 = tail call i32 %66(%struct.jpeg_compress_struct* %64) #3
  %tobool.i198 = icmp eq i32 %call.i197, 0
  br i1 %tobool.i198, label %if.then.i202, label %dump_buffer.exit207, !prof !74

if.then.i202:                                     ; preds = %if.then19.i148
  %67 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %err.i199 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %67, i64 0, i32 0
  %68 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i199, align 8, !tbaa !39
  %msg_code.i200 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %68, i64 0, i32 5
  store i32 22, i32* %msg_code.i200, align 8, !tbaa !40
  %error_exit.i201 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %68, i64 0, i32 0
  %69 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i201, align 8, !tbaa !42
  %70 = bitcast %struct.jpeg_compress_struct* %67 to %struct.jpeg_common_struct*
  tail call void %69(%struct.jpeg_common_struct* %70) #3
  br label %dump_buffer.exit207

dump_buffer.exit207:                              ; preds = %if.then19.i148, %if.then.i202
  %71 = bitcast %struct.jpeg_destination_mgr* %65 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !tbaa !58
  store <2 x i64> %72, <2 x i64>* %16, align 8, !tbaa !58
  br label %if.end20.i151

if.end20.i151:                                    ; preds = %dump_buffer.exit207, %while.body.i147
  %conv15.i149 = and i64 %shr66.i142, 255
  %cmp21.i150 = icmp eq i64 %conv15.i149, 255
  br i1 %cmp21.i150, label %if.then23.i155, label %if.end32.i160, !prof !75

if.then23.i155:                                   ; preds = %if.end20.i151
  %73 = load i8*, i8** %next_output_byte3, align 8, !tbaa !69
  %incdec.ptr25.i152 = getelementptr inbounds i8, i8* %73, i64 1
  store i8* %incdec.ptr25.i152, i8** %next_output_byte3, align 8, !tbaa !69
  store i8 0, i8* %73, align 1, !tbaa !58
  %74 = load i64, i64* %free_in_buffer5, align 8, !tbaa !70
  %dec27.i153 = add i64 %74, -1
  store i64 %dec27.i153, i64* %free_in_buffer5, align 8, !tbaa !70
  %cmp28.i154 = icmp eq i64 %dec27.i153, 0
  br i1 %cmp28.i154, label %if.then30.i156, label %if.end32.i160, !prof !76

if.then30.i156:                                   ; preds = %if.then23.i155
  %75 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %dest1.i167 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %75, i64 0, i32 5
  %76 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i167, align 8, !tbaa !57
  %empty_output_buffer.i168 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %76, i64 0, i32 3
  %77 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i168, align 8, !tbaa !72
  %call.i169 = tail call i32 %77(%struct.jpeg_compress_struct* %75) #3
  %tobool.i170 = icmp eq i32 %call.i169, 0
  br i1 %tobool.i170, label %if.then.i174, label %dump_buffer.exit179, !prof !74

if.then.i174:                                     ; preds = %if.then30.i156
  %78 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %err.i171 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %78, i64 0, i32 0
  %79 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i171, align 8, !tbaa !39
  %msg_code.i172 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %79, i64 0, i32 5
  store i32 22, i32* %msg_code.i172, align 8, !tbaa !40
  %error_exit.i173 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %79, i64 0, i32 0
  %80 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i173, align 8, !tbaa !42
  %81 = bitcast %struct.jpeg_compress_struct* %78 to %struct.jpeg_common_struct*
  tail call void %80(%struct.jpeg_common_struct* %81) #3
  br label %dump_buffer.exit179

dump_buffer.exit179:                              ; preds = %if.then30.i156, %if.then.i174
  %82 = bitcast %struct.jpeg_destination_mgr* %76 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !tbaa !58
  store <2 x i64> %83, <2 x i64>* %17, align 8, !tbaa !58
  br label %if.end32.i160

if.end32.i160:                                    ; preds = %dump_buffer.exit179, %if.then23.i155, %if.end20.i151
  %shl33.i157 = shl i64 %put_buffer.069.i140, 8
  %sub34.i158 = add nsw i32 %put_bits.068.i141, -8
  %cmp12.i159 = icmp sgt i32 %sub34.i158, 7
  br i1 %cmp12.i159, label %while.body.i147, label %while.end.loopexit.i161, !prof !68

while.end.loopexit.i161:                          ; preds = %if.end32.i160
  %shl33.i157.lcssa = phi i64 [ %shl33.i157, %if.end32.i160 ]
  %84 = and i32 %add.i129, 7
  br label %while.end.i164

while.end.i164:                                   ; preds = %while.end.loopexit.i161, %if.end7.i136
  %put_buffer.0.lcssa.i162 = phi i64 [ %or.i134, %if.end7.i136 ], [ %shl33.i157.lcssa, %while.end.loopexit.i161 ]
  %put_bits.0.lcssa.i163 = phi i32 [ %add.i129, %if.end7.i136 ], [ %84, %while.end.loopexit.i161 ]
  store i64 %put_buffer.0.lcssa.i162, i64* %put_buffer11.i, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i163, i32* %put_bits1.i, align 8, !tbaa !51
  br label %for.inc

for.inc:                                          ; preds = %while.end.i164, %if.end.i124, %emit_symbol.exit
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %85 = load i32, i32* %blocks_in_MCU, align 8, !tbaa !60
  %86 = sext i32 %85 to i64
  %cmp8 = icmp slt i64 %indvars.iv.next, %86
  br i1 %cmp8, label %for.body, label %for.end.loopexit, !prof !61

for.end.loopexit:                                 ; preds = %for.inc
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %87 = bitcast %struct.jpeg_destination_mgr** %dest to <2 x i64>**
  %88 = load <2 x i64>*, <2 x i64>** %87, align 8, !tbaa !57
  %89 = bitcast i8** %next_output_byte3 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 8, !tbaa !58
  store <2 x i64> %90, <2 x i64>* %88, align 8, !tbaa !58
  %91 = load i32, i32* %restart_interval, align 8, !tbaa !52
  %tobool37 = icmp eq i32 %91, 0
  br i1 %tobool37, label %if.end51, label %if.then38, !prof !59

if.then38:                                        ; preds = %for.end
  %restarts_to_go39 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 12
  %92 = bitcast i32* %restarts_to_go39 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = trunc i64 %93 to i32
  %cmp40 = icmp eq i32 %94, 0
  br i1 %cmp40, label %if.then42, label %if.end48

if.then42:                                        ; preds = %if.then38
  %95 = lshr i64 %93, 32
  %96 = trunc i64 %95 to i32
  store i32 %91, i32* %restarts_to_go39, align 8, !tbaa !53
  %next_restart_num45 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 13
  %inc46 = add nsw i32 %96, 1
  %and = and i32 %inc46, 7
  store i32 %and, i32* %next_restart_num45, align 4, !tbaa !54
  br label %if.end48

if.end48:                                         ; preds = %if.then42, %if.then38
  %97 = phi i32 [ %91, %if.then42 ], [ %94, %if.then38 ]
  %dec50 = add i32 %97, -1
  store i32 %dec50, i32* %restarts_to_go39, align 8, !tbaa !53
  br label %if.end51

if.end51:                                         ; preds = %for.end, %if.end48
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @encode_mcu_AC_first(%struct.jpeg_compress_struct* nocapture readonly %cinfo, [64 x i16]** nocapture readonly %MCU_data) #0 !prof !79 {
entry:
  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59
  %0 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to %struct.phuff_entropy_encoder**
  %1 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %0, align 8, !tbaa !14
  %Se2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 48
  %2 = load i32, i32* %Se2, align 8, !tbaa !80
  %Al3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 50
  %3 = load i32, i32* %Al3, align 8, !tbaa !56
  %dest = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 5
  %4 = bitcast %struct.jpeg_destination_mgr** %dest to <2 x i64>**
  %5 = load <2 x i64>*, <2 x i64>** %4, align 8, !tbaa !57
  %next_output_byte4 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 2
  %6 = load <2 x i64>, <2 x i64>* %5, align 8, !tbaa !58
  %free_in_buffer6 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 3
  %7 = bitcast i8** %next_output_byte4 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %7, align 8, !tbaa !58
  %restart_interval = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 29
  %8 = load i32, i32* %restart_interval, align 8, !tbaa !52
  %tobool = icmp eq i32 %8, 0
  br i1 %tobool, label %if.end8, label %if.then, !prof !81

if.then:                                          ; preds = %entry
  %restarts_to_go = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 12
  %9 = bitcast i32* %restarts_to_go to i64*
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %cmp = icmp eq i32 %11, 0
  br i1 %cmp, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.then
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  tail call fastcc void @emit_restart(%struct.phuff_entropy_encoder* nonnull %1, i32 %13)
  br label %if.end8

if.end8:                                          ; preds = %entry, %if.then, %if.then7
  %14 = load [64 x i16]*, [64 x i16]** %MCU_data, align 8, !tbaa !18
  %Ss = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 47
  %15 = load i32, i32* %Ss, align 4, !tbaa !23
  %cmp9811 = icmp sgt i32 %15, %2
  br i1 %cmp9811, label %if.end52, label %for.body.lr.ph, !prof !82

for.body.lr.ph:                                   ; preds = %if.end8
  %EOBRUN = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 9
  %ac_tbl_no40 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 8
  %gather_statistics.i172 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 1
  %put_bits1.i188 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %cinfo.i190 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %put_buffer11.i206 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %BE.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 10
  %bit_buffer.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 11
  %16 = sext i32 %15 to i64
  %17 = sext i32 %2 to i64
  %18 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %19 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %20 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %21 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %22 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %23 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %24 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %25 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %26 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %27 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %28 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %29 = bitcast i8** %next_output_byte4 to <2 x i64>*
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %16, %for.body.lr.ph ]
  %r.0812 = phi i32 [ %r.2, %for.inc ], [ 0, %for.body.lr.ph ]
  %arrayidx10 = getelementptr inbounds [0 x i32], [0 x i32]* @jpeg_natural_order, i64 0, i64 %indvars.iv
  %30 = load i32, i32* %arrayidx10, align 4, !tbaa !34
  %idxprom11 = sext i32 %30 to i64
  %arrayidx12 = getelementptr inbounds [64 x i16], [64 x i16]* %14, i64 0, i64 %idxprom11
  %31 = load i16, i16* %arrayidx12, align 2, !tbaa !62
  %conv = sext i16 %31 to i32
  %cmp13 = icmp eq i16 %31, 0
  br i1 %cmp13, label %if.then15, label %if.end16, !prof !83

if.then15:                                        ; preds = %for.body
  %inc = add nsw i32 %r.0812, 1
  br label %for.inc

if.end16:                                         ; preds = %for.body
  %cmp17 = icmp slt i16 %31, 0
  br i1 %cmp17, label %if.then19, label %if.else, !prof !84

if.then19:                                        ; preds = %if.end16
  %sub = sub nsw i32 0, %conv
  %shr = ashr i32 %sub, %3
  %neg = xor i32 %shr, -1
  br label %if.end21

if.else:                                          ; preds = %if.end16
  %shr20 = ashr i32 %conv, %3
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then19
  %temp2.0 = phi i32 [ %neg, %if.then19 ], [ %shr20, %if.else ]
  %temp.0 = phi i32 [ %shr, %if.then19 ], [ %shr20, %if.else ]
  %cmp22 = icmp eq i32 %temp.0, 0
  br i1 %cmp22, label %if.then24, label %if.end26, !prof !85

if.then24:                                        ; preds = %if.end21
  %inc25 = add nsw i32 %r.0812, 1
  br label %for.inc

if.end26:                                         ; preds = %if.end21
  %32 = load i32, i32* %EOBRUN, align 4, !tbaa !48
  %cmp27 = icmp eq i32 %32, 0
  br i1 %cmp27, label %while.cond.preheader, label %while.cond.i.preheader, !prof !86

while.cond.i.preheader:                           ; preds = %if.end26
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i.preheader, %while.cond.i
  %temp.0.i = phi i32 [ %shr.i, %while.cond.i ], [ %32, %while.cond.i.preheader ]
  %nbits.0.i = phi i32 [ %inc.i, %while.cond.i ], [ 0, %while.cond.i.preheader ]
  %shr.i = ashr i32 %temp.0.i, 1
  %tobool.i = icmp eq i32 %shr.i, 0
  %inc.i = add nuw nsw i32 %nbits.0.i, 1
  br i1 %tobool.i, label %while.end.i, label %while.cond.i, !prof !87

while.end.i:                                      ; preds = %while.cond.i
  %nbits.0.i.lcssa = phi i32 [ %nbits.0.i, %while.cond.i ]
  %33 = load i32, i32* %ac_tbl_no40, align 8, !tbaa !46
  %shl.i = shl i32 %nbits.0.i.lcssa, 4
  %34 = load i32, i32* %gather_statistics.i172, align 8, !tbaa !22
  %tobool.i.i = icmp eq i32 %34, 0
  br i1 %tobool.i.i, label %if.else.i.i, label %if.then.i.i, !prof !64

if.then.i.i:                                      ; preds = %while.end.i
  %idxprom.i.i = sext i32 %shl.i to i64
  %idxprom1.i.i = sext i32 %33 to i64
  %arrayidx.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i.i
  %35 = load i64*, i64** %arrayidx.i.i, align 8, !tbaa !18
  %arrayidx2.i.i = getelementptr inbounds i64, i64* %35, i64 %idxprom.i.i
  %36 = load i64, i64* %arrayidx2.i.i, align 8, !tbaa !65
  %inc.i.i = add nsw i64 %36, 1
  store i64 %inc.i.i, i64* %arrayidx2.i.i, align 8, !tbaa !65
  br label %emit_symbol.exit.i

if.else.i.i:                                      ; preds = %while.end.i
  %idxprom3.i.i = sext i32 %33 to i64
  %arrayidx4.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i.i
  %37 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i.i, align 8, !tbaa !18
  %idxprom5.i.i = sext i32 %shl.i to i64
  %arrayidx6.i.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %37, i64 0, i32 0, i64 %idxprom5.i.i
  %38 = load i32, i32* %arrayidx6.i.i, align 4, !tbaa !34
  %arrayidx8.i.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %37, i64 0, i32 1, i64 %idxprom5.i.i
  %39 = load i8, i8* %arrayidx8.i.i, align 1, !tbaa !58
  %conv.i.i = sext i8 %39 to i32
  %conv.i416 = zext i32 %38 to i64
  %40 = load i32, i32* %put_bits1.i188, align 8, !tbaa !51
  %cmp.i418 = icmp eq i8 %39, 0
  br i1 %cmp.i418, label %if.end.i426, label %if.end7.i438, !prof !66

if.end.i426:                                      ; preds = %if.else.i.i
  %41 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i420 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %41, i64 0, i32 0
  %42 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i420, align 8, !tbaa !39
  %msg_code.i421 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %42, i64 0, i32 5
  store i32 39, i32* %msg_code.i421, align 8, !tbaa !40
  %error_exit.i422 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %42, i64 0, i32 0
  %43 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i422, align 8, !tbaa !42
  %44 = bitcast %struct.jpeg_compress_struct* %41 to %struct.jpeg_common_struct*
  tail call void %43(%struct.jpeg_common_struct* %44) #3
  %.pre = load i32, i32* %gather_statistics.i172, align 8, !tbaa !22
  %tobool.i425 = icmp eq i32 %.pre, 0
  br i1 %tobool.i425, label %if.end7.i438, label %emit_symbol.exit.i, !prof !67

if.end7.i438:                                     ; preds = %if.else.i.i, %if.end.i426
  %sh_prom.i427 = zext i32 %conv.i.i to i64
  %shl.i428 = shl i64 1, %sh_prom.i427
  %sub.i429 = add i64 %shl.i428, 4294967295
  %and.i430 = and i64 %sub.i429, %conv.i416
  %add.i431 = add i32 %40, %conv.i.i
  %sub8.i432 = sub nsw i32 24, %add.i431
  %sh_prom9.i433 = zext i32 %sub8.i432 to i64
  %shl10.i434 = shl i64 %and.i430, %sh_prom9.i433
  %45 = load i64, i64* %put_buffer11.i206, align 8, !tbaa !50
  %or.i436 = or i64 %45, %shl10.i434
  %cmp1267.i437 = icmp sgt i32 %add.i431, 7
  br i1 %cmp1267.i437, label %while.body.i449.preheader, label %while.end.i466, !prof !68

while.body.i449.preheader:                        ; preds = %if.end7.i438
  br label %while.body.i449

while.body.i449:                                  ; preds = %while.body.i449.preheader, %if.end32.i462
  %put_buffer.069.i442 = phi i64 [ %shl33.i459, %if.end32.i462 ], [ %or.i436, %while.body.i449.preheader ]
  %put_bits.068.i443 = phi i32 [ %sub34.i460, %if.end32.i462 ], [ %add.i431, %while.body.i449.preheader ]
  %shr66.i444 = lshr i64 %put_buffer.069.i442, 16
  %conv16.i445 = trunc i64 %shr66.i444 to i8
  %46 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i446 = getelementptr inbounds i8, i8* %46, i64 1
  store i8* %incdec.ptr.i446, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i445, i8* %46, align 1, !tbaa !58
  %47 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i447 = add i64 %47, -1
  store i64 %dec.i447, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i448 = icmp eq i64 %dec.i447, 0
  br i1 %cmp17.i448, label %if.then19.i450, label %if.end20.i453, !prof !71

if.then19.i450:                                   ; preds = %while.body.i449
  %48 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %dest1.i751 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %48, i64 0, i32 5
  %49 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i751, align 8, !tbaa !57
  %empty_output_buffer.i752 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %49, i64 0, i32 3
  %50 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i752, align 8, !tbaa !72
  %call.i753 = tail call i32 %50(%struct.jpeg_compress_struct* %48) #3
  %tobool.i754 = icmp eq i32 %call.i753, 0
  br i1 %tobool.i754, label %if.then.i758, label %dump_buffer.exit763, !prof !74

if.then.i758:                                     ; preds = %if.then19.i450
  %51 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i755 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %51, i64 0, i32 0
  %52 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i755, align 8, !tbaa !39
  %msg_code.i756 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %52, i64 0, i32 5
  store i32 22, i32* %msg_code.i756, align 8, !tbaa !40
  %error_exit.i757 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %52, i64 0, i32 0
  %53 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i757, align 8, !tbaa !42
  %54 = bitcast %struct.jpeg_compress_struct* %51 to %struct.jpeg_common_struct*
  tail call void %53(%struct.jpeg_common_struct* %54) #3
  br label %dump_buffer.exit763

dump_buffer.exit763:                              ; preds = %if.then19.i450, %if.then.i758
  %55 = bitcast %struct.jpeg_destination_mgr* %49 to <2 x i64>*
  %56 = load <2 x i64>, <2 x i64>* %55, align 8, !tbaa !58
  store <2 x i64> %56, <2 x i64>* %24, align 8, !tbaa !58
  br label %if.end20.i453

if.end20.i453:                                    ; preds = %dump_buffer.exit763, %while.body.i449
  %conv15.i451 = and i64 %shr66.i444, 255
  %cmp21.i452 = icmp eq i64 %conv15.i451, 255
  br i1 %cmp21.i452, label %if.then23.i457, label %if.end32.i462, !prof !75

if.then23.i457:                                   ; preds = %if.end20.i453
  %57 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i454 = getelementptr inbounds i8, i8* %57, i64 1
  store i8* %incdec.ptr25.i454, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %57, align 1, !tbaa !58
  %58 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i455 = add i64 %58, -1
  store i64 %dec27.i455, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i456 = icmp eq i64 %dec27.i455, 0
  br i1 %cmp28.i456, label %if.then30.i458, label %if.end32.i462, !prof !76

if.then30.i458:                                   ; preds = %if.then23.i457
  %59 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %dest1.i469 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %59, i64 0, i32 5
  %60 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i469, align 8, !tbaa !57
  %empty_output_buffer.i470 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %60, i64 0, i32 3
  %61 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i470, align 8, !tbaa !72
  %call.i471 = tail call i32 %61(%struct.jpeg_compress_struct* %59) #3
  %tobool.i472 = icmp eq i32 %call.i471, 0
  br i1 %tobool.i472, label %if.then.i476, label %dump_buffer.exit481, !prof !74

if.then.i476:                                     ; preds = %if.then30.i458
  %62 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i473 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %62, i64 0, i32 0
  %63 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i473, align 8, !tbaa !39
  %msg_code.i474 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %63, i64 0, i32 5
  store i32 22, i32* %msg_code.i474, align 8, !tbaa !40
  %error_exit.i475 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %63, i64 0, i32 0
  %64 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i475, align 8, !tbaa !42
  %65 = bitcast %struct.jpeg_compress_struct* %62 to %struct.jpeg_common_struct*
  tail call void %64(%struct.jpeg_common_struct* %65) #3
  br label %dump_buffer.exit481

dump_buffer.exit481:                              ; preds = %if.then30.i458, %if.then.i476
  %66 = bitcast %struct.jpeg_destination_mgr* %60 to <2 x i64>*
  %67 = load <2 x i64>, <2 x i64>* %66, align 8, !tbaa !58
  store <2 x i64> %67, <2 x i64>* %25, align 8, !tbaa !58
  br label %if.end32.i462

if.end32.i462:                                    ; preds = %dump_buffer.exit481, %if.then23.i457, %if.end20.i453
  %shl33.i459 = shl i64 %put_buffer.069.i442, 8
  %sub34.i460 = add nsw i32 %put_bits.068.i443, -8
  %cmp12.i461 = icmp sgt i32 %sub34.i460, 7
  br i1 %cmp12.i461, label %while.body.i449, label %while.end.loopexit.i463, !prof !68

while.end.loopexit.i463:                          ; preds = %if.end32.i462
  %shl33.i459.lcssa = phi i64 [ %shl33.i459, %if.end32.i462 ]
  %68 = and i32 %add.i431, 7
  br label %while.end.i466

while.end.i466:                                   ; preds = %while.end.loopexit.i463, %if.end7.i438
  %put_buffer.0.lcssa.i464 = phi i64 [ %or.i436, %if.end7.i438 ], [ %shl33.i459.lcssa, %while.end.loopexit.i463 ]
  %put_bits.0.lcssa.i465 = phi i32 [ %add.i431, %if.end7.i438 ], [ %68, %while.end.loopexit.i463 ]
  store i64 %put_buffer.0.lcssa.i464, i64* %put_buffer11.i206, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i465, i32* %put_bits1.i188, align 8, !tbaa !51
  br label %emit_symbol.exit.i

emit_symbol.exit.i:                               ; preds = %while.end.i466, %if.end.i426, %if.then.i.i
  %tobool2.i = icmp eq i32 %nbits.0.i.lcssa, 0
  br i1 %tobool2.i, label %if.end.i, label %if.end.i492, !prof !88

if.end.i492:                                      ; preds = %emit_symbol.exit.i
  %69 = load i32, i32* %gather_statistics.i172, align 8, !tbaa !22
  %tobool.i491 = icmp eq i32 %69, 0
  br i1 %tobool.i491, label %if.end7.i504, label %if.end.i, !prof !78

if.end7.i504:                                     ; preds = %if.end.i492
  %70 = load i32, i32* %put_bits1.i188, align 8, !tbaa !51
  %71 = load i32, i32* %EOBRUN, align 4, !tbaa !48
  %conv.i482 = zext i32 %71 to i64
  %sh_prom.i493 = zext i32 %nbits.0.i.lcssa to i64
  %shl.i494 = shl i64 1, %sh_prom.i493
  %sub.i495 = add i64 %shl.i494, 4294967295
  %and.i496 = and i64 %conv.i482, %sub.i495
  %add.i497 = add i32 %70, %nbits.0.i.lcssa
  %sub8.i498 = sub nsw i32 24, %add.i497
  %sh_prom9.i499 = zext i32 %sub8.i498 to i64
  %shl10.i500 = shl i64 %and.i496, %sh_prom9.i499
  %72 = load i64, i64* %put_buffer11.i206, align 8, !tbaa !50
  %or.i502 = or i64 %shl10.i500, %72
  %cmp1267.i503 = icmp sgt i32 %add.i497, 7
  br i1 %cmp1267.i503, label %while.body.i515.preheader, label %while.end.i532, !prof !68

while.body.i515.preheader:                        ; preds = %if.end7.i504
  br label %while.body.i515

while.body.i515:                                  ; preds = %while.body.i515.preheader, %if.end32.i528
  %put_buffer.069.i508 = phi i64 [ %shl33.i525, %if.end32.i528 ], [ %or.i502, %while.body.i515.preheader ]
  %put_bits.068.i509 = phi i32 [ %sub34.i526, %if.end32.i528 ], [ %add.i497, %while.body.i515.preheader ]
  %shr66.i510 = lshr i64 %put_buffer.069.i508, 16
  %conv16.i511 = trunc i64 %shr66.i510 to i8
  %73 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i512 = getelementptr inbounds i8, i8* %73, i64 1
  store i8* %incdec.ptr.i512, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i511, i8* %73, align 1, !tbaa !58
  %74 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i513 = add i64 %74, -1
  store i64 %dec.i513, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i514 = icmp eq i64 %dec.i513, 0
  br i1 %cmp17.i514, label %if.then19.i516, label %if.end20.i519, !prof !71

if.then19.i516:                                   ; preds = %while.body.i515
  %75 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %dest1.i765 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %75, i64 0, i32 5
  %76 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i765, align 8, !tbaa !57
  %empty_output_buffer.i766 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %76, i64 0, i32 3
  %77 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i766, align 8, !tbaa !72
  %call.i767 = tail call i32 %77(%struct.jpeg_compress_struct* %75) #3
  %tobool.i768 = icmp eq i32 %call.i767, 0
  br i1 %tobool.i768, label %if.then.i772, label %dump_buffer.exit777, !prof !74

if.then.i772:                                     ; preds = %if.then19.i516
  %78 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i769 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %78, i64 0, i32 0
  %79 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i769, align 8, !tbaa !39
  %msg_code.i770 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %79, i64 0, i32 5
  store i32 22, i32* %msg_code.i770, align 8, !tbaa !40
  %error_exit.i771 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %79, i64 0, i32 0
  %80 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i771, align 8, !tbaa !42
  %81 = bitcast %struct.jpeg_compress_struct* %78 to %struct.jpeg_common_struct*
  tail call void %80(%struct.jpeg_common_struct* %81) #3
  br label %dump_buffer.exit777

dump_buffer.exit777:                              ; preds = %if.then19.i516, %if.then.i772
  %82 = bitcast %struct.jpeg_destination_mgr* %76 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !tbaa !58
  store <2 x i64> %83, <2 x i64>* %28, align 8, !tbaa !58
  br label %if.end20.i519

if.end20.i519:                                    ; preds = %dump_buffer.exit777, %while.body.i515
  %conv15.i517 = and i64 %shr66.i510, 255
  %cmp21.i518 = icmp eq i64 %conv15.i517, 255
  br i1 %cmp21.i518, label %if.then23.i523, label %if.end32.i528, !prof !75

if.then23.i523:                                   ; preds = %if.end20.i519
  %84 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i520 = getelementptr inbounds i8, i8* %84, i64 1
  store i8* %incdec.ptr25.i520, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %84, align 1, !tbaa !58
  %85 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i521 = add i64 %85, -1
  store i64 %dec27.i521, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i522 = icmp eq i64 %dec27.i521, 0
  br i1 %cmp28.i522, label %if.then30.i524, label %if.end32.i528, !prof !76

if.then30.i524:                                   ; preds = %if.then23.i523
  %86 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %dest1.i535 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %86, i64 0, i32 5
  %87 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i535, align 8, !tbaa !57
  %empty_output_buffer.i536 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %87, i64 0, i32 3
  %88 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i536, align 8, !tbaa !72
  %call.i537 = tail call i32 %88(%struct.jpeg_compress_struct* %86) #3
  %tobool.i538 = icmp eq i32 %call.i537, 0
  br i1 %tobool.i538, label %if.then.i542, label %dump_buffer.exit547, !prof !74

if.then.i542:                                     ; preds = %if.then30.i524
  %89 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i539 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %89, i64 0, i32 0
  %90 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i539, align 8, !tbaa !39
  %msg_code.i540 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %90, i64 0, i32 5
  store i32 22, i32* %msg_code.i540, align 8, !tbaa !40
  %error_exit.i541 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %90, i64 0, i32 0
  %91 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i541, align 8, !tbaa !42
  %92 = bitcast %struct.jpeg_compress_struct* %89 to %struct.jpeg_common_struct*
  tail call void %91(%struct.jpeg_common_struct* %92) #3
  br label %dump_buffer.exit547

dump_buffer.exit547:                              ; preds = %if.then30.i524, %if.then.i542
  %93 = bitcast %struct.jpeg_destination_mgr* %87 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !tbaa !58
  store <2 x i64> %94, <2 x i64>* %29, align 8, !tbaa !58
  br label %if.end32.i528

if.end32.i528:                                    ; preds = %dump_buffer.exit547, %if.then23.i523, %if.end20.i519
  %shl33.i525 = shl i64 %put_buffer.069.i508, 8
  %sub34.i526 = add nsw i32 %put_bits.068.i509, -8
  %cmp12.i527 = icmp sgt i32 %sub34.i526, 7
  br i1 %cmp12.i527, label %while.body.i515, label %while.end.loopexit.i529, !prof !68

while.end.loopexit.i529:                          ; preds = %if.end32.i528
  %shl33.i525.lcssa = phi i64 [ %shl33.i525, %if.end32.i528 ]
  %95 = and i32 %add.i497, 7
  br label %while.end.i532

while.end.i532:                                   ; preds = %while.end.loopexit.i529, %if.end7.i504
  %put_buffer.0.lcssa.i530 = phi i64 [ %or.i502, %if.end7.i504 ], [ %shl33.i525.lcssa, %while.end.loopexit.i529 ]
  %put_bits.0.lcssa.i531 = phi i32 [ %add.i497, %if.end7.i504 ], [ %95, %while.end.loopexit.i529 ]
  store i64 %put_buffer.0.lcssa.i530, i64* %put_buffer11.i206, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i531, i32* %put_bits1.i188, align 8, !tbaa !51
  br label %if.end.i

if.end.i:                                         ; preds = %while.end.i532, %if.end.i492, %emit_symbol.exit.i
  store i32 0, i32* %EOBRUN, align 4, !tbaa !48
  %96 = load i32, i32* %BE.i, align 8, !tbaa !49
  %97 = load i32, i32* %gather_statistics.i172, align 8, !tbaa !22
  %tobool.i131 = icmp eq i32 %97, 0
  %cmp.i132 = icmp ne i32 %96, 0
  %or.cond.i = and i1 %cmp.i132, %tobool.i131
  br i1 %or.cond.i, label %while.body.preheader.i, label %emit_eobrun.exit, !prof !89

while.body.preheader.i:                           ; preds = %if.end.i
  %98 = load i8*, i8** %bit_buffer.i, align 8, !tbaa !19
  br label %while.body.i

while.body.i:                                     ; preds = %emit_bits.exit.while.body_crit_edge.i, %while.body.preheader.i
  %99 = phi i32 [ %.pre.i, %emit_bits.exit.while.body_crit_edge.i ], [ 0, %while.body.preheader.i ]
  %bufstart.addr.0.i = phi i8* [ %incdec.ptr.i, %emit_bits.exit.while.body_crit_edge.i ], [ %98, %while.body.preheader.i ]
  %nbits.addr.0.i = phi i32 [ %dec.i, %emit_bits.exit.while.body_crit_edge.i ], [ %96, %while.body.preheader.i ]
  %tobool.i.i133 = icmp eq i32 %99, 0
  br i1 %tobool.i.i133, label %if.end7.i.i, label %emit_bits.exit.i, !prof !78

if.end7.i.i:                                      ; preds = %while.body.i
  %100 = load i32, i32* %put_bits1.i188, align 8, !tbaa !51
  %101 = load i8, i8* %bufstart.addr.0.i, align 1, !tbaa !58
  %conv5.i = zext i8 %101 to i64
  %and.i.i = and i64 %conv5.i, 1
  %add.i.i = add i32 %100, 1
  %sub8.i.i = sub i32 23, %100
  %sh_prom9.i.i = zext i32 %sub8.i.i to i64
  %shl10.i.i = shl i64 %and.i.i, %sh_prom9.i.i
  %102 = load i64, i64* %put_buffer11.i206, align 8, !tbaa !50
  %or.i.i = or i64 %shl10.i.i, %102
  %cmp1267.i.i = icmp sgt i32 %add.i.i, 7
  br i1 %cmp1267.i.i, label %while.body.i.i.preheader, label %while.end.i.i, !prof !68

while.body.i.i.preheader:                         ; preds = %if.end7.i.i
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i.preheader, %if.end32.i.i
  %put_buffer.069.i.i = phi i64 [ %shl33.i.i, %if.end32.i.i ], [ %or.i.i, %while.body.i.i.preheader ]
  %put_bits.068.i.i = phi i32 [ %sub34.i.i, %if.end32.i.i ], [ %add.i.i, %while.body.i.i.preheader ]
  %shr66.i.i = lshr i64 %put_buffer.069.i.i, 16
  %conv16.i.i = trunc i64 %shr66.i.i to i8
  %103 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i.i = getelementptr inbounds i8, i8* %103, i64 1
  store i8* %incdec.ptr.i.i, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i.i, i8* %103, align 1, !tbaa !58
  %104 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i.i = add i64 %104, -1
  store i64 %dec.i.i, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp17.i.i, label %if.then19.i.i, label %if.end20.i.i, !prof !71

if.then19.i.i:                                    ; preds = %while.body.i.i
  %105 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %dest1.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %105, i64 0, i32 5
  %106 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i, align 8, !tbaa !57
  %empty_output_buffer.i = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %106, i64 0, i32 3
  %107 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i, align 8, !tbaa !72
  %call.i = tail call i32 %107(%struct.jpeg_compress_struct* %105) #3
  %tobool.i135 = icmp eq i32 %call.i, 0
  br i1 %tobool.i135, label %if.then.i, label %dump_buffer.exit, !prof !74

if.then.i:                                        ; preds = %if.then19.i.i
  %108 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %108, i64 0, i32 0
  %109 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !39
  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %109, i64 0, i32 5
  store i32 22, i32* %msg_code.i, align 8, !tbaa !40
  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %109, i64 0, i32 0
  %110 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !42
  %111 = bitcast %struct.jpeg_compress_struct* %108 to %struct.jpeg_common_struct*
  tail call void %110(%struct.jpeg_common_struct* %111) #3
  br label %dump_buffer.exit

dump_buffer.exit:                                 ; preds = %if.then19.i.i, %if.then.i
  %112 = bitcast %struct.jpeg_destination_mgr* %106 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !tbaa !58
  store <2 x i64> %113, <2 x i64>* %26, align 8, !tbaa !58
  br label %if.end20.i.i

if.end20.i.i:                                     ; preds = %dump_buffer.exit, %while.body.i.i
  %conv15.i.i = and i64 %shr66.i.i, 255
  %cmp21.i.i = icmp eq i64 %conv15.i.i, 255
  br i1 %cmp21.i.i, label %if.then23.i.i, label %if.end32.i.i, !prof !75

if.then23.i.i:                                    ; preds = %if.end20.i.i
  %114 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i.i = getelementptr inbounds i8, i8* %114, i64 1
  store i8* %incdec.ptr25.i.i, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %114, align 1, !tbaa !58
  %115 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i.i = add i64 %115, -1
  store i64 %dec27.i.i, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i.i = icmp eq i64 %dec27.i.i, 0
  br i1 %cmp28.i.i, label %if.then30.i.i, label %if.end32.i.i, !prof !76

if.then30.i.i:                                    ; preds = %if.then23.i.i
  %116 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %dest1.i549 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %116, i64 0, i32 5
  %117 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i549, align 8, !tbaa !57
  %empty_output_buffer.i550 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %117, i64 0, i32 3
  %118 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i550, align 8, !tbaa !72
  %call.i551 = tail call i32 %118(%struct.jpeg_compress_struct* %116) #3
  %tobool.i552 = icmp eq i32 %call.i551, 0
  br i1 %tobool.i552, label %if.then.i556, label %dump_buffer.exit561, !prof !74

if.then.i556:                                     ; preds = %if.then30.i.i
  %119 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i553 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %119, i64 0, i32 0
  %120 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i553, align 8, !tbaa !39
  %msg_code.i554 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %120, i64 0, i32 5
  store i32 22, i32* %msg_code.i554, align 8, !tbaa !40
  %error_exit.i555 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %120, i64 0, i32 0
  %121 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i555, align 8, !tbaa !42
  %122 = bitcast %struct.jpeg_compress_struct* %119 to %struct.jpeg_common_struct*
  tail call void %121(%struct.jpeg_common_struct* %122) #3
  br label %dump_buffer.exit561

dump_buffer.exit561:                              ; preds = %if.then30.i.i, %if.then.i556
  %123 = bitcast %struct.jpeg_destination_mgr* %117 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !tbaa !58
  store <2 x i64> %124, <2 x i64>* %27, align 8, !tbaa !58
  br label %if.end32.i.i

if.end32.i.i:                                     ; preds = %dump_buffer.exit561, %if.then23.i.i, %if.end20.i.i
  %shl33.i.i = shl i64 %put_buffer.069.i.i, 8
  %sub34.i.i = add nsw i32 %put_bits.068.i.i, -8
  %cmp12.i.i = icmp sgt i32 %sub34.i.i, 7
  br i1 %cmp12.i.i, label %while.body.i.i, label %while.end.loopexit.i.i, !prof !68

while.end.loopexit.i.i:                           ; preds = %if.end32.i.i
  %shl33.i.i.lcssa = phi i64 [ %shl33.i.i, %if.end32.i.i ]
  %125 = and i32 %add.i.i, 7
  br label %while.end.i.i

while.end.i.i:                                    ; preds = %while.end.loopexit.i.i, %if.end7.i.i
  %put_buffer.0.lcssa.i.i = phi i64 [ %or.i.i, %if.end7.i.i ], [ %shl33.i.i.lcssa, %while.end.loopexit.i.i ]
  %put_bits.0.lcssa.i.i = phi i32 [ %add.i.i, %if.end7.i.i ], [ %125, %while.end.loopexit.i.i ]
  store i64 %put_buffer.0.lcssa.i.i, i64* %put_buffer11.i206, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i.i, i32* %put_bits1.i188, align 8, !tbaa !51
  br label %emit_bits.exit.i

emit_bits.exit.i:                                 ; preds = %while.end.i.i, %while.body.i
  %dec.i = add i32 %nbits.addr.0.i, -1
  %cmp.old.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.old.i, label %emit_eobrun.exit.loopexit, label %emit_bits.exit.while.body_crit_edge.i, !prof !90

emit_bits.exit.while.body_crit_edge.i:            ; preds = %emit_bits.exit.i
  %incdec.ptr.i = getelementptr inbounds i8, i8* %bufstart.addr.0.i, i64 1
  %.pre.i = load i32, i32* %gather_statistics.i172, align 8, !tbaa !22
  br label %while.body.i

emit_eobrun.exit.loopexit:                        ; preds = %emit_bits.exit.i
  br label %emit_eobrun.exit

emit_eobrun.exit:                                 ; preds = %emit_eobrun.exit.loopexit, %if.end.i
  store i32 0, i32* %BE.i, align 8, !tbaa !49
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %emit_eobrun.exit, %if.end26
  %cmp31809 = icmp sgt i32 %r.0812, 15
  br i1 %cmp31809, label %while.body.preheader, label %while.cond34.preheader, !prof !91

while.body.preheader:                             ; preds = %while.cond.preheader
  br label %while.body

while.cond34.preheader.loopexit:                  ; preds = %emit_symbol.exit
  %126 = and i32 %r.0812, 15
  br label %while.cond34.preheader

while.cond34.preheader:                           ; preds = %while.cond34.preheader.loopexit, %while.cond.preheader
  %r.1.lcssa = phi i32 [ %r.0812, %while.cond.preheader ], [ %126, %while.cond34.preheader.loopexit ]
  br label %while.cond34

while.body:                                       ; preds = %while.body.preheader, %emit_symbol.exit
  %r.1810 = phi i32 [ %sub33, %emit_symbol.exit ], [ %r.0812, %while.body.preheader ]
  %127 = load i32, i32* %ac_tbl_no40, align 8, !tbaa !46
  %128 = load i32, i32* %gather_statistics.i172, align 8, !tbaa !22
  %tobool.i138 = icmp eq i32 %128, 0
  %idxprom3.i = sext i32 %127 to i64
  br i1 %tobool.i138, label %if.else.i, label %if.then.i140, !prof !64

if.then.i140:                                     ; preds = %while.body
  %arrayidx.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom3.i
  %129 = load i64*, i64** %arrayidx.i, align 8, !tbaa !18
  %arrayidx2.i = getelementptr inbounds i64, i64* %129, i64 240
  %130 = load i64, i64* %arrayidx2.i, align 8, !tbaa !65
  %inc.i139 = add nsw i64 %130, 1
  store i64 %inc.i139, i64* %arrayidx2.i, align 8, !tbaa !65
  br label %emit_symbol.exit

if.else.i:                                        ; preds = %while.body
  %arrayidx4.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i
  %131 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i, align 8, !tbaa !18
  %arrayidx6.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %131, i64 0, i32 0, i64 240
  %132 = load i32, i32* %arrayidx6.i, align 4, !tbaa !34
  %arrayidx8.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %131, i64 0, i32 1, i64 240
  %133 = load i8, i8* %arrayidx8.i, align 1, !tbaa !58
  %conv.i = sext i8 %133 to i32
  %conv.i142 = zext i32 %132 to i64
  %134 = load i32, i32* %put_bits1.i188, align 8, !tbaa !51
  %cmp.i143 = icmp eq i8 %133, 0
  br i1 %cmp.i143, label %if.end.i151, label %if.end7.i, !prof !66

if.end.i151:                                      ; preds = %if.else.i
  %135 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i145 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %135, i64 0, i32 0
  %136 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i145, align 8, !tbaa !39
  %msg_code.i146 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %136, i64 0, i32 5
  store i32 39, i32* %msg_code.i146, align 8, !tbaa !40
  %error_exit.i147 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %136, i64 0, i32 0
  %137 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i147, align 8, !tbaa !42
  %138 = bitcast %struct.jpeg_compress_struct* %135 to %struct.jpeg_common_struct*
  tail call void %137(%struct.jpeg_common_struct* %138) #3
  %.pre815 = load i32, i32* %gather_statistics.i172, align 8, !tbaa !22
  %tobool.i150 = icmp eq i32 %.pre815, 0
  br i1 %tobool.i150, label %if.end7.i, label %emit_symbol.exit, !prof !67

if.end7.i:                                        ; preds = %if.else.i, %if.end.i151
  %sh_prom.i = zext i32 %conv.i to i64
  %shl.i152 = shl i64 1, %sh_prom.i
  %sub.i = add i64 %shl.i152, 4294967295
  %and.i = and i64 %sub.i, %conv.i142
  %add.i = add i32 %134, %conv.i
  %sub8.i = sub nsw i32 24, %add.i
  %sh_prom9.i = zext i32 %sub8.i to i64
  %shl10.i = shl i64 %and.i, %sh_prom9.i
  %139 = load i64, i64* %put_buffer11.i206, align 8, !tbaa !50
  %or.i = or i64 %139, %shl10.i
  %cmp1267.i = icmp sgt i32 %add.i, 7
  br i1 %cmp1267.i, label %while.body.i156.preheader, label %while.end.i157, !prof !68

while.body.i156.preheader:                        ; preds = %if.end7.i
  br label %while.body.i156

while.body.i156:                                  ; preds = %while.body.i156.preheader, %if.end32.i
  %put_buffer.069.i = phi i64 [ %shl33.i, %if.end32.i ], [ %or.i, %while.body.i156.preheader ]
  %put_bits.068.i = phi i32 [ %sub34.i, %if.end32.i ], [ %add.i, %while.body.i156.preheader ]
  %shr66.i = lshr i64 %put_buffer.069.i, 16
  %conv16.i = trunc i64 %shr66.i to i8
  %140 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i154 = getelementptr inbounds i8, i8* %140, i64 1
  store i8* %incdec.ptr.i154, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i, i8* %140, align 1, !tbaa !58
  %141 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i155 = add i64 %141, -1
  store i64 %dec.i155, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i = icmp eq i64 %dec.i155, 0
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i, !prof !71

if.then19.i:                                      ; preds = %while.body.i156
  %142 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %dest1.i563 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %142, i64 0, i32 5
  %143 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i563, align 8, !tbaa !57
  %empty_output_buffer.i564 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %143, i64 0, i32 3
  %144 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i564, align 8, !tbaa !72
  %call.i565 = tail call i32 %144(%struct.jpeg_compress_struct* %142) #3
  %tobool.i566 = icmp eq i32 %call.i565, 0
  br i1 %tobool.i566, label %if.then.i570, label %dump_buffer.exit575, !prof !74

if.then.i570:                                     ; preds = %if.then19.i
  %145 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i567 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %145, i64 0, i32 0
  %146 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i567, align 8, !tbaa !39
  %msg_code.i568 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %146, i64 0, i32 5
  store i32 22, i32* %msg_code.i568, align 8, !tbaa !40
  %error_exit.i569 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %146, i64 0, i32 0
  %147 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i569, align 8, !tbaa !42
  %148 = bitcast %struct.jpeg_compress_struct* %145 to %struct.jpeg_common_struct*
  tail call void %147(%struct.jpeg_common_struct* %148) #3
  br label %dump_buffer.exit575

dump_buffer.exit575:                              ; preds = %if.then19.i, %if.then.i570
  %149 = bitcast %struct.jpeg_destination_mgr* %143 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 8, !tbaa !58
  store <2 x i64> %150, <2 x i64>* %22, align 8, !tbaa !58
  br label %if.end20.i

if.end20.i:                                       ; preds = %dump_buffer.exit575, %while.body.i156
  %conv15.i = and i64 %shr66.i, 255
  %cmp21.i = icmp eq i64 %conv15.i, 255
  br i1 %cmp21.i, label %if.then23.i, label %if.end32.i, !prof !75

if.then23.i:                                      ; preds = %if.end20.i
  %151 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i = getelementptr inbounds i8, i8* %151, i64 1
  store i8* %incdec.ptr25.i, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %151, align 1, !tbaa !58
  %152 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i = add i64 %152, -1
  store i64 %dec27.i, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i = icmp eq i64 %dec27.i, 0
  br i1 %cmp28.i, label %if.then30.i, label %if.end32.i, !prof !76

if.then30.i:                                      ; preds = %if.then23.i
  %153 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %dest1.i159 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %153, i64 0, i32 5
  %154 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i159, align 8, !tbaa !57
  %empty_output_buffer.i160 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %154, i64 0, i32 3
  %155 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i160, align 8, !tbaa !72
  %call.i161 = tail call i32 %155(%struct.jpeg_compress_struct* %153) #3
  %tobool.i162 = icmp eq i32 %call.i161, 0
  br i1 %tobool.i162, label %if.then.i166, label %dump_buffer.exit171, !prof !74

if.then.i166:                                     ; preds = %if.then30.i
  %156 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i163 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %156, i64 0, i32 0
  %157 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i163, align 8, !tbaa !39
  %msg_code.i164 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %157, i64 0, i32 5
  store i32 22, i32* %msg_code.i164, align 8, !tbaa !40
  %error_exit.i165 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %157, i64 0, i32 0
  %158 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i165, align 8, !tbaa !42
  %159 = bitcast %struct.jpeg_compress_struct* %156 to %struct.jpeg_common_struct*
  tail call void %158(%struct.jpeg_common_struct* %159) #3
  br label %dump_buffer.exit171

dump_buffer.exit171:                              ; preds = %if.then30.i, %if.then.i166
  %160 = bitcast %struct.jpeg_destination_mgr* %154 to <2 x i64>*
  %161 = load <2 x i64>, <2 x i64>* %160, align 8, !tbaa !58
  store <2 x i64> %161, <2 x i64>* %23, align 8, !tbaa !58
  br label %if.end32.i

if.end32.i:                                       ; preds = %dump_buffer.exit171, %if.then23.i, %if.end20.i
  %shl33.i = shl i64 %put_buffer.069.i, 8
  %sub34.i = add nsw i32 %put_bits.068.i, -8
  %cmp12.i = icmp sgt i32 %sub34.i, 7
  br i1 %cmp12.i, label %while.body.i156, label %while.end.loopexit.i, !prof !68

while.end.loopexit.i:                             ; preds = %if.end32.i
  %shl33.i.lcssa = phi i64 [ %shl33.i, %if.end32.i ]
  %162 = and i32 %add.i, 7
  br label %while.end.i157

while.end.i157:                                   ; preds = %while.end.loopexit.i, %if.end7.i
  %put_buffer.0.lcssa.i = phi i64 [ %or.i, %if.end7.i ], [ %shl33.i.lcssa, %while.end.loopexit.i ]
  %put_bits.0.lcssa.i = phi i32 [ %add.i, %if.end7.i ], [ %162, %while.end.loopexit.i ]
  store i64 %put_buffer.0.lcssa.i, i64* %put_buffer11.i206, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i, i32* %put_bits1.i188, align 8, !tbaa !51
  br label %emit_symbol.exit

emit_symbol.exit:                                 ; preds = %while.end.i157, %if.end.i151, %if.then.i140
  %sub33 = add nsw i32 %r.1810, -16
  %cmp31 = icmp sgt i32 %sub33, 15
  br i1 %cmp31, label %while.body, label %while.cond34.preheader.loopexit, !prof !91

while.cond34:                                     ; preds = %while.cond34, %while.cond34.preheader
  %nbits.0 = phi i32 [ %inc38, %while.cond34 ], [ 1, %while.cond34.preheader ]
  %temp.1 = phi i32 [ %shr35, %while.cond34 ], [ %temp.0, %while.cond34.preheader ]
  %shr35 = ashr i32 %temp.1, 1
  %tobool36 = icmp eq i32 %shr35, 0
  %inc38 = add nuw nsw i32 %nbits.0, 1
  br i1 %tobool36, label %while.end39, label %while.cond34, !prof !92

while.end39:                                      ; preds = %while.cond34
  %nbits.0.lcssa = phi i32 [ %nbits.0, %while.cond34 ]
  %163 = load i32, i32* %ac_tbl_no40, align 8, !tbaa !46
  %shl = shl i32 %r.1.lcssa, 4
  %add = add nsw i32 %nbits.0.lcssa, %shl
  %164 = load i32, i32* %gather_statistics.i172, align 8, !tbaa !22
  %tobool.i173 = icmp eq i32 %164, 0
  br i1 %tobool.i173, label %if.else.i184, label %emit_symbol.exit186.thread, !prof !64

emit_symbol.exit186.thread:                       ; preds = %while.end39
  %idxprom.i = sext i32 %add to i64
  %idxprom1.i174 = sext i32 %163 to i64
  %arrayidx.i175 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i174
  %165 = load i64*, i64** %arrayidx.i175, align 8, !tbaa !18
  %arrayidx2.i176 = getelementptr inbounds i64, i64* %165, i64 %idxprom.i
  %166 = load i64, i64* %arrayidx2.i176, align 8, !tbaa !65
  %inc.i177 = add nsw i64 %166, 1
  store i64 %inc.i177, i64* %arrayidx2.i176, align 8, !tbaa !65
  br label %for.inc

if.else.i184:                                     ; preds = %while.end39
  %idxprom3.i179 = sext i32 %163 to i64
  %arrayidx4.i180 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i179
  %167 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i180, align 8, !tbaa !18
  %idxprom5.i = sext i32 %add to i64
  %arrayidx6.i181 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %167, i64 0, i32 0, i64 %idxprom5.i
  %168 = load i32, i32* %arrayidx6.i181, align 4, !tbaa !34
  %arrayidx8.i182 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %167, i64 0, i32 1, i64 %idxprom5.i
  %169 = load i8, i8* %arrayidx8.i182, align 1, !tbaa !58
  %conv.i183 = sext i8 %169 to i32
  %conv.i187 = zext i32 %168 to i64
  %170 = load i32, i32* %put_bits1.i188, align 8, !tbaa !51
  %cmp.i189 = icmp eq i8 %169, 0
  br i1 %cmp.i189, label %if.end.i197, label %if.end7.i209, !prof !66

if.end.i197:                                      ; preds = %if.else.i184
  %171 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i191 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %171, i64 0, i32 0
  %172 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i191, align 8, !tbaa !39
  %msg_code.i192 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %172, i64 0, i32 5
  store i32 39, i32* %msg_code.i192, align 8, !tbaa !40
  %error_exit.i193 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %172, i64 0, i32 0
  %173 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i193, align 8, !tbaa !42
  %174 = bitcast %struct.jpeg_compress_struct* %171 to %struct.jpeg_common_struct*
  tail call void %173(%struct.jpeg_common_struct* %174) #3
  %.pre816 = load i32, i32* %gather_statistics.i172, align 8, !tbaa !22
  %tobool.i196 = icmp eq i32 %.pre816, 0
  br i1 %tobool.i196, label %if.end7.i209, label %for.inc, !prof !67

if.end7.i209:                                     ; preds = %if.else.i184, %if.end.i197
  %sh_prom.i198 = zext i32 %conv.i183 to i64
  %shl.i199 = shl i64 1, %sh_prom.i198
  %sub.i200 = add i64 %shl.i199, 4294967295
  %and.i201 = and i64 %sub.i200, %conv.i187
  %add.i202 = add i32 %170, %conv.i183
  %sub8.i203 = sub nsw i32 24, %add.i202
  %sh_prom9.i204 = zext i32 %sub8.i203 to i64
  %shl10.i205 = shl i64 %and.i201, %sh_prom9.i204
  %175 = load i64, i64* %put_buffer11.i206, align 8, !tbaa !50
  %or.i207 = or i64 %175, %shl10.i205
  %cmp1267.i208 = icmp sgt i32 %add.i202, 7
  br i1 %cmp1267.i208, label %while.body.i220.preheader, label %emit_symbol.exit186.thread826, !prof !68

while.body.i220.preheader:                        ; preds = %if.end7.i209
  br label %while.body.i220

emit_symbol.exit186.thread826:                    ; preds = %if.end7.i209
  store i64 %or.i207, i64* %put_buffer11.i206, align 8, !tbaa !50
  store i32 %add.i202, i32* %put_bits1.i188, align 8, !tbaa !51
  br label %if.end7.i269

while.body.i220:                                  ; preds = %while.body.i220.preheader, %if.end32.i233
  %put_buffer.069.i213 = phi i64 [ %shl33.i230, %if.end32.i233 ], [ %or.i207, %while.body.i220.preheader ]
  %put_bits.068.i214 = phi i32 [ %sub34.i231, %if.end32.i233 ], [ %add.i202, %while.body.i220.preheader ]
  %shr66.i215 = lshr i64 %put_buffer.069.i213, 16
  %conv16.i216 = trunc i64 %shr66.i215 to i8
  %176 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i217 = getelementptr inbounds i8, i8* %176, i64 1
  store i8* %incdec.ptr.i217, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i216, i8* %176, align 1, !tbaa !58
  %177 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i218 = add i64 %177, -1
  store i64 %dec.i218, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i219 = icmp eq i64 %dec.i218, 0
  br i1 %cmp17.i219, label %if.then19.i221, label %if.end20.i224, !prof !71

if.then19.i221:                                   ; preds = %while.body.i220
  %178 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %dest1.i577 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %178, i64 0, i32 5
  %179 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i577, align 8, !tbaa !57
  %empty_output_buffer.i578 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %179, i64 0, i32 3
  %180 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i578, align 8, !tbaa !72
  %call.i579 = tail call i32 %180(%struct.jpeg_compress_struct* %178) #3
  %tobool.i580 = icmp eq i32 %call.i579, 0
  br i1 %tobool.i580, label %if.then.i584, label %dump_buffer.exit589, !prof !74

if.then.i584:                                     ; preds = %if.then19.i221
  %181 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i581 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %181, i64 0, i32 0
  %182 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i581, align 8, !tbaa !39
  %msg_code.i582 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %182, i64 0, i32 5
  store i32 22, i32* %msg_code.i582, align 8, !tbaa !40
  %error_exit.i583 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %182, i64 0, i32 0
  %183 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i583, align 8, !tbaa !42
  %184 = bitcast %struct.jpeg_compress_struct* %181 to %struct.jpeg_common_struct*
  tail call void %183(%struct.jpeg_common_struct* %184) #3
  br label %dump_buffer.exit589

dump_buffer.exit589:                              ; preds = %if.then19.i221, %if.then.i584
  %185 = bitcast %struct.jpeg_destination_mgr* %179 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 8, !tbaa !58
  store <2 x i64> %186, <2 x i64>* %20, align 8, !tbaa !58
  br label %if.end20.i224

if.end20.i224:                                    ; preds = %dump_buffer.exit589, %while.body.i220
  %conv15.i222 = and i64 %shr66.i215, 255
  %cmp21.i223 = icmp eq i64 %conv15.i222, 255
  br i1 %cmp21.i223, label %if.then23.i228, label %if.end32.i233, !prof !75

if.then23.i228:                                   ; preds = %if.end20.i224
  %187 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i225 = getelementptr inbounds i8, i8* %187, i64 1
  store i8* %incdec.ptr25.i225, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %187, align 1, !tbaa !58
  %188 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i226 = add i64 %188, -1
  store i64 %dec27.i226, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i227 = icmp eq i64 %dec27.i226, 0
  br i1 %cmp28.i227, label %if.then30.i229, label %if.end32.i233, !prof !76

if.then30.i229:                                   ; preds = %if.then23.i228
  %189 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %dest1.i240 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %189, i64 0, i32 5
  %190 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i240, align 8, !tbaa !57
  %empty_output_buffer.i241 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %190, i64 0, i32 3
  %191 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i241, align 8, !tbaa !72
  %call.i242 = tail call i32 %191(%struct.jpeg_compress_struct* %189) #3
  %tobool.i243 = icmp eq i32 %call.i242, 0
  br i1 %tobool.i243, label %if.then.i247, label %dump_buffer.exit252, !prof !74

if.then.i247:                                     ; preds = %if.then30.i229
  %192 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i244 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %192, i64 0, i32 0
  %193 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i244, align 8, !tbaa !39
  %msg_code.i245 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %193, i64 0, i32 5
  store i32 22, i32* %msg_code.i245, align 8, !tbaa !40
  %error_exit.i246 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %193, i64 0, i32 0
  %194 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i246, align 8, !tbaa !42
  %195 = bitcast %struct.jpeg_compress_struct* %192 to %struct.jpeg_common_struct*
  tail call void %194(%struct.jpeg_common_struct* %195) #3
  br label %dump_buffer.exit252

dump_buffer.exit252:                              ; preds = %if.then30.i229, %if.then.i247
  %196 = bitcast %struct.jpeg_destination_mgr* %190 to <2 x i64>*
  %197 = load <2 x i64>, <2 x i64>* %196, align 8, !tbaa !58
  store <2 x i64> %197, <2 x i64>* %21, align 8, !tbaa !58
  br label %if.end32.i233

if.end32.i233:                                    ; preds = %dump_buffer.exit252, %if.then23.i228, %if.end20.i224
  %shl33.i230 = shl i64 %put_buffer.069.i213, 8
  %sub34.i231 = add nsw i32 %put_bits.068.i214, -8
  %cmp12.i232 = icmp sgt i32 %sub34.i231, 7
  br i1 %cmp12.i232, label %while.body.i220, label %emit_symbol.exit186, !prof !68

emit_symbol.exit186:                              ; preds = %if.end32.i233
  %shl33.i230.lcssa = phi i64 [ %shl33.i230, %if.end32.i233 ]
  %198 = and i32 %add.i202, 7
  %.pr.pre.pre = load i32, i32* %gather_statistics.i172, align 8, !tbaa !22
  store i64 %shl33.i230.lcssa, i64* %put_buffer11.i206, align 8, !tbaa !50
  store i32 %198, i32* %put_bits1.i188, align 8, !tbaa !51
  %tobool.i256 = icmp eq i32 %.pr.pre.pre, 0
  br i1 %tobool.i256, label %if.end7.i269, label %for.inc, !prof !93

if.end7.i269:                                     ; preds = %emit_symbol.exit186.thread826, %emit_symbol.exit186
  %199 = load i32, i32* %put_bits1.i188, align 8, !tbaa !51
  %conv.i253 = zext i32 %temp2.0 to i64
  %sh_prom.i258 = zext i32 %nbits.0.lcssa to i64
  %shl.i259 = shl i64 1, %sh_prom.i258
  %sub.i260 = add i64 %shl.i259, 4294967295
  %and.i261 = and i64 %sub.i260, %conv.i253
  %add.i262 = add i32 %199, %nbits.0.lcssa
  %sub8.i263 = sub nsw i32 24, %add.i262
  %sh_prom9.i264 = zext i32 %sub8.i263 to i64
  %shl10.i265 = shl i64 %and.i261, %sh_prom9.i264
  %200 = load i64, i64* %put_buffer11.i206, align 8, !tbaa !50
  %or.i267 = or i64 %shl10.i265, %200
  %cmp1267.i268 = icmp sgt i32 %add.i262, 7
  br i1 %cmp1267.i268, label %while.body.i280.preheader, label %while.end.i297, !prof !68

while.body.i280.preheader:                        ; preds = %if.end7.i269
  br label %while.body.i280

while.body.i280:                                  ; preds = %while.body.i280.preheader, %if.end32.i293
  %put_buffer.069.i273 = phi i64 [ %shl33.i290, %if.end32.i293 ], [ %or.i267, %while.body.i280.preheader ]
  %put_bits.068.i274 = phi i32 [ %sub34.i291, %if.end32.i293 ], [ %add.i262, %while.body.i280.preheader ]
  %shr66.i275 = lshr i64 %put_buffer.069.i273, 16
  %conv16.i276 = trunc i64 %shr66.i275 to i8
  %201 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i277 = getelementptr inbounds i8, i8* %201, i64 1
  store i8* %incdec.ptr.i277, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i276, i8* %201, align 1, !tbaa !58
  %202 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i278 = add i64 %202, -1
  store i64 %dec.i278, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i279 = icmp eq i64 %dec.i278, 0
  br i1 %cmp17.i279, label %if.then19.i281, label %if.end20.i284, !prof !71

if.then19.i281:                                   ; preds = %while.body.i280
  %203 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %dest1.i591 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %203, i64 0, i32 5
  %204 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i591, align 8, !tbaa !57
  %empty_output_buffer.i592 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %204, i64 0, i32 3
  %205 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i592, align 8, !tbaa !72
  %call.i593 = tail call i32 %205(%struct.jpeg_compress_struct* %203) #3
  %tobool.i594 = icmp eq i32 %call.i593, 0
  br i1 %tobool.i594, label %if.then.i598, label %dump_buffer.exit603, !prof !74

if.then.i598:                                     ; preds = %if.then19.i281
  %206 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i595 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %206, i64 0, i32 0
  %207 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i595, align 8, !tbaa !39
  %msg_code.i596 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %207, i64 0, i32 5
  store i32 22, i32* %msg_code.i596, align 8, !tbaa !40
  %error_exit.i597 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %207, i64 0, i32 0
  %208 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i597, align 8, !tbaa !42
  %209 = bitcast %struct.jpeg_compress_struct* %206 to %struct.jpeg_common_struct*
  tail call void %208(%struct.jpeg_common_struct* %209) #3
  br label %dump_buffer.exit603

dump_buffer.exit603:                              ; preds = %if.then19.i281, %if.then.i598
  %210 = bitcast %struct.jpeg_destination_mgr* %204 to <2 x i64>*
  %211 = load <2 x i64>, <2 x i64>* %210, align 8, !tbaa !58
  store <2 x i64> %211, <2 x i64>* %18, align 8, !tbaa !58
  br label %if.end20.i284

if.end20.i284:                                    ; preds = %dump_buffer.exit603, %while.body.i280
  %conv15.i282 = and i64 %shr66.i275, 255
  %cmp21.i283 = icmp eq i64 %conv15.i282, 255
  br i1 %cmp21.i283, label %if.then23.i288, label %if.end32.i293, !prof !75

if.then23.i288:                                   ; preds = %if.end20.i284
  %212 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i285 = getelementptr inbounds i8, i8* %212, i64 1
  store i8* %incdec.ptr25.i285, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %212, align 1, !tbaa !58
  %213 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i286 = add i64 %213, -1
  store i64 %dec27.i286, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i287 = icmp eq i64 %dec27.i286, 0
  br i1 %cmp28.i287, label %if.then30.i289, label %if.end32.i293, !prof !76

if.then30.i289:                                   ; preds = %if.then23.i288
  %214 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %dest1.i300 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %214, i64 0, i32 5
  %215 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i300, align 8, !tbaa !57
  %empty_output_buffer.i301 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %215, i64 0, i32 3
  %216 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i301, align 8, !tbaa !72
  %call.i302 = tail call i32 %216(%struct.jpeg_compress_struct* %214) #3
  %tobool.i303 = icmp eq i32 %call.i302, 0
  br i1 %tobool.i303, label %if.then.i307, label %dump_buffer.exit312, !prof !74

if.then.i307:                                     ; preds = %if.then30.i289
  %217 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i190, align 8, !tbaa !21
  %err.i304 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %217, i64 0, i32 0
  %218 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i304, align 8, !tbaa !39
  %msg_code.i305 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %218, i64 0, i32 5
  store i32 22, i32* %msg_code.i305, align 8, !tbaa !40
  %error_exit.i306 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %218, i64 0, i32 0
  %219 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i306, align 8, !tbaa !42
  %220 = bitcast %struct.jpeg_compress_struct* %217 to %struct.jpeg_common_struct*
  tail call void %219(%struct.jpeg_common_struct* %220) #3
  br label %dump_buffer.exit312

dump_buffer.exit312:                              ; preds = %if.then30.i289, %if.then.i307
  %221 = bitcast %struct.jpeg_destination_mgr* %215 to <2 x i64>*
  %222 = load <2 x i64>, <2 x i64>* %221, align 8, !tbaa !58
  store <2 x i64> %222, <2 x i64>* %19, align 8, !tbaa !58
  br label %if.end32.i293

if.end32.i293:                                    ; preds = %dump_buffer.exit312, %if.then23.i288, %if.end20.i284
  %shl33.i290 = shl i64 %put_buffer.069.i273, 8
  %sub34.i291 = add nsw i32 %put_bits.068.i274, -8
  %cmp12.i292 = icmp sgt i32 %sub34.i291, 7
  br i1 %cmp12.i292, label %while.body.i280, label %while.end.loopexit.i294, !prof !68

while.end.loopexit.i294:                          ; preds = %if.end32.i293
  %shl33.i290.lcssa = phi i64 [ %shl33.i290, %if.end32.i293 ]
  %223 = and i32 %add.i262, 7
  br label %while.end.i297

while.end.i297:                                   ; preds = %while.end.loopexit.i294, %if.end7.i269
  %put_buffer.0.lcssa.i295 = phi i64 [ %or.i267, %if.end7.i269 ], [ %shl33.i290.lcssa, %while.end.loopexit.i294 ]
  %put_bits.0.lcssa.i296 = phi i32 [ %add.i262, %if.end7.i269 ], [ %223, %while.end.loopexit.i294 ]
  store i64 %put_buffer.0.lcssa.i295, i64* %put_buffer11.i206, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i296, i32* %put_bits1.i188, align 8, !tbaa !51
  br label %for.inc

for.inc:                                          ; preds = %emit_symbol.exit186.thread, %if.end.i197, %while.end.i297, %emit_symbol.exit186, %if.then24, %if.then15
  %r.2 = phi i32 [ %inc, %if.then15 ], [ %inc25, %if.then24 ], [ 0, %emit_symbol.exit186 ], [ 0, %while.end.i297 ], [ 0, %if.end.i197 ], [ 0, %emit_symbol.exit186.thread ]
  %cmp9 = icmp slt i64 %indvars.iv, %17
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  br i1 %cmp9, label %for.body, label %for.end, !prof !94

for.end:                                          ; preds = %for.inc
  %r.2.lcssa = phi i32 [ %r.2, %for.inc ]
  %cmp42 = icmp sgt i32 %r.2.lcssa, 0
  br i1 %cmp42, label %if.then44, label %if.end52, !prof !95

if.then44:                                        ; preds = %for.end
  %EOBRUN45 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 9
  %224 = load i32, i32* %EOBRUN45, align 4, !tbaa !48
  %inc46 = add i32 %224, 1
  store i32 %inc46, i32* %EOBRUN45, align 4, !tbaa !48
  %cmp48 = icmp eq i32 %inc46, 32767
  br i1 %cmp48, label %while.cond.i320.preheader, label %if.end52, !prof !96

while.cond.i320.preheader:                        ; preds = %if.then44
  br label %while.cond.i320

while.cond.i320:                                  ; preds = %while.cond.i320.preheader, %while.cond.i320
  %temp.0.i315 = phi i32 [ %shr.i317, %while.cond.i320 ], [ 32767, %while.cond.i320.preheader ]
  %nbits.0.i316 = phi i32 [ %inc.i319, %while.cond.i320 ], [ 0, %while.cond.i320.preheader ]
  %shr.i317 = ashr i32 %temp.0.i315, 1
  %tobool.i318 = icmp eq i32 %shr.i317, 0
  %inc.i319 = add nuw nsw i32 %nbits.0.i316, 1
  br i1 %tobool.i318, label %while.end.i325, label %while.cond.i320, !prof !87

while.end.i325:                                   ; preds = %while.cond.i320
  %nbits.0.i316.lcssa = phi i32 [ %nbits.0.i316, %while.cond.i320 ]
  %ac_tbl_no.i321 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 8
  %225 = load i32, i32* %ac_tbl_no.i321, align 8, !tbaa !46
  %shl.i322 = shl i32 %nbits.0.i316.lcssa, 4
  %gather_statistics.i.i323 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 1
  %226 = load i32, i32* %gather_statistics.i.i323, align 8, !tbaa !22
  %tobool.i.i324 = icmp eq i32 %226, 0
  br i1 %tobool.i.i324, label %if.else.i.i338, label %if.then.i.i331, !prof !64

if.then.i.i331:                                   ; preds = %while.end.i325
  %idxprom.i.i326 = sext i32 %shl.i322 to i64
  %idxprom1.i.i327 = sext i32 %225 to i64
  %arrayidx.i.i328 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i.i327
  %227 = load i64*, i64** %arrayidx.i.i328, align 8, !tbaa !18
  %arrayidx2.i.i329 = getelementptr inbounds i64, i64* %227, i64 %idxprom.i.i326
  %228 = load i64, i64* %arrayidx2.i.i329, align 8, !tbaa !65
  %inc.i.i330 = add nsw i64 %228, 1
  store i64 %inc.i.i330, i64* %arrayidx2.i.i329, align 8, !tbaa !65
  br label %emit_symbol.exit.i340

if.else.i.i338:                                   ; preds = %while.end.i325
  %idxprom3.i.i332 = sext i32 %225 to i64
  %arrayidx4.i.i333 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i.i332
  %229 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i.i333, align 8, !tbaa !18
  %idxprom5.i.i334 = sext i32 %shl.i322 to i64
  %arrayidx6.i.i335 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %229, i64 0, i32 0, i64 %idxprom5.i.i334
  %230 = load i32, i32* %arrayidx6.i.i335, align 4, !tbaa !34
  %arrayidx8.i.i336 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %229, i64 0, i32 1, i64 %idxprom5.i.i334
  %231 = load i8, i8* %arrayidx8.i.i336, align 1, !tbaa !58
  %conv.i.i337 = sext i8 %231 to i32
  %conv.i604 = zext i32 %230 to i64
  %put_bits1.i605 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %232 = load i32, i32* %put_bits1.i605, align 8, !tbaa !51
  %cmp.i606 = icmp eq i8 %231, 0
  br i1 %cmp.i606, label %if.end.i614, label %if.end7.i626, !prof !66

if.end.i614:                                      ; preds = %if.else.i.i338
  %cinfo.i607 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %233 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i607, align 8, !tbaa !21
  %err.i608 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %233, i64 0, i32 0
  %234 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i608, align 8, !tbaa !39
  %msg_code.i609 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %234, i64 0, i32 5
  store i32 39, i32* %msg_code.i609, align 8, !tbaa !40
  %error_exit.i610 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %234, i64 0, i32 0
  %235 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i610, align 8, !tbaa !42
  %236 = bitcast %struct.jpeg_compress_struct* %233 to %struct.jpeg_common_struct*
  tail call void %235(%struct.jpeg_common_struct* %236) #3
  %.pre818 = load i32, i32* %gather_statistics.i.i323, align 8, !tbaa !22
  %tobool.i613 = icmp eq i32 %.pre818, 0
  br i1 %tobool.i613, label %if.end7.i626, label %emit_symbol.exit.i340, !prof !67

if.end7.i626:                                     ; preds = %if.else.i.i338, %if.end.i614
  %sh_prom.i615 = zext i32 %conv.i.i337 to i64
  %shl.i616 = shl i64 1, %sh_prom.i615
  %sub.i617 = add i64 %shl.i616, 4294967295
  %and.i618 = and i64 %sub.i617, %conv.i604
  %add.i619 = add i32 %232, %conv.i.i337
  %sub8.i620 = sub nsw i32 24, %add.i619
  %sh_prom9.i621 = zext i32 %sub8.i620 to i64
  %shl10.i622 = shl i64 %and.i618, %sh_prom9.i621
  %put_buffer11.i623 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %237 = load i64, i64* %put_buffer11.i623, align 8, !tbaa !50
  %or.i624 = or i64 %237, %shl10.i622
  %cmp1267.i625 = icmp sgt i32 %add.i619, 7
  br i1 %cmp1267.i625, label %while.body.i637.preheader, label %while.end.i654, !prof !68

while.body.i637.preheader:                        ; preds = %if.end7.i626
  %cinfo.i778 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %238 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %239 = bitcast i8** %next_output_byte4 to <2 x i64>*
  br label %while.body.i637

while.body.i637:                                  ; preds = %while.body.i637.preheader, %if.end32.i650
  %put_buffer.069.i630 = phi i64 [ %shl33.i647, %if.end32.i650 ], [ %or.i624, %while.body.i637.preheader ]
  %put_bits.068.i631 = phi i32 [ %sub34.i648, %if.end32.i650 ], [ %add.i619, %while.body.i637.preheader ]
  %shr66.i632 = lshr i64 %put_buffer.069.i630, 16
  %conv16.i633 = trunc i64 %shr66.i632 to i8
  %240 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i634 = getelementptr inbounds i8, i8* %240, i64 1
  store i8* %incdec.ptr.i634, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i633, i8* %240, align 1, !tbaa !58
  %241 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i635 = add i64 %241, -1
  store i64 %dec.i635, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i636 = icmp eq i64 %dec.i635, 0
  br i1 %cmp17.i636, label %if.then19.i638, label %if.end20.i641, !prof !71

if.then19.i638:                                   ; preds = %while.body.i637
  %242 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i778, align 8, !tbaa !21
  %dest1.i779 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %242, i64 0, i32 5
  %243 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i779, align 8, !tbaa !57
  %empty_output_buffer.i780 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %243, i64 0, i32 3
  %244 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i780, align 8, !tbaa !72
  %call.i781 = tail call i32 %244(%struct.jpeg_compress_struct* %242) #3
  %tobool.i782 = icmp eq i32 %call.i781, 0
  br i1 %tobool.i782, label %if.then.i786, label %dump_buffer.exit791, !prof !74

if.then.i786:                                     ; preds = %if.then19.i638
  %245 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i778, align 8, !tbaa !21
  %err.i783 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %245, i64 0, i32 0
  %246 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i783, align 8, !tbaa !39
  %msg_code.i784 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %246, i64 0, i32 5
  store i32 22, i32* %msg_code.i784, align 8, !tbaa !40
  %error_exit.i785 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %246, i64 0, i32 0
  %247 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i785, align 8, !tbaa !42
  %248 = bitcast %struct.jpeg_compress_struct* %245 to %struct.jpeg_common_struct*
  tail call void %247(%struct.jpeg_common_struct* %248) #3
  br label %dump_buffer.exit791

dump_buffer.exit791:                              ; preds = %if.then19.i638, %if.then.i786
  %249 = bitcast %struct.jpeg_destination_mgr* %243 to <2 x i64>*
  %250 = load <2 x i64>, <2 x i64>* %249, align 8, !tbaa !58
  store <2 x i64> %250, <2 x i64>* %238, align 8, !tbaa !58
  br label %if.end20.i641

if.end20.i641:                                    ; preds = %dump_buffer.exit791, %while.body.i637
  %conv15.i639 = and i64 %shr66.i632, 255
  %cmp21.i640 = icmp eq i64 %conv15.i639, 255
  br i1 %cmp21.i640, label %if.then23.i645, label %if.end32.i650, !prof !75

if.then23.i645:                                   ; preds = %if.end20.i641
  %251 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i642 = getelementptr inbounds i8, i8* %251, i64 1
  store i8* %incdec.ptr25.i642, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %251, align 1, !tbaa !58
  %252 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i643 = add i64 %252, -1
  store i64 %dec27.i643, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i644 = icmp eq i64 %dec27.i643, 0
  br i1 %cmp28.i644, label %if.then30.i646, label %if.end32.i650, !prof !76

if.then30.i646:                                   ; preds = %if.then23.i645
  %253 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i778, align 8, !tbaa !21
  %dest1.i657 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %253, i64 0, i32 5
  %254 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i657, align 8, !tbaa !57
  %empty_output_buffer.i658 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %254, i64 0, i32 3
  %255 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i658, align 8, !tbaa !72
  %call.i659 = tail call i32 %255(%struct.jpeg_compress_struct* %253) #3
  %tobool.i660 = icmp eq i32 %call.i659, 0
  br i1 %tobool.i660, label %if.then.i664, label %dump_buffer.exit669, !prof !74

if.then.i664:                                     ; preds = %if.then30.i646
  %256 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i778, align 8, !tbaa !21
  %err.i661 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %256, i64 0, i32 0
  %257 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i661, align 8, !tbaa !39
  %msg_code.i662 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %257, i64 0, i32 5
  store i32 22, i32* %msg_code.i662, align 8, !tbaa !40
  %error_exit.i663 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %257, i64 0, i32 0
  %258 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i663, align 8, !tbaa !42
  %259 = bitcast %struct.jpeg_compress_struct* %256 to %struct.jpeg_common_struct*
  tail call void %258(%struct.jpeg_common_struct* %259) #3
  br label %dump_buffer.exit669

dump_buffer.exit669:                              ; preds = %if.then30.i646, %if.then.i664
  %260 = bitcast %struct.jpeg_destination_mgr* %254 to <2 x i64>*
  %261 = load <2 x i64>, <2 x i64>* %260, align 8, !tbaa !58
  store <2 x i64> %261, <2 x i64>* %239, align 8, !tbaa !58
  br label %if.end32.i650

if.end32.i650:                                    ; preds = %dump_buffer.exit669, %if.then23.i645, %if.end20.i641
  %shl33.i647 = shl i64 %put_buffer.069.i630, 8
  %sub34.i648 = add nsw i32 %put_bits.068.i631, -8
  %cmp12.i649 = icmp sgt i32 %sub34.i648, 7
  br i1 %cmp12.i649, label %while.body.i637, label %while.end.loopexit.i651, !prof !68

while.end.loopexit.i651:                          ; preds = %if.end32.i650
  %shl33.i647.lcssa = phi i64 [ %shl33.i647, %if.end32.i650 ]
  %262 = and i32 %add.i619, 7
  br label %while.end.i654

while.end.i654:                                   ; preds = %while.end.loopexit.i651, %if.end7.i626
  %put_buffer.0.lcssa.i652 = phi i64 [ %or.i624, %if.end7.i626 ], [ %shl33.i647.lcssa, %while.end.loopexit.i651 ]
  %put_bits.0.lcssa.i653 = phi i32 [ %add.i619, %if.end7.i626 ], [ %262, %while.end.loopexit.i651 ]
  store i64 %put_buffer.0.lcssa.i652, i64* %put_buffer11.i623, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i653, i32* %put_bits1.i605, align 8, !tbaa !51
  br label %emit_symbol.exit.i340

emit_symbol.exit.i340:                            ; preds = %while.end.i654, %if.end.i614, %if.then.i.i331
  %tobool2.i339 = icmp eq i32 %nbits.0.i316.lcssa, 0
  br i1 %tobool2.i339, label %if.end.i344, label %if.end.i680, !prof !88

if.end.i680:                                      ; preds = %emit_symbol.exit.i340
  %put_bits1.i671 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %263 = load i32, i32* %gather_statistics.i.i323, align 8, !tbaa !22
  %tobool.i679 = icmp eq i32 %263, 0
  br i1 %tobool.i679, label %if.end7.i692, label %if.end.i344, !prof !78

if.end7.i692:                                     ; preds = %if.end.i680
  %264 = load i32, i32* %put_bits1.i671, align 8, !tbaa !51
  %265 = load i32, i32* %EOBRUN45, align 4, !tbaa !48
  %conv.i670 = zext i32 %265 to i64
  %sh_prom.i681 = zext i32 %nbits.0.i316.lcssa to i64
  %shl.i682 = shl i64 1, %sh_prom.i681
  %sub.i683 = add i64 %shl.i682, 4294967295
  %and.i684 = and i64 %conv.i670, %sub.i683
  %add.i685 = add i32 %264, %nbits.0.i316.lcssa
  %sub8.i686 = sub nsw i32 24, %add.i685
  %sh_prom9.i687 = zext i32 %sub8.i686 to i64
  %shl10.i688 = shl i64 %and.i684, %sh_prom9.i687
  %put_buffer11.i689 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %266 = load i64, i64* %put_buffer11.i689, align 8, !tbaa !50
  %or.i690 = or i64 %shl10.i688, %266
  %cmp1267.i691 = icmp sgt i32 %add.i685, 7
  br i1 %cmp1267.i691, label %while.body.i703.preheader, label %while.end.i720, !prof !68

while.body.i703.preheader:                        ; preds = %if.end7.i692
  %cinfo.i792 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %267 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %268 = bitcast i8** %next_output_byte4 to <2 x i64>*
  br label %while.body.i703

while.body.i703:                                  ; preds = %while.body.i703.preheader, %if.end32.i716
  %put_buffer.069.i696 = phi i64 [ %shl33.i713, %if.end32.i716 ], [ %or.i690, %while.body.i703.preheader ]
  %put_bits.068.i697 = phi i32 [ %sub34.i714, %if.end32.i716 ], [ %add.i685, %while.body.i703.preheader ]
  %shr66.i698 = lshr i64 %put_buffer.069.i696, 16
  %conv16.i699 = trunc i64 %shr66.i698 to i8
  %269 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i700 = getelementptr inbounds i8, i8* %269, i64 1
  store i8* %incdec.ptr.i700, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i699, i8* %269, align 1, !tbaa !58
  %270 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i701 = add i64 %270, -1
  store i64 %dec.i701, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i702 = icmp eq i64 %dec.i701, 0
  br i1 %cmp17.i702, label %if.then19.i704, label %if.end20.i707, !prof !71

if.then19.i704:                                   ; preds = %while.body.i703
  %271 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i792, align 8, !tbaa !21
  %dest1.i793 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %271, i64 0, i32 5
  %272 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i793, align 8, !tbaa !57
  %empty_output_buffer.i794 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %272, i64 0, i32 3
  %273 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i794, align 8, !tbaa !72
  %call.i795 = tail call i32 %273(%struct.jpeg_compress_struct* %271) #3
  %tobool.i796 = icmp eq i32 %call.i795, 0
  br i1 %tobool.i796, label %if.then.i800, label %dump_buffer.exit805, !prof !74

if.then.i800:                                     ; preds = %if.then19.i704
  %274 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i792, align 8, !tbaa !21
  %err.i797 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %274, i64 0, i32 0
  %275 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i797, align 8, !tbaa !39
  %msg_code.i798 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %275, i64 0, i32 5
  store i32 22, i32* %msg_code.i798, align 8, !tbaa !40
  %error_exit.i799 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %275, i64 0, i32 0
  %276 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i799, align 8, !tbaa !42
  %277 = bitcast %struct.jpeg_compress_struct* %274 to %struct.jpeg_common_struct*
  tail call void %276(%struct.jpeg_common_struct* %277) #3
  br label %dump_buffer.exit805

dump_buffer.exit805:                              ; preds = %if.then19.i704, %if.then.i800
  %278 = bitcast %struct.jpeg_destination_mgr* %272 to <2 x i64>*
  %279 = load <2 x i64>, <2 x i64>* %278, align 8, !tbaa !58
  store <2 x i64> %279, <2 x i64>* %267, align 8, !tbaa !58
  br label %if.end20.i707

if.end20.i707:                                    ; preds = %dump_buffer.exit805, %while.body.i703
  %conv15.i705 = and i64 %shr66.i698, 255
  %cmp21.i706 = icmp eq i64 %conv15.i705, 255
  br i1 %cmp21.i706, label %if.then23.i711, label %if.end32.i716, !prof !75

if.then23.i711:                                   ; preds = %if.end20.i707
  %280 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i708 = getelementptr inbounds i8, i8* %280, i64 1
  store i8* %incdec.ptr25.i708, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %280, align 1, !tbaa !58
  %281 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i709 = add i64 %281, -1
  store i64 %dec27.i709, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i710 = icmp eq i64 %dec27.i709, 0
  br i1 %cmp28.i710, label %if.then30.i712, label %if.end32.i716, !prof !76

if.then30.i712:                                   ; preds = %if.then23.i711
  %282 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i792, align 8, !tbaa !21
  %dest1.i723 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %282, i64 0, i32 5
  %283 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i723, align 8, !tbaa !57
  %empty_output_buffer.i724 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %283, i64 0, i32 3
  %284 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i724, align 8, !tbaa !72
  %call.i725 = tail call i32 %284(%struct.jpeg_compress_struct* %282) #3
  %tobool.i726 = icmp eq i32 %call.i725, 0
  br i1 %tobool.i726, label %if.then.i730, label %dump_buffer.exit735, !prof !74

if.then.i730:                                     ; preds = %if.then30.i712
  %285 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i792, align 8, !tbaa !21
  %err.i727 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %285, i64 0, i32 0
  %286 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i727, align 8, !tbaa !39
  %msg_code.i728 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %286, i64 0, i32 5
  store i32 22, i32* %msg_code.i728, align 8, !tbaa !40
  %error_exit.i729 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %286, i64 0, i32 0
  %287 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i729, align 8, !tbaa !42
  %288 = bitcast %struct.jpeg_compress_struct* %285 to %struct.jpeg_common_struct*
  tail call void %287(%struct.jpeg_common_struct* %288) #3
  br label %dump_buffer.exit735

dump_buffer.exit735:                              ; preds = %if.then30.i712, %if.then.i730
  %289 = bitcast %struct.jpeg_destination_mgr* %283 to <2 x i64>*
  %290 = load <2 x i64>, <2 x i64>* %289, align 8, !tbaa !58
  store <2 x i64> %290, <2 x i64>* %268, align 8, !tbaa !58
  br label %if.end32.i716

if.end32.i716:                                    ; preds = %dump_buffer.exit735, %if.then23.i711, %if.end20.i707
  %shl33.i713 = shl i64 %put_buffer.069.i696, 8
  %sub34.i714 = add nsw i32 %put_bits.068.i697, -8
  %cmp12.i715 = icmp sgt i32 %sub34.i714, 7
  br i1 %cmp12.i715, label %while.body.i703, label %while.end.loopexit.i717, !prof !68

while.end.loopexit.i717:                          ; preds = %if.end32.i716
  %shl33.i713.lcssa = phi i64 [ %shl33.i713, %if.end32.i716 ]
  %291 = and i32 %add.i685, 7
  br label %while.end.i720

while.end.i720:                                   ; preds = %while.end.loopexit.i717, %if.end7.i692
  %put_buffer.0.lcssa.i718 = phi i64 [ %or.i690, %if.end7.i692 ], [ %shl33.i713.lcssa, %while.end.loopexit.i717 ]
  %put_bits.0.lcssa.i719 = phi i32 [ %add.i685, %if.end7.i692 ], [ %291, %while.end.loopexit.i717 ]
  store i64 %put_buffer.0.lcssa.i718, i64* %put_buffer11.i689, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i719, i32* %put_bits1.i671, align 8, !tbaa !51
  br label %if.end.i344

if.end.i344:                                      ; preds = %while.end.i720, %if.end.i680, %emit_symbol.exit.i340
  store i32 0, i32* %EOBRUN45, align 4, !tbaa !48
  %BE.i343 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 10
  %292 = load i32, i32* %BE.i343, align 8, !tbaa !49
  %293 = load i32, i32* %gather_statistics.i.i323, align 8, !tbaa !22
  %tobool.i348 = icmp eq i32 %293, 0
  %cmp.i349 = icmp ne i32 %292, 0
  %or.cond.i350 = and i1 %cmp.i349, %tobool.i348
  br i1 %or.cond.i350, label %while.body.preheader.i355, label %emit_eobrun.exit346, !prof !89

while.body.preheader.i355:                        ; preds = %if.end.i344
  %bit_buffer.i342 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 11
  %294 = load i8*, i8** %bit_buffer.i342, align 8, !tbaa !19
  %put_bits1.i.i351 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %put_buffer11.i.i352 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %cinfo.i402 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %295 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %296 = bitcast i8** %next_output_byte4 to <2 x i64>*
  br label %while.body.i359

while.body.i359:                                  ; preds = %emit_bits.exit.while.body_crit_edge.i399, %while.body.preheader.i355
  %297 = phi i32 [ %.pre.i398, %emit_bits.exit.while.body_crit_edge.i399 ], [ 0, %while.body.preheader.i355 ]
  %bufstart.addr.0.i356 = phi i8* [ %incdec.ptr.i397, %emit_bits.exit.while.body_crit_edge.i399 ], [ %294, %while.body.preheader.i355 ]
  %nbits.addr.0.i357 = phi i32 [ %dec.i394, %emit_bits.exit.while.body_crit_edge.i399 ], [ %292, %while.body.preheader.i355 ]
  %tobool.i.i358 = icmp eq i32 %297, 0
  br i1 %tobool.i.i358, label %if.end7.i.i368, label %emit_bits.exit.i396, !prof !78

if.end7.i.i368:                                   ; preds = %while.body.i359
  %298 = load i32, i32* %put_bits1.i.i351, align 8, !tbaa !51
  %299 = load i8, i8* %bufstart.addr.0.i356, align 1, !tbaa !58
  %conv5.i360 = zext i8 %299 to i64
  %and.i.i361 = and i64 %conv5.i360, 1
  %add.i.i362 = add i32 %298, 1
  %sub8.i.i363 = sub i32 23, %298
  %sh_prom9.i.i364 = zext i32 %sub8.i.i363 to i64
  %shl10.i.i365 = shl i64 %and.i.i361, %sh_prom9.i.i364
  %300 = load i64, i64* %put_buffer11.i.i352, align 8, !tbaa !50
  %or.i.i366 = or i64 %shl10.i.i365, %300
  %cmp1267.i.i367 = icmp sgt i32 %add.i.i362, 7
  br i1 %cmp1267.i.i367, label %while.body.i.i376.preheader, label %while.end.i.i393, !prof !68

while.body.i.i376.preheader:                      ; preds = %if.end7.i.i368
  br label %while.body.i.i376

while.body.i.i376:                                ; preds = %while.body.i.i376.preheader, %if.end32.i.i389
  %put_buffer.069.i.i369 = phi i64 [ %shl33.i.i386, %if.end32.i.i389 ], [ %or.i.i366, %while.body.i.i376.preheader ]
  %put_bits.068.i.i370 = phi i32 [ %sub34.i.i387, %if.end32.i.i389 ], [ %add.i.i362, %while.body.i.i376.preheader ]
  %shr66.i.i371 = lshr i64 %put_buffer.069.i.i369, 16
  %conv16.i.i372 = trunc i64 %shr66.i.i371 to i8
  %301 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i.i373 = getelementptr inbounds i8, i8* %301, i64 1
  store i8* %incdec.ptr.i.i373, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i.i372, i8* %301, align 1, !tbaa !58
  %302 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i.i374 = add i64 %302, -1
  store i64 %dec.i.i374, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i.i375 = icmp eq i64 %dec.i.i374, 0
  br i1 %cmp17.i.i375, label %if.then19.i.i377, label %if.end20.i.i380, !prof !71

if.then19.i.i377:                                 ; preds = %while.body.i.i376
  %303 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i402, align 8, !tbaa !21
  %dest1.i403 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %303, i64 0, i32 5
  %304 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i403, align 8, !tbaa !57
  %empty_output_buffer.i404 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %304, i64 0, i32 3
  %305 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i404, align 8, !tbaa !72
  %call.i405 = tail call i32 %305(%struct.jpeg_compress_struct* %303) #3
  %tobool.i406 = icmp eq i32 %call.i405, 0
  br i1 %tobool.i406, label %if.then.i410, label %dump_buffer.exit415, !prof !74

if.then.i410:                                     ; preds = %if.then19.i.i377
  %306 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i402, align 8, !tbaa !21
  %err.i407 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %306, i64 0, i32 0
  %307 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i407, align 8, !tbaa !39
  %msg_code.i408 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %307, i64 0, i32 5
  store i32 22, i32* %msg_code.i408, align 8, !tbaa !40
  %error_exit.i409 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %307, i64 0, i32 0
  %308 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i409, align 8, !tbaa !42
  %309 = bitcast %struct.jpeg_compress_struct* %306 to %struct.jpeg_common_struct*
  tail call void %308(%struct.jpeg_common_struct* %309) #3
  br label %dump_buffer.exit415

dump_buffer.exit415:                              ; preds = %if.then19.i.i377, %if.then.i410
  %310 = bitcast %struct.jpeg_destination_mgr* %304 to <2 x i64>*
  %311 = load <2 x i64>, <2 x i64>* %310, align 8, !tbaa !58
  store <2 x i64> %311, <2 x i64>* %295, align 8, !tbaa !58
  br label %if.end20.i.i380

if.end20.i.i380:                                  ; preds = %dump_buffer.exit415, %while.body.i.i376
  %conv15.i.i378 = and i64 %shr66.i.i371, 255
  %cmp21.i.i379 = icmp eq i64 %conv15.i.i378, 255
  br i1 %cmp21.i.i379, label %if.then23.i.i384, label %if.end32.i.i389, !prof !75

if.then23.i.i384:                                 ; preds = %if.end20.i.i380
  %312 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i.i381 = getelementptr inbounds i8, i8* %312, i64 1
  store i8* %incdec.ptr25.i.i381, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %312, align 1, !tbaa !58
  %313 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i.i382 = add i64 %313, -1
  store i64 %dec27.i.i382, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i.i383 = icmp eq i64 %dec27.i.i382, 0
  br i1 %cmp28.i.i383, label %if.then30.i.i385, label %if.end32.i.i389, !prof !76

if.then30.i.i385:                                 ; preds = %if.then23.i.i384
  %314 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i402, align 8, !tbaa !21
  %dest1.i737 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %314, i64 0, i32 5
  %315 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i737, align 8, !tbaa !57
  %empty_output_buffer.i738 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %315, i64 0, i32 3
  %316 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i738, align 8, !tbaa !72
  %call.i739 = tail call i32 %316(%struct.jpeg_compress_struct* %314) #3
  %tobool.i740 = icmp eq i32 %call.i739, 0
  br i1 %tobool.i740, label %if.then.i744, label %dump_buffer.exit749, !prof !74

if.then.i744:                                     ; preds = %if.then30.i.i385
  %317 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i402, align 8, !tbaa !21
  %err.i741 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %317, i64 0, i32 0
  %318 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i741, align 8, !tbaa !39
  %msg_code.i742 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %318, i64 0, i32 5
  store i32 22, i32* %msg_code.i742, align 8, !tbaa !40
  %error_exit.i743 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %318, i64 0, i32 0
  %319 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i743, align 8, !tbaa !42
  %320 = bitcast %struct.jpeg_compress_struct* %317 to %struct.jpeg_common_struct*
  tail call void %319(%struct.jpeg_common_struct* %320) #3
  br label %dump_buffer.exit749

dump_buffer.exit749:                              ; preds = %if.then30.i.i385, %if.then.i744
  %321 = bitcast %struct.jpeg_destination_mgr* %315 to <2 x i64>*
  %322 = load <2 x i64>, <2 x i64>* %321, align 8, !tbaa !58
  store <2 x i64> %322, <2 x i64>* %296, align 8, !tbaa !58
  br label %if.end32.i.i389

if.end32.i.i389:                                  ; preds = %dump_buffer.exit749, %if.then23.i.i384, %if.end20.i.i380
  %shl33.i.i386 = shl i64 %put_buffer.069.i.i369, 8
  %sub34.i.i387 = add nsw i32 %put_bits.068.i.i370, -8
  %cmp12.i.i388 = icmp sgt i32 %sub34.i.i387, 7
  br i1 %cmp12.i.i388, label %while.body.i.i376, label %while.end.loopexit.i.i390, !prof !68

while.end.loopexit.i.i390:                        ; preds = %if.end32.i.i389
  %shl33.i.i386.lcssa = phi i64 [ %shl33.i.i386, %if.end32.i.i389 ]
  %323 = and i32 %add.i.i362, 7
  br label %while.end.i.i393

while.end.i.i393:                                 ; preds = %while.end.loopexit.i.i390, %if.end7.i.i368
  %put_buffer.0.lcssa.i.i391 = phi i64 [ %or.i.i366, %if.end7.i.i368 ], [ %shl33.i.i386.lcssa, %while.end.loopexit.i.i390 ]
  %put_bits.0.lcssa.i.i392 = phi i32 [ %add.i.i362, %if.end7.i.i368 ], [ %323, %while.end.loopexit.i.i390 ]
  store i64 %put_buffer.0.lcssa.i.i391, i64* %put_buffer11.i.i352, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i.i392, i32* %put_bits1.i.i351, align 8, !tbaa !51
  br label %emit_bits.exit.i396

emit_bits.exit.i396:                              ; preds = %while.end.i.i393, %while.body.i359
  %dec.i394 = add i32 %nbits.addr.0.i357, -1
  %cmp.old.i395 = icmp eq i32 %dec.i394, 0
  br i1 %cmp.old.i395, label %emit_eobrun.exit346.loopexit, label %emit_bits.exit.while.body_crit_edge.i399, !prof !90

emit_bits.exit.while.body_crit_edge.i399:         ; preds = %emit_bits.exit.i396
  %incdec.ptr.i397 = getelementptr inbounds i8, i8* %bufstart.addr.0.i356, i64 1
  %.pre.i398 = load i32, i32* %gather_statistics.i.i323, align 8, !tbaa !22
  br label %while.body.i359

emit_eobrun.exit346.loopexit:                     ; preds = %emit_bits.exit.i396
  br label %emit_eobrun.exit346

emit_eobrun.exit346:                              ; preds = %emit_eobrun.exit346.loopexit, %if.end.i344
  store i32 0, i32* %BE.i343, align 8, !tbaa !49
  br label %if.end52

if.end52:                                         ; preds = %if.end8, %if.then44, %emit_eobrun.exit346, %for.end
  %324 = bitcast %struct.jpeg_destination_mgr** %dest to <2 x i64>**
  %325 = load <2 x i64>*, <2 x i64>** %324, align 8, !tbaa !57
  %326 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %327 = load <2 x i64>, <2 x i64>* %326, align 8, !tbaa !58
  store <2 x i64> %327, <2 x i64>* %325, align 8, !tbaa !58
  %328 = load i32, i32* %restart_interval, align 8, !tbaa !52
  %tobool60 = icmp eq i32 %328, 0
  br i1 %tobool60, label %if.end73, label %if.then61, !prof !81

if.then61:                                        ; preds = %if.end52
  %restarts_to_go62 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 12
  %329 = bitcast i32* %restarts_to_go62 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = trunc i64 %330 to i32
  %cmp63 = icmp eq i32 %331, 0
  br i1 %cmp63, label %if.then65, label %if.end71

if.then65:                                        ; preds = %if.then61
  %332 = lshr i64 %330, 32
  %333 = trunc i64 %332 to i32
  store i32 %328, i32* %restarts_to_go62, align 8, !tbaa !53
  %next_restart_num68 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 13
  %inc69 = add nsw i32 %333, 1
  %and = and i32 %inc69, 7
  store i32 %and, i32* %next_restart_num68, align 4, !tbaa !54
  br label %if.end71

if.end71:                                         ; preds = %if.then65, %if.then61
  %334 = phi i32 [ %328, %if.then65 ], [ %331, %if.then61 ]
  %dec = add i32 %334, -1
  store i32 %dec, i32* %restarts_to_go62, align 8, !tbaa !53
  br label %if.end73

if.end73:                                         ; preds = %if.end52, %if.end71
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @encode_mcu_DC_refine(%struct.jpeg_compress_struct* nocapture readonly %cinfo, [64 x i16]** nocapture readonly %MCU_data) #0 !prof !97 {
entry:
  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59
  %0 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to %struct.phuff_entropy_encoder**
  %1 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %0, align 8, !tbaa !14
  %Al2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 50
  %2 = load i32, i32* %Al2, align 8, !tbaa !56
  %dest = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 5
  %3 = bitcast %struct.jpeg_destination_mgr** %dest to <2 x i64>**
  %4 = load <2 x i64>*, <2 x i64>** %3, align 8, !tbaa !57
  %next_output_byte3 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 2
  %5 = load <2 x i64>, <2 x i64>* %4, align 8, !tbaa !58
  %free_in_buffer5 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 3
  %6 = bitcast i8** %next_output_byte3 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %6, align 8, !tbaa !58
  %restart_interval = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 29
  %7 = load i32, i32* %restart_interval, align 8, !tbaa !52
  %tobool = icmp eq i32 %7, 0
  br i1 %tobool, label %for.cond.preheader, label %if.then, !prof !98

if.then:                                          ; preds = %entry
  %restarts_to_go = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 12
  %8 = bitcast i32* %restarts_to_go to i64*
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %cmp = icmp eq i32 %10, 0
  br i1 %cmp, label %if.then6, label %for.cond.preheader

if.then6:                                         ; preds = %if.then
  %11 = lshr i64 %9, 32
  %12 = trunc i64 %11 to i32
  tail call fastcc void @emit_restart(%struct.phuff_entropy_encoder* nonnull %1, i32 %12)
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry, %if.then, %if.then6
  %blocks_in_MCU = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 45
  %13 = load i32, i32* %blocks_in_MCU, align 8, !tbaa !60
  %cmp875 = icmp sgt i32 %13, 0
  br i1 %cmp875, label %for.body.lr.ph, label %for.end, !prof !99

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %put_bits1.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %gather_statistics.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 1
  %put_buffer11.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %cinfo.i61 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %14 = bitcast i8** %next_output_byte3 to <2 x i64>*
  %15 = bitcast i8** %next_output_byte3 to <2 x i64>*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %emit_bits.exit
  %16 = phi i32 [ %13, %for.body.lr.ph ], [ %45, %emit_bits.exit ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %emit_bits.exit ]
  %17 = load i32, i32* %gather_statistics.i, align 8, !tbaa !22
  %tobool.i = icmp eq i32 %17, 0
  br i1 %tobool.i, label %if.end7.i, label %emit_bits.exit, !prof !78

if.end7.i:                                        ; preds = %for.body
  %18 = load i32, i32* %put_bits1.i, align 8, !tbaa !51
  %arrayidx = getelementptr inbounds [64 x i16]*, [64 x i16]** %MCU_data, i64 %indvars.iv
  %19 = load [64 x i16]*, [64 x i16]** %arrayidx, align 8, !tbaa !18
  %arrayidx9 = getelementptr inbounds [64 x i16], [64 x i16]* %19, i64 0, i64 0
  %20 = load i16, i16* %arrayidx9, align 2, !tbaa !62
  %conv = sext i16 %20 to i32
  %shr74 = lshr i32 %conv, %2
  %conv.i = zext i32 %shr74 to i64
  %and.i = and i64 %conv.i, 1
  %add.i = add i32 %18, 1
  %sub8.i = sub i32 23, %18
  %sh_prom9.i = zext i32 %sub8.i to i64
  %shl10.i = shl i64 %and.i, %sh_prom9.i
  %21 = load i64, i64* %put_buffer11.i, align 8, !tbaa !50
  %or.i = or i64 %shl10.i, %21
  %cmp1267.i = icmp sgt i32 %add.i, 7
  br i1 %cmp1267.i, label %while.body.i.preheader, label %while.end.i, !prof !68

while.body.i.preheader:                           ; preds = %if.end7.i
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i.preheader, %if.end32.i
  %put_buffer.069.i = phi i64 [ %shl33.i, %if.end32.i ], [ %or.i, %while.body.i.preheader ]
  %put_bits.068.i = phi i32 [ %sub34.i, %if.end32.i ], [ %add.i, %while.body.i.preheader ]
  %shr66.i = lshr i64 %put_buffer.069.i, 16
  %conv16.i = trunc i64 %shr66.i to i8
  %22 = load i8*, i8** %next_output_byte3, align 8, !tbaa !69
  %incdec.ptr.i = getelementptr inbounds i8, i8* %22, i64 1
  store i8* %incdec.ptr.i, i8** %next_output_byte3, align 8, !tbaa !69
  store i8 %conv16.i, i8* %22, align 1, !tbaa !58
  %23 = load i64, i64* %free_in_buffer5, align 8, !tbaa !70
  %dec.i = add i64 %23, -1
  store i64 %dec.i, i64* %free_in_buffer5, align 8, !tbaa !70
  %cmp17.i = icmp eq i64 %dec.i, 0
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i, !prof !71

if.then19.i:                                      ; preds = %while.body.i
  %24 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i61, align 8, !tbaa !21
  %dest1.i62 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %24, i64 0, i32 5
  %25 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i62, align 8, !tbaa !57
  %empty_output_buffer.i63 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %25, i64 0, i32 3
  %26 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i63, align 8, !tbaa !72
  %call.i64 = tail call i32 %26(%struct.jpeg_compress_struct* %24) #3
  %tobool.i65 = icmp eq i32 %call.i64, 0
  br i1 %tobool.i65, label %if.then.i69, label %dump_buffer.exit73, !prof !74

if.then.i69:                                      ; preds = %if.then19.i
  %27 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i61, align 8, !tbaa !21
  %err.i66 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %27, i64 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i66, align 8, !tbaa !39
  %msg_code.i67 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i64 0, i32 5
  store i32 22, i32* %msg_code.i67, align 8, !tbaa !40
  %error_exit.i68 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i64 0, i32 0
  %29 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i68, align 8, !tbaa !42
  %30 = bitcast %struct.jpeg_compress_struct* %27 to %struct.jpeg_common_struct*
  tail call void %29(%struct.jpeg_common_struct* %30) #3
  br label %dump_buffer.exit73

dump_buffer.exit73:                               ; preds = %if.then19.i, %if.then.i69
  %31 = bitcast %struct.jpeg_destination_mgr* %25 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8, !tbaa !58
  store <2 x i64> %32, <2 x i64>* %14, align 8, !tbaa !58
  br label %if.end20.i

if.end20.i:                                       ; preds = %dump_buffer.exit73, %while.body.i
  %conv15.i = and i64 %shr66.i, 255
  %cmp21.i = icmp eq i64 %conv15.i, 255
  br i1 %cmp21.i, label %if.then23.i, label %if.end32.i, !prof !75

if.then23.i:                                      ; preds = %if.end20.i
  %33 = load i8*, i8** %next_output_byte3, align 8, !tbaa !69
  %incdec.ptr25.i = getelementptr inbounds i8, i8* %33, i64 1
  store i8* %incdec.ptr25.i, i8** %next_output_byte3, align 8, !tbaa !69
  store i8 0, i8* %33, align 1, !tbaa !58
  %34 = load i64, i64* %free_in_buffer5, align 8, !tbaa !70
  %dec27.i = add i64 %34, -1
  store i64 %dec27.i, i64* %free_in_buffer5, align 8, !tbaa !70
  %cmp28.i = icmp eq i64 %dec27.i, 0
  br i1 %cmp28.i, label %if.then30.i, label %if.end32.i, !prof !76

if.then30.i:                                      ; preds = %if.then23.i
  %35 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i61, align 8, !tbaa !21
  %dest1.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %35, i64 0, i32 5
  %36 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i, align 8, !tbaa !57
  %empty_output_buffer.i = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %36, i64 0, i32 3
  %37 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i, align 8, !tbaa !72
  %call.i = tail call i32 %37(%struct.jpeg_compress_struct* %35) #3
  %tobool.i59 = icmp eq i32 %call.i, 0
  br i1 %tobool.i59, label %if.then.i, label %dump_buffer.exit, !prof !74

if.then.i:                                        ; preds = %if.then30.i
  %38 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i61, align 8, !tbaa !21
  %err.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %38, i64 0, i32 0
  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !39
  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 5
  store i32 22, i32* %msg_code.i, align 8, !tbaa !40
  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 0
  %40 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !42
  %41 = bitcast %struct.jpeg_compress_struct* %38 to %struct.jpeg_common_struct*
  tail call void %40(%struct.jpeg_common_struct* %41) #3
  br label %dump_buffer.exit

dump_buffer.exit:                                 ; preds = %if.then30.i, %if.then.i
  %42 = bitcast %struct.jpeg_destination_mgr* %36 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 8, !tbaa !58
  store <2 x i64> %43, <2 x i64>* %15, align 8, !tbaa !58
  br label %if.end32.i

if.end32.i:                                       ; preds = %dump_buffer.exit, %if.then23.i, %if.end20.i
  %shl33.i = shl i64 %put_buffer.069.i, 8
  %sub34.i = add nsw i32 %put_bits.068.i, -8
  %cmp12.i = icmp sgt i32 %sub34.i, 7
  br i1 %cmp12.i, label %while.body.i, label %while.end.loopexit.i, !prof !68

while.end.loopexit.i:                             ; preds = %if.end32.i
  %shl33.i.lcssa = phi i64 [ %shl33.i, %if.end32.i ]
  %44 = and i32 %add.i, 7
  %.pre.pre = load i32, i32* %blocks_in_MCU, align 8, !tbaa !60
  br label %while.end.i

while.end.i:                                      ; preds = %while.end.loopexit.i, %if.end7.i
  %.pre = phi i32 [ %16, %if.end7.i ], [ %.pre.pre, %while.end.loopexit.i ]
  %put_buffer.0.lcssa.i = phi i64 [ %or.i, %if.end7.i ], [ %shl33.i.lcssa, %while.end.loopexit.i ]
  %put_bits.0.lcssa.i = phi i32 [ %add.i, %if.end7.i ], [ %44, %while.end.loopexit.i ]
  store i64 %put_buffer.0.lcssa.i, i64* %put_buffer11.i, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i, i32* %put_bits1.i, align 8, !tbaa !51
  br label %emit_bits.exit

emit_bits.exit:                                   ; preds = %for.body, %while.end.i
  %45 = phi i32 [ %16, %for.body ], [ %.pre, %while.end.i ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %46 = sext i32 %45 to i64
  %cmp8 = icmp slt i64 %indvars.iv.next, %46
  br i1 %cmp8, label %for.body, label %for.end.loopexit, !prof !99

for.end.loopexit:                                 ; preds = %emit_bits.exit
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader
  %47 = bitcast %struct.jpeg_destination_mgr** %dest to <2 x i64>**
  %48 = load <2 x i64>*, <2 x i64>** %47, align 8, !tbaa !57
  %49 = bitcast i8** %next_output_byte3 to <2 x i64>*
  %50 = load <2 x i64>, <2 x i64>* %49, align 8, !tbaa !58
  store <2 x i64> %50, <2 x i64>* %48, align 8, !tbaa !58
  %51 = load i32, i32* %restart_interval, align 8, !tbaa !52
  %tobool17 = icmp eq i32 %51, 0
  br i1 %tobool17, label %if.end30, label %if.then18, !prof !98

if.then18:                                        ; preds = %for.end
  %restarts_to_go19 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 12
  %52 = bitcast i32* %restarts_to_go19 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %53 to i32
  %cmp20 = icmp eq i32 %54, 0
  br i1 %cmp20, label %if.then22, label %if.end28

if.then22:                                        ; preds = %if.then18
  %55 = lshr i64 %53, 32
  %56 = trunc i64 %55 to i32
  store i32 %51, i32* %restarts_to_go19, align 8, !tbaa !53
  %next_restart_num25 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 13
  %inc26 = add nsw i32 %56, 1
  %and = and i32 %inc26, 7
  store i32 %and, i32* %next_restart_num25, align 4, !tbaa !54
  br label %if.end28

if.end28:                                         ; preds = %if.then22, %if.then18
  %57 = phi i32 [ %51, %if.then22 ], [ %54, %if.then18 ]
  %dec = add i32 %57, -1
  store i32 %dec, i32* %restarts_to_go19, align 8, !tbaa !53
  br label %if.end30

if.end30:                                         ; preds = %for.end, %if.end28
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @encode_mcu_AC_refine(%struct.jpeg_compress_struct* nocapture readonly %cinfo, [64 x i16]** nocapture readonly %MCU_data) #0 !prof !79 {
entry:
  %absvalues = alloca [64 x i32], align 16
  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59
  %0 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to %struct.phuff_entropy_encoder**
  %1 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %0, align 8, !tbaa !14
  %Se2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 48
  %2 = load i32, i32* %Se2, align 8, !tbaa !80
  %Al3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 50
  %3 = load i32, i32* %Al3, align 8, !tbaa !56
  %4 = bitcast [64 x i32]* %absvalues to i8*
  call void @llvm.lifetime.start(i64 256, i8* %4) #3
  %dest = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 5
  %5 = bitcast %struct.jpeg_destination_mgr** %dest to <2 x i64>**
  %6 = load <2 x i64>*, <2 x i64>** %5, align 8, !tbaa !57
  %next_output_byte4 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 2
  %7 = load <2 x i64>, <2 x i64>* %6, align 8, !tbaa !58
  %free_in_buffer6 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 3
  %8 = bitcast i8** %next_output_byte4 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %8, align 8, !tbaa !58
  %restart_interval = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 29
  %9 = load i32, i32* %restart_interval, align 8, !tbaa !52
  %tobool = icmp eq i32 %9, 0
  br i1 %tobool, label %if.end8, label %if.then, !prof !81

if.then:                                          ; preds = %entry
  %restarts_to_go = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 12
  %10 = bitcast i32* %restarts_to_go to i64*
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %cmp = icmp eq i32 %12, 0
  br i1 %cmp, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.then
  %13 = lshr i64 %11, 32
  %14 = trunc i64 %13 to i32
  tail call fastcc void @emit_restart(%struct.phuff_entropy_encoder* nonnull %1, i32 %14)
  br label %if.end8

if.end8:                                          ; preds = %entry, %if.then, %if.then7
  %15 = load [64 x i16]*, [64 x i16]** %MCU_data, align 8, !tbaa !18
  %Ss = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 47
  %16 = load i32, i32* %Ss, align 4, !tbaa !23
  %cmp91310 = icmp sgt i32 %16, %2
  br i1 %cmp91310, label %for.end.thread, label %for.body.preheader, !prof !100

for.end.thread:                                   ; preds = %if.end8
  %bit_buffer1329 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 11
  %BE1330 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 10
  br label %for.end60

for.body.preheader:                               ; preds = %if.end8
  %17 = sext i32 %16 to i64
  %18 = sext i32 %2 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv1314 = phi i64 [ %17, %for.body.preheader ], [ %indvars.iv.next1315, %for.body ]
  %EOB.01311 = phi i32 [ 0, %for.body.preheader ], [ %EOB.1, %for.body ]
  %arrayidx10 = getelementptr inbounds [0 x i32], [0 x i32]* @jpeg_natural_order, i64 0, i64 %indvars.iv1314
  %19 = load i32, i32* %arrayidx10, align 4, !tbaa !34
  %idxprom11 = sext i32 %19 to i64
  %arrayidx12 = getelementptr inbounds [64 x i16], [64 x i16]* %15, i64 0, i64 %idxprom11
  %20 = load i16, i16* %arrayidx12, align 2, !tbaa !62
  %conv = sext i16 %20 to i32
  %cmp13 = icmp slt i16 %20, 0
  %sub = sub nsw i32 0, %conv
  %sub.conv = select i1 %cmp13, i32 %sub, i32 %conv
  %shr = ashr i32 %sub.conv, %3
  %arrayidx18 = getelementptr inbounds [64 x i32], [64 x i32]* %absvalues, i64 0, i64 %indvars.iv1314
  store i32 %shr, i32* %arrayidx18, align 4, !tbaa !34
  %cmp19 = icmp eq i32 %shr, 1
  %21 = trunc i64 %indvars.iv1314 to i32
  %EOB.1 = select i1 %cmp19, i32 %21, i32 %EOB.01311
  %cmp9 = icmp slt i64 %indvars.iv1314, %18
  %indvars.iv.next1315 = add nsw i64 %indvars.iv1314, 1
  br i1 %cmp9, label %for.body, label %for.end, !prof !101

for.end:                                          ; preds = %for.body
  %EOB.1.lcssa = phi i32 [ %EOB.1, %for.body ]
  %bit_buffer = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 11
  %BE = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 10
  br i1 %cmp91310, label %for.end60, label %for.body27.lr.ph, !prof !67

for.body27.lr.ph:                                 ; preds = %for.end
  %22 = load i8*, i8** %bit_buffer, align 8, !tbaa !19
  %23 = load i32, i32* %BE, align 8, !tbaa !49
  %idx.ext = zext i32 %23 to i64
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %idx.ext
  %EOBRUN.i291 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 9
  %ac_tbl_no49 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 8
  %gather_statistics.i394 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 1
  %put_bits1.i410 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %cinfo.i412 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %put_buffer11.i428 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %24 = sext i32 %16 to i64
  %25 = sext i32 %EOB.1.lcssa to i64
  %26 = sext i32 %2 to i64
  %27 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %28 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %29 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %30 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %31 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %32 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %33 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %34 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %35 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %36 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %37 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %38 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %39 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %40 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %41 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %42 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %43 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %44 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %45 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %46 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %47 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %48 = bitcast i8** %next_output_byte4 to <2 x i64>*
  br label %for.body27

for.body27:                                       ; preds = %for.inc58, %for.body27.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc58 ], [ %24, %for.body27.lr.ph ]
  %r.01307 = phi i32 [ %r.2, %for.inc58 ], [ 0, %for.body27.lr.ph ]
  %BR.01305 = phi i32 [ %BR.2, %for.inc58 ], [ 0, %for.body27.lr.ph ]
  %BR_buffer.01304 = phi i8* [ %BR_buffer.2, %for.inc58 ], [ %add.ptr, %for.body27.lr.ph ]
  %arrayidx29 = getelementptr inbounds [64 x i32], [64 x i32]* %absvalues, i64 0, i64 %indvars.iv
  %49 = load i32, i32* %arrayidx29, align 4, !tbaa !34
  %cmp30 = icmp eq i32 %49, 0
  br i1 %cmp30, label %if.then32, label %while.cond.preheader, !prof !102

while.cond.preheader:                             ; preds = %for.body27
  %cmp351296 = icmp slt i32 %r.01307, 16
  %cmp37 = icmp sgt i64 %indvars.iv, %25
  %or.cond1791297 = or i1 %cmp37, %cmp351296
  br i1 %or.cond1791297, label %while.end, label %while.body.preheader, !prof !103

while.body.preheader:                             ; preds = %while.cond.preheader
  br label %while.body

if.then32:                                        ; preds = %for.body27
  %inc33 = add nsw i32 %r.01307, 1
  br label %for.inc58

while.body:                                       ; preds = %while.body.preheader, %emit_buffered_bits.exit276
  %r.11300 = phi i32 [ %sub391340, %emit_buffered_bits.exit276 ], [ %r.01307, %while.body.preheader ]
  %BR.11299 = phi i32 [ 0, %emit_buffered_bits.exit276 ], [ %BR.01305, %while.body.preheader ]
  %BR_buffer.11298 = phi i8* [ %207, %emit_buffered_bits.exit276 ], [ %BR_buffer.01304, %while.body.preheader ]
  %50 = load i32, i32* %EOBRUN.i291, align 4, !tbaa !48
  %cmp.i = icmp eq i32 %50, 0
  br i1 %cmp.i, label %emit_eobrun.exit, label %while.cond.i.preheader, !prof !104

while.cond.i.preheader:                           ; preds = %while.body
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i.preheader, %while.cond.i
  %temp.0.i = phi i32 [ %shr.i, %while.cond.i ], [ %50, %while.cond.i.preheader ]
  %nbits.0.i = phi i32 [ %inc.i, %while.cond.i ], [ 0, %while.cond.i.preheader ]
  %shr.i = ashr i32 %temp.0.i, 1
  %tobool.i = icmp eq i32 %shr.i, 0
  %inc.i = add nuw nsw i32 %nbits.0.i, 1
  br i1 %tobool.i, label %while.end.i, label %while.cond.i, !prof !87

while.end.i:                                      ; preds = %while.cond.i
  %nbits.0.i.lcssa = phi i32 [ %nbits.0.i, %while.cond.i ]
  %51 = load i32, i32* %ac_tbl_no49, align 8, !tbaa !46
  %shl.i = shl i32 %nbits.0.i.lcssa, 4
  %52 = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  %tobool.i.i = icmp eq i32 %52, 0
  br i1 %tobool.i.i, label %if.else.i.i, label %if.then.i.i, !prof !64

if.then.i.i:                                      ; preds = %while.end.i
  %idxprom.i.i = sext i32 %shl.i to i64
  %idxprom1.i.i = sext i32 %51 to i64
  %arrayidx.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i.i
  %53 = load i64*, i64** %arrayidx.i.i, align 8, !tbaa !18
  %arrayidx2.i.i = getelementptr inbounds i64, i64* %53, i64 %idxprom.i.i
  %54 = load i64, i64* %arrayidx2.i.i, align 8, !tbaa !65
  %inc.i.i = add nsw i64 %54, 1
  store i64 %inc.i.i, i64* %arrayidx2.i.i, align 8, !tbaa !65
  br label %emit_symbol.exit.i

if.else.i.i:                                      ; preds = %while.end.i
  %idxprom3.i.i = sext i32 %51 to i64
  %arrayidx4.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i.i
  %55 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i.i, align 8, !tbaa !18
  %idxprom5.i.i = sext i32 %shl.i to i64
  %arrayidx6.i.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %55, i64 0, i32 0, i64 %idxprom5.i.i
  %56 = load i32, i32* %arrayidx6.i.i, align 4, !tbaa !34
  %arrayidx8.i.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %55, i64 0, i32 1, i64 %idxprom5.i.i
  %57 = load i8, i8* %arrayidx8.i.i, align 1, !tbaa !58
  %conv.i.i = sext i8 %57 to i32
  %conv.i704 = zext i32 %56 to i64
  %58 = load i32, i32* %put_bits1.i410, align 8, !tbaa !51
  %cmp.i706 = icmp eq i8 %57, 0
  br i1 %cmp.i706, label %if.end.i714, label %if.end7.i726, !prof !66

if.end.i714:                                      ; preds = %if.else.i.i
  %59 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i708 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %59, i64 0, i32 0
  %60 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i708, align 8, !tbaa !39
  %msg_code.i709 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %60, i64 0, i32 5
  store i32 39, i32* %msg_code.i709, align 8, !tbaa !40
  %error_exit.i710 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %60, i64 0, i32 0
  %61 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i710, align 8, !tbaa !42
  %62 = bitcast %struct.jpeg_compress_struct* %59 to %struct.jpeg_common_struct*
  tail call void %61(%struct.jpeg_common_struct* %62) #3
  %.pre = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  %tobool.i713 = icmp eq i32 %.pre, 0
  br i1 %tobool.i713, label %if.end7.i726, label %emit_symbol.exit.i, !prof !67

if.end7.i726:                                     ; preds = %if.else.i.i, %if.end.i714
  %sh_prom.i715 = zext i32 %conv.i.i to i64
  %shl.i716 = shl i64 1, %sh_prom.i715
  %sub.i717 = add i64 %shl.i716, 4294967295
  %and.i718 = and i64 %sub.i717, %conv.i704
  %add.i719 = add i32 %58, %conv.i.i
  %sub8.i720 = sub nsw i32 24, %add.i719
  %sh_prom9.i721 = zext i32 %sub8.i720 to i64
  %shl10.i722 = shl i64 %and.i718, %sh_prom9.i721
  %63 = load i64, i64* %put_buffer11.i428, align 8, !tbaa !50
  %or.i724 = or i64 %63, %shl10.i722
  %cmp1267.i725 = icmp sgt i32 %add.i719, 7
  br i1 %cmp1267.i725, label %while.body.i737.preheader, label %while.end.i754, !prof !68

while.body.i737.preheader:                        ; preds = %if.end7.i726
  br label %while.body.i737

while.body.i737:                                  ; preds = %while.body.i737.preheader, %if.end32.i750
  %put_buffer.069.i730 = phi i64 [ %shl33.i747, %if.end32.i750 ], [ %or.i724, %while.body.i737.preheader ]
  %put_bits.068.i731 = phi i32 [ %sub34.i748, %if.end32.i750 ], [ %add.i719, %while.body.i737.preheader ]
  %shr66.i732 = lshr i64 %put_buffer.069.i730, 16
  %conv16.i733 = trunc i64 %shr66.i732 to i8
  %64 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i734 = getelementptr inbounds i8, i8* %64, i64 1
  store i8* %incdec.ptr.i734, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i733, i8* %64, align 1, !tbaa !58
  %65 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i735 = add i64 %65, -1
  store i64 %dec.i735, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i736 = icmp eq i64 %dec.i735, 0
  br i1 %cmp17.i736, label %if.then19.i738, label %if.end20.i741, !prof !71

if.then19.i738:                                   ; preds = %while.body.i737
  %66 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i1213 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %66, i64 0, i32 5
  %67 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i1213, align 8, !tbaa !57
  %empty_output_buffer.i1214 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %67, i64 0, i32 3
  %68 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i1214, align 8, !tbaa !72
  %call.i1215 = tail call i32 %68(%struct.jpeg_compress_struct* %66) #3
  %tobool.i1216 = icmp eq i32 %call.i1215, 0
  br i1 %tobool.i1216, label %if.then.i1220, label %dump_buffer.exit1225, !prof !74

if.then.i1220:                                    ; preds = %if.then19.i738
  %69 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i1217 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %69, i64 0, i32 0
  %70 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1217, align 8, !tbaa !39
  %msg_code.i1218 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %70, i64 0, i32 5
  store i32 22, i32* %msg_code.i1218, align 8, !tbaa !40
  %error_exit.i1219 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %70, i64 0, i32 0
  %71 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1219, align 8, !tbaa !42
  %72 = bitcast %struct.jpeg_compress_struct* %69 to %struct.jpeg_common_struct*
  tail call void %71(%struct.jpeg_common_struct* %72) #3
  br label %dump_buffer.exit1225

dump_buffer.exit1225:                             ; preds = %if.then19.i738, %if.then.i1220
  %73 = bitcast %struct.jpeg_destination_mgr* %67 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !tbaa !58
  store <2 x i64> %74, <2 x i64>* %43, align 8, !tbaa !58
  br label %if.end20.i741

if.end20.i741:                                    ; preds = %dump_buffer.exit1225, %while.body.i737
  %conv15.i739 = and i64 %shr66.i732, 255
  %cmp21.i740 = icmp eq i64 %conv15.i739, 255
  br i1 %cmp21.i740, label %if.then23.i745, label %if.end32.i750, !prof !75

if.then23.i745:                                   ; preds = %if.end20.i741
  %75 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i742 = getelementptr inbounds i8, i8* %75, i64 1
  store i8* %incdec.ptr25.i742, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %75, align 1, !tbaa !58
  %76 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i743 = add i64 %76, -1
  store i64 %dec27.i743, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i744 = icmp eq i64 %dec27.i743, 0
  br i1 %cmp28.i744, label %if.then30.i746, label %if.end32.i750, !prof !76

if.then30.i746:                                   ; preds = %if.then23.i745
  %77 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i757 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %77, i64 0, i32 5
  %78 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i757, align 8, !tbaa !57
  %empty_output_buffer.i758 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %78, i64 0, i32 3
  %79 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i758, align 8, !tbaa !72
  %call.i759 = tail call i32 %79(%struct.jpeg_compress_struct* %77) #3
  %tobool.i760 = icmp eq i32 %call.i759, 0
  br i1 %tobool.i760, label %if.then.i764, label %dump_buffer.exit769, !prof !74

if.then.i764:                                     ; preds = %if.then30.i746
  %80 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i761 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %80, i64 0, i32 0
  %81 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i761, align 8, !tbaa !39
  %msg_code.i762 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i64 0, i32 5
  store i32 22, i32* %msg_code.i762, align 8, !tbaa !40
  %error_exit.i763 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i64 0, i32 0
  %82 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i763, align 8, !tbaa !42
  %83 = bitcast %struct.jpeg_compress_struct* %80 to %struct.jpeg_common_struct*
  tail call void %82(%struct.jpeg_common_struct* %83) #3
  br label %dump_buffer.exit769

dump_buffer.exit769:                              ; preds = %if.then30.i746, %if.then.i764
  %84 = bitcast %struct.jpeg_destination_mgr* %78 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !tbaa !58
  store <2 x i64> %85, <2 x i64>* %44, align 8, !tbaa !58
  br label %if.end32.i750

if.end32.i750:                                    ; preds = %dump_buffer.exit769, %if.then23.i745, %if.end20.i741
  %shl33.i747 = shl i64 %put_buffer.069.i730, 8
  %sub34.i748 = add nsw i32 %put_bits.068.i731, -8
  %cmp12.i749 = icmp sgt i32 %sub34.i748, 7
  br i1 %cmp12.i749, label %while.body.i737, label %while.end.loopexit.i751, !prof !68

while.end.loopexit.i751:                          ; preds = %if.end32.i750
  %shl33.i747.lcssa = phi i64 [ %shl33.i747, %if.end32.i750 ]
  %86 = and i32 %add.i719, 7
  br label %while.end.i754

while.end.i754:                                   ; preds = %while.end.loopexit.i751, %if.end7.i726
  %put_buffer.0.lcssa.i752 = phi i64 [ %or.i724, %if.end7.i726 ], [ %shl33.i747.lcssa, %while.end.loopexit.i751 ]
  %put_bits.0.lcssa.i753 = phi i32 [ %add.i719, %if.end7.i726 ], [ %86, %while.end.loopexit.i751 ]
  store i64 %put_buffer.0.lcssa.i752, i64* %put_buffer11.i428, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i753, i32* %put_bits1.i410, align 8, !tbaa !51
  br label %emit_symbol.exit.i

emit_symbol.exit.i:                               ; preds = %while.end.i754, %if.end.i714, %if.then.i.i
  %tobool2.i = icmp eq i32 %nbits.0.i.lcssa, 0
  br i1 %tobool2.i, label %if.end.i, label %if.end.i780, !prof !88

if.end.i780:                                      ; preds = %emit_symbol.exit.i
  %87 = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  %tobool.i779 = icmp eq i32 %87, 0
  br i1 %tobool.i779, label %if.end7.i792, label %if.end.i, !prof !78

if.end7.i792:                                     ; preds = %if.end.i780
  %88 = load i32, i32* %put_bits1.i410, align 8, !tbaa !51
  %89 = load i32, i32* %EOBRUN.i291, align 4, !tbaa !48
  %conv.i770 = zext i32 %89 to i64
  %sh_prom.i781 = zext i32 %nbits.0.i.lcssa to i64
  %shl.i782 = shl i64 1, %sh_prom.i781
  %sub.i783 = add i64 %shl.i782, 4294967295
  %and.i784 = and i64 %conv.i770, %sub.i783
  %add.i785 = add i32 %88, %nbits.0.i.lcssa
  %sub8.i786 = sub nsw i32 24, %add.i785
  %sh_prom9.i787 = zext i32 %sub8.i786 to i64
  %shl10.i788 = shl i64 %and.i784, %sh_prom9.i787
  %90 = load i64, i64* %put_buffer11.i428, align 8, !tbaa !50
  %or.i790 = or i64 %shl10.i788, %90
  %cmp1267.i791 = icmp sgt i32 %add.i785, 7
  br i1 %cmp1267.i791, label %while.body.i803.preheader, label %while.end.i820, !prof !68

while.body.i803.preheader:                        ; preds = %if.end7.i792
  br label %while.body.i803

while.body.i803:                                  ; preds = %while.body.i803.preheader, %if.end32.i816
  %put_buffer.069.i796 = phi i64 [ %shl33.i813, %if.end32.i816 ], [ %or.i790, %while.body.i803.preheader ]
  %put_bits.068.i797 = phi i32 [ %sub34.i814, %if.end32.i816 ], [ %add.i785, %while.body.i803.preheader ]
  %shr66.i798 = lshr i64 %put_buffer.069.i796, 16
  %conv16.i799 = trunc i64 %shr66.i798 to i8
  %91 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i800 = getelementptr inbounds i8, i8* %91, i64 1
  store i8* %incdec.ptr.i800, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i799, i8* %91, align 1, !tbaa !58
  %92 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i801 = add i64 %92, -1
  store i64 %dec.i801, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i802 = icmp eq i64 %dec.i801, 0
  br i1 %cmp17.i802, label %if.then19.i804, label %if.end20.i807, !prof !71

if.then19.i804:                                   ; preds = %while.body.i803
  %93 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i1227 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %93, i64 0, i32 5
  %94 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i1227, align 8, !tbaa !57
  %empty_output_buffer.i1228 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %94, i64 0, i32 3
  %95 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i1228, align 8, !tbaa !72
  %call.i1229 = tail call i32 %95(%struct.jpeg_compress_struct* %93) #3
  %tobool.i1230 = icmp eq i32 %call.i1229, 0
  br i1 %tobool.i1230, label %if.then.i1234, label %dump_buffer.exit1239, !prof !74

if.then.i1234:                                    ; preds = %if.then19.i804
  %96 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i1231 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %96, i64 0, i32 0
  %97 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1231, align 8, !tbaa !39
  %msg_code.i1232 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %97, i64 0, i32 5
  store i32 22, i32* %msg_code.i1232, align 8, !tbaa !40
  %error_exit.i1233 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %97, i64 0, i32 0
  %98 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1233, align 8, !tbaa !42
  %99 = bitcast %struct.jpeg_compress_struct* %96 to %struct.jpeg_common_struct*
  tail call void %98(%struct.jpeg_common_struct* %99) #3
  br label %dump_buffer.exit1239

dump_buffer.exit1239:                             ; preds = %if.then19.i804, %if.then.i1234
  %100 = bitcast %struct.jpeg_destination_mgr* %94 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8, !tbaa !58
  store <2 x i64> %101, <2 x i64>* %47, align 8, !tbaa !58
  br label %if.end20.i807

if.end20.i807:                                    ; preds = %dump_buffer.exit1239, %while.body.i803
  %conv15.i805 = and i64 %shr66.i798, 255
  %cmp21.i806 = icmp eq i64 %conv15.i805, 255
  br i1 %cmp21.i806, label %if.then23.i811, label %if.end32.i816, !prof !75

if.then23.i811:                                   ; preds = %if.end20.i807
  %102 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i808 = getelementptr inbounds i8, i8* %102, i64 1
  store i8* %incdec.ptr25.i808, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %102, align 1, !tbaa !58
  %103 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i809 = add i64 %103, -1
  store i64 %dec27.i809, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i810 = icmp eq i64 %dec27.i809, 0
  br i1 %cmp28.i810, label %if.then30.i812, label %if.end32.i816, !prof !76

if.then30.i812:                                   ; preds = %if.then23.i811
  %104 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i823 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %104, i64 0, i32 5
  %105 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i823, align 8, !tbaa !57
  %empty_output_buffer.i824 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %105, i64 0, i32 3
  %106 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i824, align 8, !tbaa !72
  %call.i825 = tail call i32 %106(%struct.jpeg_compress_struct* %104) #3
  %tobool.i826 = icmp eq i32 %call.i825, 0
  br i1 %tobool.i826, label %if.then.i830, label %dump_buffer.exit835, !prof !74

if.then.i830:                                     ; preds = %if.then30.i812
  %107 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i827 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %107, i64 0, i32 0
  %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i827, align 8, !tbaa !39
  %msg_code.i828 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %108, i64 0, i32 5
  store i32 22, i32* %msg_code.i828, align 8, !tbaa !40
  %error_exit.i829 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %108, i64 0, i32 0
  %109 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i829, align 8, !tbaa !42
  %110 = bitcast %struct.jpeg_compress_struct* %107 to %struct.jpeg_common_struct*
  tail call void %109(%struct.jpeg_common_struct* %110) #3
  br label %dump_buffer.exit835

dump_buffer.exit835:                              ; preds = %if.then30.i812, %if.then.i830
  %111 = bitcast %struct.jpeg_destination_mgr* %105 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 8, !tbaa !58
  store <2 x i64> %112, <2 x i64>* %48, align 8, !tbaa !58
  br label %if.end32.i816

if.end32.i816:                                    ; preds = %dump_buffer.exit835, %if.then23.i811, %if.end20.i807
  %shl33.i813 = shl i64 %put_buffer.069.i796, 8
  %sub34.i814 = add nsw i32 %put_bits.068.i797, -8
  %cmp12.i815 = icmp sgt i32 %sub34.i814, 7
  br i1 %cmp12.i815, label %while.body.i803, label %while.end.loopexit.i817, !prof !68

while.end.loopexit.i817:                          ; preds = %if.end32.i816
  %shl33.i813.lcssa = phi i64 [ %shl33.i813, %if.end32.i816 ]
  %113 = and i32 %add.i785, 7
  br label %while.end.i820

while.end.i820:                                   ; preds = %while.end.loopexit.i817, %if.end7.i792
  %put_buffer.0.lcssa.i818 = phi i64 [ %or.i790, %if.end7.i792 ], [ %shl33.i813.lcssa, %while.end.loopexit.i817 ]
  %put_bits.0.lcssa.i819 = phi i32 [ %add.i785, %if.end7.i792 ], [ %113, %while.end.loopexit.i817 ]
  store i64 %put_buffer.0.lcssa.i818, i64* %put_buffer11.i428, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i819, i32* %put_bits1.i410, align 8, !tbaa !51
  br label %if.end.i

if.end.i:                                         ; preds = %while.end.i820, %if.end.i780, %emit_symbol.exit.i
  store i32 0, i32* %EOBRUN.i291, align 4, !tbaa !48
  %114 = load i32, i32* %BE, align 8, !tbaa !49
  %115 = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  %tobool.i181 = icmp eq i32 %115, 0
  %cmp.i182 = icmp ne i32 %114, 0
  %or.cond.i = and i1 %cmp.i182, %tobool.i181
  br i1 %or.cond.i, label %while.body.preheader.i, label %emit_buffered_bits.exit, !prof !89

while.body.preheader.i:                           ; preds = %if.end.i
  %116 = load i8*, i8** %bit_buffer, align 8, !tbaa !19
  br label %while.body.i

while.body.i:                                     ; preds = %emit_bits.exit.while.body_crit_edge.i, %while.body.preheader.i
  %117 = phi i32 [ %.pre.i, %emit_bits.exit.while.body_crit_edge.i ], [ 0, %while.body.preheader.i ]
  %bufstart.addr.0.i = phi i8* [ %incdec.ptr.i, %emit_bits.exit.while.body_crit_edge.i ], [ %116, %while.body.preheader.i ]
  %nbits.addr.0.i = phi i32 [ %dec.i, %emit_bits.exit.while.body_crit_edge.i ], [ %114, %while.body.preheader.i ]
  %tobool.i.i183 = icmp eq i32 %117, 0
  br i1 %tobool.i.i183, label %if.end7.i.i, label %emit_bits.exit.i, !prof !78

if.end7.i.i:                                      ; preds = %while.body.i
  %118 = load i32, i32* %put_bits1.i410, align 8, !tbaa !51
  %119 = load i8, i8* %bufstart.addr.0.i, align 1, !tbaa !58
  %conv5.i = zext i8 %119 to i64
  %and.i.i = and i64 %conv5.i, 1
  %add.i.i = add i32 %118, 1
  %sub8.i.i = sub i32 23, %118
  %sh_prom9.i.i = zext i32 %sub8.i.i to i64
  %shl10.i.i = shl i64 %and.i.i, %sh_prom9.i.i
  %120 = load i64, i64* %put_buffer11.i428, align 8, !tbaa !50
  %or.i.i = or i64 %shl10.i.i, %120
  %cmp1267.i.i = icmp sgt i32 %add.i.i, 7
  br i1 %cmp1267.i.i, label %while.body.i.i.preheader, label %while.end.i.i, !prof !68

while.body.i.i.preheader:                         ; preds = %if.end7.i.i
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i.preheader, %if.end32.i.i
  %put_buffer.069.i.i = phi i64 [ %shl33.i.i, %if.end32.i.i ], [ %or.i.i, %while.body.i.i.preheader ]
  %put_bits.068.i.i = phi i32 [ %sub34.i.i, %if.end32.i.i ], [ %add.i.i, %while.body.i.i.preheader ]
  %shr66.i.i = lshr i64 %put_buffer.069.i.i, 16
  %conv16.i.i = trunc i64 %shr66.i.i to i8
  %121 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i.i = getelementptr inbounds i8, i8* %121, i64 1
  store i8* %incdec.ptr.i.i, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i.i, i8* %121, align 1, !tbaa !58
  %122 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i.i = add i64 %122, -1
  store i64 %dec.i.i, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp17.i.i, label %if.then19.i.i, label %if.end20.i.i, !prof !71

if.then19.i.i:                                    ; preds = %while.body.i.i
  %123 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %123, i64 0, i32 5
  %124 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i, align 8, !tbaa !57
  %empty_output_buffer.i = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %124, i64 0, i32 3
  %125 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i, align 8, !tbaa !72
  %call.i = tail call i32 %125(%struct.jpeg_compress_struct* %123) #3
  %tobool.i185 = icmp eq i32 %call.i, 0
  br i1 %tobool.i185, label %if.then.i, label %dump_buffer.exit, !prof !74

if.then.i:                                        ; preds = %if.then19.i.i
  %126 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %126, i64 0, i32 0
  %127 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !39
  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %127, i64 0, i32 5
  store i32 22, i32* %msg_code.i, align 8, !tbaa !40
  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %127, i64 0, i32 0
  %128 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !42
  %129 = bitcast %struct.jpeg_compress_struct* %126 to %struct.jpeg_common_struct*
  tail call void %128(%struct.jpeg_common_struct* %129) #3
  br label %dump_buffer.exit

dump_buffer.exit:                                 ; preds = %if.then19.i.i, %if.then.i
  %130 = bitcast %struct.jpeg_destination_mgr* %124 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !tbaa !58
  store <2 x i64> %131, <2 x i64>* %45, align 8, !tbaa !58
  br label %if.end20.i.i

if.end20.i.i:                                     ; preds = %dump_buffer.exit, %while.body.i.i
  %conv15.i.i = and i64 %shr66.i.i, 255
  %cmp21.i.i = icmp eq i64 %conv15.i.i, 255
  br i1 %cmp21.i.i, label %if.then23.i.i, label %if.end32.i.i, !prof !75

if.then23.i.i:                                    ; preds = %if.end20.i.i
  %132 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i.i = getelementptr inbounds i8, i8* %132, i64 1
  store i8* %incdec.ptr25.i.i, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %132, align 1, !tbaa !58
  %133 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i.i = add i64 %133, -1
  store i64 %dec27.i.i, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i.i = icmp eq i64 %dec27.i.i, 0
  br i1 %cmp28.i.i, label %if.then30.i.i, label %if.end32.i.i, !prof !76

if.then30.i.i:                                    ; preds = %if.then23.i.i
  %134 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i837 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %134, i64 0, i32 5
  %135 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i837, align 8, !tbaa !57
  %empty_output_buffer.i838 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %135, i64 0, i32 3
  %136 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i838, align 8, !tbaa !72
  %call.i839 = tail call i32 %136(%struct.jpeg_compress_struct* %134) #3
  %tobool.i840 = icmp eq i32 %call.i839, 0
  br i1 %tobool.i840, label %if.then.i844, label %dump_buffer.exit849, !prof !74

if.then.i844:                                     ; preds = %if.then30.i.i
  %137 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i841 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %137, i64 0, i32 0
  %138 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i841, align 8, !tbaa !39
  %msg_code.i842 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %138, i64 0, i32 5
  store i32 22, i32* %msg_code.i842, align 8, !tbaa !40
  %error_exit.i843 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %138, i64 0, i32 0
  %139 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i843, align 8, !tbaa !42
  %140 = bitcast %struct.jpeg_compress_struct* %137 to %struct.jpeg_common_struct*
  tail call void %139(%struct.jpeg_common_struct* %140) #3
  br label %dump_buffer.exit849

dump_buffer.exit849:                              ; preds = %if.then30.i.i, %if.then.i844
  %141 = bitcast %struct.jpeg_destination_mgr* %135 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !tbaa !58
  store <2 x i64> %142, <2 x i64>* %46, align 8, !tbaa !58
  br label %if.end32.i.i

if.end32.i.i:                                     ; preds = %dump_buffer.exit849, %if.then23.i.i, %if.end20.i.i
  %shl33.i.i = shl i64 %put_buffer.069.i.i, 8
  %sub34.i.i = add nsw i32 %put_bits.068.i.i, -8
  %cmp12.i.i = icmp sgt i32 %sub34.i.i, 7
  br i1 %cmp12.i.i, label %while.body.i.i, label %while.end.loopexit.i.i, !prof !68

while.end.loopexit.i.i:                           ; preds = %if.end32.i.i
  %shl33.i.i.lcssa = phi i64 [ %shl33.i.i, %if.end32.i.i ]
  %143 = and i32 %add.i.i, 7
  br label %while.end.i.i

while.end.i.i:                                    ; preds = %while.end.loopexit.i.i, %if.end7.i.i
  %put_buffer.0.lcssa.i.i = phi i64 [ %or.i.i, %if.end7.i.i ], [ %shl33.i.i.lcssa, %while.end.loopexit.i.i ]
  %put_bits.0.lcssa.i.i = phi i32 [ %add.i.i, %if.end7.i.i ], [ %143, %while.end.loopexit.i.i ]
  store i64 %put_buffer.0.lcssa.i.i, i64* %put_buffer11.i428, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i.i, i32* %put_bits1.i410, align 8, !tbaa !51
  br label %emit_bits.exit.i

emit_bits.exit.i:                                 ; preds = %while.end.i.i, %while.body.i
  %dec.i = add i32 %nbits.addr.0.i, -1
  %cmp.old.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.old.i, label %emit_buffered_bits.exit.loopexit, label %emit_bits.exit.while.body_crit_edge.i, !prof !90

emit_bits.exit.while.body_crit_edge.i:            ; preds = %emit_bits.exit.i
  %incdec.ptr.i = getelementptr inbounds i8, i8* %bufstart.addr.0.i, i64 1
  %.pre.i = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  br label %while.body.i

emit_buffered_bits.exit.loopexit:                 ; preds = %emit_bits.exit.i
  br label %emit_buffered_bits.exit

emit_buffered_bits.exit:                          ; preds = %emit_buffered_bits.exit.loopexit, %if.end.i
  store i32 0, i32* %BE, align 8, !tbaa !49
  br label %emit_eobrun.exit

emit_eobrun.exit:                                 ; preds = %while.body, %emit_buffered_bits.exit
  %144 = load i32, i32* %ac_tbl_no49, align 8, !tbaa !46
  %145 = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  %tobool.i188 = icmp eq i32 %145, 0
  %idxprom3.i = sext i32 %144 to i64
  br i1 %tobool.i188, label %if.else.i, label %if.then.i190, !prof !64

if.then.i190:                                     ; preds = %emit_eobrun.exit
  %arrayidx.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom3.i
  %146 = load i64*, i64** %arrayidx.i, align 8, !tbaa !18
  %arrayidx2.i = getelementptr inbounds i64, i64* %146, i64 240
  %147 = load i64, i64* %arrayidx2.i, align 8, !tbaa !65
  %inc.i189 = add nsw i64 %147, 1
  store i64 %inc.i189, i64* %arrayidx2.i, align 8, !tbaa !65
  br label %emit_symbol.exit.thread

if.else.i:                                        ; preds = %emit_eobrun.exit
  %arrayidx4.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i
  %148 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i, align 8, !tbaa !18
  %arrayidx6.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %148, i64 0, i32 0, i64 240
  %149 = load i32, i32* %arrayidx6.i, align 4, !tbaa !34
  %arrayidx8.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %148, i64 0, i32 1, i64 240
  %150 = load i8, i8* %arrayidx8.i, align 1, !tbaa !58
  %conv.i = sext i8 %150 to i32
  %conv.i192 = zext i32 %149 to i64
  %151 = load i32, i32* %put_bits1.i410, align 8, !tbaa !51
  %cmp.i193 = icmp eq i8 %150, 0
  br i1 %cmp.i193, label %if.end.i201, label %if.end7.i, !prof !66

if.end.i201:                                      ; preds = %if.else.i
  %152 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i195 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %152, i64 0, i32 0
  %153 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i195, align 8, !tbaa !39
  %msg_code.i196 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %153, i64 0, i32 5
  store i32 39, i32* %msg_code.i196, align 8, !tbaa !40
  %error_exit.i197 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %153, i64 0, i32 0
  %154 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i197, align 8, !tbaa !42
  %155 = bitcast %struct.jpeg_compress_struct* %152 to %struct.jpeg_common_struct*
  tail call void %154(%struct.jpeg_common_struct* %155) #3
  %.pre1316 = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  %tobool.i200 = icmp eq i32 %.pre1316, 0
  br i1 %tobool.i200, label %if.end7.i, label %emit_symbol.exit.thread, !prof !67

if.end7.i:                                        ; preds = %if.else.i, %if.end.i201
  %sh_prom.i = zext i32 %conv.i to i64
  %shl.i202 = shl i64 1, %sh_prom.i
  %sub.i = add i64 %shl.i202, 4294967295
  %and.i = and i64 %sub.i, %conv.i192
  %add.i = add i32 %151, %conv.i
  %sub8.i = sub nsw i32 24, %add.i
  %sh_prom9.i = zext i32 %sub8.i to i64
  %shl10.i = shl i64 %and.i, %sh_prom9.i
  %156 = load i64, i64* %put_buffer11.i428, align 8, !tbaa !50
  %or.i = or i64 %156, %shl10.i
  %cmp1267.i = icmp sgt i32 %add.i, 7
  br i1 %cmp1267.i, label %while.body.i206.preheader, label %emit_symbol.exit, !prof !68

while.body.i206.preheader:                        ; preds = %if.end7.i
  br label %while.body.i206

while.body.i206:                                  ; preds = %while.body.i206.preheader, %if.end32.i
  %put_buffer.069.i = phi i64 [ %shl33.i, %if.end32.i ], [ %or.i, %while.body.i206.preheader ]
  %put_bits.068.i = phi i32 [ %sub34.i, %if.end32.i ], [ %add.i, %while.body.i206.preheader ]
  %shr66.i = lshr i64 %put_buffer.069.i, 16
  %conv16.i = trunc i64 %shr66.i to i8
  %157 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i204 = getelementptr inbounds i8, i8* %157, i64 1
  store i8* %incdec.ptr.i204, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i, i8* %157, align 1, !tbaa !58
  %158 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i205 = add i64 %158, -1
  store i64 %dec.i205, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i = icmp eq i64 %dec.i205, 0
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i, !prof !71

if.then19.i:                                      ; preds = %while.body.i206
  %159 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i851 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %159, i64 0, i32 5
  %160 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i851, align 8, !tbaa !57
  %empty_output_buffer.i852 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %160, i64 0, i32 3
  %161 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i852, align 8, !tbaa !72
  %call.i853 = tail call i32 %161(%struct.jpeg_compress_struct* %159) #3
  %tobool.i854 = icmp eq i32 %call.i853, 0
  br i1 %tobool.i854, label %if.then.i858, label %dump_buffer.exit863, !prof !74

if.then.i858:                                     ; preds = %if.then19.i
  %162 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i855 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %162, i64 0, i32 0
  %163 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i855, align 8, !tbaa !39
  %msg_code.i856 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %163, i64 0, i32 5
  store i32 22, i32* %msg_code.i856, align 8, !tbaa !40
  %error_exit.i857 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %163, i64 0, i32 0
  %164 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i857, align 8, !tbaa !42
  %165 = bitcast %struct.jpeg_compress_struct* %162 to %struct.jpeg_common_struct*
  tail call void %164(%struct.jpeg_common_struct* %165) #3
  br label %dump_buffer.exit863

dump_buffer.exit863:                              ; preds = %if.then19.i, %if.then.i858
  %166 = bitcast %struct.jpeg_destination_mgr* %160 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !tbaa !58
  store <2 x i64> %167, <2 x i64>* %41, align 8, !tbaa !58
  br label %if.end20.i

if.end20.i:                                       ; preds = %dump_buffer.exit863, %while.body.i206
  %conv15.i = and i64 %shr66.i, 255
  %cmp21.i = icmp eq i64 %conv15.i, 255
  br i1 %cmp21.i, label %if.then23.i, label %if.end32.i, !prof !75

if.then23.i:                                      ; preds = %if.end20.i
  %168 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i = getelementptr inbounds i8, i8* %168, i64 1
  store i8* %incdec.ptr25.i, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %168, align 1, !tbaa !58
  %169 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i = add i64 %169, -1
  store i64 %dec27.i, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i = icmp eq i64 %dec27.i, 0
  br i1 %cmp28.i, label %if.then30.i, label %if.end32.i, !prof !76

if.then30.i:                                      ; preds = %if.then23.i
  %170 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i209 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %170, i64 0, i32 5
  %171 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i209, align 8, !tbaa !57
  %empty_output_buffer.i210 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %171, i64 0, i32 3
  %172 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i210, align 8, !tbaa !72
  %call.i211 = tail call i32 %172(%struct.jpeg_compress_struct* %170) #3
  %tobool.i212 = icmp eq i32 %call.i211, 0
  br i1 %tobool.i212, label %if.then.i216, label %dump_buffer.exit221, !prof !74

if.then.i216:                                     ; preds = %if.then30.i
  %173 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i213 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %173, i64 0, i32 0
  %174 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i213, align 8, !tbaa !39
  %msg_code.i214 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %174, i64 0, i32 5
  store i32 22, i32* %msg_code.i214, align 8, !tbaa !40
  %error_exit.i215 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %174, i64 0, i32 0
  %175 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i215, align 8, !tbaa !42
  %176 = bitcast %struct.jpeg_compress_struct* %173 to %struct.jpeg_common_struct*
  tail call void %175(%struct.jpeg_common_struct* %176) #3
  br label %dump_buffer.exit221

dump_buffer.exit221:                              ; preds = %if.then30.i, %if.then.i216
  %177 = bitcast %struct.jpeg_destination_mgr* %171 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8, !tbaa !58
  store <2 x i64> %178, <2 x i64>* %42, align 8, !tbaa !58
  br label %if.end32.i

if.end32.i:                                       ; preds = %dump_buffer.exit221, %if.then23.i, %if.end20.i
  %shl33.i = shl i64 %put_buffer.069.i, 8
  %sub34.i = add nsw i32 %put_bits.068.i, -8
  %cmp12.i = icmp sgt i32 %sub34.i, 7
  br i1 %cmp12.i, label %while.body.i206, label %while.end.loopexit.i, !prof !68

while.end.loopexit.i:                             ; preds = %if.end32.i
  %shl33.i.lcssa = phi i64 [ %shl33.i, %if.end32.i ]
  %179 = and i32 %add.i, 7
  %.pre1317.pre = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  br label %emit_symbol.exit

emit_symbol.exit.thread:                          ; preds = %if.end.i201, %if.then.i190
  %sub391336 = add nsw i32 %r.11300, -16
  br label %emit_buffered_bits.exit276

emit_symbol.exit:                                 ; preds = %if.end7.i, %while.end.loopexit.i
  %.pre1317 = phi i32 [ 0, %if.end7.i ], [ %.pre1317.pre, %while.end.loopexit.i ]
  %put_buffer.0.lcssa.i = phi i64 [ %or.i, %if.end7.i ], [ %shl33.i.lcssa, %while.end.loopexit.i ]
  %put_bits.0.lcssa.i = phi i32 [ %add.i, %if.end7.i ], [ %179, %while.end.loopexit.i ]
  store i64 %put_buffer.0.lcssa.i, i64* %put_buffer11.i428, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i, i32* %put_bits1.i410, align 8, !tbaa !51
  %sub39 = add nsw i32 %r.11300, -16
  %tobool.i223 = icmp eq i32 %.pre1317, 0
  %cmp.i224 = icmp ne i32 %BR.11299, 0
  %or.cond.i225 = and i1 %cmp.i224, %tobool.i223
  br i1 %or.cond.i225, label %while.body.i234.preheader, label %emit_buffered_bits.exit276, !prof !105

while.body.i234.preheader:                        ; preds = %emit_symbol.exit
  br label %while.body.i234

while.body.i234:                                  ; preds = %while.body.i234.preheader, %emit_bits.exit.while.body_crit_edge.i274
  %180 = phi i32 [ %.pre.i273, %emit_bits.exit.while.body_crit_edge.i274 ], [ 0, %while.body.i234.preheader ]
  %bufstart.addr.0.i231 = phi i8* [ %incdec.ptr.i272, %emit_bits.exit.while.body_crit_edge.i274 ], [ %BR_buffer.11298, %while.body.i234.preheader ]
  %nbits.addr.0.i232 = phi i32 [ %dec.i269, %emit_bits.exit.while.body_crit_edge.i274 ], [ %BR.11299, %while.body.i234.preheader ]
  %tobool.i.i233 = icmp eq i32 %180, 0
  br i1 %tobool.i.i233, label %if.end7.i.i243, label %emit_bits.exit.i271, !prof !78

if.end7.i.i243:                                   ; preds = %while.body.i234
  %181 = load i32, i32* %put_bits1.i410, align 8, !tbaa !51
  %182 = load i8, i8* %bufstart.addr.0.i231, align 1, !tbaa !58
  %conv5.i235 = zext i8 %182 to i64
  %and.i.i236 = and i64 %conv5.i235, 1
  %add.i.i237 = add i32 %181, 1
  %sub8.i.i238 = sub i32 23, %181
  %sh_prom9.i.i239 = zext i32 %sub8.i.i238 to i64
  %shl10.i.i240 = shl i64 %and.i.i236, %sh_prom9.i.i239
  %183 = load i64, i64* %put_buffer11.i428, align 8, !tbaa !50
  %or.i.i241 = or i64 %shl10.i.i240, %183
  %cmp1267.i.i242 = icmp sgt i32 %add.i.i237, 7
  br i1 %cmp1267.i.i242, label %while.body.i.i251.preheader, label %while.end.i.i268, !prof !68

while.body.i.i251.preheader:                      ; preds = %if.end7.i.i243
  br label %while.body.i.i251

while.body.i.i251:                                ; preds = %while.body.i.i251.preheader, %if.end32.i.i264
  %put_buffer.069.i.i244 = phi i64 [ %shl33.i.i261, %if.end32.i.i264 ], [ %or.i.i241, %while.body.i.i251.preheader ]
  %put_bits.068.i.i245 = phi i32 [ %sub34.i.i262, %if.end32.i.i264 ], [ %add.i.i237, %while.body.i.i251.preheader ]
  %shr66.i.i246 = lshr i64 %put_buffer.069.i.i244, 16
  %conv16.i.i247 = trunc i64 %shr66.i.i246 to i8
  %184 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i.i248 = getelementptr inbounds i8, i8* %184, i64 1
  store i8* %incdec.ptr.i.i248, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i.i247, i8* %184, align 1, !tbaa !58
  %185 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i.i249 = add i64 %185, -1
  store i64 %dec.i.i249, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i.i250 = icmp eq i64 %dec.i.i249, 0
  br i1 %cmp17.i.i250, label %if.then19.i.i252, label %if.end20.i.i255, !prof !71

if.then19.i.i252:                                 ; preds = %while.body.i.i251
  %186 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i278 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %186, i64 0, i32 5
  %187 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i278, align 8, !tbaa !57
  %empty_output_buffer.i279 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %187, i64 0, i32 3
  %188 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i279, align 8, !tbaa !72
  %call.i280 = tail call i32 %188(%struct.jpeg_compress_struct* %186) #3
  %tobool.i281 = icmp eq i32 %call.i280, 0
  br i1 %tobool.i281, label %if.then.i285, label %dump_buffer.exit290, !prof !74

if.then.i285:                                     ; preds = %if.then19.i.i252
  %189 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i282 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %189, i64 0, i32 0
  %190 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i282, align 8, !tbaa !39
  %msg_code.i283 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %190, i64 0, i32 5
  store i32 22, i32* %msg_code.i283, align 8, !tbaa !40
  %error_exit.i284 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %190, i64 0, i32 0
  %191 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i284, align 8, !tbaa !42
  %192 = bitcast %struct.jpeg_compress_struct* %189 to %struct.jpeg_common_struct*
  tail call void %191(%struct.jpeg_common_struct* %192) #3
  br label %dump_buffer.exit290

dump_buffer.exit290:                              ; preds = %if.then19.i.i252, %if.then.i285
  %193 = bitcast %struct.jpeg_destination_mgr* %187 to <2 x i64>*
  %194 = load <2 x i64>, <2 x i64>* %193, align 8, !tbaa !58
  store <2 x i64> %194, <2 x i64>* %39, align 8, !tbaa !58
  br label %if.end20.i.i255

if.end20.i.i255:                                  ; preds = %dump_buffer.exit290, %while.body.i.i251
  %conv15.i.i253 = and i64 %shr66.i.i246, 255
  %cmp21.i.i254 = icmp eq i64 %conv15.i.i253, 255
  br i1 %cmp21.i.i254, label %if.then23.i.i259, label %if.end32.i.i264, !prof !75

if.then23.i.i259:                                 ; preds = %if.end20.i.i255
  %195 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i.i256 = getelementptr inbounds i8, i8* %195, i64 1
  store i8* %incdec.ptr25.i.i256, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %195, align 1, !tbaa !58
  %196 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i.i257 = add i64 %196, -1
  store i64 %dec27.i.i257, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i.i258 = icmp eq i64 %dec27.i.i257, 0
  br i1 %cmp28.i.i258, label %if.then30.i.i260, label %if.end32.i.i264, !prof !76

if.then30.i.i260:                                 ; preds = %if.then23.i.i259
  %197 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i865 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %197, i64 0, i32 5
  %198 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i865, align 8, !tbaa !57
  %empty_output_buffer.i866 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %198, i64 0, i32 3
  %199 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i866, align 8, !tbaa !72
  %call.i867 = tail call i32 %199(%struct.jpeg_compress_struct* %197) #3
  %tobool.i868 = icmp eq i32 %call.i867, 0
  br i1 %tobool.i868, label %if.then.i872, label %dump_buffer.exit877, !prof !74

if.then.i872:                                     ; preds = %if.then30.i.i260
  %200 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i869 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %200, i64 0, i32 0
  %201 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i869, align 8, !tbaa !39
  %msg_code.i870 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %201, i64 0, i32 5
  store i32 22, i32* %msg_code.i870, align 8, !tbaa !40
  %error_exit.i871 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %201, i64 0, i32 0
  %202 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i871, align 8, !tbaa !42
  %203 = bitcast %struct.jpeg_compress_struct* %200 to %struct.jpeg_common_struct*
  tail call void %202(%struct.jpeg_common_struct* %203) #3
  br label %dump_buffer.exit877

dump_buffer.exit877:                              ; preds = %if.then30.i.i260, %if.then.i872
  %204 = bitcast %struct.jpeg_destination_mgr* %198 to <2 x i64>*
  %205 = load <2 x i64>, <2 x i64>* %204, align 8, !tbaa !58
  store <2 x i64> %205, <2 x i64>* %40, align 8, !tbaa !58
  br label %if.end32.i.i264

if.end32.i.i264:                                  ; preds = %dump_buffer.exit877, %if.then23.i.i259, %if.end20.i.i255
  %shl33.i.i261 = shl i64 %put_buffer.069.i.i244, 8
  %sub34.i.i262 = add nsw i32 %put_bits.068.i.i245, -8
  %cmp12.i.i263 = icmp sgt i32 %sub34.i.i262, 7
  br i1 %cmp12.i.i263, label %while.body.i.i251, label %while.end.loopexit.i.i265, !prof !68

while.end.loopexit.i.i265:                        ; preds = %if.end32.i.i264
  %shl33.i.i261.lcssa = phi i64 [ %shl33.i.i261, %if.end32.i.i264 ]
  %206 = and i32 %add.i.i237, 7
  br label %while.end.i.i268

while.end.i.i268:                                 ; preds = %while.end.loopexit.i.i265, %if.end7.i.i243
  %put_buffer.0.lcssa.i.i266 = phi i64 [ %or.i.i241, %if.end7.i.i243 ], [ %shl33.i.i261.lcssa, %while.end.loopexit.i.i265 ]
  %put_bits.0.lcssa.i.i267 = phi i32 [ %add.i.i237, %if.end7.i.i243 ], [ %206, %while.end.loopexit.i.i265 ]
  store i64 %put_buffer.0.lcssa.i.i266, i64* %put_buffer11.i428, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i.i267, i32* %put_bits1.i410, align 8, !tbaa !51
  br label %emit_bits.exit.i271

emit_bits.exit.i271:                              ; preds = %while.end.i.i268, %while.body.i234
  %dec.i269 = add i32 %nbits.addr.0.i232, -1
  %cmp.old.i270 = icmp eq i32 %dec.i269, 0
  br i1 %cmp.old.i270, label %emit_buffered_bits.exit276.loopexit, label %emit_bits.exit.while.body_crit_edge.i274, !prof !90

emit_bits.exit.while.body_crit_edge.i274:         ; preds = %emit_bits.exit.i271
  %incdec.ptr.i272 = getelementptr inbounds i8, i8* %bufstart.addr.0.i231, i64 1
  %.pre.i273 = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  br label %while.body.i234

emit_buffered_bits.exit276.loopexit:              ; preds = %emit_bits.exit.i271
  br label %emit_buffered_bits.exit276

emit_buffered_bits.exit276:                       ; preds = %emit_buffered_bits.exit276.loopexit, %emit_symbol.exit.thread, %emit_symbol.exit
  %sub391340 = phi i32 [ %sub391336, %emit_symbol.exit.thread ], [ %sub39, %emit_symbol.exit ], [ %sub39, %emit_buffered_bits.exit276.loopexit ]
  %207 = load i8*, i8** %bit_buffer, align 8, !tbaa !19
  %cmp35 = icmp slt i32 %sub391340, 16
  br i1 %cmp35, label %while.end.loopexit, label %while.body, !prof !103

while.end.loopexit:                               ; preds = %emit_buffered_bits.exit276
  %.lcssa = phi i8* [ %207, %emit_buffered_bits.exit276 ]
  %sub391340.lcssa = phi i32 [ %sub391340, %emit_buffered_bits.exit276 ]
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %while.cond.preheader
  %r.1.lcssa = phi i32 [ %r.01307, %while.cond.preheader ], [ %sub391340.lcssa, %while.end.loopexit ]
  %BR.1.lcssa = phi i32 [ %BR.01305, %while.cond.preheader ], [ 0, %while.end.loopexit ]
  %BR_buffer.1.lcssa = phi i8* [ %BR_buffer.01304, %while.cond.preheader ], [ %.lcssa, %while.end.loopexit ]
  %cmp41 = icmp sgt i32 %49, 1
  br i1 %cmp41, label %if.then43, label %if.end48, !prof !106

if.then43:                                        ; preds = %while.end
  %.tr = trunc i32 %49 to i8
  %conv44 = and i8 %.tr, 1
  %inc45 = add i32 %BR.1.lcssa, 1
  %idxprom46 = zext i32 %BR.1.lcssa to i64
  %arrayidx47 = getelementptr inbounds i8, i8* %BR_buffer.1.lcssa, i64 %idxprom46
  store i8 %conv44, i8* %arrayidx47, align 1, !tbaa !58
  br label %for.inc58

if.end48:                                         ; preds = %while.end
  %208 = load i32, i32* %EOBRUN.i291, align 4, !tbaa !48
  %cmp.i292 = icmp eq i32 %208, 0
  br i1 %cmp.i292, label %emit_eobrun.exit324, label %while.cond.i298.preheader, !prof !104

while.cond.i298.preheader:                        ; preds = %if.end48
  br label %while.cond.i298

while.cond.i298:                                  ; preds = %while.cond.i298.preheader, %while.cond.i298
  %temp.0.i293 = phi i32 [ %shr.i295, %while.cond.i298 ], [ %208, %while.cond.i298.preheader ]
  %nbits.0.i294 = phi i32 [ %inc.i297, %while.cond.i298 ], [ 0, %while.cond.i298.preheader ]
  %shr.i295 = ashr i32 %temp.0.i293, 1
  %tobool.i296 = icmp eq i32 %shr.i295, 0
  %inc.i297 = add nuw nsw i32 %nbits.0.i294, 1
  br i1 %tobool.i296, label %while.end.i303, label %while.cond.i298, !prof !87

while.end.i303:                                   ; preds = %while.cond.i298
  %nbits.0.i294.lcssa = phi i32 [ %nbits.0.i294, %while.cond.i298 ]
  %209 = load i32, i32* %ac_tbl_no49, align 8, !tbaa !46
  %shl.i300 = shl i32 %nbits.0.i294.lcssa, 4
  %210 = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  %tobool.i.i302 = icmp eq i32 %210, 0
  br i1 %tobool.i.i302, label %if.else.i.i316, label %if.then.i.i309, !prof !64

if.then.i.i309:                                   ; preds = %while.end.i303
  %idxprom.i.i304 = sext i32 %shl.i300 to i64
  %idxprom1.i.i305 = sext i32 %209 to i64
  %arrayidx.i.i306 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i.i305
  %211 = load i64*, i64** %arrayidx.i.i306, align 8, !tbaa !18
  %arrayidx2.i.i307 = getelementptr inbounds i64, i64* %211, i64 %idxprom.i.i304
  %212 = load i64, i64* %arrayidx2.i.i307, align 8, !tbaa !65
  %inc.i.i308 = add nsw i64 %212, 1
  store i64 %inc.i.i308, i64* %arrayidx2.i.i307, align 8, !tbaa !65
  br label %emit_symbol.exit.i318

if.else.i.i316:                                   ; preds = %while.end.i303
  %idxprom3.i.i310 = sext i32 %209 to i64
  %arrayidx4.i.i311 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i.i310
  %213 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i.i311, align 8, !tbaa !18
  %idxprom5.i.i312 = sext i32 %shl.i300 to i64
  %arrayidx6.i.i313 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %213, i64 0, i32 0, i64 %idxprom5.i.i312
  %214 = load i32, i32* %arrayidx6.i.i313, align 4, !tbaa !34
  %arrayidx8.i.i314 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %213, i64 0, i32 1, i64 %idxprom5.i.i312
  %215 = load i8, i8* %arrayidx8.i.i314, align 1, !tbaa !58
  %conv.i.i315 = sext i8 %215 to i32
  %conv.i878 = zext i32 %214 to i64
  %216 = load i32, i32* %put_bits1.i410, align 8, !tbaa !51
  %cmp.i880 = icmp eq i8 %215, 0
  br i1 %cmp.i880, label %if.end.i888, label %if.end7.i900, !prof !66

if.end.i888:                                      ; preds = %if.else.i.i316
  %217 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i882 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %217, i64 0, i32 0
  %218 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i882, align 8, !tbaa !39
  %msg_code.i883 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %218, i64 0, i32 5
  store i32 39, i32* %msg_code.i883, align 8, !tbaa !40
  %error_exit.i884 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %218, i64 0, i32 0
  %219 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i884, align 8, !tbaa !42
  %220 = bitcast %struct.jpeg_compress_struct* %217 to %struct.jpeg_common_struct*
  tail call void %219(%struct.jpeg_common_struct* %220) #3
  %.pre1318 = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  %tobool.i887 = icmp eq i32 %.pre1318, 0
  br i1 %tobool.i887, label %if.end7.i900, label %emit_symbol.exit.i318, !prof !67

if.end7.i900:                                     ; preds = %if.else.i.i316, %if.end.i888
  %sh_prom.i889 = zext i32 %conv.i.i315 to i64
  %shl.i890 = shl i64 1, %sh_prom.i889
  %sub.i891 = add i64 %shl.i890, 4294967295
  %and.i892 = and i64 %sub.i891, %conv.i878
  %add.i893 = add i32 %216, %conv.i.i315
  %sub8.i894 = sub nsw i32 24, %add.i893
  %sh_prom9.i895 = zext i32 %sub8.i894 to i64
  %shl10.i896 = shl i64 %and.i892, %sh_prom9.i895
  %221 = load i64, i64* %put_buffer11.i428, align 8, !tbaa !50
  %or.i898 = or i64 %221, %shl10.i896
  %cmp1267.i899 = icmp sgt i32 %add.i893, 7
  br i1 %cmp1267.i899, label %while.body.i911.preheader, label %while.end.i928, !prof !68

while.body.i911.preheader:                        ; preds = %if.end7.i900
  br label %while.body.i911

while.body.i911:                                  ; preds = %while.body.i911.preheader, %if.end32.i924
  %put_buffer.069.i904 = phi i64 [ %shl33.i921, %if.end32.i924 ], [ %or.i898, %while.body.i911.preheader ]
  %put_bits.068.i905 = phi i32 [ %sub34.i922, %if.end32.i924 ], [ %add.i893, %while.body.i911.preheader ]
  %shr66.i906 = lshr i64 %put_buffer.069.i904, 16
  %conv16.i907 = trunc i64 %shr66.i906 to i8
  %222 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i908 = getelementptr inbounds i8, i8* %222, i64 1
  store i8* %incdec.ptr.i908, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i907, i8* %222, align 1, !tbaa !58
  %223 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i909 = add i64 %223, -1
  store i64 %dec.i909, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i910 = icmp eq i64 %dec.i909, 0
  br i1 %cmp17.i910, label %if.then19.i912, label %if.end20.i915, !prof !71

if.then19.i912:                                   ; preds = %while.body.i911
  %224 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i1241 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %224, i64 0, i32 5
  %225 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i1241, align 8, !tbaa !57
  %empty_output_buffer.i1242 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %225, i64 0, i32 3
  %226 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i1242, align 8, !tbaa !72
  %call.i1243 = tail call i32 %226(%struct.jpeg_compress_struct* %224) #3
  %tobool.i1244 = icmp eq i32 %call.i1243, 0
  br i1 %tobool.i1244, label %if.then.i1248, label %dump_buffer.exit1253, !prof !74

if.then.i1248:                                    ; preds = %if.then19.i912
  %227 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i1245 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %227, i64 0, i32 0
  %228 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1245, align 8, !tbaa !39
  %msg_code.i1246 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %228, i64 0, i32 5
  store i32 22, i32* %msg_code.i1246, align 8, !tbaa !40
  %error_exit.i1247 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %228, i64 0, i32 0
  %229 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1247, align 8, !tbaa !42
  %230 = bitcast %struct.jpeg_compress_struct* %227 to %struct.jpeg_common_struct*
  tail call void %229(%struct.jpeg_common_struct* %230) #3
  br label %dump_buffer.exit1253

dump_buffer.exit1253:                             ; preds = %if.then19.i912, %if.then.i1248
  %231 = bitcast %struct.jpeg_destination_mgr* %225 to <2 x i64>*
  %232 = load <2 x i64>, <2 x i64>* %231, align 8, !tbaa !58
  store <2 x i64> %232, <2 x i64>* %33, align 8, !tbaa !58
  br label %if.end20.i915

if.end20.i915:                                    ; preds = %dump_buffer.exit1253, %while.body.i911
  %conv15.i913 = and i64 %shr66.i906, 255
  %cmp21.i914 = icmp eq i64 %conv15.i913, 255
  br i1 %cmp21.i914, label %if.then23.i919, label %if.end32.i924, !prof !75

if.then23.i919:                                   ; preds = %if.end20.i915
  %233 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i916 = getelementptr inbounds i8, i8* %233, i64 1
  store i8* %incdec.ptr25.i916, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %233, align 1, !tbaa !58
  %234 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i917 = add i64 %234, -1
  store i64 %dec27.i917, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i918 = icmp eq i64 %dec27.i917, 0
  br i1 %cmp28.i918, label %if.then30.i920, label %if.end32.i924, !prof !76

if.then30.i920:                                   ; preds = %if.then23.i919
  %235 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i931 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %235, i64 0, i32 5
  %236 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i931, align 8, !tbaa !57
  %empty_output_buffer.i932 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %236, i64 0, i32 3
  %237 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i932, align 8, !tbaa !72
  %call.i933 = tail call i32 %237(%struct.jpeg_compress_struct* %235) #3
  %tobool.i934 = icmp eq i32 %call.i933, 0
  br i1 %tobool.i934, label %if.then.i938, label %dump_buffer.exit943, !prof !74

if.then.i938:                                     ; preds = %if.then30.i920
  %238 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i935 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %238, i64 0, i32 0
  %239 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i935, align 8, !tbaa !39
  %msg_code.i936 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %239, i64 0, i32 5
  store i32 22, i32* %msg_code.i936, align 8, !tbaa !40
  %error_exit.i937 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %239, i64 0, i32 0
  %240 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i937, align 8, !tbaa !42
  %241 = bitcast %struct.jpeg_compress_struct* %238 to %struct.jpeg_common_struct*
  tail call void %240(%struct.jpeg_common_struct* %241) #3
  br label %dump_buffer.exit943

dump_buffer.exit943:                              ; preds = %if.then30.i920, %if.then.i938
  %242 = bitcast %struct.jpeg_destination_mgr* %236 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8, !tbaa !58
  store <2 x i64> %243, <2 x i64>* %34, align 8, !tbaa !58
  br label %if.end32.i924

if.end32.i924:                                    ; preds = %dump_buffer.exit943, %if.then23.i919, %if.end20.i915
  %shl33.i921 = shl i64 %put_buffer.069.i904, 8
  %sub34.i922 = add nsw i32 %put_bits.068.i905, -8
  %cmp12.i923 = icmp sgt i32 %sub34.i922, 7
  br i1 %cmp12.i923, label %while.body.i911, label %while.end.loopexit.i925, !prof !68

while.end.loopexit.i925:                          ; preds = %if.end32.i924
  %shl33.i921.lcssa = phi i64 [ %shl33.i921, %if.end32.i924 ]
  %244 = and i32 %add.i893, 7
  br label %while.end.i928

while.end.i928:                                   ; preds = %while.end.loopexit.i925, %if.end7.i900
  %put_buffer.0.lcssa.i926 = phi i64 [ %or.i898, %if.end7.i900 ], [ %shl33.i921.lcssa, %while.end.loopexit.i925 ]
  %put_bits.0.lcssa.i927 = phi i32 [ %add.i893, %if.end7.i900 ], [ %244, %while.end.loopexit.i925 ]
  store i64 %put_buffer.0.lcssa.i926, i64* %put_buffer11.i428, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i927, i32* %put_bits1.i410, align 8, !tbaa !51
  br label %emit_symbol.exit.i318

emit_symbol.exit.i318:                            ; preds = %while.end.i928, %if.end.i888, %if.then.i.i309
  %tobool2.i317 = icmp eq i32 %nbits.0.i294.lcssa, 0
  br i1 %tobool2.i317, label %if.end.i322, label %if.end.i954, !prof !88

if.end.i954:                                      ; preds = %emit_symbol.exit.i318
  %245 = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  %tobool.i953 = icmp eq i32 %245, 0
  br i1 %tobool.i953, label %if.end7.i966, label %if.end.i322, !prof !78

if.end7.i966:                                     ; preds = %if.end.i954
  %246 = load i32, i32* %put_bits1.i410, align 8, !tbaa !51
  %247 = load i32, i32* %EOBRUN.i291, align 4, !tbaa !48
  %conv.i944 = zext i32 %247 to i64
  %sh_prom.i955 = zext i32 %nbits.0.i294.lcssa to i64
  %shl.i956 = shl i64 1, %sh_prom.i955
  %sub.i957 = add i64 %shl.i956, 4294967295
  %and.i958 = and i64 %conv.i944, %sub.i957
  %add.i959 = add i32 %246, %nbits.0.i294.lcssa
  %sub8.i960 = sub nsw i32 24, %add.i959
  %sh_prom9.i961 = zext i32 %sub8.i960 to i64
  %shl10.i962 = shl i64 %and.i958, %sh_prom9.i961
  %248 = load i64, i64* %put_buffer11.i428, align 8, !tbaa !50
  %or.i964 = or i64 %shl10.i962, %248
  %cmp1267.i965 = icmp sgt i32 %add.i959, 7
  br i1 %cmp1267.i965, label %while.body.i977.preheader, label %while.end.i994, !prof !68

while.body.i977.preheader:                        ; preds = %if.end7.i966
  br label %while.body.i977

while.body.i977:                                  ; preds = %while.body.i977.preheader, %if.end32.i990
  %put_buffer.069.i970 = phi i64 [ %shl33.i987, %if.end32.i990 ], [ %or.i964, %while.body.i977.preheader ]
  %put_bits.068.i971 = phi i32 [ %sub34.i988, %if.end32.i990 ], [ %add.i959, %while.body.i977.preheader ]
  %shr66.i972 = lshr i64 %put_buffer.069.i970, 16
  %conv16.i973 = trunc i64 %shr66.i972 to i8
  %249 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i974 = getelementptr inbounds i8, i8* %249, i64 1
  store i8* %incdec.ptr.i974, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i973, i8* %249, align 1, !tbaa !58
  %250 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i975 = add i64 %250, -1
  store i64 %dec.i975, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i976 = icmp eq i64 %dec.i975, 0
  br i1 %cmp17.i976, label %if.then19.i978, label %if.end20.i981, !prof !71

if.then19.i978:                                   ; preds = %while.body.i977
  %251 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i1255 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %251, i64 0, i32 5
  %252 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i1255, align 8, !tbaa !57
  %empty_output_buffer.i1256 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %252, i64 0, i32 3
  %253 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i1256, align 8, !tbaa !72
  %call.i1257 = tail call i32 %253(%struct.jpeg_compress_struct* %251) #3
  %tobool.i1258 = icmp eq i32 %call.i1257, 0
  br i1 %tobool.i1258, label %if.then.i1262, label %dump_buffer.exit1267, !prof !74

if.then.i1262:                                    ; preds = %if.then19.i978
  %254 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i1259 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %254, i64 0, i32 0
  %255 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1259, align 8, !tbaa !39
  %msg_code.i1260 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %255, i64 0, i32 5
  store i32 22, i32* %msg_code.i1260, align 8, !tbaa !40
  %error_exit.i1261 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %255, i64 0, i32 0
  %256 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1261, align 8, !tbaa !42
  %257 = bitcast %struct.jpeg_compress_struct* %254 to %struct.jpeg_common_struct*
  tail call void %256(%struct.jpeg_common_struct* %257) #3
  br label %dump_buffer.exit1267

dump_buffer.exit1267:                             ; preds = %if.then19.i978, %if.then.i1262
  %258 = bitcast %struct.jpeg_destination_mgr* %252 to <2 x i64>*
  %259 = load <2 x i64>, <2 x i64>* %258, align 8, !tbaa !58
  store <2 x i64> %259, <2 x i64>* %37, align 8, !tbaa !58
  br label %if.end20.i981

if.end20.i981:                                    ; preds = %dump_buffer.exit1267, %while.body.i977
  %conv15.i979 = and i64 %shr66.i972, 255
  %cmp21.i980 = icmp eq i64 %conv15.i979, 255
  br i1 %cmp21.i980, label %if.then23.i985, label %if.end32.i990, !prof !75

if.then23.i985:                                   ; preds = %if.end20.i981
  %260 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i982 = getelementptr inbounds i8, i8* %260, i64 1
  store i8* %incdec.ptr25.i982, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %260, align 1, !tbaa !58
  %261 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i983 = add i64 %261, -1
  store i64 %dec27.i983, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i984 = icmp eq i64 %dec27.i983, 0
  br i1 %cmp28.i984, label %if.then30.i986, label %if.end32.i990, !prof !76

if.then30.i986:                                   ; preds = %if.then23.i985
  %262 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i997 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %262, i64 0, i32 5
  %263 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i997, align 8, !tbaa !57
  %empty_output_buffer.i998 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %263, i64 0, i32 3
  %264 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i998, align 8, !tbaa !72
  %call.i999 = tail call i32 %264(%struct.jpeg_compress_struct* %262) #3
  %tobool.i1000 = icmp eq i32 %call.i999, 0
  br i1 %tobool.i1000, label %if.then.i1004, label %dump_buffer.exit1009, !prof !74

if.then.i1004:                                    ; preds = %if.then30.i986
  %265 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i1001 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %265, i64 0, i32 0
  %266 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1001, align 8, !tbaa !39
  %msg_code.i1002 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %266, i64 0, i32 5
  store i32 22, i32* %msg_code.i1002, align 8, !tbaa !40
  %error_exit.i1003 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %266, i64 0, i32 0
  %267 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1003, align 8, !tbaa !42
  %268 = bitcast %struct.jpeg_compress_struct* %265 to %struct.jpeg_common_struct*
  tail call void %267(%struct.jpeg_common_struct* %268) #3
  br label %dump_buffer.exit1009

dump_buffer.exit1009:                             ; preds = %if.then30.i986, %if.then.i1004
  %269 = bitcast %struct.jpeg_destination_mgr* %263 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !tbaa !58
  store <2 x i64> %270, <2 x i64>* %38, align 8, !tbaa !58
  br label %if.end32.i990

if.end32.i990:                                    ; preds = %dump_buffer.exit1009, %if.then23.i985, %if.end20.i981
  %shl33.i987 = shl i64 %put_buffer.069.i970, 8
  %sub34.i988 = add nsw i32 %put_bits.068.i971, -8
  %cmp12.i989 = icmp sgt i32 %sub34.i988, 7
  br i1 %cmp12.i989, label %while.body.i977, label %while.end.loopexit.i991, !prof !68

while.end.loopexit.i991:                          ; preds = %if.end32.i990
  %shl33.i987.lcssa = phi i64 [ %shl33.i987, %if.end32.i990 ]
  %271 = and i32 %add.i959, 7
  br label %while.end.i994

while.end.i994:                                   ; preds = %while.end.loopexit.i991, %if.end7.i966
  %put_buffer.0.lcssa.i992 = phi i64 [ %or.i964, %if.end7.i966 ], [ %shl33.i987.lcssa, %while.end.loopexit.i991 ]
  %put_bits.0.lcssa.i993 = phi i32 [ %add.i959, %if.end7.i966 ], [ %271, %while.end.loopexit.i991 ]
  store i64 %put_buffer.0.lcssa.i992, i64* %put_buffer11.i428, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i993, i32* %put_bits1.i410, align 8, !tbaa !51
  br label %if.end.i322

if.end.i322:                                      ; preds = %while.end.i994, %if.end.i954, %emit_symbol.exit.i318
  store i32 0, i32* %EOBRUN.i291, align 4, !tbaa !48
  %272 = load i32, i32* %BE, align 8, !tbaa !49
  %273 = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  %tobool.i326 = icmp eq i32 %273, 0
  %cmp.i327 = icmp ne i32 %272, 0
  %or.cond.i328 = and i1 %cmp.i327, %tobool.i326
  br i1 %or.cond.i328, label %while.body.preheader.i333, label %emit_buffered_bits.exit379, !prof !89

while.body.preheader.i333:                        ; preds = %if.end.i322
  %274 = load i8*, i8** %bit_buffer, align 8, !tbaa !19
  br label %while.body.i337

while.body.i337:                                  ; preds = %emit_bits.exit.while.body_crit_edge.i377, %while.body.preheader.i333
  %275 = phi i32 [ %.pre.i376, %emit_bits.exit.while.body_crit_edge.i377 ], [ 0, %while.body.preheader.i333 ]
  %bufstart.addr.0.i334 = phi i8* [ %incdec.ptr.i375, %emit_bits.exit.while.body_crit_edge.i377 ], [ %274, %while.body.preheader.i333 ]
  %nbits.addr.0.i335 = phi i32 [ %dec.i372, %emit_bits.exit.while.body_crit_edge.i377 ], [ %272, %while.body.preheader.i333 ]
  %tobool.i.i336 = icmp eq i32 %275, 0
  br i1 %tobool.i.i336, label %if.end7.i.i346, label %emit_bits.exit.i374, !prof !78

if.end7.i.i346:                                   ; preds = %while.body.i337
  %276 = load i32, i32* %put_bits1.i410, align 8, !tbaa !51
  %277 = load i8, i8* %bufstart.addr.0.i334, align 1, !tbaa !58
  %conv5.i338 = zext i8 %277 to i64
  %and.i.i339 = and i64 %conv5.i338, 1
  %add.i.i340 = add i32 %276, 1
  %sub8.i.i341 = sub i32 23, %276
  %sh_prom9.i.i342 = zext i32 %sub8.i.i341 to i64
  %shl10.i.i343 = shl i64 %and.i.i339, %sh_prom9.i.i342
  %278 = load i64, i64* %put_buffer11.i428, align 8, !tbaa !50
  %or.i.i344 = or i64 %shl10.i.i343, %278
  %cmp1267.i.i345 = icmp sgt i32 %add.i.i340, 7
  br i1 %cmp1267.i.i345, label %while.body.i.i354.preheader, label %while.end.i.i371, !prof !68

while.body.i.i354.preheader:                      ; preds = %if.end7.i.i346
  br label %while.body.i.i354

while.body.i.i354:                                ; preds = %while.body.i.i354.preheader, %if.end32.i.i367
  %put_buffer.069.i.i347 = phi i64 [ %shl33.i.i364, %if.end32.i.i367 ], [ %or.i.i344, %while.body.i.i354.preheader ]
  %put_bits.068.i.i348 = phi i32 [ %sub34.i.i365, %if.end32.i.i367 ], [ %add.i.i340, %while.body.i.i354.preheader ]
  %shr66.i.i349 = lshr i64 %put_buffer.069.i.i347, 16
  %conv16.i.i350 = trunc i64 %shr66.i.i349 to i8
  %279 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i.i351 = getelementptr inbounds i8, i8* %279, i64 1
  store i8* %incdec.ptr.i.i351, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i.i350, i8* %279, align 1, !tbaa !58
  %280 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i.i352 = add i64 %280, -1
  store i64 %dec.i.i352, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i.i353 = icmp eq i64 %dec.i.i352, 0
  br i1 %cmp17.i.i353, label %if.then19.i.i355, label %if.end20.i.i358, !prof !71

if.then19.i.i355:                                 ; preds = %while.body.i.i354
  %281 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i381 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %281, i64 0, i32 5
  %282 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i381, align 8, !tbaa !57
  %empty_output_buffer.i382 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %282, i64 0, i32 3
  %283 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i382, align 8, !tbaa !72
  %call.i383 = tail call i32 %283(%struct.jpeg_compress_struct* %281) #3
  %tobool.i384 = icmp eq i32 %call.i383, 0
  br i1 %tobool.i384, label %if.then.i388, label %dump_buffer.exit393, !prof !74

if.then.i388:                                     ; preds = %if.then19.i.i355
  %284 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i385 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %284, i64 0, i32 0
  %285 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i385, align 8, !tbaa !39
  %msg_code.i386 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %285, i64 0, i32 5
  store i32 22, i32* %msg_code.i386, align 8, !tbaa !40
  %error_exit.i387 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %285, i64 0, i32 0
  %286 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i387, align 8, !tbaa !42
  %287 = bitcast %struct.jpeg_compress_struct* %284 to %struct.jpeg_common_struct*
  tail call void %286(%struct.jpeg_common_struct* %287) #3
  br label %dump_buffer.exit393

dump_buffer.exit393:                              ; preds = %if.then19.i.i355, %if.then.i388
  %288 = bitcast %struct.jpeg_destination_mgr* %282 to <2 x i64>*
  %289 = load <2 x i64>, <2 x i64>* %288, align 8, !tbaa !58
  store <2 x i64> %289, <2 x i64>* %35, align 8, !tbaa !58
  br label %if.end20.i.i358

if.end20.i.i358:                                  ; preds = %dump_buffer.exit393, %while.body.i.i354
  %conv15.i.i356 = and i64 %shr66.i.i349, 255
  %cmp21.i.i357 = icmp eq i64 %conv15.i.i356, 255
  br i1 %cmp21.i.i357, label %if.then23.i.i362, label %if.end32.i.i367, !prof !75

if.then23.i.i362:                                 ; preds = %if.end20.i.i358
  %290 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i.i359 = getelementptr inbounds i8, i8* %290, i64 1
  store i8* %incdec.ptr25.i.i359, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %290, align 1, !tbaa !58
  %291 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i.i360 = add i64 %291, -1
  store i64 %dec27.i.i360, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i.i361 = icmp eq i64 %dec27.i.i360, 0
  br i1 %cmp28.i.i361, label %if.then30.i.i363, label %if.end32.i.i367, !prof !76

if.then30.i.i363:                                 ; preds = %if.then23.i.i362
  %292 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i1011 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %292, i64 0, i32 5
  %293 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i1011, align 8, !tbaa !57
  %empty_output_buffer.i1012 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %293, i64 0, i32 3
  %294 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i1012, align 8, !tbaa !72
  %call.i1013 = tail call i32 %294(%struct.jpeg_compress_struct* %292) #3
  %tobool.i1014 = icmp eq i32 %call.i1013, 0
  br i1 %tobool.i1014, label %if.then.i1018, label %dump_buffer.exit1023, !prof !74

if.then.i1018:                                    ; preds = %if.then30.i.i363
  %295 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i1015 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %295, i64 0, i32 0
  %296 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1015, align 8, !tbaa !39
  %msg_code.i1016 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %296, i64 0, i32 5
  store i32 22, i32* %msg_code.i1016, align 8, !tbaa !40
  %error_exit.i1017 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %296, i64 0, i32 0
  %297 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1017, align 8, !tbaa !42
  %298 = bitcast %struct.jpeg_compress_struct* %295 to %struct.jpeg_common_struct*
  tail call void %297(%struct.jpeg_common_struct* %298) #3
  br label %dump_buffer.exit1023

dump_buffer.exit1023:                             ; preds = %if.then30.i.i363, %if.then.i1018
  %299 = bitcast %struct.jpeg_destination_mgr* %293 to <2 x i64>*
  %300 = load <2 x i64>, <2 x i64>* %299, align 8, !tbaa !58
  store <2 x i64> %300, <2 x i64>* %36, align 8, !tbaa !58
  br label %if.end32.i.i367

if.end32.i.i367:                                  ; preds = %dump_buffer.exit1023, %if.then23.i.i362, %if.end20.i.i358
  %shl33.i.i364 = shl i64 %put_buffer.069.i.i347, 8
  %sub34.i.i365 = add nsw i32 %put_bits.068.i.i348, -8
  %cmp12.i.i366 = icmp sgt i32 %sub34.i.i365, 7
  br i1 %cmp12.i.i366, label %while.body.i.i354, label %while.end.loopexit.i.i368, !prof !68

while.end.loopexit.i.i368:                        ; preds = %if.end32.i.i367
  %shl33.i.i364.lcssa = phi i64 [ %shl33.i.i364, %if.end32.i.i367 ]
  %301 = and i32 %add.i.i340, 7
  br label %while.end.i.i371

while.end.i.i371:                                 ; preds = %while.end.loopexit.i.i368, %if.end7.i.i346
  %put_buffer.0.lcssa.i.i369 = phi i64 [ %or.i.i344, %if.end7.i.i346 ], [ %shl33.i.i364.lcssa, %while.end.loopexit.i.i368 ]
  %put_bits.0.lcssa.i.i370 = phi i32 [ %add.i.i340, %if.end7.i.i346 ], [ %301, %while.end.loopexit.i.i368 ]
  store i64 %put_buffer.0.lcssa.i.i369, i64* %put_buffer11.i428, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i.i370, i32* %put_bits1.i410, align 8, !tbaa !51
  br label %emit_bits.exit.i374

emit_bits.exit.i374:                              ; preds = %while.end.i.i371, %while.body.i337
  %dec.i372 = add i32 %nbits.addr.0.i335, -1
  %cmp.old.i373 = icmp eq i32 %dec.i372, 0
  br i1 %cmp.old.i373, label %emit_buffered_bits.exit379.loopexit, label %emit_bits.exit.while.body_crit_edge.i377, !prof !90

emit_bits.exit.while.body_crit_edge.i377:         ; preds = %emit_bits.exit.i374
  %incdec.ptr.i375 = getelementptr inbounds i8, i8* %bufstart.addr.0.i334, i64 1
  %.pre.i376 = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  br label %while.body.i337

emit_buffered_bits.exit379.loopexit:              ; preds = %emit_bits.exit.i374
  br label %emit_buffered_bits.exit379

emit_buffered_bits.exit379:                       ; preds = %emit_buffered_bits.exit379.loopexit, %if.end.i322
  store i32 0, i32* %BE, align 8, !tbaa !49
  br label %emit_eobrun.exit324

emit_eobrun.exit324:                              ; preds = %if.end48, %emit_buffered_bits.exit379
  %302 = load i32, i32* %ac_tbl_no49, align 8, !tbaa !46
  %shl = shl i32 %r.1.lcssa, 4
  %add = or i32 %shl, 1
  %303 = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  %tobool.i395 = icmp eq i32 %303, 0
  br i1 %tobool.i395, label %if.else.i406, label %if.then.i400, !prof !64

if.then.i400:                                     ; preds = %emit_eobrun.exit324
  %idxprom.i = sext i32 %add to i64
  %idxprom1.i396 = sext i32 %302 to i64
  %arrayidx.i397 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i396
  %304 = load i64*, i64** %arrayidx.i397, align 8, !tbaa !18
  %arrayidx2.i398 = getelementptr inbounds i64, i64* %304, i64 %idxprom.i
  %305 = load i64, i64* %arrayidx2.i398, align 8, !tbaa !65
  %inc.i399 = add nsw i64 %305, 1
  store i64 %inc.i399, i64* %arrayidx2.i398, align 8, !tbaa !65
  br label %emit_buffered_bits.exit586

if.else.i406:                                     ; preds = %emit_eobrun.exit324
  %idxprom3.i401 = sext i32 %302 to i64
  %arrayidx4.i402 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i401
  %306 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i402, align 8, !tbaa !18
  %idxprom5.i = sext i32 %add to i64
  %arrayidx6.i403 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %306, i64 0, i32 0, i64 %idxprom5.i
  %307 = load i32, i32* %arrayidx6.i403, align 4, !tbaa !34
  %arrayidx8.i404 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %306, i64 0, i32 1, i64 %idxprom5.i
  %308 = load i8, i8* %arrayidx8.i404, align 1, !tbaa !58
  %conv.i405 = sext i8 %308 to i32
  %conv.i409 = zext i32 %307 to i64
  %309 = load i32, i32* %put_bits1.i410, align 8, !tbaa !51
  %cmp.i411 = icmp eq i8 %308, 0
  br i1 %cmp.i411, label %if.end.i419, label %if.end7.i431, !prof !66

if.end.i419:                                      ; preds = %if.else.i406
  %310 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i413 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %310, i64 0, i32 0
  %311 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i413, align 8, !tbaa !39
  %msg_code.i414 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %311, i64 0, i32 5
  store i32 39, i32* %msg_code.i414, align 8, !tbaa !40
  %error_exit.i415 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %311, i64 0, i32 0
  %312 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i415, align 8, !tbaa !42
  %313 = bitcast %struct.jpeg_compress_struct* %310 to %struct.jpeg_common_struct*
  tail call void %312(%struct.jpeg_common_struct* %313) #3
  %.pre1319 = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  %tobool.i418 = icmp eq i32 %.pre1319, 0
  br i1 %tobool.i418, label %if.end7.i431, label %emit_buffered_bits.exit586, !prof !67

if.end7.i431:                                     ; preds = %if.else.i406, %if.end.i419
  %sh_prom.i420 = zext i32 %conv.i405 to i64
  %shl.i421 = shl i64 1, %sh_prom.i420
  %sub.i422 = add i64 %shl.i421, 4294967295
  %and.i423 = and i64 %sub.i422, %conv.i409
  %add.i424 = add i32 %309, %conv.i405
  %sub8.i425 = sub nsw i32 24, %add.i424
  %sh_prom9.i426 = zext i32 %sub8.i425 to i64
  %shl10.i427 = shl i64 %and.i423, %sh_prom9.i426
  %314 = load i64, i64* %put_buffer11.i428, align 8, !tbaa !50
  %or.i429 = or i64 %314, %shl10.i427
  %cmp1267.i430 = icmp sgt i32 %add.i424, 7
  br i1 %cmp1267.i430, label %while.body.i442.preheader, label %emit_symbol.exit408.thread1345, !prof !68

while.body.i442.preheader:                        ; preds = %if.end7.i431
  br label %while.body.i442

emit_symbol.exit408.thread1345:                   ; preds = %if.end7.i431
  store i64 %or.i429, i64* %put_buffer11.i428, align 8, !tbaa !50
  store i32 %add.i424, i32* %put_bits1.i410, align 8, !tbaa !51
  br label %if.end7.i488

while.body.i442:                                  ; preds = %while.body.i442.preheader, %if.end32.i455
  %put_buffer.069.i435 = phi i64 [ %shl33.i452, %if.end32.i455 ], [ %or.i429, %while.body.i442.preheader ]
  %put_bits.068.i436 = phi i32 [ %sub34.i453, %if.end32.i455 ], [ %add.i424, %while.body.i442.preheader ]
  %shr66.i437 = lshr i64 %put_buffer.069.i435, 16
  %conv16.i438 = trunc i64 %shr66.i437 to i8
  %315 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i439 = getelementptr inbounds i8, i8* %315, i64 1
  store i8* %incdec.ptr.i439, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i438, i8* %315, align 1, !tbaa !58
  %316 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i440 = add i64 %316, -1
  store i64 %dec.i440, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i441 = icmp eq i64 %dec.i440, 0
  br i1 %cmp17.i441, label %if.then19.i443, label %if.end20.i446, !prof !71

if.then19.i443:                                   ; preds = %while.body.i442
  %317 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i1025 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %317, i64 0, i32 5
  %318 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i1025, align 8, !tbaa !57
  %empty_output_buffer.i1026 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %318, i64 0, i32 3
  %319 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i1026, align 8, !tbaa !72
  %call.i1027 = tail call i32 %319(%struct.jpeg_compress_struct* %317) #3
  %tobool.i1028 = icmp eq i32 %call.i1027, 0
  br i1 %tobool.i1028, label %if.then.i1032, label %dump_buffer.exit1037, !prof !74

if.then.i1032:                                    ; preds = %if.then19.i443
  %320 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i1029 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %320, i64 0, i32 0
  %321 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1029, align 8, !tbaa !39
  %msg_code.i1030 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %321, i64 0, i32 5
  store i32 22, i32* %msg_code.i1030, align 8, !tbaa !40
  %error_exit.i1031 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %321, i64 0, i32 0
  %322 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1031, align 8, !tbaa !42
  %323 = bitcast %struct.jpeg_compress_struct* %320 to %struct.jpeg_common_struct*
  tail call void %322(%struct.jpeg_common_struct* %323) #3
  br label %dump_buffer.exit1037

dump_buffer.exit1037:                             ; preds = %if.then19.i443, %if.then.i1032
  %324 = bitcast %struct.jpeg_destination_mgr* %318 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 8, !tbaa !58
  store <2 x i64> %325, <2 x i64>* %31, align 8, !tbaa !58
  br label %if.end20.i446

if.end20.i446:                                    ; preds = %dump_buffer.exit1037, %while.body.i442
  %conv15.i444 = and i64 %shr66.i437, 255
  %cmp21.i445 = icmp eq i64 %conv15.i444, 255
  br i1 %cmp21.i445, label %if.then23.i450, label %if.end32.i455, !prof !75

if.then23.i450:                                   ; preds = %if.end20.i446
  %326 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i447 = getelementptr inbounds i8, i8* %326, i64 1
  store i8* %incdec.ptr25.i447, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %326, align 1, !tbaa !58
  %327 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i448 = add i64 %327, -1
  store i64 %dec27.i448, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i449 = icmp eq i64 %dec27.i448, 0
  br i1 %cmp28.i449, label %if.then30.i451, label %if.end32.i455, !prof !76

if.then30.i451:                                   ; preds = %if.then23.i450
  %328 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i462 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %328, i64 0, i32 5
  %329 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i462, align 8, !tbaa !57
  %empty_output_buffer.i463 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %329, i64 0, i32 3
  %330 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i463, align 8, !tbaa !72
  %call.i464 = tail call i32 %330(%struct.jpeg_compress_struct* %328) #3
  %tobool.i465 = icmp eq i32 %call.i464, 0
  br i1 %tobool.i465, label %if.then.i469, label %dump_buffer.exit474, !prof !74

if.then.i469:                                     ; preds = %if.then30.i451
  %331 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i466 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %331, i64 0, i32 0
  %332 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i466, align 8, !tbaa !39
  %msg_code.i467 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %332, i64 0, i32 5
  store i32 22, i32* %msg_code.i467, align 8, !tbaa !40
  %error_exit.i468 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %332, i64 0, i32 0
  %333 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i468, align 8, !tbaa !42
  %334 = bitcast %struct.jpeg_compress_struct* %331 to %struct.jpeg_common_struct*
  tail call void %333(%struct.jpeg_common_struct* %334) #3
  br label %dump_buffer.exit474

dump_buffer.exit474:                              ; preds = %if.then30.i451, %if.then.i469
  %335 = bitcast %struct.jpeg_destination_mgr* %329 to <2 x i64>*
  %336 = load <2 x i64>, <2 x i64>* %335, align 8, !tbaa !58
  store <2 x i64> %336, <2 x i64>* %32, align 8, !tbaa !58
  br label %if.end32.i455

if.end32.i455:                                    ; preds = %dump_buffer.exit474, %if.then23.i450, %if.end20.i446
  %shl33.i452 = shl i64 %put_buffer.069.i435, 8
  %sub34.i453 = add nsw i32 %put_bits.068.i436, -8
  %cmp12.i454 = icmp sgt i32 %sub34.i453, 7
  br i1 %cmp12.i454, label %while.body.i442, label %emit_symbol.exit408, !prof !68

emit_symbol.exit408:                              ; preds = %if.end32.i455
  %shl33.i452.lcssa = phi i64 [ %shl33.i452, %if.end32.i455 ]
  %337 = and i32 %add.i424, 7
  %.pre1320.pre = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  store i64 %shl33.i452.lcssa, i64* %put_buffer11.i428, align 8, !tbaa !50
  store i32 %337, i32* %put_bits1.i410, align 8, !tbaa !51
  %tobool.i478 = icmp eq i32 %.pre1320.pre, 0
  br i1 %tobool.i478, label %if.end7.i488, label %emit_buffered_bits.exit586, !prof !93

if.end7.i488:                                     ; preds = %emit_symbol.exit408.thread1345, %emit_symbol.exit408
  %338 = load i32, i32* %put_bits1.i410, align 8, !tbaa !51
  %arrayidx51 = getelementptr inbounds [0 x i32], [0 x i32]* @jpeg_natural_order, i64 0, i64 %indvars.iv
  %339 = load i32, i32* %arrayidx51, align 4, !tbaa !34
  %idxprom52 = sext i32 %339 to i64
  %arrayidx53 = getelementptr inbounds [64 x i16], [64 x i16]* %15, i64 0, i64 %idxprom52
  %340 = load i16, i16* %arrayidx53, align 2, !tbaa !62
  %.lobit = lshr i16 %340, 15
  %341 = zext i16 %.lobit to i64
  %and.i480 = xor i64 %341, 1
  %add.i481 = add i32 %338, 1
  %sub8.i482 = sub i32 23, %338
  %sh_prom9.i483 = zext i32 %sub8.i482 to i64
  %shl10.i484 = shl i64 %and.i480, %sh_prom9.i483
  %342 = load i64, i64* %put_buffer11.i428, align 8, !tbaa !50
  %or.i486 = or i64 %shl10.i484, %342
  %cmp1267.i487 = icmp sgt i32 %add.i481, 7
  br i1 %cmp1267.i487, label %while.body.i499.preheader, label %emit_bits.exit517, !prof !68

while.body.i499.preheader:                        ; preds = %if.end7.i488
  br label %while.body.i499

while.body.i499:                                  ; preds = %while.body.i499.preheader, %if.end32.i512
  %put_buffer.069.i492 = phi i64 [ %shl33.i509, %if.end32.i512 ], [ %or.i486, %while.body.i499.preheader ]
  %put_bits.068.i493 = phi i32 [ %sub34.i510, %if.end32.i512 ], [ %add.i481, %while.body.i499.preheader ]
  %shr66.i494 = lshr i64 %put_buffer.069.i492, 16
  %conv16.i495 = trunc i64 %shr66.i494 to i8
  %343 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i496 = getelementptr inbounds i8, i8* %343, i64 1
  store i8* %incdec.ptr.i496, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i495, i8* %343, align 1, !tbaa !58
  %344 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i497 = add i64 %344, -1
  store i64 %dec.i497, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i498 = icmp eq i64 %dec.i497, 0
  br i1 %cmp17.i498, label %if.then19.i500, label %if.end20.i503, !prof !71

if.then19.i500:                                   ; preds = %while.body.i499
  %345 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i1039 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %345, i64 0, i32 5
  %346 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i1039, align 8, !tbaa !57
  %empty_output_buffer.i1040 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %346, i64 0, i32 3
  %347 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i1040, align 8, !tbaa !72
  %call.i1041 = tail call i32 %347(%struct.jpeg_compress_struct* %345) #3
  %tobool.i1042 = icmp eq i32 %call.i1041, 0
  br i1 %tobool.i1042, label %if.then.i1046, label %dump_buffer.exit1051, !prof !74

if.then.i1046:                                    ; preds = %if.then19.i500
  %348 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i1043 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %348, i64 0, i32 0
  %349 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1043, align 8, !tbaa !39
  %msg_code.i1044 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %349, i64 0, i32 5
  store i32 22, i32* %msg_code.i1044, align 8, !tbaa !40
  %error_exit.i1045 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %349, i64 0, i32 0
  %350 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1045, align 8, !tbaa !42
  %351 = bitcast %struct.jpeg_compress_struct* %348 to %struct.jpeg_common_struct*
  tail call void %350(%struct.jpeg_common_struct* %351) #3
  br label %dump_buffer.exit1051

dump_buffer.exit1051:                             ; preds = %if.then19.i500, %if.then.i1046
  %352 = bitcast %struct.jpeg_destination_mgr* %346 to <2 x i64>*
  %353 = load <2 x i64>, <2 x i64>* %352, align 8, !tbaa !58
  store <2 x i64> %353, <2 x i64>* %29, align 8, !tbaa !58
  br label %if.end20.i503

if.end20.i503:                                    ; preds = %dump_buffer.exit1051, %while.body.i499
  %conv15.i501 = and i64 %shr66.i494, 255
  %cmp21.i502 = icmp eq i64 %conv15.i501, 255
  br i1 %cmp21.i502, label %if.then23.i507, label %if.end32.i512, !prof !75

if.then23.i507:                                   ; preds = %if.end20.i503
  %354 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i504 = getelementptr inbounds i8, i8* %354, i64 1
  store i8* %incdec.ptr25.i504, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %354, align 1, !tbaa !58
  %355 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i505 = add i64 %355, -1
  store i64 %dec27.i505, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i506 = icmp eq i64 %dec27.i505, 0
  br i1 %cmp28.i506, label %if.then30.i508, label %if.end32.i512, !prof !76

if.then30.i508:                                   ; preds = %if.then23.i507
  %356 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i519 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %356, i64 0, i32 5
  %357 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i519, align 8, !tbaa !57
  %empty_output_buffer.i520 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %357, i64 0, i32 3
  %358 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i520, align 8, !tbaa !72
  %call.i521 = tail call i32 %358(%struct.jpeg_compress_struct* %356) #3
  %tobool.i522 = icmp eq i32 %call.i521, 0
  br i1 %tobool.i522, label %if.then.i526, label %dump_buffer.exit531, !prof !74

if.then.i526:                                     ; preds = %if.then30.i508
  %359 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i523 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %359, i64 0, i32 0
  %360 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i523, align 8, !tbaa !39
  %msg_code.i524 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %360, i64 0, i32 5
  store i32 22, i32* %msg_code.i524, align 8, !tbaa !40
  %error_exit.i525 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %360, i64 0, i32 0
  %361 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i525, align 8, !tbaa !42
  %362 = bitcast %struct.jpeg_compress_struct* %359 to %struct.jpeg_common_struct*
  tail call void %361(%struct.jpeg_common_struct* %362) #3
  br label %dump_buffer.exit531

dump_buffer.exit531:                              ; preds = %if.then30.i508, %if.then.i526
  %363 = bitcast %struct.jpeg_destination_mgr* %357 to <2 x i64>*
  %364 = load <2 x i64>, <2 x i64>* %363, align 8, !tbaa !58
  store <2 x i64> %364, <2 x i64>* %30, align 8, !tbaa !58
  br label %if.end32.i512

if.end32.i512:                                    ; preds = %dump_buffer.exit531, %if.then23.i507, %if.end20.i503
  %shl33.i509 = shl i64 %put_buffer.069.i492, 8
  %sub34.i510 = add nsw i32 %put_bits.068.i493, -8
  %cmp12.i511 = icmp sgt i32 %sub34.i510, 7
  br i1 %cmp12.i511, label %while.body.i499, label %while.end.loopexit.i513, !prof !68

while.end.loopexit.i513:                          ; preds = %if.end32.i512
  %shl33.i509.lcssa = phi i64 [ %shl33.i509, %if.end32.i512 ]
  %365 = and i32 %add.i481, 7
  %.pre1321.pre = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  br label %emit_bits.exit517

emit_bits.exit517:                                ; preds = %if.end7.i488, %while.end.loopexit.i513
  %.pre1321 = phi i32 [ 0, %if.end7.i488 ], [ %.pre1321.pre, %while.end.loopexit.i513 ]
  %put_buffer.0.lcssa.i514 = phi i64 [ %or.i486, %if.end7.i488 ], [ %shl33.i509.lcssa, %while.end.loopexit.i513 ]
  %put_bits.0.lcssa.i515 = phi i32 [ %add.i481, %if.end7.i488 ], [ %365, %while.end.loopexit.i513 ]
  store i64 %put_buffer.0.lcssa.i514, i64* %put_buffer11.i428, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i515, i32* %put_bits1.i410, align 8, !tbaa !51
  %tobool.i533 = icmp eq i32 %.pre1321, 0
  %cmp.i534 = icmp ne i32 %BR.1.lcssa, 0
  %or.cond.i535 = and i1 %cmp.i534, %tobool.i533
  br i1 %or.cond.i535, label %while.body.i544.preheader, label %emit_buffered_bits.exit586, !prof !107

while.body.i544.preheader:                        ; preds = %emit_bits.exit517
  br label %while.body.i544

while.body.i544:                                  ; preds = %while.body.i544.preheader, %emit_bits.exit.while.body_crit_edge.i584
  %366 = phi i32 [ %.pre.i583, %emit_bits.exit.while.body_crit_edge.i584 ], [ 0, %while.body.i544.preheader ]
  %bufstart.addr.0.i541 = phi i8* [ %incdec.ptr.i582, %emit_bits.exit.while.body_crit_edge.i584 ], [ %BR_buffer.1.lcssa, %while.body.i544.preheader ]
  %nbits.addr.0.i542 = phi i32 [ %dec.i579, %emit_bits.exit.while.body_crit_edge.i584 ], [ %BR.1.lcssa, %while.body.i544.preheader ]
  %tobool.i.i543 = icmp eq i32 %366, 0
  br i1 %tobool.i.i543, label %if.end7.i.i553, label %emit_bits.exit.i581, !prof !78

if.end7.i.i553:                                   ; preds = %while.body.i544
  %367 = load i32, i32* %put_bits1.i410, align 8, !tbaa !51
  %368 = load i8, i8* %bufstart.addr.0.i541, align 1, !tbaa !58
  %conv5.i545 = zext i8 %368 to i64
  %and.i.i546 = and i64 %conv5.i545, 1
  %add.i.i547 = add i32 %367, 1
  %sub8.i.i548 = sub i32 23, %367
  %sh_prom9.i.i549 = zext i32 %sub8.i.i548 to i64
  %shl10.i.i550 = shl i64 %and.i.i546, %sh_prom9.i.i549
  %369 = load i64, i64* %put_buffer11.i428, align 8, !tbaa !50
  %or.i.i551 = or i64 %shl10.i.i550, %369
  %cmp1267.i.i552 = icmp sgt i32 %add.i.i547, 7
  br i1 %cmp1267.i.i552, label %while.body.i.i561.preheader, label %while.end.i.i578, !prof !68

while.body.i.i561.preheader:                      ; preds = %if.end7.i.i553
  br label %while.body.i.i561

while.body.i.i561:                                ; preds = %while.body.i.i561.preheader, %if.end32.i.i574
  %put_buffer.069.i.i554 = phi i64 [ %shl33.i.i571, %if.end32.i.i574 ], [ %or.i.i551, %while.body.i.i561.preheader ]
  %put_bits.068.i.i555 = phi i32 [ %sub34.i.i572, %if.end32.i.i574 ], [ %add.i.i547, %while.body.i.i561.preheader ]
  %shr66.i.i556 = lshr i64 %put_buffer.069.i.i554, 16
  %conv16.i.i557 = trunc i64 %shr66.i.i556 to i8
  %370 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i.i558 = getelementptr inbounds i8, i8* %370, i64 1
  store i8* %incdec.ptr.i.i558, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i.i557, i8* %370, align 1, !tbaa !58
  %371 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i.i559 = add i64 %371, -1
  store i64 %dec.i.i559, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i.i560 = icmp eq i64 %dec.i.i559, 0
  br i1 %cmp17.i.i560, label %if.then19.i.i562, label %if.end20.i.i565, !prof !71

if.then19.i.i562:                                 ; preds = %while.body.i.i561
  %372 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i588 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %372, i64 0, i32 5
  %373 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i588, align 8, !tbaa !57
  %empty_output_buffer.i589 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %373, i64 0, i32 3
  %374 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i589, align 8, !tbaa !72
  %call.i590 = tail call i32 %374(%struct.jpeg_compress_struct* %372) #3
  %tobool.i591 = icmp eq i32 %call.i590, 0
  br i1 %tobool.i591, label %if.then.i595, label %dump_buffer.exit600, !prof !74

if.then.i595:                                     ; preds = %if.then19.i.i562
  %375 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i592 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %375, i64 0, i32 0
  %376 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i592, align 8, !tbaa !39
  %msg_code.i593 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %376, i64 0, i32 5
  store i32 22, i32* %msg_code.i593, align 8, !tbaa !40
  %error_exit.i594 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %376, i64 0, i32 0
  %377 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i594, align 8, !tbaa !42
  %378 = bitcast %struct.jpeg_compress_struct* %375 to %struct.jpeg_common_struct*
  tail call void %377(%struct.jpeg_common_struct* %378) #3
  br label %dump_buffer.exit600

dump_buffer.exit600:                              ; preds = %if.then19.i.i562, %if.then.i595
  %379 = bitcast %struct.jpeg_destination_mgr* %373 to <2 x i64>*
  %380 = load <2 x i64>, <2 x i64>* %379, align 8, !tbaa !58
  store <2 x i64> %380, <2 x i64>* %27, align 8, !tbaa !58
  br label %if.end20.i.i565

if.end20.i.i565:                                  ; preds = %dump_buffer.exit600, %while.body.i.i561
  %conv15.i.i563 = and i64 %shr66.i.i556, 255
  %cmp21.i.i564 = icmp eq i64 %conv15.i.i563, 255
  br i1 %cmp21.i.i564, label %if.then23.i.i569, label %if.end32.i.i574, !prof !75

if.then23.i.i569:                                 ; preds = %if.end20.i.i565
  %381 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i.i566 = getelementptr inbounds i8, i8* %381, i64 1
  store i8* %incdec.ptr25.i.i566, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %381, align 1, !tbaa !58
  %382 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i.i567 = add i64 %382, -1
  store i64 %dec27.i.i567, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i.i568 = icmp eq i64 %dec27.i.i567, 0
  br i1 %cmp28.i.i568, label %if.then30.i.i570, label %if.end32.i.i574, !prof !76

if.then30.i.i570:                                 ; preds = %if.then23.i.i569
  %383 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %dest1.i1053 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %383, i64 0, i32 5
  %384 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i1053, align 8, !tbaa !57
  %empty_output_buffer.i1054 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %384, i64 0, i32 3
  %385 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i1054, align 8, !tbaa !72
  %call.i1055 = tail call i32 %385(%struct.jpeg_compress_struct* %383) #3
  %tobool.i1056 = icmp eq i32 %call.i1055, 0
  br i1 %tobool.i1056, label %if.then.i1060, label %dump_buffer.exit1065, !prof !74

if.then.i1060:                                    ; preds = %if.then30.i.i570
  %386 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i412, align 8, !tbaa !21
  %err.i1057 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %386, i64 0, i32 0
  %387 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1057, align 8, !tbaa !39
  %msg_code.i1058 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %387, i64 0, i32 5
  store i32 22, i32* %msg_code.i1058, align 8, !tbaa !40
  %error_exit.i1059 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %387, i64 0, i32 0
  %388 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1059, align 8, !tbaa !42
  %389 = bitcast %struct.jpeg_compress_struct* %386 to %struct.jpeg_common_struct*
  tail call void %388(%struct.jpeg_common_struct* %389) #3
  br label %dump_buffer.exit1065

dump_buffer.exit1065:                             ; preds = %if.then30.i.i570, %if.then.i1060
  %390 = bitcast %struct.jpeg_destination_mgr* %384 to <2 x i64>*
  %391 = load <2 x i64>, <2 x i64>* %390, align 8, !tbaa !58
  store <2 x i64> %391, <2 x i64>* %28, align 8, !tbaa !58
  br label %if.end32.i.i574

if.end32.i.i574:                                  ; preds = %dump_buffer.exit1065, %if.then23.i.i569, %if.end20.i.i565
  %shl33.i.i571 = shl i64 %put_buffer.069.i.i554, 8
  %sub34.i.i572 = add nsw i32 %put_bits.068.i.i555, -8
  %cmp12.i.i573 = icmp sgt i32 %sub34.i.i572, 7
  br i1 %cmp12.i.i573, label %while.body.i.i561, label %while.end.loopexit.i.i575, !prof !68

while.end.loopexit.i.i575:                        ; preds = %if.end32.i.i574
  %shl33.i.i571.lcssa = phi i64 [ %shl33.i.i571, %if.end32.i.i574 ]
  %392 = and i32 %add.i.i547, 7
  br label %while.end.i.i578

while.end.i.i578:                                 ; preds = %while.end.loopexit.i.i575, %if.end7.i.i553
  %put_buffer.0.lcssa.i.i576 = phi i64 [ %or.i.i551, %if.end7.i.i553 ], [ %shl33.i.i571.lcssa, %while.end.loopexit.i.i575 ]
  %put_bits.0.lcssa.i.i577 = phi i32 [ %add.i.i547, %if.end7.i.i553 ], [ %392, %while.end.loopexit.i.i575 ]
  store i64 %put_buffer.0.lcssa.i.i576, i64* %put_buffer11.i428, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i.i577, i32* %put_bits1.i410, align 8, !tbaa !51
  br label %emit_bits.exit.i581

emit_bits.exit.i581:                              ; preds = %while.end.i.i578, %while.body.i544
  %dec.i579 = add i32 %nbits.addr.0.i542, -1
  %cmp.old.i580 = icmp eq i32 %dec.i579, 0
  br i1 %cmp.old.i580, label %emit_buffered_bits.exit586.loopexit, label %emit_bits.exit.while.body_crit_edge.i584, !prof !90

emit_bits.exit.while.body_crit_edge.i584:         ; preds = %emit_bits.exit.i581
  %incdec.ptr.i582 = getelementptr inbounds i8, i8* %bufstart.addr.0.i541, i64 1
  %.pre.i583 = load i32, i32* %gather_statistics.i394, align 8, !tbaa !22
  br label %while.body.i544

emit_buffered_bits.exit586.loopexit:              ; preds = %emit_bits.exit.i581
  br label %emit_buffered_bits.exit586

emit_buffered_bits.exit586:                       ; preds = %emit_buffered_bits.exit586.loopexit, %if.then.i400, %if.end.i419, %emit_symbol.exit408, %emit_bits.exit517
  %393 = load i8*, i8** %bit_buffer, align 8, !tbaa !19
  br label %for.inc58

for.inc58:                                        ; preds = %emit_buffered_bits.exit586, %if.then43, %if.then32
  %BR_buffer.2 = phi i8* [ %BR_buffer.01304, %if.then32 ], [ %BR_buffer.1.lcssa, %if.then43 ], [ %393, %emit_buffered_bits.exit586 ]
  %BR.2 = phi i32 [ %BR.01305, %if.then32 ], [ %inc45, %if.then43 ], [ 0, %emit_buffered_bits.exit586 ]
  %r.2 = phi i32 [ %inc33, %if.then32 ], [ %r.1.lcssa, %if.then43 ], [ 0, %emit_buffered_bits.exit586 ]
  %cmp25 = icmp slt i64 %indvars.iv, %26
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  br i1 %cmp25, label %for.body27, label %for.end60.loopexit, !prof !101

for.end60.loopexit:                               ; preds = %for.inc58
  %r.2.lcssa = phi i32 [ %r.2, %for.inc58 ]
  %BR.2.lcssa = phi i32 [ %BR.2, %for.inc58 ]
  br label %for.end60

for.end60:                                        ; preds = %for.end60.loopexit, %for.end.thread, %for.end
  %BE1332 = phi i32* [ %BE, %for.end ], [ %BE1330, %for.end.thread ], [ %BE, %for.end60.loopexit ]
  %bit_buffer1331 = phi i8** [ %bit_buffer, %for.end ], [ %bit_buffer1329, %for.end.thread ], [ %bit_buffer, %for.end60.loopexit ]
  %r.0.lcssa = phi i32 [ 0, %for.end ], [ 0, %for.end.thread ], [ %r.2.lcssa, %for.end60.loopexit ]
  %BR.0.lcssa = phi i32 [ 0, %for.end ], [ 0, %for.end.thread ], [ %BR.2.lcssa, %for.end60.loopexit ]
  %cmp61 = icmp sgt i32 %r.0.lcssa, 0
  %cmp63 = icmp ne i32 %BR.0.lcssa, 0
  %or.cond = or i1 %cmp63, %cmp61
  br i1 %or.cond, label %if.then65, label %if.end78, !prof !108

if.then65:                                        ; preds = %for.end60
  %EOBRUN = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 9
  %394 = load i32, i32* %EOBRUN, align 4, !tbaa !48
  %inc66 = add i32 %394, 1
  store i32 %inc66, i32* %EOBRUN, align 4, !tbaa !48
  %395 = load i32, i32* %BE1332, align 8, !tbaa !49
  %add68 = add i32 %395, %BR.0.lcssa
  store i32 %add68, i32* %BE1332, align 8, !tbaa !49
  %notlhs = icmp ne i32 %inc66, 32767
  %notrhs = icmp ult i32 %add68, 938
  %or.cond180.not = and i1 %notrhs, %notlhs
  %cmp.i602 = icmp eq i32 %inc66, 0
  %or.cond1353 = or i1 %or.cond180.not, %cmp.i602
  br i1 %or.cond1353, label %if.end78, label %while.cond.i608.preheader, !prof !109

while.cond.i608.preheader:                        ; preds = %if.then65
  br label %while.cond.i608

while.cond.i608:                                  ; preds = %while.cond.i608.preheader, %while.cond.i608
  %temp.0.i603 = phi i32 [ %shr.i605, %while.cond.i608 ], [ %inc66, %while.cond.i608.preheader ]
  %nbits.0.i604 = phi i32 [ %inc.i607, %while.cond.i608 ], [ 0, %while.cond.i608.preheader ]
  %shr.i605 = ashr i32 %temp.0.i603, 1
  %tobool.i606 = icmp eq i32 %shr.i605, 0
  %inc.i607 = add nuw nsw i32 %nbits.0.i604, 1
  br i1 %tobool.i606, label %while.end.i613, label %while.cond.i608, !prof !87

while.end.i613:                                   ; preds = %while.cond.i608
  %nbits.0.i604.lcssa = phi i32 [ %nbits.0.i604, %while.cond.i608 ]
  %ac_tbl_no.i609 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 8
  %396 = load i32, i32* %ac_tbl_no.i609, align 8, !tbaa !46
  %shl.i610 = shl i32 %nbits.0.i604.lcssa, 4
  %gather_statistics.i.i611 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 1
  %397 = load i32, i32* %gather_statistics.i.i611, align 8, !tbaa !22
  %tobool.i.i612 = icmp eq i32 %397, 0
  br i1 %tobool.i.i612, label %if.else.i.i626, label %if.then.i.i619, !prof !64

if.then.i.i619:                                   ; preds = %while.end.i613
  %idxprom.i.i614 = sext i32 %shl.i610 to i64
  %idxprom1.i.i615 = sext i32 %396 to i64
  %arrayidx.i.i616 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i.i615
  %398 = load i64*, i64** %arrayidx.i.i616, align 8, !tbaa !18
  %arrayidx2.i.i617 = getelementptr inbounds i64, i64* %398, i64 %idxprom.i.i614
  %399 = load i64, i64* %arrayidx2.i.i617, align 8, !tbaa !65
  %inc.i.i618 = add nsw i64 %399, 1
  store i64 %inc.i.i618, i64* %arrayidx2.i.i617, align 8, !tbaa !65
  br label %emit_symbol.exit.i628

if.else.i.i626:                                   ; preds = %while.end.i613
  %idxprom3.i.i620 = sext i32 %396 to i64
  %arrayidx4.i.i621 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i.i620
  %400 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i.i621, align 8, !tbaa !18
  %idxprom5.i.i622 = sext i32 %shl.i610 to i64
  %arrayidx6.i.i623 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %400, i64 0, i32 0, i64 %idxprom5.i.i622
  %401 = load i32, i32* %arrayidx6.i.i623, align 4, !tbaa !34
  %arrayidx8.i.i624 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %400, i64 0, i32 1, i64 %idxprom5.i.i622
  %402 = load i8, i8* %arrayidx8.i.i624, align 1, !tbaa !58
  %conv.i.i625 = sext i8 %402 to i32
  %conv.i1066 = zext i32 %401 to i64
  %put_bits1.i1067 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %403 = load i32, i32* %put_bits1.i1067, align 8, !tbaa !51
  %cmp.i1068 = icmp eq i8 %402, 0
  br i1 %cmp.i1068, label %if.end.i1076, label %if.end7.i1088, !prof !66

if.end.i1076:                                     ; preds = %if.else.i.i626
  %cinfo.i1069 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %404 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i1069, align 8, !tbaa !21
  %err.i1070 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %404, i64 0, i32 0
  %405 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1070, align 8, !tbaa !39
  %msg_code.i1071 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %405, i64 0, i32 5
  store i32 39, i32* %msg_code.i1071, align 8, !tbaa !40
  %error_exit.i1072 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %405, i64 0, i32 0
  %406 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1072, align 8, !tbaa !42
  %407 = bitcast %struct.jpeg_compress_struct* %404 to %struct.jpeg_common_struct*
  tail call void %406(%struct.jpeg_common_struct* %407) #3
  %.pre1322 = load i32, i32* %gather_statistics.i.i611, align 8, !tbaa !22
  %tobool.i1075 = icmp eq i32 %.pre1322, 0
  br i1 %tobool.i1075, label %if.end7.i1088, label %emit_symbol.exit.i628, !prof !67

if.end7.i1088:                                    ; preds = %if.else.i.i626, %if.end.i1076
  %sh_prom.i1077 = zext i32 %conv.i.i625 to i64
  %shl.i1078 = shl i64 1, %sh_prom.i1077
  %sub.i1079 = add i64 %shl.i1078, 4294967295
  %and.i1080 = and i64 %sub.i1079, %conv.i1066
  %add.i1081 = add i32 %403, %conv.i.i625
  %sub8.i1082 = sub nsw i32 24, %add.i1081
  %sh_prom9.i1083 = zext i32 %sub8.i1082 to i64
  %shl10.i1084 = shl i64 %and.i1080, %sh_prom9.i1083
  %put_buffer11.i1085 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %408 = load i64, i64* %put_buffer11.i1085, align 8, !tbaa !50
  %or.i1086 = or i64 %408, %shl10.i1084
  %cmp1267.i1087 = icmp sgt i32 %add.i1081, 7
  br i1 %cmp1267.i1087, label %while.body.i1099.preheader, label %while.end.i1116, !prof !68

while.body.i1099.preheader:                       ; preds = %if.end7.i1088
  %cinfo.i1268 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %409 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %410 = bitcast i8** %next_output_byte4 to <2 x i64>*
  br label %while.body.i1099

while.body.i1099:                                 ; preds = %while.body.i1099.preheader, %if.end32.i1112
  %put_buffer.069.i1092 = phi i64 [ %shl33.i1109, %if.end32.i1112 ], [ %or.i1086, %while.body.i1099.preheader ]
  %put_bits.068.i1093 = phi i32 [ %sub34.i1110, %if.end32.i1112 ], [ %add.i1081, %while.body.i1099.preheader ]
  %shr66.i1094 = lshr i64 %put_buffer.069.i1092, 16
  %conv16.i1095 = trunc i64 %shr66.i1094 to i8
  %411 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i1096 = getelementptr inbounds i8, i8* %411, i64 1
  store i8* %incdec.ptr.i1096, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i1095, i8* %411, align 1, !tbaa !58
  %412 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i1097 = add i64 %412, -1
  store i64 %dec.i1097, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i1098 = icmp eq i64 %dec.i1097, 0
  br i1 %cmp17.i1098, label %if.then19.i1100, label %if.end20.i1103, !prof !71

if.then19.i1100:                                  ; preds = %while.body.i1099
  %413 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i1268, align 8, !tbaa !21
  %dest1.i1269 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %413, i64 0, i32 5
  %414 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i1269, align 8, !tbaa !57
  %empty_output_buffer.i1270 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %414, i64 0, i32 3
  %415 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i1270, align 8, !tbaa !72
  %call.i1271 = tail call i32 %415(%struct.jpeg_compress_struct* %413) #3
  %tobool.i1272 = icmp eq i32 %call.i1271, 0
  br i1 %tobool.i1272, label %if.then.i1276, label %dump_buffer.exit1281, !prof !74

if.then.i1276:                                    ; preds = %if.then19.i1100
  %416 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i1268, align 8, !tbaa !21
  %err.i1273 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %416, i64 0, i32 0
  %417 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1273, align 8, !tbaa !39
  %msg_code.i1274 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %417, i64 0, i32 5
  store i32 22, i32* %msg_code.i1274, align 8, !tbaa !40
  %error_exit.i1275 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %417, i64 0, i32 0
  %418 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1275, align 8, !tbaa !42
  %419 = bitcast %struct.jpeg_compress_struct* %416 to %struct.jpeg_common_struct*
  tail call void %418(%struct.jpeg_common_struct* %419) #3
  br label %dump_buffer.exit1281

dump_buffer.exit1281:                             ; preds = %if.then19.i1100, %if.then.i1276
  %420 = bitcast %struct.jpeg_destination_mgr* %414 to <2 x i64>*
  %421 = load <2 x i64>, <2 x i64>* %420, align 8, !tbaa !58
  store <2 x i64> %421, <2 x i64>* %409, align 8, !tbaa !58
  br label %if.end20.i1103

if.end20.i1103:                                   ; preds = %dump_buffer.exit1281, %while.body.i1099
  %conv15.i1101 = and i64 %shr66.i1094, 255
  %cmp21.i1102 = icmp eq i64 %conv15.i1101, 255
  br i1 %cmp21.i1102, label %if.then23.i1107, label %if.end32.i1112, !prof !75

if.then23.i1107:                                  ; preds = %if.end20.i1103
  %422 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i1104 = getelementptr inbounds i8, i8* %422, i64 1
  store i8* %incdec.ptr25.i1104, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %422, align 1, !tbaa !58
  %423 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i1105 = add i64 %423, -1
  store i64 %dec27.i1105, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i1106 = icmp eq i64 %dec27.i1105, 0
  br i1 %cmp28.i1106, label %if.then30.i1108, label %if.end32.i1112, !prof !76

if.then30.i1108:                                  ; preds = %if.then23.i1107
  %424 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i1268, align 8, !tbaa !21
  %dest1.i1119 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %424, i64 0, i32 5
  %425 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i1119, align 8, !tbaa !57
  %empty_output_buffer.i1120 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %425, i64 0, i32 3
  %426 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i1120, align 8, !tbaa !72
  %call.i1121 = tail call i32 %426(%struct.jpeg_compress_struct* %424) #3
  %tobool.i1122 = icmp eq i32 %call.i1121, 0
  br i1 %tobool.i1122, label %if.then.i1126, label %dump_buffer.exit1131, !prof !74

if.then.i1126:                                    ; preds = %if.then30.i1108
  %427 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i1268, align 8, !tbaa !21
  %err.i1123 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %427, i64 0, i32 0
  %428 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1123, align 8, !tbaa !39
  %msg_code.i1124 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %428, i64 0, i32 5
  store i32 22, i32* %msg_code.i1124, align 8, !tbaa !40
  %error_exit.i1125 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %428, i64 0, i32 0
  %429 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1125, align 8, !tbaa !42
  %430 = bitcast %struct.jpeg_compress_struct* %427 to %struct.jpeg_common_struct*
  tail call void %429(%struct.jpeg_common_struct* %430) #3
  br label %dump_buffer.exit1131

dump_buffer.exit1131:                             ; preds = %if.then30.i1108, %if.then.i1126
  %431 = bitcast %struct.jpeg_destination_mgr* %425 to <2 x i64>*
  %432 = load <2 x i64>, <2 x i64>* %431, align 8, !tbaa !58
  store <2 x i64> %432, <2 x i64>* %410, align 8, !tbaa !58
  br label %if.end32.i1112

if.end32.i1112:                                   ; preds = %dump_buffer.exit1131, %if.then23.i1107, %if.end20.i1103
  %shl33.i1109 = shl i64 %put_buffer.069.i1092, 8
  %sub34.i1110 = add nsw i32 %put_bits.068.i1093, -8
  %cmp12.i1111 = icmp sgt i32 %sub34.i1110, 7
  br i1 %cmp12.i1111, label %while.body.i1099, label %while.end.loopexit.i1113, !prof !68

while.end.loopexit.i1113:                         ; preds = %if.end32.i1112
  %shl33.i1109.lcssa = phi i64 [ %shl33.i1109, %if.end32.i1112 ]
  %433 = and i32 %add.i1081, 7
  br label %while.end.i1116

while.end.i1116:                                  ; preds = %while.end.loopexit.i1113, %if.end7.i1088
  %put_buffer.0.lcssa.i1114 = phi i64 [ %or.i1086, %if.end7.i1088 ], [ %shl33.i1109.lcssa, %while.end.loopexit.i1113 ]
  %put_bits.0.lcssa.i1115 = phi i32 [ %add.i1081, %if.end7.i1088 ], [ %433, %while.end.loopexit.i1113 ]
  store i64 %put_buffer.0.lcssa.i1114, i64* %put_buffer11.i1085, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i1115, i32* %put_bits1.i1067, align 8, !tbaa !51
  br label %emit_symbol.exit.i628

emit_symbol.exit.i628:                            ; preds = %while.end.i1116, %if.end.i1076, %if.then.i.i619
  %tobool2.i627 = icmp eq i32 %nbits.0.i604.lcssa, 0
  br i1 %tobool2.i627, label %if.end.i632, label %if.end.i1142, !prof !88

if.end.i1142:                                     ; preds = %emit_symbol.exit.i628
  %put_bits1.i1133 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %434 = load i32, i32* %gather_statistics.i.i611, align 8, !tbaa !22
  %tobool.i1141 = icmp eq i32 %434, 0
  br i1 %tobool.i1141, label %if.end7.i1154, label %if.end.i632, !prof !78

if.end7.i1154:                                    ; preds = %if.end.i1142
  %435 = load i32, i32* %put_bits1.i1133, align 8, !tbaa !51
  %436 = load i32, i32* %EOBRUN, align 4, !tbaa !48
  %conv.i1132 = zext i32 %436 to i64
  %sh_prom.i1143 = zext i32 %nbits.0.i604.lcssa to i64
  %shl.i1144 = shl i64 1, %sh_prom.i1143
  %sub.i1145 = add i64 %shl.i1144, 4294967295
  %and.i1146 = and i64 %conv.i1132, %sub.i1145
  %add.i1147 = add i32 %435, %nbits.0.i604.lcssa
  %sub8.i1148 = sub nsw i32 24, %add.i1147
  %sh_prom9.i1149 = zext i32 %sub8.i1148 to i64
  %shl10.i1150 = shl i64 %and.i1146, %sh_prom9.i1149
  %put_buffer11.i1151 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %437 = load i64, i64* %put_buffer11.i1151, align 8, !tbaa !50
  %or.i1152 = or i64 %shl10.i1150, %437
  %cmp1267.i1153 = icmp sgt i32 %add.i1147, 7
  br i1 %cmp1267.i1153, label %while.body.i1165.preheader, label %while.end.i1182, !prof !68

while.body.i1165.preheader:                       ; preds = %if.end7.i1154
  %cinfo.i1282 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %438 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %439 = bitcast i8** %next_output_byte4 to <2 x i64>*
  br label %while.body.i1165

while.body.i1165:                                 ; preds = %while.body.i1165.preheader, %if.end32.i1178
  %put_buffer.069.i1158 = phi i64 [ %shl33.i1175, %if.end32.i1178 ], [ %or.i1152, %while.body.i1165.preheader ]
  %put_bits.068.i1159 = phi i32 [ %sub34.i1176, %if.end32.i1178 ], [ %add.i1147, %while.body.i1165.preheader ]
  %shr66.i1160 = lshr i64 %put_buffer.069.i1158, 16
  %conv16.i1161 = trunc i64 %shr66.i1160 to i8
  %440 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i1162 = getelementptr inbounds i8, i8* %440, i64 1
  store i8* %incdec.ptr.i1162, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i1161, i8* %440, align 1, !tbaa !58
  %441 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i1163 = add i64 %441, -1
  store i64 %dec.i1163, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i1164 = icmp eq i64 %dec.i1163, 0
  br i1 %cmp17.i1164, label %if.then19.i1166, label %if.end20.i1169, !prof !71

if.then19.i1166:                                  ; preds = %while.body.i1165
  %442 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i1282, align 8, !tbaa !21
  %dest1.i1283 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %442, i64 0, i32 5
  %443 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i1283, align 8, !tbaa !57
  %empty_output_buffer.i1284 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %443, i64 0, i32 3
  %444 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i1284, align 8, !tbaa !72
  %call.i1285 = tail call i32 %444(%struct.jpeg_compress_struct* %442) #3
  %tobool.i1286 = icmp eq i32 %call.i1285, 0
  br i1 %tobool.i1286, label %if.then.i1290, label %dump_buffer.exit1295, !prof !74

if.then.i1290:                                    ; preds = %if.then19.i1166
  %445 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i1282, align 8, !tbaa !21
  %err.i1287 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %445, i64 0, i32 0
  %446 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1287, align 8, !tbaa !39
  %msg_code.i1288 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %446, i64 0, i32 5
  store i32 22, i32* %msg_code.i1288, align 8, !tbaa !40
  %error_exit.i1289 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %446, i64 0, i32 0
  %447 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1289, align 8, !tbaa !42
  %448 = bitcast %struct.jpeg_compress_struct* %445 to %struct.jpeg_common_struct*
  tail call void %447(%struct.jpeg_common_struct* %448) #3
  br label %dump_buffer.exit1295

dump_buffer.exit1295:                             ; preds = %if.then19.i1166, %if.then.i1290
  %449 = bitcast %struct.jpeg_destination_mgr* %443 to <2 x i64>*
  %450 = load <2 x i64>, <2 x i64>* %449, align 8, !tbaa !58
  store <2 x i64> %450, <2 x i64>* %438, align 8, !tbaa !58
  br label %if.end20.i1169

if.end20.i1169:                                   ; preds = %dump_buffer.exit1295, %while.body.i1165
  %conv15.i1167 = and i64 %shr66.i1160, 255
  %cmp21.i1168 = icmp eq i64 %conv15.i1167, 255
  br i1 %cmp21.i1168, label %if.then23.i1173, label %if.end32.i1178, !prof !75

if.then23.i1173:                                  ; preds = %if.end20.i1169
  %451 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i1170 = getelementptr inbounds i8, i8* %451, i64 1
  store i8* %incdec.ptr25.i1170, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %451, align 1, !tbaa !58
  %452 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i1171 = add i64 %452, -1
  store i64 %dec27.i1171, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i1172 = icmp eq i64 %dec27.i1171, 0
  br i1 %cmp28.i1172, label %if.then30.i1174, label %if.end32.i1178, !prof !76

if.then30.i1174:                                  ; preds = %if.then23.i1173
  %453 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i1282, align 8, !tbaa !21
  %dest1.i1185 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %453, i64 0, i32 5
  %454 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i1185, align 8, !tbaa !57
  %empty_output_buffer.i1186 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %454, i64 0, i32 3
  %455 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i1186, align 8, !tbaa !72
  %call.i1187 = tail call i32 %455(%struct.jpeg_compress_struct* %453) #3
  %tobool.i1188 = icmp eq i32 %call.i1187, 0
  br i1 %tobool.i1188, label %if.then.i1192, label %dump_buffer.exit1197, !prof !74

if.then.i1192:                                    ; preds = %if.then30.i1174
  %456 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i1282, align 8, !tbaa !21
  %err.i1189 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %456, i64 0, i32 0
  %457 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1189, align 8, !tbaa !39
  %msg_code.i1190 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %457, i64 0, i32 5
  store i32 22, i32* %msg_code.i1190, align 8, !tbaa !40
  %error_exit.i1191 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %457, i64 0, i32 0
  %458 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1191, align 8, !tbaa !42
  %459 = bitcast %struct.jpeg_compress_struct* %456 to %struct.jpeg_common_struct*
  tail call void %458(%struct.jpeg_common_struct* %459) #3
  br label %dump_buffer.exit1197

dump_buffer.exit1197:                             ; preds = %if.then30.i1174, %if.then.i1192
  %460 = bitcast %struct.jpeg_destination_mgr* %454 to <2 x i64>*
  %461 = load <2 x i64>, <2 x i64>* %460, align 8, !tbaa !58
  store <2 x i64> %461, <2 x i64>* %439, align 8, !tbaa !58
  br label %if.end32.i1178

if.end32.i1178:                                   ; preds = %dump_buffer.exit1197, %if.then23.i1173, %if.end20.i1169
  %shl33.i1175 = shl i64 %put_buffer.069.i1158, 8
  %sub34.i1176 = add nsw i32 %put_bits.068.i1159, -8
  %cmp12.i1177 = icmp sgt i32 %sub34.i1176, 7
  br i1 %cmp12.i1177, label %while.body.i1165, label %while.end.loopexit.i1179, !prof !68

while.end.loopexit.i1179:                         ; preds = %if.end32.i1178
  %shl33.i1175.lcssa = phi i64 [ %shl33.i1175, %if.end32.i1178 ]
  %462 = and i32 %add.i1147, 7
  br label %while.end.i1182

while.end.i1182:                                  ; preds = %while.end.loopexit.i1179, %if.end7.i1154
  %put_buffer.0.lcssa.i1180 = phi i64 [ %or.i1152, %if.end7.i1154 ], [ %shl33.i1175.lcssa, %while.end.loopexit.i1179 ]
  %put_bits.0.lcssa.i1181 = phi i32 [ %add.i1147, %if.end7.i1154 ], [ %462, %while.end.loopexit.i1179 ]
  store i64 %put_buffer.0.lcssa.i1180, i64* %put_buffer11.i1151, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i1181, i32* %put_bits1.i1133, align 8, !tbaa !51
  br label %if.end.i632

if.end.i632:                                      ; preds = %while.end.i1182, %if.end.i1142, %emit_symbol.exit.i628
  store i32 0, i32* %EOBRUN, align 4, !tbaa !48
  %463 = load i32, i32* %BE1332, align 8, !tbaa !49
  %464 = load i32, i32* %gather_statistics.i.i611, align 8, !tbaa !22
  %tobool.i636 = icmp eq i32 %464, 0
  %cmp.i637 = icmp ne i32 %463, 0
  %or.cond.i638 = and i1 %cmp.i637, %tobool.i636
  br i1 %or.cond.i638, label %while.body.preheader.i643, label %emit_buffered_bits.exit689, !prof !89

while.body.preheader.i643:                        ; preds = %if.end.i632
  %465 = load i8*, i8** %bit_buffer1331, align 8, !tbaa !19
  %put_bits1.i.i639 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %put_buffer11.i.i640 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %cinfo.i690 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %466 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %467 = bitcast i8** %next_output_byte4 to <2 x i64>*
  br label %while.body.i647

while.body.i647:                                  ; preds = %emit_bits.exit.while.body_crit_edge.i687, %while.body.preheader.i643
  %468 = phi i32 [ %.pre.i686, %emit_bits.exit.while.body_crit_edge.i687 ], [ 0, %while.body.preheader.i643 ]
  %bufstart.addr.0.i644 = phi i8* [ %incdec.ptr.i685, %emit_bits.exit.while.body_crit_edge.i687 ], [ %465, %while.body.preheader.i643 ]
  %nbits.addr.0.i645 = phi i32 [ %dec.i682, %emit_bits.exit.while.body_crit_edge.i687 ], [ %463, %while.body.preheader.i643 ]
  %tobool.i.i646 = icmp eq i32 %468, 0
  br i1 %tobool.i.i646, label %if.end7.i.i656, label %emit_bits.exit.i684, !prof !78

if.end7.i.i656:                                   ; preds = %while.body.i647
  %469 = load i32, i32* %put_bits1.i.i639, align 8, !tbaa !51
  %470 = load i8, i8* %bufstart.addr.0.i644, align 1, !tbaa !58
  %conv5.i648 = zext i8 %470 to i64
  %and.i.i649 = and i64 %conv5.i648, 1
  %add.i.i650 = add i32 %469, 1
  %sub8.i.i651 = sub i32 23, %469
  %sh_prom9.i.i652 = zext i32 %sub8.i.i651 to i64
  %shl10.i.i653 = shl i64 %and.i.i649, %sh_prom9.i.i652
  %471 = load i64, i64* %put_buffer11.i.i640, align 8, !tbaa !50
  %or.i.i654 = or i64 %shl10.i.i653, %471
  %cmp1267.i.i655 = icmp sgt i32 %add.i.i650, 7
  br i1 %cmp1267.i.i655, label %while.body.i.i664.preheader, label %while.end.i.i681, !prof !68

while.body.i.i664.preheader:                      ; preds = %if.end7.i.i656
  br label %while.body.i.i664

while.body.i.i664:                                ; preds = %while.body.i.i664.preheader, %if.end32.i.i677
  %put_buffer.069.i.i657 = phi i64 [ %shl33.i.i674, %if.end32.i.i677 ], [ %or.i.i654, %while.body.i.i664.preheader ]
  %put_bits.068.i.i658 = phi i32 [ %sub34.i.i675, %if.end32.i.i677 ], [ %add.i.i650, %while.body.i.i664.preheader ]
  %shr66.i.i659 = lshr i64 %put_buffer.069.i.i657, 16
  %conv16.i.i660 = trunc i64 %shr66.i.i659 to i8
  %472 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr.i.i661 = getelementptr inbounds i8, i8* %472, i64 1
  store i8* %incdec.ptr.i.i661, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 %conv16.i.i660, i8* %472, align 1, !tbaa !58
  %473 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec.i.i662 = add i64 %473, -1
  store i64 %dec.i.i662, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp17.i.i663 = icmp eq i64 %dec.i.i662, 0
  br i1 %cmp17.i.i663, label %if.then19.i.i665, label %if.end20.i.i668, !prof !71

if.then19.i.i665:                                 ; preds = %while.body.i.i664
  %474 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i690, align 8, !tbaa !21
  %dest1.i691 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %474, i64 0, i32 5
  %475 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i691, align 8, !tbaa !57
  %empty_output_buffer.i692 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %475, i64 0, i32 3
  %476 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i692, align 8, !tbaa !72
  %call.i693 = tail call i32 %476(%struct.jpeg_compress_struct* %474) #3
  %tobool.i694 = icmp eq i32 %call.i693, 0
  br i1 %tobool.i694, label %if.then.i698, label %dump_buffer.exit703, !prof !74

if.then.i698:                                     ; preds = %if.then19.i.i665
  %477 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i690, align 8, !tbaa !21
  %err.i695 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %477, i64 0, i32 0
  %478 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i695, align 8, !tbaa !39
  %msg_code.i696 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %478, i64 0, i32 5
  store i32 22, i32* %msg_code.i696, align 8, !tbaa !40
  %error_exit.i697 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %478, i64 0, i32 0
  %479 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i697, align 8, !tbaa !42
  %480 = bitcast %struct.jpeg_compress_struct* %477 to %struct.jpeg_common_struct*
  tail call void %479(%struct.jpeg_common_struct* %480) #3
  br label %dump_buffer.exit703

dump_buffer.exit703:                              ; preds = %if.then19.i.i665, %if.then.i698
  %481 = bitcast %struct.jpeg_destination_mgr* %475 to <2 x i64>*
  %482 = load <2 x i64>, <2 x i64>* %481, align 8, !tbaa !58
  store <2 x i64> %482, <2 x i64>* %466, align 8, !tbaa !58
  br label %if.end20.i.i668

if.end20.i.i668:                                  ; preds = %dump_buffer.exit703, %while.body.i.i664
  %conv15.i.i666 = and i64 %shr66.i.i659, 255
  %cmp21.i.i667 = icmp eq i64 %conv15.i.i666, 255
  br i1 %cmp21.i.i667, label %if.then23.i.i672, label %if.end32.i.i677, !prof !75

if.then23.i.i672:                                 ; preds = %if.end20.i.i668
  %483 = load i8*, i8** %next_output_byte4, align 8, !tbaa !69
  %incdec.ptr25.i.i669 = getelementptr inbounds i8, i8* %483, i64 1
  store i8* %incdec.ptr25.i.i669, i8** %next_output_byte4, align 8, !tbaa !69
  store i8 0, i8* %483, align 1, !tbaa !58
  %484 = load i64, i64* %free_in_buffer6, align 8, !tbaa !70
  %dec27.i.i670 = add i64 %484, -1
  store i64 %dec27.i.i670, i64* %free_in_buffer6, align 8, !tbaa !70
  %cmp28.i.i671 = icmp eq i64 %dec27.i.i670, 0
  br i1 %cmp28.i.i671, label %if.then30.i.i673, label %if.end32.i.i677, !prof !76

if.then30.i.i673:                                 ; preds = %if.then23.i.i672
  %485 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i690, align 8, !tbaa !21
  %dest1.i1199 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %485, i64 0, i32 5
  %486 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i1199, align 8, !tbaa !57
  %empty_output_buffer.i1200 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %486, i64 0, i32 3
  %487 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i1200, align 8, !tbaa !72
  %call.i1201 = tail call i32 %487(%struct.jpeg_compress_struct* %485) #3
  %tobool.i1202 = icmp eq i32 %call.i1201, 0
  br i1 %tobool.i1202, label %if.then.i1206, label %dump_buffer.exit1211, !prof !74

if.then.i1206:                                    ; preds = %if.then30.i.i673
  %488 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i690, align 8, !tbaa !21
  %err.i1203 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %488, i64 0, i32 0
  %489 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i1203, align 8, !tbaa !39
  %msg_code.i1204 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %489, i64 0, i32 5
  store i32 22, i32* %msg_code.i1204, align 8, !tbaa !40
  %error_exit.i1205 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %489, i64 0, i32 0
  %490 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i1205, align 8, !tbaa !42
  %491 = bitcast %struct.jpeg_compress_struct* %488 to %struct.jpeg_common_struct*
  tail call void %490(%struct.jpeg_common_struct* %491) #3
  br label %dump_buffer.exit1211

dump_buffer.exit1211:                             ; preds = %if.then30.i.i673, %if.then.i1206
  %492 = bitcast %struct.jpeg_destination_mgr* %486 to <2 x i64>*
  %493 = load <2 x i64>, <2 x i64>* %492, align 8, !tbaa !58
  store <2 x i64> %493, <2 x i64>* %467, align 8, !tbaa !58
  br label %if.end32.i.i677

if.end32.i.i677:                                  ; preds = %dump_buffer.exit1211, %if.then23.i.i672, %if.end20.i.i668
  %shl33.i.i674 = shl i64 %put_buffer.069.i.i657, 8
  %sub34.i.i675 = add nsw i32 %put_bits.068.i.i658, -8
  %cmp12.i.i676 = icmp sgt i32 %sub34.i.i675, 7
  br i1 %cmp12.i.i676, label %while.body.i.i664, label %while.end.loopexit.i.i678, !prof !68

while.end.loopexit.i.i678:                        ; preds = %if.end32.i.i677
  %shl33.i.i674.lcssa = phi i64 [ %shl33.i.i674, %if.end32.i.i677 ]
  %494 = and i32 %add.i.i650, 7
  br label %while.end.i.i681

while.end.i.i681:                                 ; preds = %while.end.loopexit.i.i678, %if.end7.i.i656
  %put_buffer.0.lcssa.i.i679 = phi i64 [ %or.i.i654, %if.end7.i.i656 ], [ %shl33.i.i674.lcssa, %while.end.loopexit.i.i678 ]
  %put_bits.0.lcssa.i.i680 = phi i32 [ %add.i.i650, %if.end7.i.i656 ], [ %494, %while.end.loopexit.i.i678 ]
  store i64 %put_buffer.0.lcssa.i.i679, i64* %put_buffer11.i.i640, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i.i680, i32* %put_bits1.i.i639, align 8, !tbaa !51
  br label %emit_bits.exit.i684

emit_bits.exit.i684:                              ; preds = %while.end.i.i681, %while.body.i647
  %dec.i682 = add i32 %nbits.addr.0.i645, -1
  %cmp.old.i683 = icmp eq i32 %dec.i682, 0
  br i1 %cmp.old.i683, label %emit_buffered_bits.exit689.loopexit, label %emit_bits.exit.while.body_crit_edge.i687, !prof !90

emit_bits.exit.while.body_crit_edge.i687:         ; preds = %emit_bits.exit.i684
  %incdec.ptr.i685 = getelementptr inbounds i8, i8* %bufstart.addr.0.i644, i64 1
  %.pre.i686 = load i32, i32* %gather_statistics.i.i611, align 8, !tbaa !22
  br label %while.body.i647

emit_buffered_bits.exit689.loopexit:              ; preds = %emit_bits.exit.i684
  br label %emit_buffered_bits.exit689

emit_buffered_bits.exit689:                       ; preds = %emit_buffered_bits.exit689.loopexit, %if.end.i632
  store i32 0, i32* %BE1332, align 8, !tbaa !49
  br label %if.end78

if.end78:                                         ; preds = %if.then65, %emit_buffered_bits.exit689, %for.end60
  %495 = bitcast %struct.jpeg_destination_mgr** %dest to <2 x i64>**
  %496 = load <2 x i64>*, <2 x i64>** %495, align 8, !tbaa !57
  %497 = bitcast i8** %next_output_byte4 to <2 x i64>*
  %498 = load <2 x i64>, <2 x i64>* %497, align 8, !tbaa !58
  store <2 x i64> %498, <2 x i64>* %496, align 8, !tbaa !58
  %499 = load i32, i32* %restart_interval, align 8, !tbaa !52
  %tobool86 = icmp eq i32 %499, 0
  br i1 %tobool86, label %if.end100, label %if.then87, !prof !81

if.then87:                                        ; preds = %if.end78
  %restarts_to_go88 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 12
  %500 = bitcast i32* %restarts_to_go88 to i64*
  %501 = load i64, i64* %500, align 8
  %502 = trunc i64 %501 to i32
  %cmp89 = icmp eq i32 %502, 0
  br i1 %cmp89, label %if.then91, label %if.end98

if.then91:                                        ; preds = %if.then87
  %503 = lshr i64 %501, 32
  %504 = trunc i64 %503 to i32
  store i32 %499, i32* %restarts_to_go88, align 8, !tbaa !53
  %next_restart_num94 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 13
  %inc95 = add nsw i32 %504, 1
  %and97 = and i32 %inc95, 7
  store i32 %and97, i32* %next_restart_num94, align 4, !tbaa !54
  br label %if.end98

if.end98:                                         ; preds = %if.then91, %if.then87
  %505 = phi i32 [ %499, %if.then91 ], [ %502, %if.then87 ]
  %dec = add i32 %505, -1
  store i32 %dec, i32* %restarts_to_go88, align 8, !tbaa !53
  br label %if.end100

if.end100:                                        ; preds = %if.end78, %if.end98
  call void @llvm.lifetime.end(i64 256, i8* %4) #3
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal void @finish_pass_gather_phuff(%struct.jpeg_compress_struct* %cinfo) #0 !prof !110 {
entry:
  %did = alloca [4 x i32], align 16
  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59
  %0 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to %struct.phuff_entropy_encoder**
  %1 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %0, align 8, !tbaa !14
  %2 = bitcast [4 x i32]* %did to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #3
  %EOBRUN.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 9
  %3 = load i32, i32* %EOBRUN.i, align 4, !tbaa !48
  %cmp.i = icmp eq i32 %3, 0
  br i1 %cmp.i, label %emit_eobrun.exit, label %while.cond.i.preheader, !prof !104

while.cond.i.preheader:                           ; preds = %entry
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i.preheader, %while.cond.i
  %temp.0.i = phi i32 [ %shr.i, %while.cond.i ], [ %3, %while.cond.i.preheader ]
  %nbits.0.i = phi i32 [ %inc.i, %while.cond.i ], [ 0, %while.cond.i.preheader ]
  %shr.i = ashr i32 %temp.0.i, 1
  %tobool.i = icmp eq i32 %shr.i, 0
  %inc.i = add nuw nsw i32 %nbits.0.i, 1
  br i1 %tobool.i, label %while.end.i, label %while.cond.i, !prof !87

while.end.i:                                      ; preds = %while.cond.i
  %nbits.0.i.lcssa = phi i32 [ %nbits.0.i, %while.cond.i ]
  %ac_tbl_no.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 8
  %4 = load i32, i32* %ac_tbl_no.i, align 8, !tbaa !46
  %shl.i = shl i32 %nbits.0.i.lcssa, 4
  %gather_statistics.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 1
  %5 = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  %tobool.i.i = icmp eq i32 %5, 0
  br i1 %tobool.i.i, label %if.else.i.i, label %if.then.i.i, !prof !64

if.then.i.i:                                      ; preds = %while.end.i
  %idxprom.i.i = sext i32 %shl.i to i64
  %idxprom1.i.i = sext i32 %4 to i64
  %arrayidx.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i.i
  %6 = load i64*, i64** %arrayidx.i.i, align 8, !tbaa !18
  %arrayidx2.i.i = getelementptr inbounds i64, i64* %6, i64 %idxprom.i.i
  %7 = load i64, i64* %arrayidx2.i.i, align 8, !tbaa !65
  %inc.i.i = add nsw i64 %7, 1
  store i64 %inc.i.i, i64* %arrayidx2.i.i, align 8, !tbaa !65
  br label %emit_symbol.exit.i

if.else.i.i:                                      ; preds = %while.end.i
  %idxprom3.i.i = sext i32 %4 to i64
  %arrayidx4.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i.i
  %8 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i.i, align 8, !tbaa !18
  %idxprom5.i.i = sext i32 %shl.i to i64
  %arrayidx6.i.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %8, i64 0, i32 0, i64 %idxprom5.i.i
  %9 = load i32, i32* %arrayidx6.i.i, align 4, !tbaa !34
  %arrayidx8.i.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %8, i64 0, i32 1, i64 %idxprom5.i.i
  %10 = load i8, i8* %arrayidx8.i.i, align 1, !tbaa !58
  %conv.i.i = sext i8 %10 to i32
  %conv.i = zext i32 %9 to i64
  %put_bits1.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %11 = load i32, i32* %put_bits1.i, align 8, !tbaa !51
  %cmp.i58 = icmp eq i8 %10, 0
  br i1 %cmp.i58, label %if.end.i66, label %if.end7.i, !prof !66

if.end.i66:                                       ; preds = %if.else.i.i
  %cinfo.i59 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %12 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i59, align 8, !tbaa !21
  %err.i60 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %12, i64 0, i32 0
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i60, align 8, !tbaa !39
  %msg_code.i61 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 5
  store i32 39, i32* %msg_code.i61, align 8, !tbaa !40
  %error_exit.i62 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 0
  %14 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i62, align 8, !tbaa !42
  %15 = bitcast %struct.jpeg_compress_struct* %12 to %struct.jpeg_common_struct*
  tail call void %14(%struct.jpeg_common_struct* %15) #3
  %.pre = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  %tobool.i65 = icmp eq i32 %.pre, 0
  br i1 %tobool.i65, label %if.end7.i, label %emit_symbol.exit.i, !prof !67

if.end7.i:                                        ; preds = %if.else.i.i, %if.end.i66
  %sh_prom.i = zext i32 %conv.i.i to i64
  %shl.i67 = shl i64 1, %sh_prom.i
  %sub.i = add i64 %shl.i67, 4294967295
  %and.i = and i64 %sub.i, %conv.i
  %add.i = add i32 %11, %conv.i.i
  %sub8.i = sub nsw i32 24, %add.i
  %sh_prom9.i = zext i32 %sub8.i to i64
  %shl10.i = shl i64 %and.i, %sh_prom9.i
  %put_buffer11.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %16 = load i64, i64* %put_buffer11.i, align 8, !tbaa !50
  %or.i = or i64 %16, %shl10.i
  %cmp1267.i = icmp sgt i32 %add.i, 7
  br i1 %cmp1267.i, label %while.body.lr.ph.i, label %while.end.i72, !prof !68

while.body.lr.ph.i:                               ; preds = %if.end7.i
  %next_output_byte.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 2
  %free_in_buffer.i68 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 3
  %cinfo.i167 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %17 = bitcast i8** %next_output_byte.i to <2 x i64>*
  %18 = bitcast i8** %next_output_byte.i to <2 x i64>*
  br label %while.body.i71

while.body.i71:                                   ; preds = %if.end32.i, %while.body.lr.ph.i
  %put_buffer.069.i = phi i64 [ %or.i, %while.body.lr.ph.i ], [ %shl33.i, %if.end32.i ]
  %put_bits.068.i = phi i32 [ %add.i, %while.body.lr.ph.i ], [ %sub34.i, %if.end32.i ]
  %shr66.i = lshr i64 %put_buffer.069.i, 16
  %conv16.i = trunc i64 %shr66.i to i8
  %19 = load i8*, i8** %next_output_byte.i, align 8, !tbaa !69
  %incdec.ptr.i69 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %incdec.ptr.i69, i8** %next_output_byte.i, align 8, !tbaa !69
  store i8 %conv16.i, i8* %19, align 1, !tbaa !58
  %20 = load i64, i64* %free_in_buffer.i68, align 8, !tbaa !70
  %dec.i70 = add i64 %20, -1
  store i64 %dec.i70, i64* %free_in_buffer.i68, align 8, !tbaa !70
  %cmp17.i = icmp eq i64 %dec.i70, 0
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i, !prof !71

if.then19.i:                                      ; preds = %while.body.i71
  %21 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i167, align 8, !tbaa !21
  %dest1.i168 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %21, i64 0, i32 5
  %22 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i168, align 8, !tbaa !57
  %empty_output_buffer.i169 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %22, i64 0, i32 3
  %23 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i169, align 8, !tbaa !72
  %call.i170 = tail call i32 %23(%struct.jpeg_compress_struct* %21) #3
  %tobool.i171 = icmp eq i32 %call.i170, 0
  br i1 %tobool.i171, label %if.then.i175, label %dump_buffer.exit180, !prof !74

if.then.i175:                                     ; preds = %if.then19.i
  %24 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i167, align 8, !tbaa !21
  %err.i172 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %24, i64 0, i32 0
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i172, align 8, !tbaa !39
  %msg_code.i173 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 5
  store i32 22, i32* %msg_code.i173, align 8, !tbaa !40
  %error_exit.i174 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 0
  %26 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i174, align 8, !tbaa !42
  %27 = bitcast %struct.jpeg_compress_struct* %24 to %struct.jpeg_common_struct*
  tail call void %26(%struct.jpeg_common_struct* %27) #3
  br label %dump_buffer.exit180

dump_buffer.exit180:                              ; preds = %if.then19.i, %if.then.i175
  %28 = bitcast %struct.jpeg_destination_mgr* %22 to <2 x i64>*
  %29 = load <2 x i64>, <2 x i64>* %28, align 8, !tbaa !58
  store <2 x i64> %29, <2 x i64>* %17, align 8, !tbaa !58
  br label %if.end20.i

if.end20.i:                                       ; preds = %dump_buffer.exit180, %while.body.i71
  %conv15.i = and i64 %shr66.i, 255
  %cmp21.i = icmp eq i64 %conv15.i, 255
  br i1 %cmp21.i, label %if.then23.i, label %if.end32.i, !prof !75

if.then23.i:                                      ; preds = %if.end20.i
  %30 = load i8*, i8** %next_output_byte.i, align 8, !tbaa !69
  %incdec.ptr25.i = getelementptr inbounds i8, i8* %30, i64 1
  store i8* %incdec.ptr25.i, i8** %next_output_byte.i, align 8, !tbaa !69
  store i8 0, i8* %30, align 1, !tbaa !58
  %31 = load i64, i64* %free_in_buffer.i68, align 8, !tbaa !70
  %dec27.i = add i64 %31, -1
  store i64 %dec27.i, i64* %free_in_buffer.i68, align 8, !tbaa !70
  %cmp28.i = icmp eq i64 %dec27.i, 0
  br i1 %cmp28.i, label %if.then30.i, label %if.end32.i, !prof !76

if.then30.i:                                      ; preds = %if.then23.i
  %32 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i167, align 8, !tbaa !21
  %dest1.i74 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %32, i64 0, i32 5
  %33 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i74, align 8, !tbaa !57
  %empty_output_buffer.i75 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %33, i64 0, i32 3
  %34 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i75, align 8, !tbaa !72
  %call.i76 = tail call i32 %34(%struct.jpeg_compress_struct* %32) #3
  %tobool.i77 = icmp eq i32 %call.i76, 0
  br i1 %tobool.i77, label %if.then.i81, label %dump_buffer.exit86, !prof !74

if.then.i81:                                      ; preds = %if.then30.i
  %35 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i167, align 8, !tbaa !21
  %err.i78 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %35, i64 0, i32 0
  %36 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i78, align 8, !tbaa !39
  %msg_code.i79 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %36, i64 0, i32 5
  store i32 22, i32* %msg_code.i79, align 8, !tbaa !40
  %error_exit.i80 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %36, i64 0, i32 0
  %37 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i80, align 8, !tbaa !42
  %38 = bitcast %struct.jpeg_compress_struct* %35 to %struct.jpeg_common_struct*
  tail call void %37(%struct.jpeg_common_struct* %38) #3
  br label %dump_buffer.exit86

dump_buffer.exit86:                               ; preds = %if.then30.i, %if.then.i81
  %39 = bitcast %struct.jpeg_destination_mgr* %33 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 8, !tbaa !58
  store <2 x i64> %40, <2 x i64>* %18, align 8, !tbaa !58
  br label %if.end32.i

if.end32.i:                                       ; preds = %dump_buffer.exit86, %if.then23.i, %if.end20.i
  %shl33.i = shl i64 %put_buffer.069.i, 8
  %sub34.i = add nsw i32 %put_bits.068.i, -8
  %cmp12.i = icmp sgt i32 %sub34.i, 7
  br i1 %cmp12.i, label %while.body.i71, label %while.end.loopexit.i, !prof !68

while.end.loopexit.i:                             ; preds = %if.end32.i
  %shl33.i.lcssa = phi i64 [ %shl33.i, %if.end32.i ]
  %41 = and i32 %add.i, 7
  br label %while.end.i72

while.end.i72:                                    ; preds = %while.end.loopexit.i, %if.end7.i
  %put_buffer.0.lcssa.i = phi i64 [ %or.i, %if.end7.i ], [ %shl33.i.lcssa, %while.end.loopexit.i ]
  %put_bits.0.lcssa.i = phi i32 [ %add.i, %if.end7.i ], [ %41, %while.end.loopexit.i ]
  store i64 %put_buffer.0.lcssa.i, i64* %put_buffer11.i, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i, i32* %put_bits1.i, align 8, !tbaa !51
  br label %emit_symbol.exit.i

emit_symbol.exit.i:                               ; preds = %while.end.i72, %if.end.i66, %if.then.i.i
  %tobool2.i = icmp eq i32 %nbits.0.i.lcssa, 0
  br i1 %tobool2.i, label %if.end.i, label %if.end.i97, !prof !88

if.end.i97:                                       ; preds = %emit_symbol.exit.i
  %put_bits1.i88 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %42 = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  %tobool.i96 = icmp eq i32 %42, 0
  br i1 %tobool.i96, label %if.end7.i109, label %if.end.i, !prof !78

if.end7.i109:                                     ; preds = %if.end.i97
  %43 = load i32, i32* %put_bits1.i88, align 8, !tbaa !51
  %44 = load i32, i32* %EOBRUN.i, align 4, !tbaa !48
  %conv.i87 = zext i32 %44 to i64
  %sh_prom.i98 = zext i32 %nbits.0.i.lcssa to i64
  %shl.i99 = shl i64 1, %sh_prom.i98
  %sub.i100 = add i64 %shl.i99, 4294967295
  %and.i101 = and i64 %conv.i87, %sub.i100
  %add.i102 = add i32 %43, %nbits.0.i.lcssa
  %sub8.i103 = sub nsw i32 24, %add.i102
  %sh_prom9.i104 = zext i32 %sub8.i103 to i64
  %shl10.i105 = shl i64 %and.i101, %sh_prom9.i104
  %put_buffer11.i106 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %45 = load i64, i64* %put_buffer11.i106, align 8, !tbaa !50
  %or.i107 = or i64 %shl10.i105, %45
  %cmp1267.i108 = icmp sgt i32 %add.i102, 7
  br i1 %cmp1267.i108, label %while.body.lr.ph.i112, label %while.end.i137, !prof !68

while.body.lr.ph.i112:                            ; preds = %if.end7.i109
  %next_output_byte.i110 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 2
  %free_in_buffer.i111 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 3
  %cinfo.i181 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %46 = bitcast i8** %next_output_byte.i110 to <2 x i64>*
  %47 = bitcast i8** %next_output_byte.i110 to <2 x i64>*
  br label %while.body.i120

while.body.i120:                                  ; preds = %if.end32.i133, %while.body.lr.ph.i112
  %put_buffer.069.i113 = phi i64 [ %or.i107, %while.body.lr.ph.i112 ], [ %shl33.i130, %if.end32.i133 ]
  %put_bits.068.i114 = phi i32 [ %add.i102, %while.body.lr.ph.i112 ], [ %sub34.i131, %if.end32.i133 ]
  %shr66.i115 = lshr i64 %put_buffer.069.i113, 16
  %conv16.i116 = trunc i64 %shr66.i115 to i8
  %48 = load i8*, i8** %next_output_byte.i110, align 8, !tbaa !69
  %incdec.ptr.i117 = getelementptr inbounds i8, i8* %48, i64 1
  store i8* %incdec.ptr.i117, i8** %next_output_byte.i110, align 8, !tbaa !69
  store i8 %conv16.i116, i8* %48, align 1, !tbaa !58
  %49 = load i64, i64* %free_in_buffer.i111, align 8, !tbaa !70
  %dec.i118 = add i64 %49, -1
  store i64 %dec.i118, i64* %free_in_buffer.i111, align 8, !tbaa !70
  %cmp17.i119 = icmp eq i64 %dec.i118, 0
  br i1 %cmp17.i119, label %if.then19.i121, label %if.end20.i124, !prof !71

if.then19.i121:                                   ; preds = %while.body.i120
  %50 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i181, align 8, !tbaa !21
  %dest1.i182 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %50, i64 0, i32 5
  %51 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i182, align 8, !tbaa !57
  %empty_output_buffer.i183 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %51, i64 0, i32 3
  %52 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i183, align 8, !tbaa !72
  %call.i184 = tail call i32 %52(%struct.jpeg_compress_struct* %50) #3
  %tobool.i185 = icmp eq i32 %call.i184, 0
  br i1 %tobool.i185, label %if.then.i189, label %dump_buffer.exit194, !prof !74

if.then.i189:                                     ; preds = %if.then19.i121
  %53 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i181, align 8, !tbaa !21
  %err.i186 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %53, i64 0, i32 0
  %54 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i186, align 8, !tbaa !39
  %msg_code.i187 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %54, i64 0, i32 5
  store i32 22, i32* %msg_code.i187, align 8, !tbaa !40
  %error_exit.i188 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %54, i64 0, i32 0
  %55 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i188, align 8, !tbaa !42
  %56 = bitcast %struct.jpeg_compress_struct* %53 to %struct.jpeg_common_struct*
  tail call void %55(%struct.jpeg_common_struct* %56) #3
  br label %dump_buffer.exit194

dump_buffer.exit194:                              ; preds = %if.then19.i121, %if.then.i189
  %57 = bitcast %struct.jpeg_destination_mgr* %51 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !tbaa !58
  store <2 x i64> %58, <2 x i64>* %46, align 8, !tbaa !58
  br label %if.end20.i124

if.end20.i124:                                    ; preds = %dump_buffer.exit194, %while.body.i120
  %conv15.i122 = and i64 %shr66.i115, 255
  %cmp21.i123 = icmp eq i64 %conv15.i122, 255
  br i1 %cmp21.i123, label %if.then23.i128, label %if.end32.i133, !prof !75

if.then23.i128:                                   ; preds = %if.end20.i124
  %59 = load i8*, i8** %next_output_byte.i110, align 8, !tbaa !69
  %incdec.ptr25.i125 = getelementptr inbounds i8, i8* %59, i64 1
  store i8* %incdec.ptr25.i125, i8** %next_output_byte.i110, align 8, !tbaa !69
  store i8 0, i8* %59, align 1, !tbaa !58
  %60 = load i64, i64* %free_in_buffer.i111, align 8, !tbaa !70
  %dec27.i126 = add i64 %60, -1
  store i64 %dec27.i126, i64* %free_in_buffer.i111, align 8, !tbaa !70
  %cmp28.i127 = icmp eq i64 %dec27.i126, 0
  br i1 %cmp28.i127, label %if.then30.i129, label %if.end32.i133, !prof !76

if.then30.i129:                                   ; preds = %if.then23.i128
  %61 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i181, align 8, !tbaa !21
  %dest1.i140 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %61, i64 0, i32 5
  %62 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i140, align 8, !tbaa !57
  %empty_output_buffer.i141 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %62, i64 0, i32 3
  %63 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i141, align 8, !tbaa !72
  %call.i142 = tail call i32 %63(%struct.jpeg_compress_struct* %61) #3
  %tobool.i143 = icmp eq i32 %call.i142, 0
  br i1 %tobool.i143, label %if.then.i147, label %dump_buffer.exit152, !prof !74

if.then.i147:                                     ; preds = %if.then30.i129
  %64 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i181, align 8, !tbaa !21
  %err.i144 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %64, i64 0, i32 0
  %65 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i144, align 8, !tbaa !39
  %msg_code.i145 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %65, i64 0, i32 5
  store i32 22, i32* %msg_code.i145, align 8, !tbaa !40
  %error_exit.i146 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %65, i64 0, i32 0
  %66 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i146, align 8, !tbaa !42
  %67 = bitcast %struct.jpeg_compress_struct* %64 to %struct.jpeg_common_struct*
  tail call void %66(%struct.jpeg_common_struct* %67) #3
  br label %dump_buffer.exit152

dump_buffer.exit152:                              ; preds = %if.then30.i129, %if.then.i147
  %68 = bitcast %struct.jpeg_destination_mgr* %62 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !tbaa !58
  store <2 x i64> %69, <2 x i64>* %47, align 8, !tbaa !58
  br label %if.end32.i133

if.end32.i133:                                    ; preds = %dump_buffer.exit152, %if.then23.i128, %if.end20.i124
  %shl33.i130 = shl i64 %put_buffer.069.i113, 8
  %sub34.i131 = add nsw i32 %put_bits.068.i114, -8
  %cmp12.i132 = icmp sgt i32 %sub34.i131, 7
  br i1 %cmp12.i132, label %while.body.i120, label %while.end.loopexit.i134, !prof !68

while.end.loopexit.i134:                          ; preds = %if.end32.i133
  %shl33.i130.lcssa = phi i64 [ %shl33.i130, %if.end32.i133 ]
  %70 = and i32 %add.i102, 7
  br label %while.end.i137

while.end.i137:                                   ; preds = %while.end.loopexit.i134, %if.end7.i109
  %put_buffer.0.lcssa.i135 = phi i64 [ %or.i107, %if.end7.i109 ], [ %shl33.i130.lcssa, %while.end.loopexit.i134 ]
  %put_bits.0.lcssa.i136 = phi i32 [ %add.i102, %if.end7.i109 ], [ %70, %while.end.loopexit.i134 ]
  store i64 %put_buffer.0.lcssa.i135, i64* %put_buffer11.i106, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i136, i32* %put_bits1.i88, align 8, !tbaa !51
  br label %if.end.i

if.end.i:                                         ; preds = %while.end.i137, %if.end.i97, %emit_symbol.exit.i
  store i32 0, i32* %EOBRUN.i, align 4, !tbaa !48
  %BE.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 10
  %71 = load i32, i32* %BE.i, align 8, !tbaa !49
  %72 = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  %tobool.i52 = icmp eq i32 %72, 0
  %cmp.i53 = icmp ne i32 %71, 0
  %or.cond.i = and i1 %cmp.i53, %tobool.i52
  br i1 %or.cond.i, label %while.body.preheader.i, label %emit_buffered_bits.exit, !prof !89

while.body.preheader.i:                           ; preds = %if.end.i
  %bit_buffer.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 11
  %73 = load i8*, i8** %bit_buffer.i, align 8, !tbaa !19
  %put_bits1.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %put_buffer11.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %next_output_byte.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 2
  %free_in_buffer.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 3
  %cinfo.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %74 = bitcast i8** %next_output_byte.i.i to <2 x i64>*
  %75 = bitcast i8** %next_output_byte.i.i to <2 x i64>*
  br label %while.body.i

while.body.i:                                     ; preds = %emit_bits.exit.while.body_crit_edge.i, %while.body.preheader.i
  %76 = phi i32 [ %.pre.i, %emit_bits.exit.while.body_crit_edge.i ], [ 0, %while.body.preheader.i ]
  %bufstart.addr.0.i = phi i8* [ %incdec.ptr.i, %emit_bits.exit.while.body_crit_edge.i ], [ %73, %while.body.preheader.i ]
  %nbits.addr.0.i = phi i32 [ %dec.i, %emit_bits.exit.while.body_crit_edge.i ], [ %71, %while.body.preheader.i ]
  %tobool.i.i54 = icmp eq i32 %76, 0
  br i1 %tobool.i.i54, label %if.end7.i.i, label %emit_bits.exit.i, !prof !78

if.end7.i.i:                                      ; preds = %while.body.i
  %77 = load i32, i32* %put_bits1.i.i, align 8, !tbaa !51
  %78 = load i8, i8* %bufstart.addr.0.i, align 1, !tbaa !58
  %conv5.i = zext i8 %78 to i64
  %and.i.i = and i64 %conv5.i, 1
  %add.i.i = add i32 %77, 1
  %sub8.i.i = sub i32 23, %77
  %sh_prom9.i.i = zext i32 %sub8.i.i to i64
  %shl10.i.i = shl i64 %and.i.i, %sh_prom9.i.i
  %79 = load i64, i64* %put_buffer11.i.i, align 8, !tbaa !50
  %or.i.i = or i64 %shl10.i.i, %79
  %cmp1267.i.i = icmp sgt i32 %add.i.i, 7
  br i1 %cmp1267.i.i, label %while.body.i.i.preheader, label %while.end.i.i, !prof !68

while.body.i.i.preheader:                         ; preds = %if.end7.i.i
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i.preheader, %if.end32.i.i
  %put_buffer.069.i.i = phi i64 [ %shl33.i.i, %if.end32.i.i ], [ %or.i.i, %while.body.i.i.preheader ]
  %put_bits.068.i.i = phi i32 [ %sub34.i.i, %if.end32.i.i ], [ %add.i.i, %while.body.i.i.preheader ]
  %shr66.i.i = lshr i64 %put_buffer.069.i.i, 16
  %conv16.i.i = trunc i64 %shr66.i.i to i8
  %80 = load i8*, i8** %next_output_byte.i.i, align 8, !tbaa !69
  %incdec.ptr.i.i = getelementptr inbounds i8, i8* %80, i64 1
  store i8* %incdec.ptr.i.i, i8** %next_output_byte.i.i, align 8, !tbaa !69
  store i8 %conv16.i.i, i8* %80, align 1, !tbaa !58
  %81 = load i64, i64* %free_in_buffer.i.i, align 8, !tbaa !70
  %dec.i.i = add i64 %81, -1
  store i64 %dec.i.i, i64* %free_in_buffer.i.i, align 8, !tbaa !70
  %cmp17.i.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp17.i.i, label %if.then19.i.i, label %if.end20.i.i, !prof !71

if.then19.i.i:                                    ; preds = %while.body.i.i
  %82 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %dest1.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %82, i64 0, i32 5
  %83 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i, align 8, !tbaa !57
  %empty_output_buffer.i = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %83, i64 0, i32 3
  %84 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i, align 8, !tbaa !72
  %call.i = tail call i32 %84(%struct.jpeg_compress_struct* %82) #3
  %tobool.i56 = icmp eq i32 %call.i, 0
  br i1 %tobool.i56, label %if.then.i, label %dump_buffer.exit, !prof !74

if.then.i:                                        ; preds = %if.then19.i.i
  %85 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %err.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %85, i64 0, i32 0
  %86 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !39
  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %86, i64 0, i32 5
  store i32 22, i32* %msg_code.i, align 8, !tbaa !40
  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %86, i64 0, i32 0
  %87 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !42
  %88 = bitcast %struct.jpeg_compress_struct* %85 to %struct.jpeg_common_struct*
  tail call void %87(%struct.jpeg_common_struct* %88) #3
  br label %dump_buffer.exit

dump_buffer.exit:                                 ; preds = %if.then19.i.i, %if.then.i
  %89 = bitcast %struct.jpeg_destination_mgr* %83 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 8, !tbaa !58
  store <2 x i64> %90, <2 x i64>* %74, align 8, !tbaa !58
  br label %if.end20.i.i

if.end20.i.i:                                     ; preds = %dump_buffer.exit, %while.body.i.i
  %conv15.i.i = and i64 %shr66.i.i, 255
  %cmp21.i.i = icmp eq i64 %conv15.i.i, 255
  br i1 %cmp21.i.i, label %if.then23.i.i, label %if.end32.i.i, !prof !75

if.then23.i.i:                                    ; preds = %if.end20.i.i
  %91 = load i8*, i8** %next_output_byte.i.i, align 8, !tbaa !69
  %incdec.ptr25.i.i = getelementptr inbounds i8, i8* %91, i64 1
  store i8* %incdec.ptr25.i.i, i8** %next_output_byte.i.i, align 8, !tbaa !69
  store i8 0, i8* %91, align 1, !tbaa !58
  %92 = load i64, i64* %free_in_buffer.i.i, align 8, !tbaa !70
  %dec27.i.i = add i64 %92, -1
  store i64 %dec27.i.i, i64* %free_in_buffer.i.i, align 8, !tbaa !70
  %cmp28.i.i = icmp eq i64 %dec27.i.i, 0
  br i1 %cmp28.i.i, label %if.then30.i.i, label %if.end32.i.i, !prof !76

if.then30.i.i:                                    ; preds = %if.then23.i.i
  %93 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %dest1.i154 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %93, i64 0, i32 5
  %94 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i154, align 8, !tbaa !57
  %empty_output_buffer.i155 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %94, i64 0, i32 3
  %95 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i155, align 8, !tbaa !72
  %call.i156 = tail call i32 %95(%struct.jpeg_compress_struct* %93) #3
  %tobool.i157 = icmp eq i32 %call.i156, 0
  br i1 %tobool.i157, label %if.then.i161, label %dump_buffer.exit166, !prof !74

if.then.i161:                                     ; preds = %if.then30.i.i
  %96 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %err.i158 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %96, i64 0, i32 0
  %97 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i158, align 8, !tbaa !39
  %msg_code.i159 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %97, i64 0, i32 5
  store i32 22, i32* %msg_code.i159, align 8, !tbaa !40
  %error_exit.i160 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %97, i64 0, i32 0
  %98 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i160, align 8, !tbaa !42
  %99 = bitcast %struct.jpeg_compress_struct* %96 to %struct.jpeg_common_struct*
  tail call void %98(%struct.jpeg_common_struct* %99) #3
  br label %dump_buffer.exit166

dump_buffer.exit166:                              ; preds = %if.then30.i.i, %if.then.i161
  %100 = bitcast %struct.jpeg_destination_mgr* %94 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8, !tbaa !58
  store <2 x i64> %101, <2 x i64>* %75, align 8, !tbaa !58
  br label %if.end32.i.i

if.end32.i.i:                                     ; preds = %dump_buffer.exit166, %if.then23.i.i, %if.end20.i.i
  %shl33.i.i = shl i64 %put_buffer.069.i.i, 8
  %sub34.i.i = add nsw i32 %put_bits.068.i.i, -8
  %cmp12.i.i = icmp sgt i32 %sub34.i.i, 7
  br i1 %cmp12.i.i, label %while.body.i.i, label %while.end.loopexit.i.i, !prof !68

while.end.loopexit.i.i:                           ; preds = %if.end32.i.i
  %shl33.i.i.lcssa = phi i64 [ %shl33.i.i, %if.end32.i.i ]
  %102 = and i32 %add.i.i, 7
  br label %while.end.i.i

while.end.i.i:                                    ; preds = %while.end.loopexit.i.i, %if.end7.i.i
  %put_buffer.0.lcssa.i.i = phi i64 [ %or.i.i, %if.end7.i.i ], [ %shl33.i.i.lcssa, %while.end.loopexit.i.i ]
  %put_bits.0.lcssa.i.i = phi i32 [ %add.i.i, %if.end7.i.i ], [ %102, %while.end.loopexit.i.i ]
  store i64 %put_buffer.0.lcssa.i.i, i64* %put_buffer11.i.i, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i.i, i32* %put_bits1.i.i, align 8, !tbaa !51
  br label %emit_bits.exit.i

emit_bits.exit.i:                                 ; preds = %while.end.i.i, %while.body.i
  %dec.i = add i32 %nbits.addr.0.i, -1
  %cmp.old.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.old.i, label %emit_buffered_bits.exit.loopexit, label %emit_bits.exit.while.body_crit_edge.i, !prof !90

emit_bits.exit.while.body_crit_edge.i:            ; preds = %emit_bits.exit.i
  %incdec.ptr.i = getelementptr inbounds i8, i8* %bufstart.addr.0.i, i64 1
  %.pre.i = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  br label %while.body.i

emit_buffered_bits.exit.loopexit:                 ; preds = %emit_bits.exit.i
  br label %emit_buffered_bits.exit

emit_buffered_bits.exit:                          ; preds = %emit_buffered_bits.exit.loopexit, %if.end.i
  store i32 0, i32* %BE.i, align 8, !tbaa !49
  br label %emit_eobrun.exit

emit_eobrun.exit:                                 ; preds = %entry, %emit_buffered_bits.exit
  %Ss = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 47
  %103 = load i32, i32* %Ss, align 4, !tbaa !23
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 16, i32 16, i1 false)
  %comps_in_scan = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 41
  %104 = load i32, i32* %comps_in_scan, align 4, !tbaa !31
  %cmp2195 = icmp sgt i32 %104, 0
  br i1 %cmp2195, label %for.body.lr.ph, label %for.end, !prof !111

for.body.lr.ph:                                   ; preds = %emit_eobrun.exit
  %cmp = icmp eq i32 %103, 0
  %Ah = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 49
  %105 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  br i1 %cmp, label %for.body.us.preheader, label %for.body.preheader, !prof !112

for.body.preheader:                               ; preds = %for.body.lr.ph
  br label %for.body

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.inc.us
  %106 = phi i32 [ %113, %for.inc.us ], [ %104, %for.body.us.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.us ], [ 0, %for.body.us.preheader ]
  %107 = load i32, i32* %Ah, align 4, !tbaa !24
  %cmp4.us = icmp eq i32 %107, 0
  br i1 %cmp4.us, label %if.end.us, label %for.inc.us, !prof !113

if.end.us:                                        ; preds = %for.body.us
  %arrayidx.us = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv
  %108 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %arrayidx.us, align 8, !tbaa !18
  %dc_tbl_no.us = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %108, i64 0, i32 5
  %tbl.0.us = load i32, i32* %dc_tbl_no.us, align 4, !tbaa !34
  %idxprom8.us = sext i32 %tbl.0.us to i64
  %arrayidx9.us = getelementptr inbounds [4 x i32], [4 x i32]* %did, i64 0, i64 %idxprom8.us
  %109 = load i32, i32* %arrayidx9.us, align 4, !tbaa !34
  %tobool10.us = icmp eq i32 %109, 0
  br i1 %tobool10.us, label %if.then11.us, label %for.inc.us, !prof !114

if.then11.us:                                     ; preds = %if.end.us
  %arrayidx15.us = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 %idxprom8.us
  %110 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx15.us, align 8, !tbaa !18
  %cmp20.us = icmp eq %struct.JHUFF_TBL* %110, null
  br i1 %cmp20.us, label %if.then22.us, label %if.end23.us, !prof !115

if.then22.us:                                     ; preds = %if.then11.us
  %call.us = tail call %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct* nonnull %105) #3
  store %struct.JHUFF_TBL* %call.us, %struct.JHUFF_TBL** %arrayidx15.us, align 8, !tbaa !18
  br label %if.end23.us

if.end23.us:                                      ; preds = %if.then22.us, %if.then11.us
  %111 = phi %struct.JHUFF_TBL* [ %call.us, %if.then22.us ], [ %110, %if.then11.us ]
  %arrayidx25.us = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom8.us
  %112 = load i64*, i64** %arrayidx25.us, align 8, !tbaa !18
  tail call void @jpeg_gen_optimal_table(%struct.jpeg_compress_struct* nonnull %cinfo, %struct.JHUFF_TBL* %111, i64* %112) #3
  store i32 1, i32* %arrayidx9.us, align 4, !tbaa !34
  %.pre201 = load i32, i32* %comps_in_scan, align 4, !tbaa !31
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.end23.us, %if.end.us, %for.body.us
  %113 = phi i32 [ %.pre201, %if.end23.us ], [ %106, %if.end.us ], [ %106, %for.body.us ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %114 = sext i32 %113 to i64
  %cmp2.us = icmp slt i64 %indvars.iv.next, %114
  br i1 %cmp2.us, label %for.body.us, label %for.end.loopexit, !prof !111

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %115 = phi i32 [ %121, %for.inc ], [ %104, %for.body.preheader ]
  %indvars.iv198 = phi i64 [ %indvars.iv.next199, %for.inc ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv198
  %116 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %arrayidx, align 8, !tbaa !18
  %ac_tbl_no = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %116, i64 0, i32 6
  %tbl.0 = load i32, i32* %ac_tbl_no, align 4, !tbaa !34
  %idxprom8 = sext i32 %tbl.0 to i64
  %arrayidx9 = getelementptr inbounds [4 x i32], [4 x i32]* %did, i64 0, i64 %idxprom8
  %117 = load i32, i32* %arrayidx9, align 4, !tbaa !34
  %tobool10 = icmp eq i32 %117, 0
  br i1 %tobool10, label %if.then11, label %for.inc, !prof !114

if.then11:                                        ; preds = %for.body
  %arrayidx18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 17, i64 %idxprom8
  %118 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx18, align 8, !tbaa !18
  %cmp20 = icmp eq %struct.JHUFF_TBL* %118, null
  br i1 %cmp20, label %if.then22, label %if.end23, !prof !115

if.then22:                                        ; preds = %if.then11
  %call = tail call %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct* nonnull %105) #3
  store %struct.JHUFF_TBL* %call, %struct.JHUFF_TBL** %arrayidx18, align 8, !tbaa !18
  br label %if.end23

if.end23:                                         ; preds = %if.then22, %if.then11
  %119 = phi %struct.JHUFF_TBL* [ %call, %if.then22 ], [ %118, %if.then11 ]
  %arrayidx25 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom8
  %120 = load i64*, i64** %arrayidx25, align 8, !tbaa !18
  tail call void @jpeg_gen_optimal_table(%struct.jpeg_compress_struct* nonnull %cinfo, %struct.JHUFF_TBL* %119, i64* %120) #3
  store i32 1, i32* %arrayidx9, align 4, !tbaa !34
  %.pre200 = load i32, i32* %comps_in_scan, align 4, !tbaa !31
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.end23
  %121 = phi i32 [ %115, %for.body ], [ %.pre200, %if.end23 ]
  %indvars.iv.next199 = add nuw nsw i64 %indvars.iv198, 1
  %122 = sext i32 %121 to i64
  %cmp2 = icmp slt i64 %indvars.iv.next199, %122
  br i1 %cmp2, label %for.body, label %for.end.loopexit208, !prof !111

for.end.loopexit:                                 ; preds = %for.inc.us
  br label %for.end

for.end.loopexit208:                              ; preds = %for.inc
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit208, %for.end.loopexit, %emit_eobrun.exit
  call void @llvm.lifetime.end(i64 16, i8* %2) #3
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @finish_pass_phuff(%struct.jpeg_compress_struct* nocapture readonly %cinfo) #0 !prof !116 {
entry:
  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59
  %0 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to %struct.phuff_entropy_encoder**
  %1 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %0, align 8, !tbaa !14
  %dest = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 5
  %2 = bitcast %struct.jpeg_destination_mgr** %dest to <2 x i64>**
  %3 = load <2 x i64>*, <2 x i64>** %2, align 8, !tbaa !57
  %next_output_byte2 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 2
  %4 = load <2 x i64>, <2 x i64>* %3, align 8, !tbaa !58
  %free_in_buffer4 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 3
  %5 = bitcast i8** %next_output_byte2 to <2 x i64>*
  store <2 x i64> %4, <2 x i64>* %5, align 8, !tbaa !58
  %EOBRUN.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 9
  %6 = load i32, i32* %EOBRUN.i, align 4, !tbaa !48
  %cmp.i = icmp eq i32 %6, 0
  br i1 %cmp.i, label %emit_eobrun.exit, label %while.cond.i.preheader, !prof !104

while.cond.i.preheader:                           ; preds = %entry
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i.preheader, %while.cond.i
  %temp.0.i = phi i32 [ %shr.i, %while.cond.i ], [ %6, %while.cond.i.preheader ]
  %nbits.0.i = phi i32 [ %inc.i, %while.cond.i ], [ 0, %while.cond.i.preheader ]
  %shr.i = ashr i32 %temp.0.i, 1
  %tobool.i = icmp eq i32 %shr.i, 0
  %inc.i = add nuw nsw i32 %nbits.0.i, 1
  br i1 %tobool.i, label %while.end.i, label %while.cond.i, !prof !87

while.end.i:                                      ; preds = %while.cond.i
  %nbits.0.i.lcssa = phi i32 [ %nbits.0.i, %while.cond.i ]
  %ac_tbl_no.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 8
  %7 = load i32, i32* %ac_tbl_no.i, align 8, !tbaa !46
  %shl.i = shl i32 %nbits.0.i.lcssa, 4
  %gather_statistics.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 1
  %8 = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  %tobool.i.i = icmp eq i32 %8, 0
  br i1 %tobool.i.i, label %if.else.i.i, label %if.then.i.i, !prof !64

if.then.i.i:                                      ; preds = %while.end.i
  %idxprom.i.i = sext i32 %shl.i to i64
  %idxprom1.i.i = sext i32 %7 to i64
  %arrayidx.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i.i
  %9 = load i64*, i64** %arrayidx.i.i, align 8, !tbaa !18
  %arrayidx2.i.i = getelementptr inbounds i64, i64* %9, i64 %idxprom.i.i
  %10 = load i64, i64* %arrayidx2.i.i, align 8, !tbaa !65
  %inc.i.i = add nsw i64 %10, 1
  store i64 %inc.i.i, i64* %arrayidx2.i.i, align 8, !tbaa !65
  br label %emit_symbol.exit.i

if.else.i.i:                                      ; preds = %while.end.i
  %idxprom3.i.i = sext i32 %7 to i64
  %arrayidx4.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i.i
  %11 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i.i, align 8, !tbaa !18
  %idxprom5.i.i = sext i32 %shl.i to i64
  %arrayidx6.i.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %11, i64 0, i32 0, i64 %idxprom5.i.i
  %12 = load i32, i32* %arrayidx6.i.i, align 4, !tbaa !34
  %arrayidx8.i.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %11, i64 0, i32 1, i64 %idxprom5.i.i
  %13 = load i8, i8* %arrayidx8.i.i, align 1, !tbaa !58
  %conv.i.i = sext i8 %13 to i32
  %conv.i = zext i32 %12 to i64
  %put_bits1.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %14 = load i32, i32* %put_bits1.i, align 8, !tbaa !51
  %cmp.i27 = icmp eq i8 %13, 0
  br i1 %cmp.i27, label %if.end.i35, label %if.end7.i, !prof !66

if.end.i35:                                       ; preds = %if.else.i.i
  %cinfo.i28 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %15 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i28, align 8, !tbaa !21
  %err.i29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %15, i64 0, i32 0
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i29, align 8, !tbaa !39
  %msg_code.i30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i64 0, i32 5
  store i32 39, i32* %msg_code.i30, align 8, !tbaa !40
  %error_exit.i31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i64 0, i32 0
  %17 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i31, align 8, !tbaa !42
  %18 = bitcast %struct.jpeg_compress_struct* %15 to %struct.jpeg_common_struct*
  tail call void %17(%struct.jpeg_common_struct* %18) #3
  %.pre = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  %tobool.i34 = icmp eq i32 %.pre, 0
  br i1 %tobool.i34, label %if.end7.i, label %emit_symbol.exit.i, !prof !67

if.end7.i:                                        ; preds = %if.else.i.i, %if.end.i35
  %sh_prom.i = zext i32 %conv.i.i to i64
  %shl.i36 = shl i64 1, %sh_prom.i
  %sub.i = add i64 %shl.i36, 4294967295
  %and.i = and i64 %sub.i, %conv.i
  %add.i = add i32 %14, %conv.i.i
  %sub8.i = sub nsw i32 24, %add.i
  %sh_prom9.i = zext i32 %sub8.i to i64
  %shl10.i = shl i64 %and.i, %sh_prom9.i
  %put_buffer11.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %19 = load i64, i64* %put_buffer11.i, align 8, !tbaa !50
  %or.i = or i64 %19, %shl10.i
  %cmp1267.i = icmp sgt i32 %add.i, 7
  br i1 %cmp1267.i, label %while.body.i40.preheader, label %while.end.i41, !prof !68

while.body.i40.preheader:                         ; preds = %if.end7.i
  %cinfo.i136 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %20 = bitcast i8** %next_output_byte2 to <2 x i64>*
  %21 = bitcast i8** %next_output_byte2 to <2 x i64>*
  br label %while.body.i40

while.body.i40:                                   ; preds = %while.body.i40.preheader, %if.end32.i
  %put_buffer.069.i = phi i64 [ %shl33.i, %if.end32.i ], [ %or.i, %while.body.i40.preheader ]
  %put_bits.068.i = phi i32 [ %sub34.i, %if.end32.i ], [ %add.i, %while.body.i40.preheader ]
  %shr66.i = lshr i64 %put_buffer.069.i, 16
  %conv16.i = trunc i64 %shr66.i to i8
  %22 = load i8*, i8** %next_output_byte2, align 8, !tbaa !69
  %incdec.ptr.i38 = getelementptr inbounds i8, i8* %22, i64 1
  store i8* %incdec.ptr.i38, i8** %next_output_byte2, align 8, !tbaa !69
  store i8 %conv16.i, i8* %22, align 1, !tbaa !58
  %23 = load i64, i64* %free_in_buffer4, align 8, !tbaa !70
  %dec.i39 = add i64 %23, -1
  store i64 %dec.i39, i64* %free_in_buffer4, align 8, !tbaa !70
  %cmp17.i = icmp eq i64 %dec.i39, 0
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i, !prof !71

if.then19.i:                                      ; preds = %while.body.i40
  %24 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i136, align 8, !tbaa !21
  %dest1.i137 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %24, i64 0, i32 5
  %25 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i137, align 8, !tbaa !57
  %empty_output_buffer.i138 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %25, i64 0, i32 3
  %26 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i138, align 8, !tbaa !72
  %call.i139 = tail call i32 %26(%struct.jpeg_compress_struct* %24) #3
  %tobool.i140 = icmp eq i32 %call.i139, 0
  br i1 %tobool.i140, label %if.then.i144, label %dump_buffer.exit149, !prof !74

if.then.i144:                                     ; preds = %if.then19.i
  %27 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i136, align 8, !tbaa !21
  %err.i141 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %27, i64 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i141, align 8, !tbaa !39
  %msg_code.i142 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i64 0, i32 5
  store i32 22, i32* %msg_code.i142, align 8, !tbaa !40
  %error_exit.i143 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i64 0, i32 0
  %29 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i143, align 8, !tbaa !42
  %30 = bitcast %struct.jpeg_compress_struct* %27 to %struct.jpeg_common_struct*
  tail call void %29(%struct.jpeg_common_struct* %30) #3
  br label %dump_buffer.exit149

dump_buffer.exit149:                              ; preds = %if.then19.i, %if.then.i144
  %31 = bitcast %struct.jpeg_destination_mgr* %25 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8, !tbaa !58
  store <2 x i64> %32, <2 x i64>* %20, align 8, !tbaa !58
  br label %if.end20.i

if.end20.i:                                       ; preds = %dump_buffer.exit149, %while.body.i40
  %conv15.i = and i64 %shr66.i, 255
  %cmp21.i = icmp eq i64 %conv15.i, 255
  br i1 %cmp21.i, label %if.then23.i, label %if.end32.i, !prof !75

if.then23.i:                                      ; preds = %if.end20.i
  %33 = load i8*, i8** %next_output_byte2, align 8, !tbaa !69
  %incdec.ptr25.i = getelementptr inbounds i8, i8* %33, i64 1
  store i8* %incdec.ptr25.i, i8** %next_output_byte2, align 8, !tbaa !69
  store i8 0, i8* %33, align 1, !tbaa !58
  %34 = load i64, i64* %free_in_buffer4, align 8, !tbaa !70
  %dec27.i = add i64 %34, -1
  store i64 %dec27.i, i64* %free_in_buffer4, align 8, !tbaa !70
  %cmp28.i = icmp eq i64 %dec27.i, 0
  br i1 %cmp28.i, label %if.then30.i, label %if.end32.i, !prof !76

if.then30.i:                                      ; preds = %if.then23.i
  %35 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i136, align 8, !tbaa !21
  %dest1.i43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %35, i64 0, i32 5
  %36 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i43, align 8, !tbaa !57
  %empty_output_buffer.i44 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %36, i64 0, i32 3
  %37 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i44, align 8, !tbaa !72
  %call.i45 = tail call i32 %37(%struct.jpeg_compress_struct* %35) #3
  %tobool.i46 = icmp eq i32 %call.i45, 0
  br i1 %tobool.i46, label %if.then.i50, label %dump_buffer.exit55, !prof !74

if.then.i50:                                      ; preds = %if.then30.i
  %38 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i136, align 8, !tbaa !21
  %err.i47 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %38, i64 0, i32 0
  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i47, align 8, !tbaa !39
  %msg_code.i48 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 5
  store i32 22, i32* %msg_code.i48, align 8, !tbaa !40
  %error_exit.i49 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 0
  %40 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i49, align 8, !tbaa !42
  %41 = bitcast %struct.jpeg_compress_struct* %38 to %struct.jpeg_common_struct*
  tail call void %40(%struct.jpeg_common_struct* %41) #3
  br label %dump_buffer.exit55

dump_buffer.exit55:                               ; preds = %if.then30.i, %if.then.i50
  %42 = bitcast %struct.jpeg_destination_mgr* %36 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 8, !tbaa !58
  store <2 x i64> %43, <2 x i64>* %21, align 8, !tbaa !58
  br label %if.end32.i

if.end32.i:                                       ; preds = %dump_buffer.exit55, %if.then23.i, %if.end20.i
  %shl33.i = shl i64 %put_buffer.069.i, 8
  %sub34.i = add nsw i32 %put_bits.068.i, -8
  %cmp12.i = icmp sgt i32 %sub34.i, 7
  br i1 %cmp12.i, label %while.body.i40, label %while.end.loopexit.i, !prof !68

while.end.loopexit.i:                             ; preds = %if.end32.i
  %shl33.i.lcssa = phi i64 [ %shl33.i, %if.end32.i ]
  %44 = and i32 %add.i, 7
  br label %while.end.i41

while.end.i41:                                    ; preds = %while.end.loopexit.i, %if.end7.i
  %put_buffer.0.lcssa.i = phi i64 [ %or.i, %if.end7.i ], [ %shl33.i.lcssa, %while.end.loopexit.i ]
  %put_bits.0.lcssa.i = phi i32 [ %add.i, %if.end7.i ], [ %44, %while.end.loopexit.i ]
  store i64 %put_buffer.0.lcssa.i, i64* %put_buffer11.i, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i, i32* %put_bits1.i, align 8, !tbaa !51
  br label %emit_symbol.exit.i

emit_symbol.exit.i:                               ; preds = %while.end.i41, %if.end.i35, %if.then.i.i
  %tobool2.i = icmp eq i32 %nbits.0.i.lcssa, 0
  br i1 %tobool2.i, label %if.end.i, label %if.end.i66, !prof !88

if.end.i66:                                       ; preds = %emit_symbol.exit.i
  %put_bits1.i57 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %45 = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  %tobool.i65 = icmp eq i32 %45, 0
  br i1 %tobool.i65, label %if.end7.i78, label %if.end.i, !prof !78

if.end7.i78:                                      ; preds = %if.end.i66
  %46 = load i32, i32* %put_bits1.i57, align 8, !tbaa !51
  %47 = load i32, i32* %EOBRUN.i, align 4, !tbaa !48
  %conv.i56 = zext i32 %47 to i64
  %sh_prom.i67 = zext i32 %nbits.0.i.lcssa to i64
  %shl.i68 = shl i64 1, %sh_prom.i67
  %sub.i69 = add i64 %shl.i68, 4294967295
  %and.i70 = and i64 %conv.i56, %sub.i69
  %add.i71 = add i32 %46, %nbits.0.i.lcssa
  %sub8.i72 = sub nsw i32 24, %add.i71
  %sh_prom9.i73 = zext i32 %sub8.i72 to i64
  %shl10.i74 = shl i64 %and.i70, %sh_prom9.i73
  %put_buffer11.i75 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %48 = load i64, i64* %put_buffer11.i75, align 8, !tbaa !50
  %or.i76 = or i64 %shl10.i74, %48
  %cmp1267.i77 = icmp sgt i32 %add.i71, 7
  br i1 %cmp1267.i77, label %while.body.i89.preheader, label %while.end.i106, !prof !68

while.body.i89.preheader:                         ; preds = %if.end7.i78
  %cinfo.i150 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %49 = bitcast i8** %next_output_byte2 to <2 x i64>*
  %50 = bitcast i8** %next_output_byte2 to <2 x i64>*
  br label %while.body.i89

while.body.i89:                                   ; preds = %while.body.i89.preheader, %if.end32.i102
  %put_buffer.069.i82 = phi i64 [ %shl33.i99, %if.end32.i102 ], [ %or.i76, %while.body.i89.preheader ]
  %put_bits.068.i83 = phi i32 [ %sub34.i100, %if.end32.i102 ], [ %add.i71, %while.body.i89.preheader ]
  %shr66.i84 = lshr i64 %put_buffer.069.i82, 16
  %conv16.i85 = trunc i64 %shr66.i84 to i8
  %51 = load i8*, i8** %next_output_byte2, align 8, !tbaa !69
  %incdec.ptr.i86 = getelementptr inbounds i8, i8* %51, i64 1
  store i8* %incdec.ptr.i86, i8** %next_output_byte2, align 8, !tbaa !69
  store i8 %conv16.i85, i8* %51, align 1, !tbaa !58
  %52 = load i64, i64* %free_in_buffer4, align 8, !tbaa !70
  %dec.i87 = add i64 %52, -1
  store i64 %dec.i87, i64* %free_in_buffer4, align 8, !tbaa !70
  %cmp17.i88 = icmp eq i64 %dec.i87, 0
  br i1 %cmp17.i88, label %if.then19.i90, label %if.end20.i93, !prof !71

if.then19.i90:                                    ; preds = %while.body.i89
  %53 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i150, align 8, !tbaa !21
  %dest1.i151 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %53, i64 0, i32 5
  %54 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i151, align 8, !tbaa !57
  %empty_output_buffer.i152 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %54, i64 0, i32 3
  %55 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i152, align 8, !tbaa !72
  %call.i153 = tail call i32 %55(%struct.jpeg_compress_struct* %53) #3
  %tobool.i154 = icmp eq i32 %call.i153, 0
  br i1 %tobool.i154, label %if.then.i158, label %dump_buffer.exit163, !prof !74

if.then.i158:                                     ; preds = %if.then19.i90
  %56 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i150, align 8, !tbaa !21
  %err.i155 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %56, i64 0, i32 0
  %57 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i155, align 8, !tbaa !39
  %msg_code.i156 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %57, i64 0, i32 5
  store i32 22, i32* %msg_code.i156, align 8, !tbaa !40
  %error_exit.i157 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %57, i64 0, i32 0
  %58 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i157, align 8, !tbaa !42
  %59 = bitcast %struct.jpeg_compress_struct* %56 to %struct.jpeg_common_struct*
  tail call void %58(%struct.jpeg_common_struct* %59) #3
  br label %dump_buffer.exit163

dump_buffer.exit163:                              ; preds = %if.then19.i90, %if.then.i158
  %60 = bitcast %struct.jpeg_destination_mgr* %54 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !tbaa !58
  store <2 x i64> %61, <2 x i64>* %49, align 8, !tbaa !58
  br label %if.end20.i93

if.end20.i93:                                     ; preds = %dump_buffer.exit163, %while.body.i89
  %conv15.i91 = and i64 %shr66.i84, 255
  %cmp21.i92 = icmp eq i64 %conv15.i91, 255
  br i1 %cmp21.i92, label %if.then23.i97, label %if.end32.i102, !prof !75

if.then23.i97:                                    ; preds = %if.end20.i93
  %62 = load i8*, i8** %next_output_byte2, align 8, !tbaa !69
  %incdec.ptr25.i94 = getelementptr inbounds i8, i8* %62, i64 1
  store i8* %incdec.ptr25.i94, i8** %next_output_byte2, align 8, !tbaa !69
  store i8 0, i8* %62, align 1, !tbaa !58
  %63 = load i64, i64* %free_in_buffer4, align 8, !tbaa !70
  %dec27.i95 = add i64 %63, -1
  store i64 %dec27.i95, i64* %free_in_buffer4, align 8, !tbaa !70
  %cmp28.i96 = icmp eq i64 %dec27.i95, 0
  br i1 %cmp28.i96, label %if.then30.i98, label %if.end32.i102, !prof !76

if.then30.i98:                                    ; preds = %if.then23.i97
  %64 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i150, align 8, !tbaa !21
  %dest1.i109 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %64, i64 0, i32 5
  %65 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i109, align 8, !tbaa !57
  %empty_output_buffer.i110 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %65, i64 0, i32 3
  %66 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i110, align 8, !tbaa !72
  %call.i111 = tail call i32 %66(%struct.jpeg_compress_struct* %64) #3
  %tobool.i112 = icmp eq i32 %call.i111, 0
  br i1 %tobool.i112, label %if.then.i116, label %dump_buffer.exit121, !prof !74

if.then.i116:                                     ; preds = %if.then30.i98
  %67 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i150, align 8, !tbaa !21
  %err.i113 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %67, i64 0, i32 0
  %68 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i113, align 8, !tbaa !39
  %msg_code.i114 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %68, i64 0, i32 5
  store i32 22, i32* %msg_code.i114, align 8, !tbaa !40
  %error_exit.i115 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %68, i64 0, i32 0
  %69 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i115, align 8, !tbaa !42
  %70 = bitcast %struct.jpeg_compress_struct* %67 to %struct.jpeg_common_struct*
  tail call void %69(%struct.jpeg_common_struct* %70) #3
  br label %dump_buffer.exit121

dump_buffer.exit121:                              ; preds = %if.then30.i98, %if.then.i116
  %71 = bitcast %struct.jpeg_destination_mgr* %65 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !tbaa !58
  store <2 x i64> %72, <2 x i64>* %50, align 8, !tbaa !58
  br label %if.end32.i102

if.end32.i102:                                    ; preds = %dump_buffer.exit121, %if.then23.i97, %if.end20.i93
  %shl33.i99 = shl i64 %put_buffer.069.i82, 8
  %sub34.i100 = add nsw i32 %put_bits.068.i83, -8
  %cmp12.i101 = icmp sgt i32 %sub34.i100, 7
  br i1 %cmp12.i101, label %while.body.i89, label %while.end.loopexit.i103, !prof !68

while.end.loopexit.i103:                          ; preds = %if.end32.i102
  %shl33.i99.lcssa = phi i64 [ %shl33.i99, %if.end32.i102 ]
  %73 = and i32 %add.i71, 7
  br label %while.end.i106

while.end.i106:                                   ; preds = %while.end.loopexit.i103, %if.end7.i78
  %put_buffer.0.lcssa.i104 = phi i64 [ %or.i76, %if.end7.i78 ], [ %shl33.i99.lcssa, %while.end.loopexit.i103 ]
  %put_bits.0.lcssa.i105 = phi i32 [ %add.i71, %if.end7.i78 ], [ %73, %while.end.loopexit.i103 ]
  store i64 %put_buffer.0.lcssa.i104, i64* %put_buffer11.i75, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i105, i32* %put_bits1.i57, align 8, !tbaa !51
  br label %if.end.i

if.end.i:                                         ; preds = %while.end.i106, %if.end.i66, %emit_symbol.exit.i
  store i32 0, i32* %EOBRUN.i, align 4, !tbaa !48
  %BE.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 10
  %74 = load i32, i32* %BE.i, align 8, !tbaa !49
  %75 = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  %tobool.i21 = icmp eq i32 %75, 0
  %cmp.i22 = icmp ne i32 %74, 0
  %or.cond.i = and i1 %cmp.i22, %tobool.i21
  br i1 %or.cond.i, label %while.body.preheader.i, label %emit_buffered_bits.exit, !prof !89

while.body.preheader.i:                           ; preds = %if.end.i
  %bit_buffer.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 11
  %76 = load i8*, i8** %bit_buffer.i, align 8, !tbaa !19
  %put_bits1.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 5
  %put_buffer11.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 4
  %cinfo.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 6
  %77 = bitcast i8** %next_output_byte2 to <2 x i64>*
  %78 = bitcast i8** %next_output_byte2 to <2 x i64>*
  br label %while.body.i

while.body.i:                                     ; preds = %emit_bits.exit.while.body_crit_edge.i, %while.body.preheader.i
  %79 = phi i32 [ %.pre.i, %emit_bits.exit.while.body_crit_edge.i ], [ 0, %while.body.preheader.i ]
  %bufstart.addr.0.i = phi i8* [ %incdec.ptr.i, %emit_bits.exit.while.body_crit_edge.i ], [ %76, %while.body.preheader.i ]
  %nbits.addr.0.i = phi i32 [ %dec.i, %emit_bits.exit.while.body_crit_edge.i ], [ %74, %while.body.preheader.i ]
  %tobool.i.i23 = icmp eq i32 %79, 0
  br i1 %tobool.i.i23, label %if.end7.i.i, label %emit_bits.exit.i, !prof !78

if.end7.i.i:                                      ; preds = %while.body.i
  %80 = load i32, i32* %put_bits1.i.i, align 8, !tbaa !51
  %81 = load i8, i8* %bufstart.addr.0.i, align 1, !tbaa !58
  %conv5.i = zext i8 %81 to i64
  %and.i.i = and i64 %conv5.i, 1
  %add.i.i = add i32 %80, 1
  %sub8.i.i = sub i32 23, %80
  %sh_prom9.i.i = zext i32 %sub8.i.i to i64
  %shl10.i.i = shl i64 %and.i.i, %sh_prom9.i.i
  %82 = load i64, i64* %put_buffer11.i.i, align 8, !tbaa !50
  %or.i.i = or i64 %shl10.i.i, %82
  %cmp1267.i.i = icmp sgt i32 %add.i.i, 7
  br i1 %cmp1267.i.i, label %while.body.i.i.preheader, label %while.end.i.i, !prof !68

while.body.i.i.preheader:                         ; preds = %if.end7.i.i
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i.preheader, %if.end32.i.i
  %put_buffer.069.i.i = phi i64 [ %shl33.i.i, %if.end32.i.i ], [ %or.i.i, %while.body.i.i.preheader ]
  %put_bits.068.i.i = phi i32 [ %sub34.i.i, %if.end32.i.i ], [ %add.i.i, %while.body.i.i.preheader ]
  %shr66.i.i = lshr i64 %put_buffer.069.i.i, 16
  %conv16.i.i = trunc i64 %shr66.i.i to i8
  %83 = load i8*, i8** %next_output_byte2, align 8, !tbaa !69
  %incdec.ptr.i.i = getelementptr inbounds i8, i8* %83, i64 1
  store i8* %incdec.ptr.i.i, i8** %next_output_byte2, align 8, !tbaa !69
  store i8 %conv16.i.i, i8* %83, align 1, !tbaa !58
  %84 = load i64, i64* %free_in_buffer4, align 8, !tbaa !70
  %dec.i.i = add i64 %84, -1
  store i64 %dec.i.i, i64* %free_in_buffer4, align 8, !tbaa !70
  %cmp17.i.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp17.i.i, label %if.then19.i.i, label %if.end20.i.i, !prof !71

if.then19.i.i:                                    ; preds = %while.body.i.i
  %85 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %dest1.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %85, i64 0, i32 5
  %86 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i, align 8, !tbaa !57
  %empty_output_buffer.i = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %86, i64 0, i32 3
  %87 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i, align 8, !tbaa !72
  %call.i = tail call i32 %87(%struct.jpeg_compress_struct* %85) #3
  %tobool.i25 = icmp eq i32 %call.i, 0
  br i1 %tobool.i25, label %if.then.i, label %dump_buffer.exit, !prof !74

if.then.i:                                        ; preds = %if.then19.i.i
  %88 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %err.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %88, i64 0, i32 0
  %89 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !39
  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %89, i64 0, i32 5
  store i32 22, i32* %msg_code.i, align 8, !tbaa !40
  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %89, i64 0, i32 0
  %90 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !42
  %91 = bitcast %struct.jpeg_compress_struct* %88 to %struct.jpeg_common_struct*
  tail call void %90(%struct.jpeg_common_struct* %91) #3
  br label %dump_buffer.exit

dump_buffer.exit:                                 ; preds = %if.then19.i.i, %if.then.i
  %92 = bitcast %struct.jpeg_destination_mgr* %86 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !tbaa !58
  store <2 x i64> %93, <2 x i64>* %77, align 8, !tbaa !58
  br label %if.end20.i.i

if.end20.i.i:                                     ; preds = %dump_buffer.exit, %while.body.i.i
  %conv15.i.i = and i64 %shr66.i.i, 255
  %cmp21.i.i = icmp eq i64 %conv15.i.i, 255
  br i1 %cmp21.i.i, label %if.then23.i.i, label %if.end32.i.i, !prof !75

if.then23.i.i:                                    ; preds = %if.end20.i.i
  %94 = load i8*, i8** %next_output_byte2, align 8, !tbaa !69
  %incdec.ptr25.i.i = getelementptr inbounds i8, i8* %94, i64 1
  store i8* %incdec.ptr25.i.i, i8** %next_output_byte2, align 8, !tbaa !69
  store i8 0, i8* %94, align 1, !tbaa !58
  %95 = load i64, i64* %free_in_buffer4, align 8, !tbaa !70
  %dec27.i.i = add i64 %95, -1
  store i64 %dec27.i.i, i64* %free_in_buffer4, align 8, !tbaa !70
  %cmp28.i.i = icmp eq i64 %dec27.i.i, 0
  br i1 %cmp28.i.i, label %if.then30.i.i, label %if.end32.i.i, !prof !76

if.then30.i.i:                                    ; preds = %if.then23.i.i
  %96 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %dest1.i123 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %96, i64 0, i32 5
  %97 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i123, align 8, !tbaa !57
  %empty_output_buffer.i124 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %97, i64 0, i32 3
  %98 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i124, align 8, !tbaa !72
  %call.i125 = tail call i32 %98(%struct.jpeg_compress_struct* %96) #3
  %tobool.i126 = icmp eq i32 %call.i125, 0
  br i1 %tobool.i126, label %if.then.i130, label %dump_buffer.exit135, !prof !74

if.then.i130:                                     ; preds = %if.then30.i.i
  %99 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %err.i127 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %99, i64 0, i32 0
  %100 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i127, align 8, !tbaa !39
  %msg_code.i128 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %100, i64 0, i32 5
  store i32 22, i32* %msg_code.i128, align 8, !tbaa !40
  %error_exit.i129 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %100, i64 0, i32 0
  %101 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i129, align 8, !tbaa !42
  %102 = bitcast %struct.jpeg_compress_struct* %99 to %struct.jpeg_common_struct*
  tail call void %101(%struct.jpeg_common_struct* %102) #3
  br label %dump_buffer.exit135

dump_buffer.exit135:                              ; preds = %if.then30.i.i, %if.then.i130
  %103 = bitcast %struct.jpeg_destination_mgr* %97 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !tbaa !58
  store <2 x i64> %104, <2 x i64>* %78, align 8, !tbaa !58
  br label %if.end32.i.i

if.end32.i.i:                                     ; preds = %dump_buffer.exit135, %if.then23.i.i, %if.end20.i.i
  %shl33.i.i = shl i64 %put_buffer.069.i.i, 8
  %sub34.i.i = add nsw i32 %put_bits.068.i.i, -8
  %cmp12.i.i = icmp sgt i32 %sub34.i.i, 7
  br i1 %cmp12.i.i, label %while.body.i.i, label %while.end.loopexit.i.i, !prof !68

while.end.loopexit.i.i:                           ; preds = %if.end32.i.i
  %shl33.i.i.lcssa = phi i64 [ %shl33.i.i, %if.end32.i.i ]
  %105 = and i32 %add.i.i, 7
  br label %while.end.i.i

while.end.i.i:                                    ; preds = %while.end.loopexit.i.i, %if.end7.i.i
  %put_buffer.0.lcssa.i.i = phi i64 [ %or.i.i, %if.end7.i.i ], [ %shl33.i.i.lcssa, %while.end.loopexit.i.i ]
  %put_bits.0.lcssa.i.i = phi i32 [ %add.i.i, %if.end7.i.i ], [ %105, %while.end.loopexit.i.i ]
  store i64 %put_buffer.0.lcssa.i.i, i64* %put_buffer11.i.i, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i.i, i32* %put_bits1.i.i, align 8, !tbaa !51
  br label %emit_bits.exit.i

emit_bits.exit.i:                                 ; preds = %while.end.i.i, %while.body.i
  %dec.i = add i32 %nbits.addr.0.i, -1
  %cmp.old.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.old.i, label %emit_buffered_bits.exit.loopexit, label %emit_bits.exit.while.body_crit_edge.i, !prof !90

emit_bits.exit.while.body_crit_edge.i:            ; preds = %emit_bits.exit.i
  %incdec.ptr.i = getelementptr inbounds i8, i8* %bufstart.addr.0.i, i64 1
  %.pre.i = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  br label %while.body.i

emit_buffered_bits.exit.loopexit:                 ; preds = %emit_bits.exit.i
  br label %emit_buffered_bits.exit

emit_buffered_bits.exit:                          ; preds = %emit_buffered_bits.exit.loopexit, %if.end.i
  store i32 0, i32* %BE.i, align 8, !tbaa !49
  br label %emit_eobrun.exit

emit_eobrun.exit:                                 ; preds = %entry, %emit_buffered_bits.exit
  tail call fastcc void @flush_bits(%struct.phuff_entropy_encoder* %1)
  %106 = bitcast %struct.jpeg_destination_mgr** %dest to <2 x i64>**
  %107 = load <2 x i64>*, <2 x i64>** %106, align 8, !tbaa !57
  %108 = bitcast i8** %next_output_byte2 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8, !tbaa !58
  store <2 x i64> %109, <2 x i64>* %107, align 8, !tbaa !58
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

declare void @jpeg_make_c_derived_tbl(%struct.jpeg_compress_struct*, %struct.JHUFF_TBL*, %struct.c_derived_tbl**) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_restart(%struct.phuff_entropy_encoder* %entropy, i32 %restart_num) unnamed_addr #0 !prof !117 {
entry:
  %EOBRUN.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 9
  %0 = load i32, i32* %EOBRUN.i, align 4, !tbaa !48
  %cmp.i = icmp eq i32 %0, 0
  br i1 %cmp.i, label %entry.emit_eobrun.exit_crit_edge, label %while.cond.i.preheader, !prof !104

while.cond.i.preheader:                           ; preds = %entry
  br label %while.cond.i

entry.emit_eobrun.exit_crit_edge:                 ; preds = %entry
  %.pre209 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 1
  br label %emit_eobrun.exit

while.cond.i:                                     ; preds = %while.cond.i.preheader, %while.cond.i
  %temp.0.i = phi i32 [ %shr.i, %while.cond.i ], [ %0, %while.cond.i.preheader ]
  %nbits.0.i = phi i32 [ %inc.i, %while.cond.i ], [ 0, %while.cond.i.preheader ]
  %shr.i = ashr i32 %temp.0.i, 1
  %tobool.i = icmp eq i32 %shr.i, 0
  %inc.i = add nuw nsw i32 %nbits.0.i, 1
  br i1 %tobool.i, label %while.end.i, label %while.cond.i, !prof !87

while.end.i:                                      ; preds = %while.cond.i
  %nbits.0.i.lcssa = phi i32 [ %nbits.0.i, %while.cond.i ]
  %ac_tbl_no.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 8
  %1 = load i32, i32* %ac_tbl_no.i, align 8, !tbaa !46
  %shl.i = shl i32 %nbits.0.i.lcssa, 4
  %gather_statistics.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 1
  %2 = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  %tobool.i.i = icmp eq i32 %2, 0
  br i1 %tobool.i.i, label %if.else.i.i, label %if.then.i.i, !prof !64

if.then.i.i:                                      ; preds = %while.end.i
  %idxprom.i.i = sext i32 %shl.i to i64
  %idxprom1.i.i = sext i32 %1 to i64
  %arrayidx.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 15, i64 %idxprom1.i.i
  %3 = load i64*, i64** %arrayidx.i.i, align 8, !tbaa !18
  %arrayidx2.i.i = getelementptr inbounds i64, i64* %3, i64 %idxprom.i.i
  %4 = load i64, i64* %arrayidx2.i.i, align 8, !tbaa !65
  %inc.i.i = add nsw i64 %4, 1
  store i64 %inc.i.i, i64* %arrayidx2.i.i, align 8, !tbaa !65
  br label %emit_symbol.exit.i

if.else.i.i:                                      ; preds = %while.end.i
  %idxprom3.i.i = sext i32 %1 to i64
  %arrayidx4.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 14, i64 %idxprom3.i.i
  %5 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i.i, align 8, !tbaa !18
  %idxprom5.i.i = sext i32 %shl.i to i64
  %arrayidx6.i.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %5, i64 0, i32 0, i64 %idxprom5.i.i
  %6 = load i32, i32* %arrayidx6.i.i, align 4, !tbaa !34
  %arrayidx8.i.i = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %5, i64 0, i32 1, i64 %idxprom5.i.i
  %7 = load i8, i8* %arrayidx8.i.i, align 1, !tbaa !58
  %conv.i.i = sext i8 %7 to i32
  %conv.i = zext i32 %6 to i64
  %put_bits1.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 5
  %8 = load i32, i32* %put_bits1.i, align 8, !tbaa !51
  %cmp.i68 = icmp eq i8 %7, 0
  br i1 %cmp.i68, label %if.end.i76, label %if.end7.i, !prof !66

if.end.i76:                                       ; preds = %if.else.i.i
  %cinfo.i69 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 6
  %9 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i69, align 8, !tbaa !21
  %err.i70 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %9, i64 0, i32 0
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i70, align 8, !tbaa !39
  %msg_code.i71 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 5
  store i32 39, i32* %msg_code.i71, align 8, !tbaa !40
  %error_exit.i72 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 0
  %11 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i72, align 8, !tbaa !42
  %12 = bitcast %struct.jpeg_compress_struct* %9 to %struct.jpeg_common_struct*
  tail call void %11(%struct.jpeg_common_struct* %12) #3
  %.pre = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  %tobool.i75 = icmp eq i32 %.pre, 0
  br i1 %tobool.i75, label %if.end7.i, label %emit_symbol.exit.i, !prof !67

if.end7.i:                                        ; preds = %if.else.i.i, %if.end.i76
  %sh_prom.i = zext i32 %conv.i.i to i64
  %shl.i77 = shl i64 1, %sh_prom.i
  %sub.i = add i64 %shl.i77, 4294967295
  %and.i = and i64 %sub.i, %conv.i
  %add.i = add i32 %8, %conv.i.i
  %sub8.i = sub nsw i32 24, %add.i
  %sh_prom9.i = zext i32 %sub8.i to i64
  %shl10.i = shl i64 %and.i, %sh_prom9.i
  %put_buffer11.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 4
  %13 = load i64, i64* %put_buffer11.i, align 8, !tbaa !50
  %or.i = or i64 %13, %shl10.i
  %cmp1267.i = icmp sgt i32 %add.i, 7
  br i1 %cmp1267.i, label %while.body.lr.ph.i, label %while.end.i82, !prof !68

while.body.lr.ph.i:                               ; preds = %if.end7.i
  %next_output_byte.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 2
  %free_in_buffer.i78 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 3
  %cinfo.i177 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 6
  %14 = bitcast i8** %next_output_byte.i to <2 x i64>*
  %15 = bitcast i8** %next_output_byte.i to <2 x i64>*
  br label %while.body.i81

while.body.i81:                                   ; preds = %if.end32.i, %while.body.lr.ph.i
  %put_buffer.069.i = phi i64 [ %or.i, %while.body.lr.ph.i ], [ %shl33.i, %if.end32.i ]
  %put_bits.068.i = phi i32 [ %add.i, %while.body.lr.ph.i ], [ %sub34.i, %if.end32.i ]
  %shr66.i = lshr i64 %put_buffer.069.i, 16
  %conv16.i = trunc i64 %shr66.i to i8
  %16 = load i8*, i8** %next_output_byte.i, align 8, !tbaa !69
  %incdec.ptr.i79 = getelementptr inbounds i8, i8* %16, i64 1
  store i8* %incdec.ptr.i79, i8** %next_output_byte.i, align 8, !tbaa !69
  store i8 %conv16.i, i8* %16, align 1, !tbaa !58
  %17 = load i64, i64* %free_in_buffer.i78, align 8, !tbaa !70
  %dec.i80 = add i64 %17, -1
  store i64 %dec.i80, i64* %free_in_buffer.i78, align 8, !tbaa !70
  %cmp17.i = icmp eq i64 %dec.i80, 0
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i, !prof !71

if.then19.i:                                      ; preds = %while.body.i81
  %18 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i177, align 8, !tbaa !21
  %dest1.i178 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %18, i64 0, i32 5
  %19 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i178, align 8, !tbaa !57
  %empty_output_buffer.i179 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %19, i64 0, i32 3
  %20 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i179, align 8, !tbaa !72
  %call.i180 = tail call i32 %20(%struct.jpeg_compress_struct* %18) #3
  %tobool.i181 = icmp eq i32 %call.i180, 0
  br i1 %tobool.i181, label %if.then.i185, label %dump_buffer.exit190, !prof !74

if.then.i185:                                     ; preds = %if.then19.i
  %21 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i177, align 8, !tbaa !21
  %err.i182 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %21, i64 0, i32 0
  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i182, align 8, !tbaa !39
  %msg_code.i183 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 5
  store i32 22, i32* %msg_code.i183, align 8, !tbaa !40
  %error_exit.i184 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 0
  %23 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i184, align 8, !tbaa !42
  %24 = bitcast %struct.jpeg_compress_struct* %21 to %struct.jpeg_common_struct*
  tail call void %23(%struct.jpeg_common_struct* %24) #3
  br label %dump_buffer.exit190

dump_buffer.exit190:                              ; preds = %if.then19.i, %if.then.i185
  %25 = bitcast %struct.jpeg_destination_mgr* %19 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8, !tbaa !58
  store <2 x i64> %26, <2 x i64>* %14, align 8, !tbaa !58
  br label %if.end20.i

if.end20.i:                                       ; preds = %dump_buffer.exit190, %while.body.i81
  %conv15.i = and i64 %shr66.i, 255
  %cmp21.i = icmp eq i64 %conv15.i, 255
  br i1 %cmp21.i, label %if.then23.i, label %if.end32.i, !prof !75

if.then23.i:                                      ; preds = %if.end20.i
  %27 = load i8*, i8** %next_output_byte.i, align 8, !tbaa !69
  %incdec.ptr25.i = getelementptr inbounds i8, i8* %27, i64 1
  store i8* %incdec.ptr25.i, i8** %next_output_byte.i, align 8, !tbaa !69
  store i8 0, i8* %27, align 1, !tbaa !58
  %28 = load i64, i64* %free_in_buffer.i78, align 8, !tbaa !70
  %dec27.i = add i64 %28, -1
  store i64 %dec27.i, i64* %free_in_buffer.i78, align 8, !tbaa !70
  %cmp28.i = icmp eq i64 %dec27.i, 0
  br i1 %cmp28.i, label %if.then30.i, label %if.end32.i, !prof !76

if.then30.i:                                      ; preds = %if.then23.i
  %29 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i177, align 8, !tbaa !21
  %dest1.i84 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %29, i64 0, i32 5
  %30 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i84, align 8, !tbaa !57
  %empty_output_buffer.i85 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %30, i64 0, i32 3
  %31 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i85, align 8, !tbaa !72
  %call.i86 = tail call i32 %31(%struct.jpeg_compress_struct* %29) #3
  %tobool.i87 = icmp eq i32 %call.i86, 0
  br i1 %tobool.i87, label %if.then.i91, label %dump_buffer.exit96, !prof !74

if.then.i91:                                      ; preds = %if.then30.i
  %32 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i177, align 8, !tbaa !21
  %err.i88 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %32, i64 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i88, align 8, !tbaa !39
  %msg_code.i89 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i64 0, i32 5
  store i32 22, i32* %msg_code.i89, align 8, !tbaa !40
  %error_exit.i90 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i64 0, i32 0
  %34 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i90, align 8, !tbaa !42
  %35 = bitcast %struct.jpeg_compress_struct* %32 to %struct.jpeg_common_struct*
  tail call void %34(%struct.jpeg_common_struct* %35) #3
  br label %dump_buffer.exit96

dump_buffer.exit96:                               ; preds = %if.then30.i, %if.then.i91
  %36 = bitcast %struct.jpeg_destination_mgr* %30 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8, !tbaa !58
  store <2 x i64> %37, <2 x i64>* %15, align 8, !tbaa !58
  br label %if.end32.i

if.end32.i:                                       ; preds = %dump_buffer.exit96, %if.then23.i, %if.end20.i
  %shl33.i = shl i64 %put_buffer.069.i, 8
  %sub34.i = add nsw i32 %put_bits.068.i, -8
  %cmp12.i = icmp sgt i32 %sub34.i, 7
  br i1 %cmp12.i, label %while.body.i81, label %while.end.loopexit.i, !prof !68

while.end.loopexit.i:                             ; preds = %if.end32.i
  %shl33.i.lcssa = phi i64 [ %shl33.i, %if.end32.i ]
  %38 = and i32 %add.i, 7
  br label %while.end.i82

while.end.i82:                                    ; preds = %while.end.loopexit.i, %if.end7.i
  %put_buffer.0.lcssa.i = phi i64 [ %or.i, %if.end7.i ], [ %shl33.i.lcssa, %while.end.loopexit.i ]
  %put_bits.0.lcssa.i = phi i32 [ %add.i, %if.end7.i ], [ %38, %while.end.loopexit.i ]
  store i64 %put_buffer.0.lcssa.i, i64* %put_buffer11.i, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i, i32* %put_bits1.i, align 8, !tbaa !51
  br label %emit_symbol.exit.i

emit_symbol.exit.i:                               ; preds = %while.end.i82, %if.end.i76, %if.then.i.i
  %tobool2.i = icmp eq i32 %nbits.0.i.lcssa, 0
  br i1 %tobool2.i, label %if.end.i, label %if.end.i107, !prof !88

if.end.i107:                                      ; preds = %emit_symbol.exit.i
  %put_bits1.i98 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 5
  %39 = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  %tobool.i106 = icmp eq i32 %39, 0
  br i1 %tobool.i106, label %if.end7.i119, label %if.end.i, !prof !78

if.end7.i119:                                     ; preds = %if.end.i107
  %40 = load i32, i32* %put_bits1.i98, align 8, !tbaa !51
  %41 = load i32, i32* %EOBRUN.i, align 4, !tbaa !48
  %conv.i97 = zext i32 %41 to i64
  %sh_prom.i108 = zext i32 %nbits.0.i.lcssa to i64
  %shl.i109 = shl i64 1, %sh_prom.i108
  %sub.i110 = add i64 %shl.i109, 4294967295
  %and.i111 = and i64 %conv.i97, %sub.i110
  %add.i112 = add i32 %40, %nbits.0.i.lcssa
  %sub8.i113 = sub nsw i32 24, %add.i112
  %sh_prom9.i114 = zext i32 %sub8.i113 to i64
  %shl10.i115 = shl i64 %and.i111, %sh_prom9.i114
  %put_buffer11.i116 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 4
  %42 = load i64, i64* %put_buffer11.i116, align 8, !tbaa !50
  %or.i117 = or i64 %shl10.i115, %42
  %cmp1267.i118 = icmp sgt i32 %add.i112, 7
  br i1 %cmp1267.i118, label %while.body.lr.ph.i122, label %while.end.i147, !prof !68

while.body.lr.ph.i122:                            ; preds = %if.end7.i119
  %next_output_byte.i120 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 2
  %free_in_buffer.i121 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 3
  %cinfo.i191 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 6
  %43 = bitcast i8** %next_output_byte.i120 to <2 x i64>*
  %44 = bitcast i8** %next_output_byte.i120 to <2 x i64>*
  br label %while.body.i130

while.body.i130:                                  ; preds = %if.end32.i143, %while.body.lr.ph.i122
  %put_buffer.069.i123 = phi i64 [ %or.i117, %while.body.lr.ph.i122 ], [ %shl33.i140, %if.end32.i143 ]
  %put_bits.068.i124 = phi i32 [ %add.i112, %while.body.lr.ph.i122 ], [ %sub34.i141, %if.end32.i143 ]
  %shr66.i125 = lshr i64 %put_buffer.069.i123, 16
  %conv16.i126 = trunc i64 %shr66.i125 to i8
  %45 = load i8*, i8** %next_output_byte.i120, align 8, !tbaa !69
  %incdec.ptr.i127 = getelementptr inbounds i8, i8* %45, i64 1
  store i8* %incdec.ptr.i127, i8** %next_output_byte.i120, align 8, !tbaa !69
  store i8 %conv16.i126, i8* %45, align 1, !tbaa !58
  %46 = load i64, i64* %free_in_buffer.i121, align 8, !tbaa !70
  %dec.i128 = add i64 %46, -1
  store i64 %dec.i128, i64* %free_in_buffer.i121, align 8, !tbaa !70
  %cmp17.i129 = icmp eq i64 %dec.i128, 0
  br i1 %cmp17.i129, label %if.then19.i131, label %if.end20.i134, !prof !71

if.then19.i131:                                   ; preds = %while.body.i130
  %47 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i191, align 8, !tbaa !21
  %dest1.i192 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %47, i64 0, i32 5
  %48 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i192, align 8, !tbaa !57
  %empty_output_buffer.i193 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %48, i64 0, i32 3
  %49 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i193, align 8, !tbaa !72
  %call.i194 = tail call i32 %49(%struct.jpeg_compress_struct* %47) #3
  %tobool.i195 = icmp eq i32 %call.i194, 0
  br i1 %tobool.i195, label %if.then.i199, label %dump_buffer.exit204, !prof !74

if.then.i199:                                     ; preds = %if.then19.i131
  %50 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i191, align 8, !tbaa !21
  %err.i196 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %50, i64 0, i32 0
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i196, align 8, !tbaa !39
  %msg_code.i197 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 5
  store i32 22, i32* %msg_code.i197, align 8, !tbaa !40
  %error_exit.i198 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 0
  %52 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i198, align 8, !tbaa !42
  %53 = bitcast %struct.jpeg_compress_struct* %50 to %struct.jpeg_common_struct*
  tail call void %52(%struct.jpeg_common_struct* %53) #3
  br label %dump_buffer.exit204

dump_buffer.exit204:                              ; preds = %if.then19.i131, %if.then.i199
  %54 = bitcast %struct.jpeg_destination_mgr* %48 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8, !tbaa !58
  store <2 x i64> %55, <2 x i64>* %43, align 8, !tbaa !58
  br label %if.end20.i134

if.end20.i134:                                    ; preds = %dump_buffer.exit204, %while.body.i130
  %conv15.i132 = and i64 %shr66.i125, 255
  %cmp21.i133 = icmp eq i64 %conv15.i132, 255
  br i1 %cmp21.i133, label %if.then23.i138, label %if.end32.i143, !prof !75

if.then23.i138:                                   ; preds = %if.end20.i134
  %56 = load i8*, i8** %next_output_byte.i120, align 8, !tbaa !69
  %incdec.ptr25.i135 = getelementptr inbounds i8, i8* %56, i64 1
  store i8* %incdec.ptr25.i135, i8** %next_output_byte.i120, align 8, !tbaa !69
  store i8 0, i8* %56, align 1, !tbaa !58
  %57 = load i64, i64* %free_in_buffer.i121, align 8, !tbaa !70
  %dec27.i136 = add i64 %57, -1
  store i64 %dec27.i136, i64* %free_in_buffer.i121, align 8, !tbaa !70
  %cmp28.i137 = icmp eq i64 %dec27.i136, 0
  br i1 %cmp28.i137, label %if.then30.i139, label %if.end32.i143, !prof !76

if.then30.i139:                                   ; preds = %if.then23.i138
  %58 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i191, align 8, !tbaa !21
  %dest1.i150 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %58, i64 0, i32 5
  %59 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i150, align 8, !tbaa !57
  %empty_output_buffer.i151 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %59, i64 0, i32 3
  %60 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i151, align 8, !tbaa !72
  %call.i152 = tail call i32 %60(%struct.jpeg_compress_struct* %58) #3
  %tobool.i153 = icmp eq i32 %call.i152, 0
  br i1 %tobool.i153, label %if.then.i157, label %dump_buffer.exit162, !prof !74

if.then.i157:                                     ; preds = %if.then30.i139
  %61 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i191, align 8, !tbaa !21
  %err.i154 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %61, i64 0, i32 0
  %62 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i154, align 8, !tbaa !39
  %msg_code.i155 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %62, i64 0, i32 5
  store i32 22, i32* %msg_code.i155, align 8, !tbaa !40
  %error_exit.i156 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %62, i64 0, i32 0
  %63 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i156, align 8, !tbaa !42
  %64 = bitcast %struct.jpeg_compress_struct* %61 to %struct.jpeg_common_struct*
  tail call void %63(%struct.jpeg_common_struct* %64) #3
  br label %dump_buffer.exit162

dump_buffer.exit162:                              ; preds = %if.then30.i139, %if.then.i157
  %65 = bitcast %struct.jpeg_destination_mgr* %59 to <2 x i64>*
  %66 = load <2 x i64>, <2 x i64>* %65, align 8, !tbaa !58
  store <2 x i64> %66, <2 x i64>* %44, align 8, !tbaa !58
  br label %if.end32.i143

if.end32.i143:                                    ; preds = %dump_buffer.exit162, %if.then23.i138, %if.end20.i134
  %shl33.i140 = shl i64 %put_buffer.069.i123, 8
  %sub34.i141 = add nsw i32 %put_bits.068.i124, -8
  %cmp12.i142 = icmp sgt i32 %sub34.i141, 7
  br i1 %cmp12.i142, label %while.body.i130, label %while.end.loopexit.i144, !prof !68

while.end.loopexit.i144:                          ; preds = %if.end32.i143
  %shl33.i140.lcssa = phi i64 [ %shl33.i140, %if.end32.i143 ]
  %67 = and i32 %add.i112, 7
  br label %while.end.i147

while.end.i147:                                   ; preds = %while.end.loopexit.i144, %if.end7.i119
  %put_buffer.0.lcssa.i145 = phi i64 [ %or.i117, %if.end7.i119 ], [ %shl33.i140.lcssa, %while.end.loopexit.i144 ]
  %put_bits.0.lcssa.i146 = phi i32 [ %add.i112, %if.end7.i119 ], [ %67, %while.end.loopexit.i144 ]
  store i64 %put_buffer.0.lcssa.i145, i64* %put_buffer11.i116, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i146, i32* %put_bits1.i98, align 8, !tbaa !51
  br label %if.end.i

if.end.i:                                         ; preds = %while.end.i147, %if.end.i107, %emit_symbol.exit.i
  store i32 0, i32* %EOBRUN.i, align 4, !tbaa !48
  %BE.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 10
  %68 = load i32, i32* %BE.i, align 8, !tbaa !49
  %69 = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  %tobool.i34 = icmp eq i32 %69, 0
  %cmp.i35 = icmp ne i32 %68, 0
  %or.cond.i = and i1 %cmp.i35, %tobool.i34
  br i1 %or.cond.i, label %while.body.preheader.i, label %emit_buffered_bits.exit, !prof !89

while.body.preheader.i:                           ; preds = %if.end.i
  %bit_buffer.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 11
  %70 = load i8*, i8** %bit_buffer.i, align 8, !tbaa !19
  %put_bits1.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 5
  %put_buffer11.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 4
  %next_output_byte.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 2
  %free_in_buffer.i.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 3
  %cinfo.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 6
  %71 = bitcast i8** %next_output_byte.i.i to <2 x i64>*
  %72 = bitcast i8** %next_output_byte.i.i to <2 x i64>*
  br label %while.body.i

while.body.i:                                     ; preds = %emit_bits.exit.while.body_crit_edge.i, %while.body.preheader.i
  %73 = phi i32 [ %.pre.i, %emit_bits.exit.while.body_crit_edge.i ], [ 0, %while.body.preheader.i ]
  %bufstart.addr.0.i = phi i8* [ %incdec.ptr.i, %emit_bits.exit.while.body_crit_edge.i ], [ %70, %while.body.preheader.i ]
  %nbits.addr.0.i = phi i32 [ %dec.i, %emit_bits.exit.while.body_crit_edge.i ], [ %68, %while.body.preheader.i ]
  %tobool.i.i36 = icmp eq i32 %73, 0
  br i1 %tobool.i.i36, label %if.end7.i.i, label %emit_bits.exit.i, !prof !78

if.end7.i.i:                                      ; preds = %while.body.i
  %74 = load i32, i32* %put_bits1.i.i, align 8, !tbaa !51
  %75 = load i8, i8* %bufstart.addr.0.i, align 1, !tbaa !58
  %conv5.i = zext i8 %75 to i64
  %and.i.i = and i64 %conv5.i, 1
  %add.i.i = add i32 %74, 1
  %sub8.i.i = sub i32 23, %74
  %sh_prom9.i.i = zext i32 %sub8.i.i to i64
  %shl10.i.i = shl i64 %and.i.i, %sh_prom9.i.i
  %76 = load i64, i64* %put_buffer11.i.i, align 8, !tbaa !50
  %or.i.i = or i64 %shl10.i.i, %76
  %cmp1267.i.i = icmp sgt i32 %add.i.i, 7
  br i1 %cmp1267.i.i, label %while.body.i.i.preheader, label %while.end.i.i, !prof !68

while.body.i.i.preheader:                         ; preds = %if.end7.i.i
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i.preheader, %if.end32.i.i
  %put_buffer.069.i.i = phi i64 [ %shl33.i.i, %if.end32.i.i ], [ %or.i.i, %while.body.i.i.preheader ]
  %put_bits.068.i.i = phi i32 [ %sub34.i.i, %if.end32.i.i ], [ %add.i.i, %while.body.i.i.preheader ]
  %shr66.i.i = lshr i64 %put_buffer.069.i.i, 16
  %conv16.i.i = trunc i64 %shr66.i.i to i8
  %77 = load i8*, i8** %next_output_byte.i.i, align 8, !tbaa !69
  %incdec.ptr.i.i = getelementptr inbounds i8, i8* %77, i64 1
  store i8* %incdec.ptr.i.i, i8** %next_output_byte.i.i, align 8, !tbaa !69
  store i8 %conv16.i.i, i8* %77, align 1, !tbaa !58
  %78 = load i64, i64* %free_in_buffer.i.i, align 8, !tbaa !70
  %dec.i.i = add i64 %78, -1
  store i64 %dec.i.i, i64* %free_in_buffer.i.i, align 8, !tbaa !70
  %cmp17.i.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp17.i.i, label %if.then19.i.i, label %if.end20.i.i, !prof !71

if.then19.i.i:                                    ; preds = %while.body.i.i
  %79 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %dest1.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %79, i64 0, i32 5
  %80 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i, align 8, !tbaa !57
  %empty_output_buffer.i = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %80, i64 0, i32 3
  %81 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i, align 8, !tbaa !72
  %call.i = tail call i32 %81(%struct.jpeg_compress_struct* %79) #3
  %tobool.i38 = icmp eq i32 %call.i, 0
  br i1 %tobool.i38, label %if.then.i, label %dump_buffer.exit, !prof !74

if.then.i:                                        ; preds = %if.then19.i.i
  %82 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %err.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %82, i64 0, i32 0
  %83 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !39
  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %83, i64 0, i32 5
  store i32 22, i32* %msg_code.i, align 8, !tbaa !40
  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %83, i64 0, i32 0
  %84 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !42
  %85 = bitcast %struct.jpeg_compress_struct* %82 to %struct.jpeg_common_struct*
  tail call void %84(%struct.jpeg_common_struct* %85) #3
  br label %dump_buffer.exit

dump_buffer.exit:                                 ; preds = %if.then19.i.i, %if.then.i
  %86 = bitcast %struct.jpeg_destination_mgr* %80 to <2 x i64>*
  %87 = load <2 x i64>, <2 x i64>* %86, align 8, !tbaa !58
  store <2 x i64> %87, <2 x i64>* %71, align 8, !tbaa !58
  br label %if.end20.i.i

if.end20.i.i:                                     ; preds = %dump_buffer.exit, %while.body.i.i
  %conv15.i.i = and i64 %shr66.i.i, 255
  %cmp21.i.i = icmp eq i64 %conv15.i.i, 255
  br i1 %cmp21.i.i, label %if.then23.i.i, label %if.end32.i.i, !prof !75

if.then23.i.i:                                    ; preds = %if.end20.i.i
  %88 = load i8*, i8** %next_output_byte.i.i, align 8, !tbaa !69
  %incdec.ptr25.i.i = getelementptr inbounds i8, i8* %88, i64 1
  store i8* %incdec.ptr25.i.i, i8** %next_output_byte.i.i, align 8, !tbaa !69
  store i8 0, i8* %88, align 1, !tbaa !58
  %89 = load i64, i64* %free_in_buffer.i.i, align 8, !tbaa !70
  %dec27.i.i = add i64 %89, -1
  store i64 %dec27.i.i, i64* %free_in_buffer.i.i, align 8, !tbaa !70
  %cmp28.i.i = icmp eq i64 %dec27.i.i, 0
  br i1 %cmp28.i.i, label %if.then30.i.i, label %if.end32.i.i, !prof !76

if.then30.i.i:                                    ; preds = %if.then23.i.i
  %90 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %dest1.i164 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %90, i64 0, i32 5
  %91 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i164, align 8, !tbaa !57
  %empty_output_buffer.i165 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %91, i64 0, i32 3
  %92 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i165, align 8, !tbaa !72
  %call.i166 = tail call i32 %92(%struct.jpeg_compress_struct* %90) #3
  %tobool.i167 = icmp eq i32 %call.i166, 0
  br i1 %tobool.i167, label %if.then.i171, label %dump_buffer.exit176, !prof !74

if.then.i171:                                     ; preds = %if.then30.i.i
  %93 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i, align 8, !tbaa !21
  %err.i168 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %93, i64 0, i32 0
  %94 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i168, align 8, !tbaa !39
  %msg_code.i169 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %94, i64 0, i32 5
  store i32 22, i32* %msg_code.i169, align 8, !tbaa !40
  %error_exit.i170 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %94, i64 0, i32 0
  %95 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i170, align 8, !tbaa !42
  %96 = bitcast %struct.jpeg_compress_struct* %93 to %struct.jpeg_common_struct*
  tail call void %95(%struct.jpeg_common_struct* %96) #3
  br label %dump_buffer.exit176

dump_buffer.exit176:                              ; preds = %if.then30.i.i, %if.then.i171
  %97 = bitcast %struct.jpeg_destination_mgr* %91 to <2 x i64>*
  %98 = load <2 x i64>, <2 x i64>* %97, align 8, !tbaa !58
  store <2 x i64> %98, <2 x i64>* %72, align 8, !tbaa !58
  br label %if.end32.i.i

if.end32.i.i:                                     ; preds = %dump_buffer.exit176, %if.then23.i.i, %if.end20.i.i
  %shl33.i.i = shl i64 %put_buffer.069.i.i, 8
  %sub34.i.i = add nsw i32 %put_bits.068.i.i, -8
  %cmp12.i.i = icmp sgt i32 %sub34.i.i, 7
  br i1 %cmp12.i.i, label %while.body.i.i, label %while.end.loopexit.i.i, !prof !68

while.end.loopexit.i.i:                           ; preds = %if.end32.i.i
  %shl33.i.i.lcssa = phi i64 [ %shl33.i.i, %if.end32.i.i ]
  %99 = and i32 %add.i.i, 7
  br label %while.end.i.i

while.end.i.i:                                    ; preds = %while.end.loopexit.i.i, %if.end7.i.i
  %put_buffer.0.lcssa.i.i = phi i64 [ %or.i.i, %if.end7.i.i ], [ %shl33.i.i.lcssa, %while.end.loopexit.i.i ]
  %put_bits.0.lcssa.i.i = phi i32 [ %add.i.i, %if.end7.i.i ], [ %99, %while.end.loopexit.i.i ]
  store i64 %put_buffer.0.lcssa.i.i, i64* %put_buffer11.i.i, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i.i, i32* %put_bits1.i.i, align 8, !tbaa !51
  br label %emit_bits.exit.i

emit_bits.exit.i:                                 ; preds = %while.end.i.i, %while.body.i
  %dec.i = add i32 %nbits.addr.0.i, -1
  %cmp.old.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.old.i, label %emit_buffered_bits.exit.loopexit, label %emit_bits.exit.while.body_crit_edge.i, !prof !90

emit_bits.exit.while.body_crit_edge.i:            ; preds = %emit_bits.exit.i
  %incdec.ptr.i = getelementptr inbounds i8, i8* %bufstart.addr.0.i, i64 1
  %.pre.i = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !22
  br label %while.body.i

emit_buffered_bits.exit.loopexit:                 ; preds = %emit_bits.exit.i
  br label %emit_buffered_bits.exit

emit_buffered_bits.exit:                          ; preds = %emit_buffered_bits.exit.loopexit, %if.end.i
  store i32 0, i32* %BE.i, align 8, !tbaa !49
  br label %emit_eobrun.exit

emit_eobrun.exit:                                 ; preds = %entry.emit_eobrun.exit_crit_edge, %emit_buffered_bits.exit
  %gather_statistics.pre-phi = phi i32* [ %.pre209, %entry.emit_eobrun.exit_crit_edge ], [ %gather_statistics.i.i, %emit_buffered_bits.exit ]
  %100 = load i32, i32* %gather_statistics.pre-phi, align 8, !tbaa !22
  %tobool = icmp eq i32 %100, 0
  br i1 %tobool, label %if.then, label %if.end10

if.then:                                          ; preds = %emit_eobrun.exit
  tail call fastcc void @flush_bits(%struct.phuff_entropy_encoder* nonnull %entropy)
  %next_output_byte = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 2
  %101 = load i8*, i8** %next_output_byte, align 8, !tbaa !69
  %incdec.ptr = getelementptr inbounds i8, i8* %101, i64 1
  store i8* %incdec.ptr, i8** %next_output_byte, align 8, !tbaa !69
  store i8 -1, i8* %101, align 1, !tbaa !58
  %free_in_buffer = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 3
  %102 = load i64, i64* %free_in_buffer, align 8, !tbaa !70
  %dec = add i64 %102, -1
  store i64 %dec, i64* %free_in_buffer, align 8, !tbaa !70
  %cmp = icmp eq i64 %dec, 0
  br i1 %cmp, label %if.then1, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  %.pre208 = load i8*, i8** %next_output_byte, align 8, !tbaa !69
  br label %if.end

if.then1:                                         ; preds = %if.then
  %cinfo.i40 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 6
  %103 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i40, align 8, !tbaa !21
  %dest1.i41 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %103, i64 0, i32 5
  %104 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i41, align 8, !tbaa !57
  %empty_output_buffer.i42 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %104, i64 0, i32 3
  %105 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i42, align 8, !tbaa !72
  %call.i43 = tail call i32 %105(%struct.jpeg_compress_struct* %103) #3
  %tobool.i44 = icmp eq i32 %call.i43, 0
  br i1 %tobool.i44, label %if.then.i48, label %dump_buffer.exit53, !prof !74

if.then.i48:                                      ; preds = %if.then1
  %106 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i40, align 8, !tbaa !21
  %err.i45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %106, i64 0, i32 0
  %107 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i45, align 8, !tbaa !39
  %msg_code.i46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %107, i64 0, i32 5
  store i32 22, i32* %msg_code.i46, align 8, !tbaa !40
  %error_exit.i47 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %107, i64 0, i32 0
  %108 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i47, align 8, !tbaa !42
  %109 = bitcast %struct.jpeg_compress_struct* %106 to %struct.jpeg_common_struct*
  tail call void %108(%struct.jpeg_common_struct* %109) #3
  br label %dump_buffer.exit53

dump_buffer.exit53:                               ; preds = %if.then1, %if.then.i48
  %110 = bitcast %struct.jpeg_destination_mgr* %104 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !tbaa !58
  %112 = bitcast i8** %next_output_byte to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %112, align 8, !tbaa !58
  %113 = extractelement <2 x i64> %111, i32 0
  %114 = inttoptr i64 %113 to i8*
  br label %if.end

if.end:                                           ; preds = %if.then.if.end_crit_edge, %dump_buffer.exit53
  %115 = phi i8* [ %.pre208, %if.then.if.end_crit_edge ], [ %114, %dump_buffer.exit53 ]
  %add = add nsw i32 %restart_num, 208
  %conv = trunc i32 %add to i8
  %incdec.ptr3 = getelementptr inbounds i8, i8* %115, i64 1
  store i8* %incdec.ptr3, i8** %next_output_byte, align 8, !tbaa !69
  store i8 %conv, i8* %115, align 1, !tbaa !58
  %116 = load i64, i64* %free_in_buffer, align 8, !tbaa !70
  %dec5 = add i64 %116, -1
  store i64 %dec5, i64* %free_in_buffer, align 8, !tbaa !70
  %cmp6 = icmp eq i64 %dec5, 0
  br i1 %cmp6, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end
  %cinfo.i54 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 6
  %117 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i54, align 8, !tbaa !21
  %dest1.i55 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %117, i64 0, i32 5
  %118 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i55, align 8, !tbaa !57
  %empty_output_buffer.i56 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %118, i64 0, i32 3
  %119 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i56, align 8, !tbaa !72
  %call.i57 = tail call i32 %119(%struct.jpeg_compress_struct* %117) #3
  %tobool.i58 = icmp eq i32 %call.i57, 0
  br i1 %tobool.i58, label %if.then.i62, label %dump_buffer.exit67, !prof !74

if.then.i62:                                      ; preds = %if.then8
  %120 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i54, align 8, !tbaa !21
  %err.i59 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %120, i64 0, i32 0
  %121 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i59, align 8, !tbaa !39
  %msg_code.i60 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %121, i64 0, i32 5
  store i32 22, i32* %msg_code.i60, align 8, !tbaa !40
  %error_exit.i61 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %121, i64 0, i32 0
  %122 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i61, align 8, !tbaa !42
  %123 = bitcast %struct.jpeg_compress_struct* %120 to %struct.jpeg_common_struct*
  tail call void %122(%struct.jpeg_common_struct* %123) #3
  br label %dump_buffer.exit67

dump_buffer.exit67:                               ; preds = %if.then8, %if.then.i62
  %124 = bitcast %struct.jpeg_destination_mgr* %118 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !tbaa !58
  %126 = bitcast i8** %next_output_byte to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %126, align 8, !tbaa !58
  br label %if.end10

if.end10:                                         ; preds = %emit_eobrun.exit, %if.end, %dump_buffer.exit67
  %cinfo = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 6
  %127 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo, align 8, !tbaa !21
  %Ss = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %127, i64 0, i32 47
  %128 = load i32, i32* %Ss, align 4, !tbaa !23
  %cmp11 = icmp eq i32 %128, 0
  br i1 %cmp11, label %for.cond.preheader, label %if.else

for.cond.preheader:                               ; preds = %if.end10
  %comps_in_scan205 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %127, i64 0, i32 41
  %129 = load i32, i32* %comps_in_scan205, align 4, !tbaa !31
  %cmp15206 = icmp sgt i32 %129, 0
  br i1 %cmp15206, label %for.body.preheader, label %if.end17

for.body.preheader:                               ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 7, i64 %indvars.iv
  store i32 0, i32* %arrayidx, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %130 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo, align 8, !tbaa !21
  %comps_in_scan = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %130, i64 0, i32 41
  %131 = load i32, i32* %comps_in_scan, align 4, !tbaa !31
  %132 = sext i32 %131 to i64
  %cmp15 = icmp slt i64 %indvars.iv.next, %132
  br i1 %cmp15, label %for.body, label %if.end17.loopexit

if.else:                                          ; preds = %if.end10
  store i32 0, i32* %EOBRUN.i, align 4, !tbaa !48
  %BE = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 10
  store i32 0, i32* %BE, align 8, !tbaa !49
  br label %if.end17

if.end17.loopexit:                                ; preds = %for.body
  br label %if.end17

if.end17:                                         ; preds = %if.end17.loopexit, %for.cond.preheader, %if.else
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @flush_bits(%struct.phuff_entropy_encoder* nocapture %entropy) unnamed_addr #0 !prof !116 {
entry:
  %put_bits1.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 5
  %gather_statistics.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 1
  %0 = load i32, i32* %gather_statistics.i, align 8, !tbaa !22
  %tobool.i = icmp eq i32 %0, 0
  br i1 %tobool.i, label %if.end7.i, label %entry.emit_bits.exit_crit_edge, !prof !78

entry.emit_bits.exit_crit_edge:                   ; preds = %entry
  %.pre = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 4
  br label %emit_bits.exit

if.end7.i:                                        ; preds = %entry
  %1 = load i32, i32* %put_bits1.i, align 8, !tbaa !51
  %add.i = add i32 %1, 7
  %sub8.i = sub i32 17, %1
  %sh_prom9.i = zext i32 %sub8.i to i64
  %shl10.i = shl i64 127, %sh_prom9.i
  %put_buffer11.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 4
  %2 = load i64, i64* %put_buffer11.i, align 8, !tbaa !50
  %or.i = or i64 %shl10.i, %2
  %cmp1267.i = icmp sgt i32 %add.i, 7
  br i1 %cmp1267.i, label %while.body.lr.ph.i, label %while.end.i, !prof !68

while.body.lr.ph.i:                               ; preds = %if.end7.i
  %next_output_byte.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 2
  %free_in_buffer.i = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 3
  %cinfo.i5 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %entropy, i64 0, i32 6
  %3 = bitcast i8** %next_output_byte.i to <2 x i64>*
  %4 = bitcast i8** %next_output_byte.i to <2 x i64>*
  br label %while.body.i

while.body.i:                                     ; preds = %if.end32.i, %while.body.lr.ph.i
  %put_buffer.069.i = phi i64 [ %or.i, %while.body.lr.ph.i ], [ %shl33.i, %if.end32.i ]
  %put_bits.068.i = phi i32 [ %add.i, %while.body.lr.ph.i ], [ %sub34.i, %if.end32.i ]
  %shr66.i = lshr i64 %put_buffer.069.i, 16
  %conv16.i = trunc i64 %shr66.i to i8
  %5 = load i8*, i8** %next_output_byte.i, align 8, !tbaa !69
  %incdec.ptr.i = getelementptr inbounds i8, i8* %5, i64 1
  store i8* %incdec.ptr.i, i8** %next_output_byte.i, align 8, !tbaa !69
  store i8 %conv16.i, i8* %5, align 1, !tbaa !58
  %6 = load i64, i64* %free_in_buffer.i, align 8, !tbaa !70
  %dec.i = add i64 %6, -1
  store i64 %dec.i, i64* %free_in_buffer.i, align 8, !tbaa !70
  %cmp17.i = icmp eq i64 %dec.i, 0
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i, !prof !71

if.then19.i:                                      ; preds = %while.body.i
  %7 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i5, align 8, !tbaa !21
  %dest1.i6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %7, i64 0, i32 5
  %8 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i6, align 8, !tbaa !57
  %empty_output_buffer.i7 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %8, i64 0, i32 3
  %9 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i7, align 8, !tbaa !72
  %call.i8 = tail call i32 %9(%struct.jpeg_compress_struct* %7) #3
  %tobool.i9 = icmp eq i32 %call.i8, 0
  br i1 %tobool.i9, label %if.then.i13, label %dump_buffer.exit17, !prof !74

if.then.i13:                                      ; preds = %if.then19.i
  %10 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i5, align 8, !tbaa !21
  %err.i10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %10, i64 0, i32 0
  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i10, align 8, !tbaa !39
  %msg_code.i11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 5
  store i32 22, i32* %msg_code.i11, align 8, !tbaa !40
  %error_exit.i12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 0
  %12 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i12, align 8, !tbaa !42
  %13 = bitcast %struct.jpeg_compress_struct* %10 to %struct.jpeg_common_struct*
  tail call void %12(%struct.jpeg_common_struct* %13) #3
  br label %dump_buffer.exit17

dump_buffer.exit17:                               ; preds = %if.then19.i, %if.then.i13
  %14 = bitcast %struct.jpeg_destination_mgr* %8 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 8, !tbaa !58
  store <2 x i64> %15, <2 x i64>* %3, align 8, !tbaa !58
  br label %if.end20.i

if.end20.i:                                       ; preds = %dump_buffer.exit17, %while.body.i
  %conv15.i = and i64 %shr66.i, 255
  %cmp21.i = icmp eq i64 %conv15.i, 255
  br i1 %cmp21.i, label %if.then23.i, label %if.end32.i, !prof !75

if.then23.i:                                      ; preds = %if.end20.i
  %16 = load i8*, i8** %next_output_byte.i, align 8, !tbaa !69
  %incdec.ptr25.i = getelementptr inbounds i8, i8* %16, i64 1
  store i8* %incdec.ptr25.i, i8** %next_output_byte.i, align 8, !tbaa !69
  store i8 0, i8* %16, align 1, !tbaa !58
  %17 = load i64, i64* %free_in_buffer.i, align 8, !tbaa !70
  %dec27.i = add i64 %17, -1
  store i64 %dec27.i, i64* %free_in_buffer.i, align 8, !tbaa !70
  %cmp28.i = icmp eq i64 %dec27.i, 0
  br i1 %cmp28.i, label %if.then30.i, label %if.end32.i, !prof !76

if.then30.i:                                      ; preds = %if.then23.i
  %18 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i5, align 8, !tbaa !21
  %dest1.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %18, i64 0, i32 5
  %19 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %dest1.i, align 8, !tbaa !57
  %empty_output_buffer.i = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %19, i64 0, i32 3
  %20 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %empty_output_buffer.i, align 8, !tbaa !72
  %call.i = tail call i32 %20(%struct.jpeg_compress_struct* %18) #3
  %tobool.i3 = icmp eq i32 %call.i, 0
  br i1 %tobool.i3, label %if.then.i, label %dump_buffer.exit, !prof !74

if.then.i:                                        ; preds = %if.then30.i
  %21 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %cinfo.i5, align 8, !tbaa !21
  %err.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %21, i64 0, i32 0
  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !39
  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 5
  store i32 22, i32* %msg_code.i, align 8, !tbaa !40
  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 0
  %23 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !42
  %24 = bitcast %struct.jpeg_compress_struct* %21 to %struct.jpeg_common_struct*
  tail call void %23(%struct.jpeg_common_struct* %24) #3
  br label %dump_buffer.exit

dump_buffer.exit:                                 ; preds = %if.then30.i, %if.then.i
  %25 = bitcast %struct.jpeg_destination_mgr* %19 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8, !tbaa !58
  store <2 x i64> %26, <2 x i64>* %4, align 8, !tbaa !58
  br label %if.end32.i

if.end32.i:                                       ; preds = %dump_buffer.exit, %if.then23.i, %if.end20.i
  %shl33.i = shl i64 %put_buffer.069.i, 8
  %sub34.i = add nsw i32 %put_bits.068.i, -8
  %cmp12.i = icmp sgt i32 %sub34.i, 7
  br i1 %cmp12.i, label %while.body.i, label %while.end.loopexit.i, !prof !68

while.end.loopexit.i:                             ; preds = %if.end32.i
  %shl33.i.lcssa = phi i64 [ %shl33.i, %if.end32.i ]
  %27 = and i32 %add.i, 7
  br label %while.end.i

while.end.i:                                      ; preds = %while.end.loopexit.i, %if.end7.i
  %put_buffer.0.lcssa.i = phi i64 [ %or.i, %if.end7.i ], [ %shl33.i.lcssa, %while.end.loopexit.i ]
  %put_bits.0.lcssa.i = phi i32 [ %add.i, %if.end7.i ], [ %27, %while.end.loopexit.i ]
  store i64 %put_buffer.0.lcssa.i, i64* %put_buffer11.i, align 8, !tbaa !50
  store i32 %put_bits.0.lcssa.i, i32* %put_bits1.i, align 8, !tbaa !51
  br label %emit_bits.exit

emit_bits.exit:                                   ; preds = %entry.emit_bits.exit_crit_edge, %while.end.i
  %put_buffer.pre-phi = phi i64* [ %.pre, %entry.emit_bits.exit_crit_edge ], [ %put_buffer11.i, %while.end.i ]
  store i64 0, i64* %put_buffer.pre-phi, align 8, !tbaa !50
  store i32 0, i32* %put_bits1.i, align 8, !tbaa !51
  ret void
}

declare %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct*) #2

declare void @jpeg_gen_optimal_table(%struct.jpeg_compress_struct*, %struct.JHUFF_TBL*, i64*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"MaxFunctionCount", i32 150581}
!1 = !{!"clang version 3.8.0 (trunk 257473)"}
!2 = !{!"function_entry_count", i64 1}
!3 = !{!4, !5, i64 8}
!4 = !{!"jpeg_compress_struct", !5, i64 0, !5, i64 8, !5, i64 16, !8, i64 24, !8, i64 28, !5, i64 32, !8, i64 40, !8, i64 44, !8, i64 48, !6, i64 52, !9, i64 56, !8, i64 64, !8, i64 68, !6, i64 72, !5, i64 80, !6, i64 88, !6, i64 120, !6, i64 152, !6, i64 184, !6, i64 200, !6, i64 216, !8, i64 232, !5, i64 240, !8, i64 248, !8, i64 252, !8, i64 256, !8, i64 260, !8, i64 264, !6, i64 268, !8, i64 272, !8, i64 276, !8, i64 280, !6, i64 284, !10, i64 286, !10, i64 288, !8, i64 292, !8, i64 296, !8, i64 300, !8, i64 304, !8, i64 308, !8, i64 312, !8, i64 316, !6, i64 320, !8, i64 352, !8, i64 356, !8, i64 360, !6, i64 364, !8, i64 404, !8, i64 408, !8, i64 412, !8, i64 416, !5, i64 424, !5, i64 432, !5, i64 440, !5, i64 448, !5, i64 456, !5, i64 464, !5, i64 472, !5, i64 480, !5, i64 488}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = !{!"int", !6, i64 0}
!9 = !{!"double", !6, i64 0}
!10 = !{!"short", !6, i64 0}
!11 = !{!12, !5, i64 0}
!12 = !{!"jpeg_memory_mgr", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !5, i64 32, !5, i64 40, !5, i64 48, !5, i64 56, !5, i64 64, !5, i64 72, !5, i64 80, !13, i64 88}
!13 = !{!"long", !6, i64 0}
!14 = !{!4, !5, i64 488}
!15 = !{!16, !5, i64 0}
!16 = !{!"", !17, i64 0, !8, i64 24, !5, i64 32, !13, i64 40, !13, i64 48, !8, i64 56, !5, i64 64, !6, i64 72, !8, i64 88, !8, i64 92, !8, i64 96, !5, i64 104, !8, i64 112, !8, i64 116, !6, i64 120, !6, i64 152}
!17 = !{!"jpeg_entropy_encoder", !5, i64 0, !5, i64 8, !5, i64 16}
!18 = !{!5, !5, i64 0}
!19 = !{!16, !5, i64 104}
!20 = !{!"function_entry_count", i64 19}
!21 = !{!16, !5, i64 64}
!22 = !{!16, !8, i64 24}
!23 = !{!4, !8, i64 404}
!24 = !{!4, !8, i64 412}
!25 = !{!"branch_weights", i32 11, i32 10}
!26 = !{!"branch_weights", i32 3, i32 9}
!27 = !{!16, !5, i64 8}
!28 = !{!"branch_weights", i32 2, i32 9}
!29 = !{!"branch_weights", i32 2, i32 8}
!30 = !{!16, !5, i64 16}
!31 = !{!4, !8, i64 316}
!32 = !{!"branch_weights", i32 26, i32 20}
!33 = !{!"branch_weights", i32 10, i32 17}
!34 = !{!8, !8, i64 0}
!35 = !{!"branch_weights", i32 7, i32 4}
!36 = !{!37, !8, i64 20}
!37 = !{!"", !8, i64 0, !8, i64 4, !8, i64 8, !8, i64 12, !8, i64 16, !8, i64 20, !8, i64 24, !8, i64 28, !8, i64 32, !8, i64 36, !8, i64 40, !8, i64 44, !8, i64 48, !8, i64 52, !8, i64 56, !8, i64 60, !8, i64 64, !8, i64 68, !8, i64 72, !5, i64 80, !5, i64 88}
!38 = !{!"branch_weights", i32 15, i32 49}
!39 = !{!4, !5, i64 0}
!40 = !{!41, !8, i64 40}
!41 = !{!"jpeg_error_mgr", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !5, i64 32, !8, i64 40, !6, i64 44, !8, i64 124, !13, i64 128, !5, i64 136, !8, i64 144, !5, i64 152, !8, i64 160, !8, i64 164}
!42 = !{!41, !5, i64 0}
!43 = !{!"branch_weights", i32 12, i32 12}
!44 = !{!"branch_weights", i32 3, i32 10}
!45 = !{!37, !8, i64 24}
!46 = !{!16, !8, i64 88}
!47 = !{!"branch_weights", i32 35, i32 289}
!48 = !{!16, !8, i64 92}
!49 = !{!16, !8, i64 96}
!50 = !{!16, !13, i64 48}
!51 = !{!16, !8, i64 56}
!52 = !{!4, !8, i64 272}
!53 = !{!16, !8, i64 112}
!54 = !{!16, !8, i64 116}
!55 = !{!"function_entry_count", i64 2048}
!56 = !{!4, !8, i64 416}
!57 = !{!4, !5, i64 32}
!58 = !{!6, !6, i64 0}
!59 = !{!"branch_weights", i32 2049, i32 1}
!60 = !{!4, !8, i64 360}
!61 = !{!"branch_weights", i32 12289, i32 2049}
!62 = !{!10, !10, i64 0}
!63 = !{!"branch_weights", i32 12289, i32 13605}
!64 = !{!"branch_weights", i32 46267, i32 46267}
!65 = !{!13, !13, i64 0}
!66 = !{!"branch_weights", i32 1, i32 150582}
!67 = !{!"branch_weights", i32 0, i32 -2147483648}
!68 = !{!"branch_weights", i32 26195, i32 112774}
!69 = !{!16, !5, i64 32}
!70 = !{!16, !13, i64 40}
!71 = !{!"branch_weights", i32 7, i32 26189}
!72 = !{!73, !5, i64 24}
!73 = !{!"jpeg_destination_mgr", !5, i64 0, !13, i64 8, !5, i64 16, !5, i64 24, !5, i64 32}
!74 = !{!"branch_weights", i32 1, i32 7}
!75 = !{!"branch_weights", i32 90, i32 26106}
!76 = !{!"branch_weights", i32 1, i32 90}
!77 = !{!"branch_weights", i32 8121, i32 4169}
!78 = !{!"branch_weights", i32 112774, i32 37809}
!79 = !{!"function_entry_count", i64 20480}
!80 = !{!4, !8, i64 408}
!81 = !{!"branch_weights", i32 20481, i32 1}
!82 = !{!"branch_weights", i32 20481, i32 774145}
!83 = !{!"branch_weights", i32 704799, i32 69347}
!84 = !{!"branch_weights", i32 34679, i32 34669}
!85 = !{!"branch_weights", i32 52519, i32 16829}
!86 = !{!"branch_weights", i32 12853, i32 3977}
!87 = !{!"branch_weights", i32 10487, i32 5339}
!88 = !{!"branch_weights", i32 8385, i32 2103}
!89 = !{!"branch_weights", i32 714775838, i32 -1570031040}
!90 = !{!"branch_weights", i32 31703, i32 22546}
!91 = !{!"branch_weights", i32 13, i32 16829}
!92 = !{!"branch_weights", i32 16829, i32 11299}
!93 = !{!"branch_weights", i32 -2147483648, i32 0}
!94 = !{!"branch_weights", i32 774145, i32 20481}
!95 = !{!"branch_weights", i32 2067726742, i32 79756906}
!96 = !{!"branch_weights", i32 1, i32 19213}
!97 = !{!"function_entry_count", i64 1024}
!98 = !{!"branch_weights", i32 1025, i32 1}
!99 = !{!"branch_weights", i32 6145, i32 1025}
!100 = !{!"branch_weights", i32 20481, i32 1290241}
!101 = !{!"branch_weights", i32 1290241, i32 20481}
!102 = !{!"branch_weights", i32 1192633, i32 97609}
!103 = !{!"branch_weights", i32 -1893518675, i32 41403}
!104 = !{!"branch_weights", i32 46428, i32 10487}
!105 = !{!"branch_weights", i32 892504705, i32 1254978943}
!106 = !{!"branch_weights", i32 45091, i32 52519}
!107 = !{!"branch_weights", i32 892504707, i32 1254978941}
!108 = !{!"branch_weights", i32 4178497, i32 40795}
!109 = !{!"branch_weights", i32 -1436481028, i32 51931}
!110 = !{!"function_entry_count", i64 9}
!111 = !{!"branch_weights", i32 12, i32 10}
!112 = !{!"branch_weights", i32 4, i32 9}
!113 = !{!"branch_weights", i32 4, i32 1}
!114 = !{!"branch_weights", i32 11, i32 2}
!115 = !{!"branch_weights", i32 1, i32 11}
!116 = !{!"function_entry_count", i64 10}
!117 = !{!"function_entry_count", i64 0}
