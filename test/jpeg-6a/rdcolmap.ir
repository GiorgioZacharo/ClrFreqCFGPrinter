; ModuleID = 'rdcolmap.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_decompress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_source_mgr = type { i8*, i64, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i64)*, i32 (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*)* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.jpeg_decomp_master = type opaque
%struct.jpeg_d_main_controller = type opaque
%struct.jpeg_d_coef_controller = type opaque
%struct.jpeg_d_post_controller = type opaque
%struct.jpeg_input_controller = type opaque
%struct.jpeg_marker_reader = type opaque
%struct.jpeg_entropy_decoder = type opaque
%struct.jpeg_inverse_dct = type opaque
%struct.jpeg_upsampler = type opaque
%struct.jpeg_color_deconverter = type opaque
%struct.jpeg_color_quantizer = type opaque
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

; Function Attrs: nounwind uwtable
define void @read_color_map(%struct.jpeg_decompress_struct* %cinfo, %struct._IO_FILE* nocapture %infile) #0 {
entry:
  %mem = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1
  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !2
  %alloc_sarray = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %0, i64 0, i32 2
  %1 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %alloc_sarray, align 8, !tbaa !10
  %2 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  %call = tail call i8** %1(%struct.jpeg_common_struct* %2, i32 1, i32 256, i32 3) #2
  %colormap = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 32
  store i8** %call, i8*** %colormap, align 8, !tbaa !13
  %actual_number_of_colors = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 31
  store i32 0, i32* %actual_number_of_colors, align 4, !tbaa !14
  %call1 = tail call i32 @_IO_getc(%struct._IO_FILE* %infile)
  switch i32 %call1, label %sw.default [
    i32 71, label %sw.bb
    i32 80, label %sw.bb2
  ]

sw.bb:                                            ; preds = %entry
  %err.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %call.i = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp1.i = icmp eq i32 %call.i, -1
  br i1 %cmp1.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %sw.bb
  %3 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %3, i64 0, i32 5
  store i32 1038, i32* %msg_code.i, align 8, !tbaa !16
  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %3, i64 0, i32 0
  %4 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !18
  tail call void %4(%struct.jpeg_common_struct* %2) #2
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %sw.bb
  %call.i.1 = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp1.i.1 = icmp eq i32 %call.i.1, -1
  br i1 %cmp1.i.1, label %if.then.i.1, label %for.inc.i.1

if.then7.i:                                       ; preds = %for.inc.i.11
  %5 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code9.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %5, i64 0, i32 5
  store i32 1038, i32* %msg_code9.i, align 8, !tbaa !16
  %error_exit11.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %5, i64 0, i32 0
  %6 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit11.i, align 8, !tbaa !18
  tail call void %6(%struct.jpeg_common_struct* %2) #2
  br label %if.end12.i

if.end12.i:                                       ; preds = %for.inc.i.11, %if.then7.i
  %7 = trunc i32 %call.i.9 to i8
  %cmp14.i = icmp sgt i8 %7, -1
  br i1 %cmp14.i, label %if.then15.i, label %if.end20.i

if.then15.i:                                      ; preds = %if.end12.i
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code17.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 5
  store i32 1038, i32* %msg_code17.i, align 8, !tbaa !16
  %error_exit19.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 0
  %9 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit19.i, align 8, !tbaa !18
  tail call void %9(%struct.jpeg_common_struct* %2) #2
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then15.i, %if.end12.i
  %and22.i = and i32 %call.i.9, 7
  %shl.i = shl i32 2, %and22.i
  %cmp2474.i = icmp sgt i32 %shl.i, 0
  br i1 %cmp2474.i, label %for.body25.i.preheader, label %sw.epilog

for.body25.i.preheader:                           ; preds = %if.end20.i
  br label %for.body25.i

for.body25.i:                                     ; preds = %for.body25.i.preheader, %add_map_entry.exit.i
  %i.175.i = phi i32 [ %inc44.i, %add_map_entry.exit.i ], [ 0, %for.body25.i.preheader ]
  %call26.i = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %call27.i = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %call28.i = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp29.i = icmp eq i32 %call26.i, -1
  %cmp31.i = icmp eq i32 %call27.i, -1
  %or.cond.i = or i1 %cmp29.i, %cmp31.i
  %cmp33.i = icmp eq i32 %call28.i, -1
  %or.cond46.i = or i1 %or.cond.i, %cmp33.i
  br i1 %or.cond46.i, label %if.then34.i, label %if.end39.i

if.then34.i:                                      ; preds = %for.body25.i
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code36.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 5
  store i32 1038, i32* %msg_code36.i, align 8, !tbaa !16
  %error_exit38.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 0
  %11 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit38.i, align 8, !tbaa !18
  tail call void %11(%struct.jpeg_common_struct* %2) #2
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.then34.i, %for.body25.i
  %12 = load i8**, i8*** %colormap, align 8, !tbaa !13
  %13 = load i8*, i8** %12, align 8, !tbaa !19
  %arrayidx3.i.i = getelementptr inbounds i8*, i8** %12, i64 1
  %14 = load i8*, i8** %arrayidx3.i.i, align 8, !tbaa !19
  %arrayidx6.i.i = getelementptr inbounds i8*, i8** %12, i64 2
  %15 = load i8*, i8** %arrayidx6.i.i, align 8, !tbaa !19
  %16 = load i32, i32* %actual_number_of_colors, align 4, !tbaa !14
  %cmp70.i.i = icmp sgt i32 %16, 0
  %17 = sext i32 %16 to i64
  br i1 %cmp70.i.i, label %for.body.i.i.preheader, label %if.end27.i.i

for.body.i.i.preheader:                           ; preds = %if.end39.i
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %for.inc.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %for.inc.i.i ], [ 0, %for.body.i.i.preheader ]
  %arrayidx7.i.i = getelementptr inbounds i8, i8* %13, i64 %indvars.iv.i.i
  %18 = load i8, i8* %arrayidx7.i.i, align 1, !tbaa !20
  %conv.i.i = zext i8 %18 to i32
  %cmp8.i.i = icmp eq i32 %conv.i.i, %call26.i
  br i1 %cmp8.i.i, label %land.lhs.true.i.i, label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %arrayidx11.i.i = getelementptr inbounds i8, i8* %14, i64 %indvars.iv.i.i
  %19 = load i8, i8* %arrayidx11.i.i, align 1, !tbaa !20
  %conv12.i.i = zext i8 %19 to i32
  %cmp13.i.i = icmp eq i32 %conv12.i.i, %call27.i
  br i1 %cmp13.i.i, label %land.lhs.true15.i.i, label %for.inc.i.i

land.lhs.true15.i.i:                              ; preds = %land.lhs.true.i.i
  %arrayidx17.i.i = getelementptr inbounds i8, i8* %15, i64 %indvars.iv.i.i
  %20 = load i8, i8* %arrayidx17.i.i, align 1, !tbaa !20
  %conv18.i.i = zext i8 %20 to i32
  %cmp19.i.i = icmp eq i32 %conv18.i.i, %call28.i
  br i1 %cmp19.i.i, label %add_map_entry.exit.i.loopexit, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true15.i.i, %land.lhs.true.i.i, %for.body.i.i
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %cmp.i.i = icmp slt i64 %indvars.iv.next.i.i, %17
  br i1 %cmp.i.i, label %for.body.i.i, label %for.end.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i
  %cmp21.i.i = icmp sgt i32 %16, 255
  br i1 %cmp21.i.i, label %if.then23.i.i, label %if.end27.i.i

if.then23.i.i:                                    ; preds = %for.end.i.i
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code.i.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i64 0, i32 5
  store i32 56, i32* %msg_code.i.i, align 8, !tbaa !16
  %arrayidx25.i.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i64 0, i32 6, i32 0, i64 0
  store i32 256, i32* %arrayidx25.i.i, align 4, !tbaa !21
  %error_exit.i.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i64 0, i32 0
  %22 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i.i, align 8, !tbaa !18
  tail call void %22(%struct.jpeg_common_struct* %2) #2
  br label %if.end27.i.i

if.end27.i.i:                                     ; preds = %if.then23.i.i, %for.end.i.i, %if.end39.i
  %conv28.i.i = trunc i32 %call26.i to i8
  %arrayidx30.i.i = getelementptr inbounds i8, i8* %13, i64 %17
  store i8 %conv28.i.i, i8* %arrayidx30.i.i, align 1, !tbaa !20
  %conv31.i.i = trunc i32 %call27.i to i8
  %arrayidx33.i.i = getelementptr inbounds i8, i8* %14, i64 %17
  store i8 %conv31.i.i, i8* %arrayidx33.i.i, align 1, !tbaa !20
  %conv34.i.i = trunc i32 %call28.i to i8
  %arrayidx36.i.i = getelementptr inbounds i8, i8* %15, i64 %17
  store i8 %conv34.i.i, i8* %arrayidx36.i.i, align 1, !tbaa !20
  %23 = load i32, i32* %actual_number_of_colors, align 4, !tbaa !14
  %inc38.i.i = add nsw i32 %23, 1
  store i32 %inc38.i.i, i32* %actual_number_of_colors, align 4, !tbaa !14
  br label %add_map_entry.exit.i

add_map_entry.exit.i.loopexit:                    ; preds = %land.lhs.true15.i.i
  br label %add_map_entry.exit.i

add_map_entry.exit.i:                             ; preds = %add_map_entry.exit.i.loopexit, %if.end27.i.i
  %inc44.i = add nuw nsw i32 %i.175.i, 1
  %exitcond.i = icmp eq i32 %inc44.i, %shl.i
  br i1 %exitcond.i, label %sw.epilog.loopexit, label %for.body25.i

sw.bb2:                                           ; preds = %entry
  %call.i14 = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %call1.i = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* nonnull %cinfo, %struct._IO_FILE* %infile) #2
  %call2.i = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* nonnull %cinfo, %struct._IO_FILE* %infile) #2
  %call3.i = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* nonnull %cinfo, %struct._IO_FILE* %infile) #2
  %cmp.i = icmp eq i32 %call1.i, 0
  %cmp4.i15 = icmp eq i32 %call2.i, 0
  %or.cond.i16 = or i1 %cmp.i, %cmp4.i15
  %cmp6.i17 = icmp eq i32 %call3.i, 0
  %or.cond56.i = or i1 %or.cond.i16, %cmp6.i17
  br i1 %or.cond56.i, label %if.then.i21, label %if.end.i

if.then.i21:                                      ; preds = %sw.bb2
  %err.i18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %24 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i18, align 8, !tbaa !15
  %msg_code.i19 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i64 0, i32 5
  store i32 1038, i32* %msg_code.i19, align 8, !tbaa !16
  %error_exit.i20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i64 0, i32 0
  %25 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i20, align 8, !tbaa !18
  tail call void %25(%struct.jpeg_common_struct* %2) #2
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i21, %sw.bb2
  %cmp8.i = icmp eq i32 %call3.i, 255
  br i1 %cmp8.i, label %if.end14.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end.i
  %err10.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err10.i, align 8, !tbaa !15
  %msg_code11.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 5
  store i32 1038, i32* %msg_code11.i, align 8, !tbaa !16
  %error_exit13.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 0
  %27 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit13.i, align 8, !tbaa !18
  tail call void %27(%struct.jpeg_common_struct* %2) #2
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then9.i, %if.end.i
  switch i32 %call.i14, label %sw.default.i [
    i32 51, label %for.cond.preheader.i
    i32 54, label %for.cond26.preheader.i
  ]

for.cond26.preheader.i:                           ; preds = %if.end14.i
  br i1 %cmp4.i15, label %sw.epilog, label %for.cond29.preheader.lr.ph.i

for.cond29.preheader.lr.ph.i:                     ; preds = %for.cond26.preheader.i
  %err41.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  br i1 %cmp.i, label %sw.epilog, label %for.body31.lr.ph.us.i.preheader

for.body31.lr.ph.us.i.preheader:                  ; preds = %for.cond29.preheader.lr.ph.i
  br label %for.body31.lr.ph.us.i

for.body31.us.i:                                  ; preds = %for.body31.lr.ph.us.i, %add_map_entry.exit164.us.i
  %col.1171.us.i = phi i32 [ 0, %for.body31.lr.ph.us.i ], [ %inc47.us.i, %add_map_entry.exit164.us.i ]
  %call.i.us.i = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp.i113.us.i = icmp eq i32 %call.i.us.i, 35
  br i1 %cmp.i113.us.i, label %do.body.i.us.i.preheader, label %pbm_getc.exit.us.i

do.body.i.us.i.preheader:                         ; preds = %for.body31.us.i
  br label %do.body.i.us.i

do.body.i.us.i:                                   ; preds = %do.body.i.us.i.preheader, %do.body.i.us.i
  %call1.i.us.i = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  switch i32 %call1.i.us.i, label %do.body.i.us.i [
    i32 -1, label %pbm_getc.exit.us.i.loopexit
    i32 10, label %pbm_getc.exit.us.i.loopexit
  ]

pbm_getc.exit.us.i.loopexit:                      ; preds = %do.body.i.us.i, %do.body.i.us.i
  %call1.i.us.i.lcssa = phi i32 [ %call1.i.us.i, %do.body.i.us.i ], [ %call1.i.us.i, %do.body.i.us.i ]
  br label %pbm_getc.exit.us.i

pbm_getc.exit.us.i:                               ; preds = %pbm_getc.exit.us.i.loopexit, %for.body31.us.i
  %ch.0.i.us.i = phi i32 [ %call.i.us.i, %for.body31.us.i ], [ %call1.i.us.i.lcssa, %pbm_getc.exit.us.i.loopexit ]
  %call.i114.us.i = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp.i115.us.i = icmp eq i32 %call.i114.us.i, 35
  br i1 %cmp.i115.us.i, label %do.body.i117.us.i.preheader, label %pbm_getc.exit119.us.i

do.body.i117.us.i.preheader:                      ; preds = %pbm_getc.exit.us.i
  br label %do.body.i117.us.i

do.body.i117.us.i:                                ; preds = %do.body.i117.us.i.preheader, %do.body.i117.us.i
  %call1.i116.us.i = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  switch i32 %call1.i116.us.i, label %do.body.i117.us.i [
    i32 -1, label %pbm_getc.exit119.us.i.loopexit
    i32 10, label %pbm_getc.exit119.us.i.loopexit
  ]

pbm_getc.exit119.us.i.loopexit:                   ; preds = %do.body.i117.us.i, %do.body.i117.us.i
  %call1.i116.us.i.lcssa = phi i32 [ %call1.i116.us.i, %do.body.i117.us.i ], [ %call1.i116.us.i, %do.body.i117.us.i ]
  br label %pbm_getc.exit119.us.i

pbm_getc.exit119.us.i:                            ; preds = %pbm_getc.exit119.us.i.loopexit, %pbm_getc.exit.us.i
  %ch.0.i118.us.i = phi i32 [ %call.i114.us.i, %pbm_getc.exit.us.i ], [ %call1.i116.us.i.lcssa, %pbm_getc.exit119.us.i.loopexit ]
  %call.i120.us.i = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp.i121.us.i = icmp eq i32 %call.i120.us.i, 35
  br i1 %cmp.i121.us.i, label %do.body.i123.us.i.preheader, label %pbm_getc.exit125.us.i

do.body.i123.us.i.preheader:                      ; preds = %pbm_getc.exit119.us.i
  br label %do.body.i123.us.i

do.body.i123.us.i:                                ; preds = %do.body.i123.us.i.preheader, %do.body.i123.us.i
  %call1.i122.us.i = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  switch i32 %call1.i122.us.i, label %do.body.i123.us.i [
    i32 -1, label %pbm_getc.exit125.us.i.loopexit
    i32 10, label %pbm_getc.exit125.us.i.loopexit
  ]

pbm_getc.exit125.us.i.loopexit:                   ; preds = %do.body.i123.us.i, %do.body.i123.us.i
  %call1.i122.us.i.lcssa = phi i32 [ %call1.i122.us.i, %do.body.i123.us.i ], [ %call1.i122.us.i, %do.body.i123.us.i ]
  br label %pbm_getc.exit125.us.i

pbm_getc.exit125.us.i:                            ; preds = %pbm_getc.exit125.us.i.loopexit, %pbm_getc.exit119.us.i
  %ch.0.i124.us.i = phi i32 [ %call.i120.us.i, %pbm_getc.exit119.us.i ], [ %call1.i122.us.i.lcssa, %pbm_getc.exit125.us.i.loopexit ]
  %cmp35.us.i = icmp eq i32 %ch.0.i.us.i, -1
  %cmp37.us.i = icmp eq i32 %ch.0.i118.us.i, -1
  %or.cond57.us.i = or i1 %cmp35.us.i, %cmp37.us.i
  %cmp39.us.i = icmp eq i32 %ch.0.i124.us.i, -1
  %or.cond58.us.i = or i1 %or.cond57.us.i, %cmp39.us.i
  br i1 %or.cond58.us.i, label %if.then40.us.i, label %if.end45.us.i

if.then40.us.i:                                   ; preds = %pbm_getc.exit125.us.i
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err41.i, align 8, !tbaa !15
  %msg_code42.us.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i64 0, i32 5
  store i32 1038, i32* %msg_code42.us.i, align 8, !tbaa !16
  %error_exit44.us.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i64 0, i32 0
  %29 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit44.us.i, align 8, !tbaa !18
  tail call void %29(%struct.jpeg_common_struct* %2) #2
  br label %if.end45.us.i

if.end45.us.i:                                    ; preds = %if.then40.us.i, %pbm_getc.exit125.us.i
  %30 = load i8**, i8*** %colormap, align 8, !tbaa !13
  %31 = load i8*, i8** %30, align 8, !tbaa !19
  %arrayidx3.i127.us.i = getelementptr inbounds i8*, i8** %30, i64 1
  %32 = load i8*, i8** %arrayidx3.i127.us.i, align 8, !tbaa !19
  %arrayidx6.i128.us.i = getelementptr inbounds i8*, i8** %30, i64 2
  %33 = load i8*, i8** %arrayidx6.i128.us.i, align 8, !tbaa !19
  %34 = load i32, i32* %actual_number_of_colors, align 4, !tbaa !14
  %cmp70.i130.us.i = icmp sgt i32 %34, 0
  %35 = sext i32 %34 to i64
  br i1 %cmp70.i130.us.i, label %for.body.i136.us.i.preheader, label %if.end27.i163.us.i

for.body.i136.us.i.preheader:                     ; preds = %if.end45.us.i
  br label %for.body.i136.us.i

for.body.i136.us.i:                               ; preds = %for.body.i136.us.i.preheader, %for.inc.i147.us.i
  %indvars.iv.i132.us.i = phi i64 [ %indvars.iv.next.i145.us.i, %for.inc.i147.us.i ], [ 0, %for.body.i136.us.i.preheader ]
  %arrayidx7.i133.us.i = getelementptr inbounds i8, i8* %31, i64 %indvars.iv.i132.us.i
  %36 = load i8, i8* %arrayidx7.i133.us.i, align 1, !tbaa !20
  %conv.i134.us.i = zext i8 %36 to i32
  %cmp8.i135.us.i = icmp eq i32 %conv.i134.us.i, %ch.0.i.us.i
  br i1 %cmp8.i135.us.i, label %land.lhs.true.i140.us.i, label %for.inc.i147.us.i

land.lhs.true.i140.us.i:                          ; preds = %for.body.i136.us.i
  %arrayidx11.i137.us.i = getelementptr inbounds i8, i8* %32, i64 %indvars.iv.i132.us.i
  %37 = load i8, i8* %arrayidx11.i137.us.i, align 1, !tbaa !20
  %conv12.i138.us.i = zext i8 %37 to i32
  %cmp13.i139.us.i = icmp eq i32 %conv12.i138.us.i, %ch.0.i118.us.i
  br i1 %cmp13.i139.us.i, label %land.lhs.true15.i144.us.i, label %for.inc.i147.us.i

land.lhs.true15.i144.us.i:                        ; preds = %land.lhs.true.i140.us.i
  %arrayidx17.i141.us.i = getelementptr inbounds i8, i8* %33, i64 %indvars.iv.i132.us.i
  %38 = load i8, i8* %arrayidx17.i141.us.i, align 1, !tbaa !20
  %conv18.i142.us.i = zext i8 %38 to i32
  %cmp19.i143.us.i = icmp eq i32 %conv18.i142.us.i, %ch.0.i124.us.i
  br i1 %cmp19.i143.us.i, label %add_map_entry.exit164.us.i.loopexit, label %for.inc.i147.us.i

for.inc.i147.us.i:                                ; preds = %land.lhs.true15.i144.us.i, %land.lhs.true.i140.us.i, %for.body.i136.us.i
  %indvars.iv.next.i145.us.i = add nuw nsw i64 %indvars.iv.i132.us.i, 1
  %cmp.i146.us.i = icmp slt i64 %indvars.iv.next.i145.us.i, %35
  br i1 %cmp.i146.us.i, label %for.body.i136.us.i, label %for.end.i149.us.i

for.end.i149.us.i:                                ; preds = %for.inc.i147.us.i
  %cmp21.i148.us.i = icmp sgt i32 %34, 255
  br i1 %cmp21.i148.us.i, label %if.then23.i154.us.i, label %if.end27.i163.us.i

if.then23.i154.us.i:                              ; preds = %for.end.i149.us.i
  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err41.i, align 8, !tbaa !15
  %msg_code.i151.us.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 5
  store i32 56, i32* %msg_code.i151.us.i, align 8, !tbaa !16
  %arrayidx25.i152.us.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 6, i32 0, i64 0
  store i32 256, i32* %arrayidx25.i152.us.i, align 4, !tbaa !21
  %error_exit.i153.us.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 0
  %40 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i153.us.i, align 8, !tbaa !18
  tail call void %40(%struct.jpeg_common_struct* %2) #2
  br label %if.end27.i163.us.i

if.end27.i163.us.i:                               ; preds = %if.then23.i154.us.i, %for.end.i149.us.i, %if.end45.us.i
  %conv28.i155.us.i = trunc i32 %ch.0.i.us.i to i8
  %arrayidx30.i157.us.i = getelementptr inbounds i8, i8* %31, i64 %35
  store i8 %conv28.i155.us.i, i8* %arrayidx30.i157.us.i, align 1, !tbaa !20
  %conv31.i158.us.i = trunc i32 %ch.0.i118.us.i to i8
  %arrayidx33.i159.us.i = getelementptr inbounds i8, i8* %32, i64 %35
  store i8 %conv31.i158.us.i, i8* %arrayidx33.i159.us.i, align 1, !tbaa !20
  %conv34.i160.us.i = trunc i32 %ch.0.i124.us.i to i8
  %arrayidx36.i161.us.i = getelementptr inbounds i8, i8* %33, i64 %35
  store i8 %conv34.i160.us.i, i8* %arrayidx36.i161.us.i, align 1, !tbaa !20
  %41 = load i32, i32* %actual_number_of_colors, align 4, !tbaa !14
  %inc38.i162.us.i = add nsw i32 %41, 1
  store i32 %inc38.i162.us.i, i32* %actual_number_of_colors, align 4, !tbaa !14
  br label %add_map_entry.exit164.us.i

add_map_entry.exit164.us.i.loopexit:              ; preds = %land.lhs.true15.i144.us.i
  br label %add_map_entry.exit164.us.i

add_map_entry.exit164.us.i:                       ; preds = %add_map_entry.exit164.us.i.loopexit, %if.end27.i163.us.i
  %inc47.us.i = add nuw i32 %col.1171.us.i, 1
  %exitcond180.i = icmp eq i32 %inc47.us.i, %call1.i
  br i1 %exitcond180.i, label %for.cond29.for.inc49_crit_edge.us.i, label %for.body31.us.i

for.body31.lr.ph.us.i:                            ; preds = %for.body31.lr.ph.us.i.preheader, %for.cond29.for.inc49_crit_edge.us.i
  %row.1173.us.i = phi i32 [ %inc50.us.i, %for.cond29.for.inc49_crit_edge.us.i ], [ 0, %for.body31.lr.ph.us.i.preheader ]
  br label %for.body31.us.i

for.cond29.for.inc49_crit_edge.us.i:              ; preds = %add_map_entry.exit164.us.i
  %inc50.us.i = add nuw i32 %row.1173.us.i, 1
  %exitcond181.i = icmp eq i32 %inc50.us.i, %call2.i
  br i1 %exitcond181.i, label %sw.epilog.loopexit31, label %for.body31.lr.ph.us.i

for.cond.preheader.i:                             ; preds = %if.end14.i
  br i1 %cmp4.i15, label %sw.epilog, label %for.cond16.preheader.lr.ph.i

for.cond16.preheader.lr.ph.i:                     ; preds = %for.cond.preheader.i
  %err.i.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  br i1 %cmp.i, label %sw.epilog, label %for.body18.lr.ph.us.i.preheader

for.body18.lr.ph.us.i.preheader:                  ; preds = %for.cond16.preheader.lr.ph.i
  br label %for.body18.lr.ph.us.i

for.body18.us.i:                                  ; preds = %for.body18.lr.ph.us.i, %add_map_entry.exit.us.i
  %col.0167.us.i = phi i32 [ 0, %for.body18.lr.ph.us.i ], [ %inc.us.i, %add_map_entry.exit.us.i ]
  %call19.us.i = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %cinfo, %struct._IO_FILE* %infile) #2
  %call20.us.i = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %cinfo, %struct._IO_FILE* %infile) #2
  %call21.us.i = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %cinfo, %struct._IO_FILE* %infile) #2
  %42 = load i8**, i8*** %colormap, align 8, !tbaa !13
  %43 = load i8*, i8** %42, align 8, !tbaa !19
  %arrayidx3.i.us.i = getelementptr inbounds i8*, i8** %42, i64 1
  %44 = load i8*, i8** %arrayidx3.i.us.i, align 8, !tbaa !19
  %arrayidx6.i.us.i = getelementptr inbounds i8*, i8** %42, i64 2
  %45 = load i8*, i8** %arrayidx6.i.us.i, align 8, !tbaa !19
  %46 = load i32, i32* %actual_number_of_colors, align 4, !tbaa !14
  %cmp70.i.us.i = icmp sgt i32 %46, 0
  %47 = sext i32 %46 to i64
  br i1 %cmp70.i.us.i, label %for.body.i.us.i.preheader, label %if.end27.i.us.i

for.body.i.us.i.preheader:                        ; preds = %for.body18.us.i
  br label %for.body.i.us.i

for.body.i.us.i:                                  ; preds = %for.body.i.us.i.preheader, %for.inc.i.us.i
  %indvars.iv.i.us.i = phi i64 [ %indvars.iv.next.i.us.i, %for.inc.i.us.i ], [ 0, %for.body.i.us.i.preheader ]
  %arrayidx7.i.us.i = getelementptr inbounds i8, i8* %43, i64 %indvars.iv.i.us.i
  %48 = load i8, i8* %arrayidx7.i.us.i, align 1, !tbaa !20
  %conv.i.us.i = zext i8 %48 to i32
  %cmp8.i.us.i = icmp eq i32 %conv.i.us.i, %call19.us.i
  br i1 %cmp8.i.us.i, label %land.lhs.true.i.us.i, label %for.inc.i.us.i

land.lhs.true.i.us.i:                             ; preds = %for.body.i.us.i
  %arrayidx11.i.us.i = getelementptr inbounds i8, i8* %44, i64 %indvars.iv.i.us.i
  %49 = load i8, i8* %arrayidx11.i.us.i, align 1, !tbaa !20
  %conv12.i.us.i = zext i8 %49 to i32
  %cmp13.i.us.i = icmp eq i32 %conv12.i.us.i, %call20.us.i
  br i1 %cmp13.i.us.i, label %land.lhs.true15.i.us.i, label %for.inc.i.us.i

land.lhs.true15.i.us.i:                           ; preds = %land.lhs.true.i.us.i
  %arrayidx17.i.us.i = getelementptr inbounds i8, i8* %45, i64 %indvars.iv.i.us.i
  %50 = load i8, i8* %arrayidx17.i.us.i, align 1, !tbaa !20
  %conv18.i.us.i = zext i8 %50 to i32
  %cmp19.i.us.i = icmp eq i32 %conv18.i.us.i, %call21.us.i
  br i1 %cmp19.i.us.i, label %add_map_entry.exit.us.i.loopexit, label %for.inc.i.us.i

for.inc.i.us.i:                                   ; preds = %land.lhs.true15.i.us.i, %land.lhs.true.i.us.i, %for.body.i.us.i
  %indvars.iv.next.i.us.i = add nuw nsw i64 %indvars.iv.i.us.i, 1
  %cmp.i.us.i = icmp slt i64 %indvars.iv.next.i.us.i, %47
  br i1 %cmp.i.us.i, label %for.body.i.us.i, label %for.end.i.us.i

for.end.i.us.i:                                   ; preds = %for.inc.i.us.i
  %cmp21.i.us.i = icmp sgt i32 %46, 255
  br i1 %cmp21.i.us.i, label %if.then23.i.us.i, label %if.end27.i.us.i

if.then23.i.us.i:                                 ; preds = %for.end.i.us.i
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i.i, align 8, !tbaa !15
  %msg_code.i.us.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 5
  store i32 56, i32* %msg_code.i.us.i, align 8, !tbaa !16
  %arrayidx25.i.us.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 6, i32 0, i64 0
  store i32 256, i32* %arrayidx25.i.us.i, align 4, !tbaa !21
  %error_exit.i.us.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 0
  %52 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i.us.i, align 8, !tbaa !18
  tail call void %52(%struct.jpeg_common_struct* %2) #2
  br label %if.end27.i.us.i

if.end27.i.us.i:                                  ; preds = %if.then23.i.us.i, %for.end.i.us.i, %for.body18.us.i
  %conv28.i.us.i = trunc i32 %call19.us.i to i8
  %arrayidx30.i.us.i = getelementptr inbounds i8, i8* %43, i64 %47
  store i8 %conv28.i.us.i, i8* %arrayidx30.i.us.i, align 1, !tbaa !20
  %conv31.i.us.i = trunc i32 %call20.us.i to i8
  %arrayidx33.i.us.i = getelementptr inbounds i8, i8* %44, i64 %47
  store i8 %conv31.i.us.i, i8* %arrayidx33.i.us.i, align 1, !tbaa !20
  %conv34.i.us.i = trunc i32 %call21.us.i to i8
  %arrayidx36.i.us.i = getelementptr inbounds i8, i8* %45, i64 %47
  store i8 %conv34.i.us.i, i8* %arrayidx36.i.us.i, align 1, !tbaa !20
  %53 = load i32, i32* %actual_number_of_colors, align 4, !tbaa !14
  %inc38.i.us.i = add nsw i32 %53, 1
  store i32 %inc38.i.us.i, i32* %actual_number_of_colors, align 4, !tbaa !14
  br label %add_map_entry.exit.us.i

add_map_entry.exit.us.i.loopexit:                 ; preds = %land.lhs.true15.i.us.i
  br label %add_map_entry.exit.us.i

add_map_entry.exit.us.i:                          ; preds = %add_map_entry.exit.us.i.loopexit, %if.end27.i.us.i
  %inc.us.i = add nuw i32 %col.0167.us.i, 1
  %exitcond177.i = icmp eq i32 %inc.us.i, %call1.i
  br i1 %exitcond177.i, label %for.cond16.for.inc22_crit_edge.us.i, label %for.body18.us.i

for.body18.lr.ph.us.i:                            ; preds = %for.body18.lr.ph.us.i.preheader, %for.cond16.for.inc22_crit_edge.us.i
  %row.0169.us.i = phi i32 [ %inc23.us.i, %for.cond16.for.inc22_crit_edge.us.i ], [ 0, %for.body18.lr.ph.us.i.preheader ]
  br label %for.body18.us.i

for.cond16.for.inc22_crit_edge.us.i:              ; preds = %add_map_entry.exit.us.i
  %inc23.us.i = add nuw i32 %row.0169.us.i, 1
  %exitcond178.i = icmp eq i32 %inc23.us.i, %call2.i
  br i1 %exitcond178.i, label %sw.epilog.loopexit30, label %for.body18.lr.ph.us.i

sw.default.i:                                     ; preds = %if.end14.i
  %err52.i = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %54 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err52.i, align 8, !tbaa !15
  %msg_code53.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %54, i64 0, i32 5
  store i32 1038, i32* %msg_code53.i, align 8, !tbaa !16
  %error_exit55.i = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %54, i64 0, i32 0
  %55 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit55.i, align 8, !tbaa !18
  tail call void %55(%struct.jpeg_common_struct* %2) #2
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %err = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %56 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !15
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %56, i64 0, i32 5
  store i32 1038, i32* %msg_code, align 8, !tbaa !16
  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %56, i64 0, i32 0
  %57 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !18
  tail call void %57(%struct.jpeg_common_struct* %2) #2
  br label %sw.epilog

sw.epilog.loopexit:                               ; preds = %add_map_entry.exit.i
  br label %sw.epilog

sw.epilog.loopexit30:                             ; preds = %for.cond16.for.inc22_crit_edge.us.i
  br label %sw.epilog

sw.epilog.loopexit31:                             ; preds = %for.cond29.for.inc49_crit_edge.us.i
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.loopexit31, %sw.epilog.loopexit30, %sw.epilog.loopexit, %if.end20.i, %sw.default.i, %for.cond16.preheader.lr.ph.i, %for.cond.preheader.i, %for.cond29.preheader.lr.ph.i, %for.cond26.preheader.i, %sw.default
  ret void

if.then.i.1:                                      ; preds = %for.inc.i
  %58 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code.i.1 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %58, i64 0, i32 5
  store i32 1038, i32* %msg_code.i.1, align 8, !tbaa !16
  %error_exit.i.1 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %58, i64 0, i32 0
  %59 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i.1, align 8, !tbaa !18
  tail call void %59(%struct.jpeg_common_struct* %2) #2
  br label %for.inc.i.1

for.inc.i.1:                                      ; preds = %if.then.i.1, %for.inc.i
  %call.i.2 = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp1.i.2 = icmp eq i32 %call.i.2, -1
  br i1 %cmp1.i.2, label %if.then.i.2, label %for.inc.i.2

if.then.i.2:                                      ; preds = %for.inc.i.1
  %60 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code.i.2 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %60, i64 0, i32 5
  store i32 1038, i32* %msg_code.i.2, align 8, !tbaa !16
  %error_exit.i.2 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %60, i64 0, i32 0
  %61 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i.2, align 8, !tbaa !18
  tail call void %61(%struct.jpeg_common_struct* %2) #2
  br label %for.inc.i.2

for.inc.i.2:                                      ; preds = %if.then.i.2, %for.inc.i.1
  %call.i.3 = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp1.i.3 = icmp eq i32 %call.i.3, -1
  br i1 %cmp1.i.3, label %if.then.i.3, label %for.inc.i.3

if.then.i.3:                                      ; preds = %for.inc.i.2
  %62 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code.i.3 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %62, i64 0, i32 5
  store i32 1038, i32* %msg_code.i.3, align 8, !tbaa !16
  %error_exit.i.3 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %62, i64 0, i32 0
  %63 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i.3, align 8, !tbaa !18
  tail call void %63(%struct.jpeg_common_struct* %2) #2
  br label %for.inc.i.3

for.inc.i.3:                                      ; preds = %if.then.i.3, %for.inc.i.2
  %call.i.4 = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp1.i.4 = icmp eq i32 %call.i.4, -1
  br i1 %cmp1.i.4, label %if.then.i.4, label %for.inc.i.4

if.then.i.4:                                      ; preds = %for.inc.i.3
  %64 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code.i.4 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %64, i64 0, i32 5
  store i32 1038, i32* %msg_code.i.4, align 8, !tbaa !16
  %error_exit.i.4 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %64, i64 0, i32 0
  %65 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i.4, align 8, !tbaa !18
  tail call void %65(%struct.jpeg_common_struct* %2) #2
  br label %for.inc.i.4

for.inc.i.4:                                      ; preds = %if.then.i.4, %for.inc.i.3
  %call.i.5 = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp1.i.5 = icmp eq i32 %call.i.5, -1
  br i1 %cmp1.i.5, label %if.then.i.5, label %for.inc.i.5

if.then.i.5:                                      ; preds = %for.inc.i.4
  %66 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code.i.5 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %66, i64 0, i32 5
  store i32 1038, i32* %msg_code.i.5, align 8, !tbaa !16
  %error_exit.i.5 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %66, i64 0, i32 0
  %67 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i.5, align 8, !tbaa !18
  tail call void %67(%struct.jpeg_common_struct* %2) #2
  br label %for.inc.i.5

for.inc.i.5:                                      ; preds = %if.then.i.5, %for.inc.i.4
  %call.i.6 = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp1.i.6 = icmp eq i32 %call.i.6, -1
  br i1 %cmp1.i.6, label %if.then.i.6, label %for.inc.i.6

if.then.i.6:                                      ; preds = %for.inc.i.5
  %68 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code.i.6 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %68, i64 0, i32 5
  store i32 1038, i32* %msg_code.i.6, align 8, !tbaa !16
  %error_exit.i.6 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %68, i64 0, i32 0
  %69 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i.6, align 8, !tbaa !18
  tail call void %69(%struct.jpeg_common_struct* %2) #2
  br label %for.inc.i.6

for.inc.i.6:                                      ; preds = %if.then.i.6, %for.inc.i.5
  %call.i.7 = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp1.i.7 = icmp eq i32 %call.i.7, -1
  br i1 %cmp1.i.7, label %if.then.i.7, label %for.inc.i.7

if.then.i.7:                                      ; preds = %for.inc.i.6
  %70 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code.i.7 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %70, i64 0, i32 5
  store i32 1038, i32* %msg_code.i.7, align 8, !tbaa !16
  %error_exit.i.7 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %70, i64 0, i32 0
  %71 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i.7, align 8, !tbaa !18
  tail call void %71(%struct.jpeg_common_struct* %2) #2
  br label %for.inc.i.7

for.inc.i.7:                                      ; preds = %if.then.i.7, %for.inc.i.6
  %call.i.8 = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp1.i.8 = icmp eq i32 %call.i.8, -1
  br i1 %cmp1.i.8, label %if.then.i.8, label %for.inc.i.8

if.then.i.8:                                      ; preds = %for.inc.i.7
  %72 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code.i.8 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %72, i64 0, i32 5
  store i32 1038, i32* %msg_code.i.8, align 8, !tbaa !16
  %error_exit.i.8 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %72, i64 0, i32 0
  %73 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i.8, align 8, !tbaa !18
  tail call void %73(%struct.jpeg_common_struct* %2) #2
  br label %for.inc.i.8

for.inc.i.8:                                      ; preds = %if.then.i.8, %for.inc.i.7
  %call.i.9 = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp1.i.9 = icmp eq i32 %call.i.9, -1
  br i1 %cmp1.i.9, label %if.then.i.9, label %for.inc.i.9

if.then.i.9:                                      ; preds = %for.inc.i.8
  %74 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code.i.9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %74, i64 0, i32 5
  store i32 1038, i32* %msg_code.i.9, align 8, !tbaa !16
  %error_exit.i.9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %74, i64 0, i32 0
  %75 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i.9, align 8, !tbaa !18
  tail call void %75(%struct.jpeg_common_struct* %2) #2
  br label %for.inc.i.9

for.inc.i.9:                                      ; preds = %if.then.i.9, %for.inc.i.8
  %call.i.10 = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp1.i.10 = icmp eq i32 %call.i.10, -1
  br i1 %cmp1.i.10, label %if.then.i.10, label %for.inc.i.10

if.then.i.10:                                     ; preds = %for.inc.i.9
  %76 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code.i.10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %76, i64 0, i32 5
  store i32 1038, i32* %msg_code.i.10, align 8, !tbaa !16
  %error_exit.i.10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %76, i64 0, i32 0
  %77 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i.10, align 8, !tbaa !18
  tail call void %77(%struct.jpeg_common_struct* %2) #2
  br label %for.inc.i.10

for.inc.i.10:                                     ; preds = %if.then.i.10, %for.inc.i.9
  %call.i.11 = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp1.i.11 = icmp eq i32 %call.i.11, -1
  br i1 %cmp1.i.11, label %if.then.i.11, label %for.inc.i.11

if.then.i.11:                                     ; preds = %for.inc.i.10
  %78 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8, !tbaa !15
  %msg_code.i.11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %78, i64 0, i32 5
  store i32 1038, i32* %msg_code.i.11, align 8, !tbaa !16
  %error_exit.i.11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %78, i64 0, i32 0
  %79 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit.i.11, align 8, !tbaa !18
  tail call void %79(%struct.jpeg_common_struct* %2) #2
  br label %for.inc.i.11

for.inc.i.11:                                     ; preds = %if.then.i.11, %for.inc.i.10
  %cmp4.i = icmp eq i32 %call.i, 73
  %cmp6.i = icmp eq i32 %call.i.1, 70
  %or.cond = and i1 %cmp4.i, %cmp6.i
  br i1 %or.cond, label %if.end12.i, label %if.then7.i
}

; Function Attrs: nounwind
declare i32 @_IO_getc(%struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %cinfo, %struct._IO_FILE* nocapture %infile) unnamed_addr #0 {
entry:
  br label %do.body

do.body:                                          ; preds = %do.body.backedge, %entry
  %call.i = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  %cmp.i = icmp eq i32 %call.i, 35
  br i1 %cmp.i, label %do.body.i.preheader, label %pbm_getc.exit

do.body.i.preheader:                              ; preds = %do.body
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.preheader, %do.body.i
  %call1.i = tail call i32 @_IO_getc(%struct._IO_FILE* %infile) #2
  switch i32 %call1.i, label %do.body.i [
    i32 -1, label %pbm_getc.exit.loopexit
    i32 10, label %pbm_getc.exit.loopexit
  ]

pbm_getc.exit.loopexit:                           ; preds = %do.body.i, %do.body.i
  %call1.i.lcssa = phi i32 [ %call1.i, %do.body.i ], [ %call1.i, %do.body.i ]
  br label %pbm_getc.exit

pbm_getc.exit:                                    ; preds = %pbm_getc.exit.loopexit, %do.body
  %ch.0.i = phi i32 [ %call.i, %do.body ], [ %call1.i.lcssa, %pbm_getc.exit.loopexit ]
  switch i32 %ch.0.i, label %do.end [
    i32 -1, label %do.end.thread
    i32 32, label %do.body.backedge
    i32 13, label %do.body.backedge
    i32 10, label %do.body.backedge
    i32 9, label %do.body.backedge
  ]

do.body.backedge:                                 ; preds = %pbm_getc.exit, %pbm_getc.exit, %pbm_getc.exit, %pbm_getc.exit
  br label %do.body

do.end.thread:                                    ; preds = %pbm_getc.exit
  %err = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %0 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !15
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %0, i64 0, i32 5
  store i32 1038, i32* %msg_code, align 8, !tbaa !16
  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %0, i64 0, i32 0
  %1 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !18
  %2 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %1(%struct.jpeg_common_struct* %2) #2
  br label %if.then10

do.end:                                           ; preds = %pbm_getc.exit
  %ch.0.i.lcssa = phi i32 [ %ch.0.i, %pbm_getc.exit ]
  %call.off41 = add i32 %ch.0.i.lcssa, -48
  %3 = icmp ugt i32 %call.off41, 9
  br i1 %3, label %do.end.if.then10_crit_edge, label %if.end15

do.end.if.then10_crit_edge:                       ; preds = %do.end
  %.pre = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0
  %.pre53 = bitcast %struct.jpeg_decompress_struct* %cinfo to %struct.jpeg_common_struct*
  br label %if.then10

if.then10:                                        ; preds = %do.end.if.then10_crit_edge, %do.end.thread
  %.pre-phi = phi %struct.jpeg_common_struct* [ %.pre53, %do.end.if.then10_crit_edge ], [ %2, %do.end.thread ]
  %err11.pre-phi = phi %struct.jpeg_error_mgr** [ %.pre, %do.end.if.then10_crit_edge ], [ %err, %do.end.thread ]
  %ch.0.i52 = phi i32 [ %ch.0.i.lcssa, %do.end.if.then10_crit_edge ], [ -1, %do.end.thread ]
  %4 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err11.pre-phi, align 8, !tbaa !15
  %msg_code12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 5
  store i32 1038, i32* %msg_code12, align 8, !tbaa !16
  %error_exit14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 0
  %5 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit14, align 8, !tbaa !18
  tail call void %5(%struct.jpeg_common_struct* %.pre-phi) #2
  br label %if.end15

if.end15:                                         ; preds = %do.end, %if.then10
  %ch.0.i51 = phi i32 [ %ch.0.i.lcssa, %do.end ], [ %ch.0.i52, %if.then10 ]
  %sub = add nsw i32 %ch.0.i51, -48
  %call1646 = tail call fastcc i32 @pbm_getc(%struct._IO_FILE* %infile)
  %call16.off47 = add i32 %call1646, -48
  %6 = icmp ult i32 %call16.off47, 10
  br i1 %6, label %while.body.preheader, label %while.end

while.body.preheader:                             ; preds = %if.end15
  br label %while.body

while.body:                                       ; preds = %while.body.preheader, %while.body
  %call1649 = phi i32 [ %call16, %while.body ], [ %call1646, %while.body.preheader ]
  %val.048 = phi i32 [ %add, %while.body ], [ %sub, %while.body.preheader ]
  %mul = mul i32 %val.048, 10
  %sub19 = add nsw i32 %call1649, -48
  %add = add i32 %sub19, %mul
  %call16 = tail call fastcc i32 @pbm_getc(%struct._IO_FILE* %infile)
  %call16.off = add i32 %call16, -48
  %7 = icmp ult i32 %call16.off, 10
  br i1 %7, label %while.body, label %while.end.loopexit

while.end.loopexit:                               ; preds = %while.body
  %add.lcssa = phi i32 [ %add, %while.body ]
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %if.end15
  %val.0.lcssa = phi i32 [ %sub, %if.end15 ], [ %add.lcssa, %while.end.loopexit ]
  ret i32 %val.0.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @pbm_getc(%struct._IO_FILE* nocapture %infile) unnamed_addr #0 {
entry:
  %call = tail call i32 @_IO_getc(%struct._IO_FILE* %infile)
  %cmp = icmp eq i32 %call, 35
  br i1 %cmp, label %do.body.preheader, label %if.end

do.body.preheader:                                ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %do.body.preheader, %do.body
  %call1 = tail call i32 @_IO_getc(%struct._IO_FILE* %infile)
  switch i32 %call1, label %do.body [
    i32 -1, label %if.end.loopexit
    i32 10, label %if.end.loopexit
  ]

if.end.loopexit:                                  ; preds = %do.body, %do.body
  %call1.lcssa = phi i32 [ %call1, %do.body ], [ %call1, %do.body ]
  br label %if.end

if.end:                                           ; preds = %if.end.loopexit, %entry
  %ch.0 = phi i32 [ %call, %entry ], [ %call1.lcssa, %if.end.loopexit ]
  ret i32 %ch.0
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"MaxFunctionCount", i32 150581}
!1 = !{!"clang version 3.8.0 (trunk 257473)"}
!2 = !{!3, !4, i64 8}
!3 = !{!"jpeg_decompress_struct", !4, i64 0, !4, i64 8, !4, i64 16, !7, i64 24, !7, i64 28, !4, i64 32, !7, i64 40, !7, i64 44, !7, i64 48, !5, i64 52, !5, i64 56, !7, i64 60, !7, i64 64, !8, i64 72, !7, i64 80, !7, i64 84, !5, i64 88, !7, i64 92, !7, i64 96, !7, i64 100, !5, i64 104, !7, i64 108, !7, i64 112, !7, i64 116, !7, i64 120, !7, i64 124, !7, i64 128, !7, i64 132, !7, i64 136, !7, i64 140, !7, i64 144, !7, i64 148, !4, i64 152, !7, i64 160, !7, i64 164, !7, i64 168, !7, i64 172, !7, i64 176, !4, i64 184, !5, i64 192, !5, i64 224, !5, i64 256, !7, i64 288, !4, i64 296, !7, i64 304, !7, i64 308, !5, i64 312, !5, i64 328, !5, i64 344, !7, i64 360, !7, i64 364, !5, i64 368, !9, i64 370, !9, i64 372, !7, i64 376, !5, i64 380, !7, i64 384, !7, i64 388, !7, i64 392, !7, i64 396, !7, i64 400, !4, i64 408, !7, i64 416, !5, i64 424, !7, i64 456, !7, i64 460, !7, i64 464, !5, i64 468, !7, i64 508, !7, i64 512, !7, i64 516, !7, i64 520, !7, i64 524, !4, i64 528, !4, i64 536, !4, i64 544, !4, i64 552, !4, i64 560, !4, i64 568, !4, i64 576, !4, i64 584, !4, i64 592, !4, i64 600, !4, i64 608}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
!7 = !{!"int", !5, i64 0}
!8 = !{!"double", !5, i64 0}
!9 = !{!"short", !5, i64 0}
!10 = !{!11, !4, i64 16}
!11 = !{!"jpeg_memory_mgr", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !4, i64 56, !4, i64 64, !4, i64 72, !4, i64 80, !12, i64 88}
!12 = !{!"long", !5, i64 0}
!13 = !{!3, !4, i64 152}
!14 = !{!3, !7, i64 148}
!15 = !{!3, !4, i64 0}
!16 = !{!17, !7, i64 40}
!17 = !{!"jpeg_error_mgr", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !7, i64 40, !5, i64 44, !7, i64 124, !12, i64 128, !4, i64 136, !7, i64 144, !4, i64 152, !7, i64 160, !7, i64 164}
!18 = !{!17, !4, i64 0}
!19 = !{!4, !4, i64 0}
!20 = !{!5, !5, i64 0}
!21 = !{!7, !7, i64 0}
