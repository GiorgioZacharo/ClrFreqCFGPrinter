digraph "CFG for 'put_demapped_gray' function" {
	label="CFG for 'put_demapped_gray' function";

	Node0x601cf70 [shape=record,label="{entry:\l  %colormap = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 32\l  %0 = load i8**, i8*** %colormap, align 8, !tbaa !2\l  %1 = load i8*, i8** %0, align 8, !tbaa !10\l  %iobuffer = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 1\l  %2 = bitcast %struct.djpeg_dest_struct* %iobuffer to i8**\l  %3 = load i8*, i8** %2, align 8, !tbaa !11\l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %4 = load i32, i32* %output_width, align 8, !tbaa !14\l  %cmp20 = icmp eq i32 %4, 0\l  br i1 %cmp20, label %for.end, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x601cf70:s0 -> Node0x601df70;
	Node0x601cf70:s1 -> Node0x601e040;
	Node0x601e040 [shape=record,label="{for.body.preheader:                               \l  %buffer = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 0, i32 4\l  %5 = load i8**, i8*** %buffer, align 8, !tbaa !15\l  %6 = load i8*, i8** %5, align 8, !tbaa !10\l  %7 = add i32 %4, -1\l  %xtraiter = and i32 %4, 3\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %for.body.preheader.split, label\l... %for.body.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x601e040:s0 -> Node0x601ce90;
	Node0x601e040:s1 -> Node0x6013520;
	Node0x6013520 [shape=record,label="{for.body.prol.preheader:                          \l  br label %for.body.prol\l}"];
	Node0x6013520 -> Node0x6013690;
	Node0x6013690 [shape=record,label="{for.body.prol:                                    \l  %col.023.prol = phi i32 [ %dec.prol, %for.body.prol ], [ %4,\l... %for.body.prol.preheader ]\l  %inptr.022.prol = phi i8* [ %incdec.ptr.prol, %for.body.prol ], [ %6,\l... %for.body.prol.preheader ]\l  %outptr.021.prol = phi i8* [ %incdec.ptr5.prol, %for.body.prol ], [ %3,\l... %for.body.prol.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %for.body.prol ], [ %xtraiter,\l... %for.body.prol.preheader ]\l  %incdec.ptr.prol = getelementptr inbounds i8, i8* %inptr.022.prol, i64 1\l  %8 = load i8, i8* %inptr.022.prol, align 1, !tbaa !16\l  %idxprom.prol = zext i8 %8 to i64\l  %arrayidx2.prol = getelementptr inbounds i8, i8* %1, i64 %idxprom.prol\l  %9 = load i8, i8* %arrayidx2.prol, align 1, !tbaa !16\l  %incdec.ptr5.prol = getelementptr inbounds i8, i8* %outptr.021.prol, i64 1\l  store i8 %9, i8* %outptr.021.prol, align 1, !tbaa !16\l  %dec.prol = add i32 %col.023.prol, -1\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %for.body.preheader.split.loopexit, label\l... %for.body.prol, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x6013690:s0 -> Node0x601de80;
	Node0x6013690:s1 -> Node0x6013690;
	Node0x601de80 [shape=record,label="{for.body.preheader.split.loopexit:                \l  %dec.prol.lcssa = phi i32 [ %dec.prol, %for.body.prol ]\l  %incdec.ptr5.prol.lcssa = phi i8* [ %incdec.ptr5.prol, %for.body.prol ]\l  %incdec.ptr.prol.lcssa = phi i8* [ %incdec.ptr.prol, %for.body.prol ]\l  br label %for.body.preheader.split\l}"];
	Node0x601de80 -> Node0x601ce90;
	Node0x601ce90 [shape=record,label="{for.body.preheader.split:                         \l  %col.023.unr = phi i32 [ %4, %for.body.preheader ], [ %dec.prol.lcssa,\l... %for.body.preheader.split.loopexit ]\l  %inptr.022.unr = phi i8* [ %6, %for.body.preheader ], [\l... %incdec.ptr.prol.lcssa, %for.body.preheader.split.loopexit ]\l  %outptr.021.unr = phi i8* [ %3, %for.body.preheader ], [\l... %incdec.ptr5.prol.lcssa, %for.body.preheader.split.loopexit ]\l  %10 = icmp ult i32 %7, 3\l  br i1 %10, label %for.end.loopexit, label %for.body.preheader.split.split\l|{<s0>T|<s1>F}}"];
	Node0x601ce90:s0 -> Node0x60212c0;
	Node0x601ce90:s1 -> Node0x60213c0;
	Node0x60213c0 [shape=record,label="{for.body.preheader.split.split:                   \l  br label %for.body\l}"];
	Node0x60213c0 -> Node0x6021530;
	Node0x6021530 [shape=record,label="{for.body:                                         \l  %col.023 = phi i32 [ %col.023.unr, %for.body.preheader.split.split ], [\l... %dec.3, %for.body ]\l  %inptr.022 = phi i8* [ %inptr.022.unr, %for.body.preheader.split.split ], [\l... %incdec.ptr.3, %for.body ]\l  %outptr.021 = phi i8* [ %outptr.021.unr, %for.body.preheader.split.split ],\l... [ %incdec.ptr5.3, %for.body ]\l  %incdec.ptr = getelementptr inbounds i8, i8* %inptr.022, i64 1\l  %11 = load i8, i8* %inptr.022, align 1, !tbaa !16\l  %idxprom = zext i8 %11 to i64\l  %arrayidx2 = getelementptr inbounds i8, i8* %1, i64 %idxprom\l  %12 = load i8, i8* %arrayidx2, align 1, !tbaa !16\l  %incdec.ptr5 = getelementptr inbounds i8, i8* %outptr.021, i64 1\l  store i8 %12, i8* %outptr.021, align 1, !tbaa !16\l  %incdec.ptr.1 = getelementptr inbounds i8, i8* %inptr.022, i64 2\l  %13 = load i8, i8* %incdec.ptr, align 1, !tbaa !16\l  %idxprom.1 = zext i8 %13 to i64\l  %arrayidx2.1 = getelementptr inbounds i8, i8* %1, i64 %idxprom.1\l  %14 = load i8, i8* %arrayidx2.1, align 1, !tbaa !16\l  %incdec.ptr5.1 = getelementptr inbounds i8, i8* %outptr.021, i64 2\l  store i8 %14, i8* %incdec.ptr5, align 1, !tbaa !16\l  %incdec.ptr.2 = getelementptr inbounds i8, i8* %inptr.022, i64 3\l  %15 = load i8, i8* %incdec.ptr.1, align 1, !tbaa !16\l  %idxprom.2 = zext i8 %15 to i64\l  %arrayidx2.2 = getelementptr inbounds i8, i8* %1, i64 %idxprom.2\l  %16 = load i8, i8* %arrayidx2.2, align 1, !tbaa !16\l  %incdec.ptr5.2 = getelementptr inbounds i8, i8* %outptr.021, i64 3\l  store i8 %16, i8* %incdec.ptr5.1, align 1, !tbaa !16\l  %incdec.ptr.3 = getelementptr inbounds i8, i8* %inptr.022, i64 4\l  %17 = load i8, i8* %incdec.ptr.2, align 1, !tbaa !16\l  %idxprom.3 = zext i8 %17 to i64\l  %arrayidx2.3 = getelementptr inbounds i8, i8* %1, i64 %idxprom.3\l  %18 = load i8, i8* %arrayidx2.3, align 1, !tbaa !16\l  %incdec.ptr5.3 = getelementptr inbounds i8, i8* %outptr.021, i64 4\l  store i8 %18, i8* %incdec.ptr5.2, align 1, !tbaa !16\l  %dec.3 = add i32 %col.023, -4\l  %cmp.3 = icmp eq i32 %dec.3, 0\l  br i1 %cmp.3, label %for.end.loopexit.unr-lcssa, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x6021530:s0 -> Node0x6015840;
	Node0x6021530:s1 -> Node0x6021530;
	Node0x6015840 [shape=record,label="{for.end.loopexit.unr-lcssa:                       \l  br label %for.end.loopexit\l}"];
	Node0x6015840 -> Node0x60212c0;
	Node0x60212c0 [shape=record,label="{for.end.loopexit:                                 \l  %.pre = load i8*, i8** %2, align 8, !tbaa !11\l  br label %for.end\l}"];
	Node0x60212c0 -> Node0x601df70;
	Node0x601df70 [shape=record,label="{for.end:                                          \l  %19 = phi i8* [ %.pre, %for.end.loopexit ], [ %3, %entry ]\l  %buffer_width = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 1, i32 1\l  %20 = bitcast void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*, i32)** %buffer_width to i32*\l  %21 = load i32, i32* %20, align 8, !tbaa !19\l  %conv7 = zext i32 %21 to i64\l  %output_file = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 0, i32 3\l  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %output_file, align 8,\l... !tbaa !20\l  %call = tail call i64 @fwrite(i8* %19, i64 1, i64 %conv7, %struct._IO_FILE*\l... %22)\l  ret void\l}"];
}
