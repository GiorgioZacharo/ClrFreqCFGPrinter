digraph "CFG for 'alloc_large' function" {
	label="CFG for 'alloc_large' function";

	Node0x5773760 [shape=record, style = filled, fillcolor = skyblue, label="{entry:\l  %mem1 = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 1\l  %0 = bitcast %struct.jpeg_memory_mgr** %mem1 to %struct.my_memory_mgr**\l  %1 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %0, align 8, !tbaa\l... !3\l  %cmp = icmp ugt i64 %sizeofobject, 999999976\l  br i1 %cmp, label %if.then, label %if.end, !prof !9\l|{<s0>T|<s1>F}}"];
	Node0x5773760:s0 -> Node0x57739b0;
	Node0x5773760:s1 -> Node0x5773a80;
	Node0x57739b0 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %err.i = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %2 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8,\l... !tbaa !10\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %2, i64 0, i32 5\l  store i32 53, i32* %msg_code.i, align 8, !tbaa !11\l  %arrayidx.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %2, i64 0, i32 6, i32 0, i64 0\l  store i32 3, i32* %arrayidx.i, align 4, !tbaa !14\l  %3 = bitcast %struct.jpeg_error_mgr* %2 to void\l... (%struct.jpeg_common_struct*)**\l  %4 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %3, align 8, !tbaa !15\l  tail call void %4(%struct.jpeg_common_struct* nonnull %cinfo) #5\l  br label %if.end\l}"];
	Node0x57739b0 -> Node0x5773a80;
	Node0x5773a80 [shape=record, style = filled, fillcolor = skyblue, label="{if.end:                                           \l  %rem = and i64 %sizeofobject, 7\l  %cmp2 = icmp eq i64 %rem, 0\l  %sub = sub nsw i64 8, %rem\l  %add = select i1 %cmp2, i64 0, i64 %sub\l  %sizeofobject.addr.0 = add i64 %add, %sizeofobject\l  %5 = icmp ugt i32 %pool_id, 1\l  br i1 %5, label %if.then7, label %if.end11, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x5773a80:s0 -> Node0x57747d0;
	Node0x5773a80:s1 -> Node0x5774850;
	Node0x57747d0 [shape=record, style = filled, fillcolor = skyblue, label="{if.then7:                                         \l  %err = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %6 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !10\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %6, i64 0, i32 5\l  store i32 12, i32* %msg_code, align 8, !tbaa !11\l  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %6, i64 0, i32 6, i32 0, i64 0\l  store i32 %pool_id, i32* %arrayidx, align 4, !tbaa !14\l  %7 = bitcast %struct.jpeg_error_mgr* %6 to void\l... (%struct.jpeg_common_struct*)**\l  %8 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %7, align 8, !tbaa !15\l  tail call void %8(%struct.jpeg_common_struct* nonnull %cinfo) #5\l  br label %if.end11\l}"];
	Node0x57747d0 -> Node0x5774850;
	Node0x5774850 [shape=record, style = filled, fillcolor = skyblue, label="{if.end11:                                         \l  %add12 = add i64 %sizeofobject.addr.0, 24\l  %call = tail call i8* @jpeg_get_large(%struct.jpeg_common_struct* nonnull\l... %cinfo, i64 %add12) #5\l  %cmp13 = icmp eq i8* %call, null\l  br i1 %cmp13, label %if.then14, label %if.end15, !prof !9\l|{<s0>T|<s1>F}}"];
	Node0x5774850:s0 -> Node0x57755d0;
	Node0x5774850:s1 -> Node0x57744d0;
	Node0x57755d0 [shape=record, style = filled, fillcolor = blue, label="{if.then14:                                        \l  %err.i51 = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i51, align\l... 8, !tbaa !10\l  %msg_code.i52 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 5\l  store i32 53, i32* %msg_code.i52, align 8, !tbaa !11\l  %arrayidx.i53 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 0\l  store i32 4, i32* %arrayidx.i53, align 4, !tbaa !14\l  %10 = bitcast %struct.jpeg_error_mgr* %9 to void\l... (%struct.jpeg_common_struct*)**\l  %11 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %10, align 8, !tbaa !15\l  tail call void %11(%struct.jpeg_common_struct* nonnull %cinfo) #5\l  br label %if.end15\l}"];
	Node0x57755d0 -> Node0x57744d0;
	Node0x57744d0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end15:                                         \l  %total_space_allocated = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %1, i64 0, i32 5\l  %12 = load i64, i64* %total_space_allocated, align 8, !tbaa !17\l  %add17 = add i64 %12, %add12\l  store i64 %add17, i64* %total_space_allocated, align 8, !tbaa !17\l  %idxprom = sext i32 %pool_id to i64\l  %arrayidx18 = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %1, i64 0, i32 2, i64 %idxprom\l  %13 = bitcast %union.large_pool_struct** %arrayidx18 to i64*\l  %14 = load i64, i64* %13, align 8, !tbaa !20\l  %15 = bitcast i8* %call to i64*\l  store i64 %14, i64* %15, align 8, !tbaa !21\l  %bytes_used = getelementptr inbounds i8, i8* %call, i64 8\l  %16 = bitcast i8* %bytes_used to i64*\l  store i64 %sizeofobject.addr.0, i64* %16, align 8, !tbaa !23\l  %bytes_left = getelementptr inbounds i8, i8* %call, i64 16\l  %17 = bitcast i8* %bytes_left to i64*\l  store i64 0, i64* %17, align 8, !tbaa !24\l  %18 = bitcast %union.large_pool_struct** %arrayidx18 to i8**\l  store i8* %call, i8** %18, align 8, !tbaa !20\l  %add.ptr = getelementptr inbounds i8, i8* %call, i64 24\l  ret i8* %add.ptr\l}"];
}
