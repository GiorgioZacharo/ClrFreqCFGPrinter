digraph "CFG for 'jinit_downsampler' function" {
	label="CFG for 'jinit_downsampler' function";

	Node0x58a85f0 [shape=record,label="{entry:\l  %mem = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1\l  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !3\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %0, i64 0, i32 0\l  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !11\l  %2 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %1(%struct.jpeg_common_struct* %2, i32 1, i64 104) #5\l  %downsample1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 57\l  %3 = bitcast %struct.jpeg_downsampler** %downsample1 to i8**\l  store i8* %call, i8** %3, align 8, !tbaa !14\l  %start_pass2 = bitcast i8* %call to void (%struct.jpeg_compress_struct*)**\l  store void (%struct.jpeg_compress_struct*)* @start_pass_downsample, void\l... (%struct.jpeg_compress_struct*)** %start_pass2, align 8, !tbaa !15\l  %downsample4 = getelementptr inbounds i8, i8* %call, i64 8\l  %4 = bitcast i8* %downsample4 to void (%struct.jpeg_compress_struct*, i8***,\l... i32, i8***, i32)**\l  store void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32)*\l... @sep_downsample, void (%struct.jpeg_compress_struct*, i8***, i32, i8***,\l... i32)** %4, align 8, !tbaa !18\l  %need_context_rows = getelementptr inbounds i8, i8* %call, i64 16\l  %5 = bitcast i8* %need_context_rows to i32*\l  store i32 0, i32* %5, align 8, !tbaa !19\l  %CCIR601_sampling = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 26\l  %6 = load i32, i32* %CCIR601_sampling, align 4, !tbaa !20\l  %tobool = icmp eq i32 %6, 0\l  br i1 %tobool, label %if.end, label %if.then, !prof !21\l|{<s0>T|<s1>F}}"];
	Node0x58a85f0:s0 -> Node0x58ab610;
	Node0x58a85f0:s1 -> Node0x58ab6e0;
	Node0x58ab6e0 [shape=record,label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %7 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !22\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %7, i64 0, i32 5\l  store i32 23, i32* %msg_code, align 8, !tbaa !23\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %7, i64 0, i32 0\l  %8 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !25\l  tail call void %8(%struct.jpeg_common_struct* %2) #5\l  br label %if.end\l}"];
	Node0x58ab6e0 -> Node0x58ab610;
	Node0x58ab610 [shape=record,label="{if.end:                                           \l  %num_components = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12\l  %9 = load i32, i32* %num_components, align 4, !tbaa !26\l  %cmp136 = icmp sgt i32 %9, 0\l  br i1 %cmp136, label %for.body.lr.ph, label %if.end84, !prof !27\l|{<s0>T|<s1>F}}"];
	Node0x58ab610:s0 -> Node0x58ac5a0;
	Node0x58ab610:s1 -> Node0x58ac680;
	Node0x58ac5a0 [shape=record,label="{for.body.lr.ph:                                   \l  %comp_info = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14\l  %10 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !28\l  %max_h_samp_factor = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 38\l  %smoothing_factor = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 27\l  %methods = getelementptr inbounds i8, i8* %call, i64 24\l  %11 = bitcast i8* %methods to [10 x void (%struct.jpeg_compress_struct*,\l... %struct.jpeg_component_info*, i8**, i8**)*]*\l  %err68 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %12 = bitcast i32* %max_h_samp_factor to i64*\l  br label %for.body\l}"];
	Node0x58ac5a0 -> Node0x58ab7e0;
	Node0x58ab7e0 [shape=record,label="{for.body:                                         \l  %13 = phi i32 [ %9, %for.body.lr.ph ], [ %27, %for.inc ]\l  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]\l  %smoothok.0141 = phi i32 [ 1, %for.body.lr.ph ], [ %smoothok.1, %for.inc ]\l  %compptr.0139 = phi %struct.jpeg_component_info* [ %10, %for.body.lr.ph ], [\l... %incdec.ptr, %for.inc ]\l  %h_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0139, i64 0, i32 2\l  %14 = bitcast i32* %h_samp_factor to i64*\l  %15 = load i64, i64* %14, align 8\l  %16 = trunc i64 %15 to i32\l  %17 = load i64, i64* %12, align 8\l  %18 = trunc i64 %17 to i32\l  %cmp7 = icmp eq i32 %16, %18\l  %19 = lshr i64 %15, 32\l  %20 = trunc i64 %19 to i32\l  %21 = lshr i64 %17, 32\l  %22 = trunc i64 %21 to i32\l  %cmp8 = icmp eq i32 %20, %22\l  %or.cond148 = and i1 %cmp7, %cmp8\l  br i1 %or.cond148, label %if.then9, label %if.else18, !prof !29\l|{<s0>T|<s1>F}}"];
	Node0x58ab7e0:s0 -> Node0x58ae0d0;
	Node0x58ab7e0:s1 -> Node0x58ae1b0;
	Node0x58ae0d0 [shape=record,label="{if.then9:                                         \l  %23 = load i32, i32* %smoothing_factor, align 8, !tbaa !30\l  %tobool10 = icmp eq i32 %23, 0\l  %arrayidx = getelementptr inbounds [10 x void\l... (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**)*],\l... [10 x void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*,\l... i8**, i8**)*]* %11, i64 0, i64 %indvars.iv\l  br i1 %tobool10, label %if.else, label %if.then11, !prof !21\l|{<s0>T|<s1>F}}"];
	Node0x58ae0d0:s0 -> Node0x58ae700;
	Node0x58ae0d0:s1 -> Node0x58ae7d0;
	Node0x58ae7d0 [shape=record,label="{if.then11:                                        \l  store void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*,\l... i8**, i8**)* @fullsize_smooth_downsample, void\l... (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**)**\l... %arrayidx, align 8, !tbaa !31\l  store i32 1, i32* %5, align 8, !tbaa !19\l  br label %for.inc\l}"];
	Node0x58ae7d0 -> Node0x58ad360;
	Node0x58ae700 [shape=record,label="{if.else:                                          \l  store void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*,\l... i8**, i8**)* @fullsize_downsample, void (%struct.jpeg_compress_struct*,\l... %struct.jpeg_component_info*, i8**, i8**)** %arrayidx, align 8, !tbaa !31\l  br label %for.inc\l}"];
	Node0x58ae700 -> Node0x58ad360;
	Node0x58ae1b0 [shape=record,label="{if.else18:                                        \l  %mul = shl nsw i32 %16, 1\l  %cmp21 = icmp eq i32 %mul, %18\l  br i1 %cmp21, label %land.lhs.true22, label %if.else54, !prof !32\l|{<s0>T|<s1>F}}"];
	Node0x58ae1b0:s0 -> Node0x58a73a0;
	Node0x58ae1b0:s1 -> Node0x58a73f0;
	Node0x58a73a0 [shape=record,label="{land.lhs.true22:                                  \l  %cmp25 = icmp eq i32 %20, %22\l  br i1 %cmp25, label %if.then26, label %land.lhs.true35, !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x58a73a0:s0 -> Node0x58b0a90;
	Node0x58a73a0:s1 -> Node0x58b0b10;
	Node0x58b0a90 [shape=record,label="{if.then26:                                        \l  %arrayidx29 = getelementptr inbounds [10 x void\l... (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**)*],\l... [10 x void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*,\l... i8**, i8**)*]* %11, i64 0, i64 %indvars.iv\l  store void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*,\l... i8**, i8**)* @h2v1_downsample, void (%struct.jpeg_compress_struct*,\l... %struct.jpeg_component_info*, i8**, i8**)** %arrayidx29, align 8, !tbaa !31\l  br label %for.inc\l}"];
	Node0x58b0a90 -> Node0x58ad360;
	Node0x58b0b10 [shape=record,label="{land.lhs.true35:                                  \l  %mul37143 = shl nuw nsw i64 %19, 1\l  %mul37 = trunc i64 %mul37143 to i32\l  %cmp39 = icmp eq i32 %mul37, %22\l  br i1 %cmp39, label %if.then40, label %if.else54, !prof !32\l|{<s0>T|<s1>F}}"];
	Node0x58b0b10:s0 -> Node0x58ad080;
	Node0x58b0b10:s1 -> Node0x58a73f0;
	Node0x58ad080 [shape=record,label="{if.then40:                                        \l  %24 = load i32, i32* %smoothing_factor, align 8, !tbaa !30\l  %tobool42 = icmp eq i32 %24, 0\l  %arrayidx46 = getelementptr inbounds [10 x void\l... (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**)*],\l... [10 x void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*,\l... i8**, i8**)*]* %11, i64 0, i64 %indvars.iv\l  br i1 %tobool42, label %if.else49, label %if.then43, !prof !32\l|{<s0>T|<s1>F}}"];
	Node0x58ad080:s0 -> Node0x58b2450;
	Node0x58ad080:s1 -> Node0x58b2530;
	Node0x58b2530 [shape=record,label="{if.then43:                                        \l  store void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*,\l... i8**, i8**)* @h2v2_smooth_downsample, void (%struct.jpeg_compress_struct*,\l... %struct.jpeg_component_info*, i8**, i8**)** %arrayidx46, align 8, !tbaa !31\l  store i32 1, i32* %5, align 8, !tbaa !19\l  br label %for.inc\l}"];
	Node0x58b2530 -> Node0x58ad360;
	Node0x58b2450 [shape=record,label="{if.else49:                                        \l  store void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*,\l... i8**, i8**)* @h2v2_downsample, void (%struct.jpeg_compress_struct*,\l... %struct.jpeg_component_info*, i8**, i8**)** %arrayidx46, align 8, !tbaa !31\l  br label %for.inc\l}"];
	Node0x58b2450 -> Node0x58ad360;
	Node0x58a73f0 [shape=record,label="{if.else54:                                        \l  %rem = srem i32 %18, %16\l  %cmp57 = icmp eq i32 %rem, 0\l  br i1 %cmp57, label %land.lhs.true58, label %if.else67\l|{<s0>T|<s1>F}}"];
	Node0x58a73f0:s0 -> Node0x58b2c80;
	Node0x58a73f0:s1 -> Node0x58b2d00;
	Node0x58b2c80 [shape=record,label="{land.lhs.true58:                                  \l  %rem61 = srem i32 %22, %20\l  %cmp62 = icmp eq i32 %rem61, 0\l  br i1 %cmp62, label %if.then63, label %if.else67\l|{<s0>T|<s1>F}}"];
	Node0x58b2c80:s0 -> Node0x58b2fb0;
	Node0x58b2c80:s1 -> Node0x58b2d00;
	Node0x58b2fb0 [shape=record,label="{if.then63:                                        \l  %arrayidx66 = getelementptr inbounds [10 x void\l... (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**)*],\l... [10 x void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*,\l... i8**, i8**)*]* %11, i64 0, i64 %indvars.iv\l  store void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*,\l... i8**, i8**)* @int_downsample, void (%struct.jpeg_compress_struct*,\l... %struct.jpeg_component_info*, i8**, i8**)** %arrayidx66, align 8, !tbaa !31\l  br label %for.inc\l}"];
	Node0x58b2fb0 -> Node0x58ad360;
	Node0x58b2d00 [shape=record,label="{if.else67:                                        \l  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err68, align\l... 8, !tbaa !22\l  %msg_code69 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %25, i64 0, i32 5\l  store i32 37, i32* %msg_code69, align 8, !tbaa !23\l  %error_exit71 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %25, i64 0, i32 0\l  %26 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit71, align 8, !tbaa !25\l  tail call void %26(%struct.jpeg_common_struct* nonnull %2) #5\l  %.pre = load i32, i32* %num_components, align 4, !tbaa !26\l  br label %for.inc\l}"];
	Node0x58b2d00 -> Node0x58ad360;
	Node0x58ad360 [shape=record,label="{for.inc:                                          \l  %27 = phi i32 [ %13, %if.then11 ], [ %13, %if.else ], [ %13, %if.then26 ], [\l... %13, %if.then43 ], [ %13, %if.else49 ], [ %13, %if.then63 ], [ %.pre,\l... %if.else67 ]\l  %smoothok.1 = phi i32 [ %smoothok.0141, %if.then11 ], [ %smoothok.0141,\l... %if.else ], [ 0, %if.then26 ], [ %smoothok.0141, %if.then43 ], [\l... %smoothok.0141, %if.else49 ], [ 0, %if.then63 ], [ %smoothok.0141, %if.else67\l... ]\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %incdec.ptr = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0139, i64 1\l  %28 = sext i32 %27 to i64\l  %cmp = icmp slt i64 %indvars.iv.next, %28\l  br i1 %cmp, label %for.body, label %for.end, !prof !27\l|{<s0>T|<s1>F}}"];
	Node0x58ad360:s0 -> Node0x58ab7e0;
	Node0x58ad360:s1 -> Node0x58b54d0;
	Node0x58b54d0 [shape=record,label="{for.end:                                          \l  %smoothok.1.lcssa = phi i32 [ %smoothok.1, %for.inc ]\l  %29 = load i32, i32* %smoothing_factor, align 8, !tbaa !30\l  %tobool77 = icmp eq i32 %29, 0\l  %tobool79 = icmp ne i32 %smoothok.1.lcssa, 0\l  %or.cond = or i1 %tobool79, %tobool77\l  br i1 %or.cond, label %if.end84, label %if.then80, !prof !34\l|{<s0>T|<s1>F}}"];
	Node0x58b54d0:s0 -> Node0x58ac680;
	Node0x58b54d0:s1 -> Node0x58b5d60;
	Node0x58b5d60 [shape=record,label="{if.then80:                                        \l  %err81 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err81, align\l... 8, !tbaa !22\l  %msg_code82 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %30, i64 0, i32 5\l  store i32 98, i32* %msg_code82, align 8, !tbaa !23\l  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %30, i64 0, i32 1\l  %31 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !35\l  tail call void %31(%struct.jpeg_common_struct* nonnull %2, i32 0) #5\l  br label %if.end84\l}"];
	Node0x58b5d60 -> Node0x58ac680;
	Node0x58ac680 [shape=record,label="{if.end84:                                         \l  ret void\l}"];
}
