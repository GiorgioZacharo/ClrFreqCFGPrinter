digraph "CFG for 'update_box' function" {
	label="CFG for 'update_box' function";

	Node0x62ac150 [shape=record,label="{entry:\l  %cquantize1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %0 = bitcast %struct.jpeg_color_quantizer** %cquantize1 to\l... %struct.my_cquantizer**\l  %1 = load %struct.my_cquantizer*, %struct.my_cquantizer** %0, align 8, !tbaa\l... !2\l  %histogram2 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 3\l  %2 = load [32 x i16]**, [32 x i16]*** %histogram2, align 8, !tbaa !10\l  %c0min3 = getelementptr inbounds %struct.box, %struct.box* %boxp, i64 0, i32\l... 0\l  %3 = bitcast %struct.box* %boxp to i64*\l  %4 = load i64, i64* %3, align 8\l  %5 = trunc i64 %4 to i32\l  %c0max4 = getelementptr inbounds %struct.box, %struct.box* %boxp, i64 0, i32\l... 1\l  %6 = lshr i64 %4, 32\l  %7 = trunc i64 %6 to i32\l  %c1min5 = getelementptr inbounds %struct.box, %struct.box* %boxp, i64 0, i32\l... 2\l  %8 = bitcast i32* %c1min5 to i64*\l  %9 = load i64, i64* %8, align 8\l  %10 = trunc i64 %9 to i32\l  %c1max6 = getelementptr inbounds %struct.box, %struct.box* %boxp, i64 0, i32\l... 3\l  %11 = lshr i64 %9, 32\l  %12 = trunc i64 %11 to i32\l  %c2min7 = getelementptr inbounds %struct.box, %struct.box* %boxp, i64 0, i32\l... 4\l  %13 = bitcast i32* %c2min7 to i64*\l  %14 = load i64, i64* %13, align 8\l  %15 = trunc i64 %14 to i32\l  %c2max8 = getelementptr inbounds %struct.box, %struct.box* %boxp, i64 0, i32\l... 5\l  %16 = lshr i64 %14, 32\l  %17 = trunc i64 %16 to i32\l  %18 = icmp slt i32 %5, %7\l  br i1 %18, label %for.cond10.preheader.lr.ph, label %have_c0min\l|{<s0>T|<s1>F}}"];
	Node0x62ac150:s0 -> Node0x628c610;
	Node0x62ac150:s1 -> Node0x628d1a0;
	Node0x628c610 [shape=record,label="{for.cond10.preheader.lr.ph:                       \l  %cmp11493 = icmp sgt i32 %10, %12\l  %sext1063 = shl i64 %14, 32\l  %idxprom = ashr exact i64 %sext1063, 32\l  %cmp18490 = icmp sgt i32 %15, %17\l  %or.cond = or i1 %cmp11493, %cmp18490\l  br i1 %or.cond, label %have_c0min, label %for.body12.lr.ph.preheader\l|{<s0>T|<s1>F}}"];
	Node0x628c610:s0 -> Node0x628d1a0;
	Node0x628c610:s1 -> Node0x628d6f0;
	Node0x628d6f0 [shape=record,label="{for.body12.lr.ph.preheader:                       \l  %sext1064 = shl i64 %9, 32\l  %19 = ashr exact i64 %sext1064, 32\l  %20 = ashr i64 %9, 32\l  %sext1066 = shl i64 %4, 32\l  %21 = ashr exact i64 %sext1066, 32\l  %22 = ashr i64 %4, 32\l  br label %for.body12.lr.ph\l}"];
	Node0x628d6f0 -> Node0x628db70;
	Node0x628db70 [shape=record,label="{for.body12.lr.ph:                                 \l  %indvars.iv1051 = phi i64 [ %21, %for.body12.lr.ph.preheader ], [\l... %indvars.iv.next1052, %for.inc27 ]\l  %arrayidx = getelementptr inbounds [32 x i16]*, [32 x i16]** %2, i64\l... %indvars.iv1051\l  %23 = load [32 x i16]*, [32 x i16]** %arrayidx, align 8\l  br label %for.body12\l}"];
	Node0x628db70 -> Node0x628d250;
	Node0x628d250 [shape=record,label="{for.body12:                                       \l  %indvars.iv1049 = phi i64 [ %indvars.iv.next1050, %for.inc24 ], [ %19,\l... %for.body12.lr.ph ]\l  %arrayidx16 = getelementptr inbounds [32 x i16], [32 x i16]* %23, i64\l... %indvars.iv1049, i64 %idxprom\l  br label %for.body19\l}"];
	Node0x628d250 -> Node0x628e540;
	Node0x628e540 [shape=record,label="{for.body19:                                       \l  %histp.0492 = phi i16* [ %arrayidx16, %for.body12 ], [ %incdec.ptr, %for.inc\l... ]\l  %c2.0491 = phi i32 [ %15, %for.body12 ], [ %inc, %for.inc ]\l  %24 = load i16, i16* %histp.0492, align 2, !tbaa !13\l  %cmp20 = icmp eq i16 %24, 0\l  br i1 %cmp20, label %for.inc, label %if.then22\l|{<s0>T|<s1>F}}"];
	Node0x628e540:s0 -> Node0x628e6f0;
	Node0x628e540:s1 -> Node0x628eb30;
	Node0x628eb30 [shape=record,label="{if.then22:                                        \l  %indvars.iv1051.lcssa = phi i64 [ %indvars.iv1051, %for.body19 ]\l  %25 = trunc i64 %indvars.iv1051.lcssa to i32\l  store i32 %25, i32* %c0min3, align 8, !tbaa !14\l  br label %have_c0min\l}"];
	Node0x628eb30 -> Node0x628d1a0;
	Node0x628e6f0 [shape=record,label="{for.inc:                                          \l  %incdec.ptr = getelementptr inbounds i16, i16* %histp.0492, i64 1\l  %inc = add nsw i32 %c2.0491, 1\l  %cmp18 = icmp slt i32 %c2.0491, %17\l  br i1 %cmp18, label %for.body19, label %for.inc24\l|{<s0>T|<s1>F}}"];
	Node0x628e6f0:s0 -> Node0x628e540;
	Node0x628e6f0:s1 -> Node0x628e2e0;
	Node0x628e2e0 [shape=record,label="{for.inc24:                                        \l  %cmp11 = icmp slt i64 %indvars.iv1049, %20\l  %indvars.iv.next1050 = add nsw i64 %indvars.iv1049, 1\l  br i1 %cmp11, label %for.body12, label %for.inc27\l|{<s0>T|<s1>F}}"];
	Node0x628e2e0:s0 -> Node0x628d250;
	Node0x628e2e0:s1 -> Node0x628dce0;
	Node0x628dce0 [shape=record,label="{for.inc27:                                        \l  %indvars.iv.next1052 = add nsw i64 %indvars.iv1051, 1\l  %cmp9 = icmp slt i64 %indvars.iv1051, %22\l  br i1 %cmp9, label %for.body12.lr.ph, label %have_c0min.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x628dce0:s0 -> Node0x628db70;
	Node0x628dce0:s1 -> Node0x628f390;
	Node0x628f390 [shape=record,label="{have_c0min.loopexit:                              \l  br label %have_c0min\l}"];
	Node0x628f390 -> Node0x628d1a0;
	Node0x628d1a0 [shape=record,label="{have_c0min:                                       \l  %c0min.0 = phi i32 [ %25, %if.then22 ], [ %5, %entry ], [ %5,\l... %for.cond10.preheader.lr.ph ], [ %5, %have_c0min.loopexit ]\l  %26 = icmp sgt i32 %7, %c0min.0\l  br i1 %26, label %for.cond38.preheader.lr.ph, label %have_c0max\l|{<s0>T|<s1>F}}"];
	Node0x628d1a0:s0 -> Node0x628f5b0;
	Node0x628d1a0:s1 -> Node0x628f600;
	Node0x628f5b0 [shape=record,label="{for.cond38.preheader.lr.ph:                       \l  %cmp39485 = icmp sgt i32 %10, %12\l  %sext1059 = shl i64 %14, 32\l  %idxprom42 = ashr exact i64 %sext1059, 32\l  %cmp49482 = icmp sgt i32 %15, %17\l  %or.cond1074 = or i1 %cmp39485, %cmp49482\l  br i1 %or.cond1074, label %have_c0max, label %for.body41.lr.ph.preheader\l|{<s0>T|<s1>F}}"];
	Node0x628f5b0:s0 -> Node0x628f600;
	Node0x628f5b0:s1 -> Node0x628e170;
	Node0x628e170 [shape=record,label="{for.body41.lr.ph.preheader:                       \l  %sext1060 = shl i64 %9, 32\l  %27 = ashr exact i64 %sext1060, 32\l  %28 = ashr i64 %9, 32\l  %29 = ashr i64 %4, 32\l  %30 = sext i32 %c0min.0 to i64\l  br label %for.body41.lr.ph\l}"];
	Node0x628e170 -> Node0x6290060;
	Node0x6290060 [shape=record,label="{for.body41.lr.ph:                                 \l  %indvars.iv1047 = phi i64 [ %29, %for.body41.lr.ph.preheader ], [\l... %indvars.iv.next1048, %for.inc65 ]\l  %arrayidx45 = getelementptr inbounds [32 x i16]*, [32 x i16]** %2, i64\l... %indvars.iv1047\l  %31 = load [32 x i16]*, [32 x i16]** %arrayidx45, align 8\l  br label %for.body41\l}"];
	Node0x6290060 -> Node0x6290320;
	Node0x6290320 [shape=record,label="{for.body41:                                       \l  %indvars.iv1045 = phi i64 [ %indvars.iv.next1046, %for.inc62 ], [ %27,\l... %for.body41.lr.ph ]\l  %arrayidx47 = getelementptr inbounds [32 x i16], [32 x i16]* %31, i64\l... %indvars.iv1045, i64 %idxprom42\l  br label %for.body51\l}"];
	Node0x6290320 -> Node0x62b5b60;
	Node0x62b5b60 [shape=record,label="{for.body51:                                       \l  %histp.1484 = phi i16* [ %arrayidx47, %for.body41 ], [ %incdec.ptr52,\l... %for.inc59 ]\l  %c2.1483 = phi i32 [ %15, %for.body41 ], [ %inc60, %for.inc59 ]\l  %32 = load i16, i16* %histp.1484, align 2, !tbaa !13\l  %cmp54 = icmp eq i16 %32, 0\l  br i1 %cmp54, label %for.inc59, label %if.then56\l|{<s0>T|<s1>F}}"];
	Node0x62b5b60:s0 -> Node0x62b5d10;
	Node0x62b5b60:s1 -> Node0x628d010;
	Node0x628d010 [shape=record,label="{if.then56:                                        \l  %indvars.iv1047.lcssa = phi i64 [ %indvars.iv1047, %for.body51 ]\l  %33 = trunc i64 %indvars.iv1047.lcssa to i32\l  store i32 %33, i32* %c0max4, align 4, !tbaa !17\l  br label %have_c0max\l}"];
	Node0x628d010 -> Node0x628f600;
	Node0x62b5d10 [shape=record,label="{for.inc59:                                        \l  %incdec.ptr52 = getelementptr inbounds i16, i16* %histp.1484, i64 1\l  %inc60 = add nsw i32 %c2.1483, 1\l  %cmp49 = icmp slt i32 %c2.1483, %17\l  br i1 %cmp49, label %for.body51, label %for.inc62\l|{<s0>T|<s1>F}}"];
	Node0x62b5d10:s0 -> Node0x62b5b60;
	Node0x62b5d10:s1 -> Node0x62b5900;
	Node0x62b5900 [shape=record,label="{for.inc62:                                        \l  %cmp39 = icmp slt i64 %indvars.iv1045, %28\l  %indvars.iv.next1046 = add nsw i64 %indvars.iv1045, 1\l  br i1 %cmp39, label %for.body41, label %for.inc65\l|{<s0>T|<s1>F}}"];
	Node0x62b5900:s0 -> Node0x6290320;
	Node0x62b5900:s1 -> Node0x6290130;
	Node0x6290130 [shape=record,label="{for.inc65:                                        \l  %indvars.iv.next1048 = add nsw i64 %indvars.iv1047, -1\l  %cmp35 = icmp sgt i64 %indvars.iv1047, %30\l  br i1 %cmp35, label %for.body41.lr.ph, label %have_c0max.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6290130:s0 -> Node0x6290060;
	Node0x6290130:s1 -> Node0x62b6ac0;
	Node0x62b6ac0 [shape=record,label="{have_c0max.loopexit:                              \l  br label %have_c0max\l}"];
	Node0x62b6ac0 -> Node0x628f600;
	Node0x628f600 [shape=record,label="{have_c0max:                                       \l  %c0max.0 = phi i32 [ %33, %if.then56 ], [ %7, %have_c0min ], [ %7,\l... %for.cond38.preheader.lr.ph ], [ %7, %have_c0max.loopexit ]\l  %34 = icmp slt i32 %10, %12\l  br i1 %34, label %for.cond75.preheader.lr.ph, label %have_c1min\l|{<s0>T|<s1>F}}"];
	Node0x628f600:s0 -> Node0x62b6ce0;
	Node0x628f600:s1 -> Node0x62b6d30;
	Node0x62b6ce0 [shape=record,label="{for.cond75.preheader.lr.ph:                       \l  %cmp76477 = icmp slt i32 %c0max.0, %c0min.0\l  %sext1056 = shl i64 %14, 32\l  %idxprom79 = ashr exact i64 %sext1056, 32\l  %cmp86474 = icmp sgt i32 %15, %17\l  %or.cond1075 = or i1 %cmp76477, %cmp86474\l  br i1 %or.cond1075, label %have_c1min, label %for.body78.lr.ph.preheader\l|{<s0>T|<s1>F}}"];
	Node0x62b6ce0:s0 -> Node0x62b6d30;
	Node0x62b6ce0:s1 -> Node0x62b71b0;
	Node0x62b71b0 [shape=record,label="{for.body78.lr.ph.preheader:                       \l  %35 = sext i32 %c0min.0 to i64\l  %36 = sext i32 %c0max.0 to i64\l  %sext1057 = shl i64 %9, 32\l  %37 = ashr exact i64 %sext1057, 32\l  %38 = ashr i64 %9, 32\l  br label %for.body78.lr.ph\l}"];
	Node0x62b71b0 -> Node0x62b7440;
	Node0x62b7440 [shape=record,label="{for.body78.lr.ph:                                 \l  %indvars.iv1043 = phi i64 [ %37, %for.body78.lr.ph.preheader ], [\l... %indvars.iv.next1044, %for.inc102 ]\l  br label %for.body78\l}"];
	Node0x62b7440 -> Node0x62b7640;
	Node0x62b7640 [shape=record,label="{for.body78:                                       \l  %indvars.iv1041 = phi i64 [ %indvars.iv.next1042, %for.inc99 ], [ %35,\l... %for.body78.lr.ph ]\l  %arrayidx82 = getelementptr inbounds [32 x i16]*, [32 x i16]** %2, i64\l... %indvars.iv1041\l  %39 = load [32 x i16]*, [32 x i16]** %arrayidx82, align 8, !tbaa !18\l  %arrayidx84 = getelementptr inbounds [32 x i16], [32 x i16]* %39, i64\l... %indvars.iv1043, i64 %idxprom79\l  br label %for.body88\l}"];
	Node0x62b7640 -> Node0x62b7b50;
	Node0x62b7b50 [shape=record,label="{for.body88:                                       \l  %histp.2476 = phi i16* [ %arrayidx84, %for.body78 ], [ %incdec.ptr89,\l... %for.inc96 ]\l  %c2.2475 = phi i32 [ %15, %for.body78 ], [ %inc97, %for.inc96 ]\l  %40 = load i16, i16* %histp.2476, align 2, !tbaa !13\l  %cmp91 = icmp eq i16 %40, 0\l  br i1 %cmp91, label %for.inc96, label %if.then93\l|{<s0>T|<s1>F}}"];
	Node0x62b7b50:s0 -> Node0x62b7d00;
	Node0x62b7b50:s1 -> Node0x628fc10;
	Node0x628fc10 [shape=record,label="{if.then93:                                        \l  %indvars.iv1043.lcssa = phi i64 [ %indvars.iv1043, %for.body88 ]\l  %41 = trunc i64 %indvars.iv1043.lcssa to i32\l  store i32 %41, i32* %c1min5, align 8, !tbaa !19\l  br label %have_c1min\l}"];
	Node0x628fc10 -> Node0x62b6d30;
	Node0x62b7d00 [shape=record,label="{for.inc96:                                        \l  %incdec.ptr89 = getelementptr inbounds i16, i16* %histp.2476, i64 1\l  %inc97 = add nsw i32 %c2.2475, 1\l  %cmp86 = icmp slt i32 %c2.2475, %17\l  br i1 %cmp86, label %for.body88, label %for.inc99\l|{<s0>T|<s1>F}}"];
	Node0x62b7d00:s0 -> Node0x62b7b50;
	Node0x62b7d00:s1 -> Node0x62b77d0;
	Node0x62b77d0 [shape=record,label="{for.inc99:                                        \l  %cmp76 = icmp slt i64 %indvars.iv1041, %36\l  %indvars.iv.next1042 = add nsw i64 %indvars.iv1041, 1\l  br i1 %cmp76, label %for.body78, label %for.inc102\l|{<s0>T|<s1>F}}"];
	Node0x62b77d0:s0 -> Node0x62b7640;
	Node0x62b77d0:s1 -> Node0x62b7510;
	Node0x62b7510 [shape=record,label="{for.inc102:                                       \l  %indvars.iv.next1044 = add nsw i64 %indvars.iv1043, 1\l  %cmp72 = icmp slt i64 %indvars.iv1043, %38\l  br i1 %cmp72, label %for.body78.lr.ph, label %have_c1min.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x62b7510:s0 -> Node0x62b7440;
	Node0x62b7510:s1 -> Node0x62b8fb0;
	Node0x62b8fb0 [shape=record,label="{have_c1min.loopexit:                              \l  br label %have_c1min\l}"];
	Node0x62b8fb0 -> Node0x62b6d30;
	Node0x62b6d30 [shape=record,label="{have_c1min:                                       \l  %c1min.0 = phi i32 [ %41, %if.then93 ], [ %10, %have_c0max ], [ %10,\l... %for.cond75.preheader.lr.ph ], [ %10, %have_c1min.loopexit ]\l  %42 = icmp sgt i32 %12, %c1min.0\l  br i1 %42, label %for.cond113.preheader.lr.ph, label %have_c1max\l|{<s0>T|<s1>F}}"];
	Node0x62b6d30:s0 -> Node0x62b91d0;
	Node0x62b6d30:s1 -> Node0x62b9220;
	Node0x62b91d0 [shape=record,label="{for.cond113.preheader.lr.ph:                      \l  %cmp114469 = icmp slt i32 %c0max.0, %c0min.0\l  %sext1054 = shl i64 %14, 32\l  %idxprom117 = ashr exact i64 %sext1054, 32\l  %cmp124466 = icmp sgt i32 %15, %17\l  %or.cond1076 = or i1 %cmp114469, %cmp124466\l  br i1 %or.cond1076, label %have_c1max, label %for.body116.lr.ph.preheader\l|{<s0>T|<s1>F}}"];
	Node0x62b91d0:s0 -> Node0x62b9220;
	Node0x62b91d0:s1 -> Node0x62b96a0;
	Node0x62b96a0 [shape=record,label="{for.body116.lr.ph.preheader:                      \l  %43 = sext i32 %c0min.0 to i64\l  %44 = sext i32 %c0max.0 to i64\l  %45 = ashr i64 %9, 32\l  %46 = sext i32 %c1min.0 to i64\l  br label %for.body116.lr.ph\l}"];
	Node0x62b96a0 -> Node0x62b9830;
	Node0x62b9830 [shape=record,label="{for.body116.lr.ph:                                \l  %indvars.iv1039 = phi i64 [ %45, %for.body116.lr.ph.preheader ], [\l... %indvars.iv.next1040, %for.inc140 ]\l  br label %for.body116\l}"];
	Node0x62b9830 -> Node0x62b9a60;
	Node0x62b9a60 [shape=record,label="{for.body116:                                      \l  %indvars.iv1037 = phi i64 [ %indvars.iv.next1038, %for.inc137 ], [ %43,\l... %for.body116.lr.ph ]\l  %arrayidx120 = getelementptr inbounds [32 x i16]*, [32 x i16]** %2, i64\l... %indvars.iv1037\l  %47 = load [32 x i16]*, [32 x i16]** %arrayidx120, align 8, !tbaa !18\l  %arrayidx122 = getelementptr inbounds [32 x i16], [32 x i16]* %47, i64\l... %indvars.iv1039, i64 %idxprom117\l  br label %for.body126\l}"];
	Node0x62b9a60 -> Node0x62b9f70;
	Node0x62b9f70 [shape=record,label="{for.body126:                                      \l  %histp.3468 = phi i16* [ %arrayidx122, %for.body116 ], [ %incdec.ptr127,\l... %for.inc134 ]\l  %c2.3467 = phi i32 [ %15, %for.body116 ], [ %inc135, %for.inc134 ]\l  %48 = load i16, i16* %histp.3468, align 2, !tbaa !13\l  %cmp129 = icmp eq i16 %48, 0\l  br i1 %cmp129, label %for.inc134, label %if.then131\l|{<s0>T|<s1>F}}"];
	Node0x62b9f70:s0 -> Node0x62ba120;
	Node0x62b9f70:s1 -> Node0x62ba570;
	Node0x62ba570 [shape=record,label="{if.then131:                                       \l  %indvars.iv1039.lcssa = phi i64 [ %indvars.iv1039, %for.body126 ]\l  %49 = trunc i64 %indvars.iv1039.lcssa to i32\l  store i32 %49, i32* %c1max6, align 4, !tbaa !20\l  br label %have_c1max\l}"];
	Node0x62ba570 -> Node0x62b9220;
	Node0x62ba120 [shape=record,label="{for.inc134:                                       \l  %incdec.ptr127 = getelementptr inbounds i16, i16* %histp.3468, i64 1\l  %inc135 = add nsw i32 %c2.3467, 1\l  %cmp124 = icmp slt i32 %c2.3467, %17\l  br i1 %cmp124, label %for.body126, label %for.inc137\l|{<s0>T|<s1>F}}"];
	Node0x62ba120:s0 -> Node0x62b9f70;
	Node0x62ba120:s1 -> Node0x62b9bf0;
	Node0x62b9bf0 [shape=record,label="{for.inc137:                                       \l  %cmp114 = icmp slt i64 %indvars.iv1037, %44\l  %indvars.iv.next1038 = add nsw i64 %indvars.iv1037, 1\l  br i1 %cmp114, label %for.body116, label %for.inc140\l|{<s0>T|<s1>F}}"];
	Node0x62b9bf0:s0 -> Node0x62b9a60;
	Node0x62b9bf0:s1 -> Node0x62b98d0;
	Node0x62b98d0 [shape=record,label="{for.inc140:                                       \l  %indvars.iv.next1040 = add nsw i64 %indvars.iv1039, -1\l  %cmp110 = icmp sgt i64 %indvars.iv1039, %46\l  br i1 %cmp110, label %for.body116.lr.ph, label %have_c1max.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x62b98d0:s0 -> Node0x62b9830;
	Node0x62b98d0:s1 -> Node0x62badd0;
	Node0x62badd0 [shape=record,label="{have_c1max.loopexit:                              \l  br label %have_c1max\l}"];
	Node0x62badd0 -> Node0x62b9220;
	Node0x62b9220 [shape=record,label="{have_c1max:                                       \l  %c1max.0 = phi i32 [ %49, %if.then131 ], [ %12, %have_c1min ], [ %12,\l... %for.cond113.preheader.lr.ph ], [ %12, %have_c1max.loopexit ]\l  %50 = icmp slt i32 %15, %17\l  br i1 %50, label %for.cond151.preheader.lr.ph, label %have_c2min\l|{<s0>T|<s1>F}}"];
	Node0x62b9220:s0 -> Node0x62baff0;
	Node0x62b9220:s1 -> Node0x62bb040;
	Node0x62baff0 [shape=record,label="{for.cond151.preheader.lr.ph:                      \l  %cmp152461 = icmp slt i32 %c0max.0, %c0min.0\l  %idxprom156 = sext i32 %c1min.0 to i64\l  %cmp162458 = icmp slt i32 %c1max.0, %c1min.0\l  %or.cond1077 = or i1 %cmp152461, %cmp162458\l  br i1 %or.cond1077, label %have_c2min, label %for.body154.lr.ph.preheader\l|{<s0>T|<s1>F}}"];
	Node0x62baff0:s0 -> Node0x62bb040;
	Node0x62baff0:s1 -> Node0x62bb390;
	Node0x62bb390 [shape=record,label="{for.body154.lr.ph.preheader:                      \l  %51 = sext i32 %c0min.0 to i64\l  %52 = sext i32 %c0max.0 to i64\l  %sext = shl i64 %14, 32\l  %53 = ashr exact i64 %sext, 32\l  %54 = ashr i64 %14, 32\l  br label %for.body154.lr.ph\l}"];
	Node0x62bb390 -> Node0x62bb640;
	Node0x62bb640 [shape=record,label="{for.body154.lr.ph:                                \l  %indvars.iv1035 = phi i64 [ %53, %for.body154.lr.ph.preheader ], [\l... %indvars.iv.next1036, %for.inc177 ]\l  br label %for.body154\l}"];
	Node0x62bb640 -> Node0x62bb870;
	Node0x62bb870 [shape=record,label="{for.body154:                                      \l  %indvars.iv1033 = phi i64 [ %indvars.iv.next1034, %for.inc174 ], [ %51,\l... %for.body154.lr.ph ]\l  %arrayidx158 = getelementptr inbounds [32 x i16]*, [32 x i16]** %2, i64\l... %indvars.iv1033\l  %55 = load [32 x i16]*, [32 x i16]** %arrayidx158, align 8, !tbaa !18\l  %arrayidx160 = getelementptr inbounds [32 x i16], [32 x i16]* %55, i64\l... %idxprom156, i64 %indvars.iv1035\l  br label %for.body164\l}"];
	Node0x62bb870 -> Node0x62bbd80;
	Node0x62bbd80 [shape=record,label="{for.body164:                                      \l  %histp.4460 = phi i16* [ %arrayidx160, %for.body154 ], [ %add.ptr,\l... %for.inc171 ]\l  %c1.4459 = phi i32 [ %c1min.0, %for.body154 ], [ %inc172, %for.inc171 ]\l  %56 = load i16, i16* %histp.4460, align 2, !tbaa !13\l  %cmp166 = icmp eq i16 %56, 0\l  br i1 %cmp166, label %for.inc171, label %if.then168\l|{<s0>T|<s1>F}}"];
	Node0x62bbd80:s0 -> Node0x62bbf20;
	Node0x62bbd80:s1 -> Node0x62bc370;
	Node0x62bc370 [shape=record,label="{if.then168:                                       \l  %indvars.iv1035.lcssa = phi i64 [ %indvars.iv1035, %for.body164 ]\l  %57 = trunc i64 %indvars.iv1035.lcssa to i32\l  store i32 %57, i32* %c2min7, align 8, !tbaa !21\l  br label %have_c2min\l}"];
	Node0x62bc370 -> Node0x62bb040;
	Node0x62bbf20 [shape=record,label="{for.inc171:                                       \l  %inc172 = add nsw i32 %c1.4459, 1\l  %add.ptr = getelementptr inbounds i16, i16* %histp.4460, i64 32\l  %cmp162 = icmp slt i32 %c1.4459, %c1max.0\l  br i1 %cmp162, label %for.body164, label %for.inc174\l|{<s0>T|<s1>F}}"];
	Node0x62bbf20:s0 -> Node0x62bbd80;
	Node0x62bbf20:s1 -> Node0x62bba00;
	Node0x62bba00 [shape=record,label="{for.inc174:                                       \l  %cmp152 = icmp slt i64 %indvars.iv1033, %52\l  %indvars.iv.next1034 = add nsw i64 %indvars.iv1033, 1\l  br i1 %cmp152, label %for.body154, label %for.inc177\l|{<s0>T|<s1>F}}"];
	Node0x62bba00:s0 -> Node0x62bb870;
	Node0x62bba00:s1 -> Node0x62bb6e0;
	Node0x62bb6e0 [shape=record,label="{for.inc177:                                       \l  %indvars.iv.next1036 = add nsw i64 %indvars.iv1035, 1\l  %cmp148 = icmp slt i64 %indvars.iv1035, %54\l  br i1 %cmp148, label %for.body154.lr.ph, label %have_c2min.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x62bb6e0:s0 -> Node0x62bb640;
	Node0x62bb6e0:s1 -> Node0x62bcbd0;
	Node0x62bcbd0 [shape=record,label="{have_c2min.loopexit:                              \l  br label %have_c2min\l}"];
	Node0x62bcbd0 -> Node0x62bb040;
	Node0x62bb040 [shape=record,label="{have_c2min:                                       \l  %c2min.0 = phi i32 [ %57, %if.then168 ], [ %15, %have_c1max ], [ %15,\l... %for.cond151.preheader.lr.ph ], [ %15, %have_c2min.loopexit ]\l  %58 = icmp sgt i32 %17, %c2min.0\l  br i1 %58, label %for.cond188.preheader.lr.ph, label %have_c2max\l|{<s0>T|<s1>F}}"];
	Node0x62bb040:s0 -> Node0x62bcdf0;
	Node0x62bb040:s1 -> Node0x62bce40;
	Node0x62bcdf0 [shape=record,label="{for.cond188.preheader.lr.ph:                      \l  %cmp189453 = icmp slt i32 %c0max.0, %c0min.0\l  %idxprom193 = sext i32 %c1min.0 to i64\l  %cmp199450 = icmp slt i32 %c1max.0, %c1min.0\l  %or.cond1078 = or i1 %cmp189453, %cmp199450\l  br i1 %or.cond1078, label %have_c2max, label %for.body191.lr.ph.preheader\l|{<s0>T|<s1>F}}"];
	Node0x62bcdf0:s0 -> Node0x62bce40;
	Node0x62bcdf0:s1 -> Node0x62bd190;
	Node0x62bd190 [shape=record,label="{for.body191.lr.ph.preheader:                      \l  %59 = sext i32 %c0min.0 to i64\l  %60 = sext i32 %c0max.0 to i64\l  %61 = ashr i64 %14, 32\l  %62 = sext i32 %c2min.0 to i64\l  br label %for.body191.lr.ph\l}"];
	Node0x62bd190 -> Node0x62bd320;
	Node0x62bd320 [shape=record,label="{for.body191.lr.ph:                                \l  %indvars.iv1031 = phi i64 [ %61, %for.body191.lr.ph.preheader ], [\l... %indvars.iv.next1032, %for.inc215 ]\l  br label %for.body191\l}"];
	Node0x62bd320 -> Node0x62bd5b0;
	Node0x62bd5b0 [shape=record,label="{for.body191:                                      \l  %indvars.iv1029 = phi i64 [ %indvars.iv.next1030, %for.inc212 ], [ %59,\l... %for.body191.lr.ph ]\l  %arrayidx195 = getelementptr inbounds [32 x i16]*, [32 x i16]** %2, i64\l... %indvars.iv1029\l  %63 = load [32 x i16]*, [32 x i16]** %arrayidx195, align 8, !tbaa !18\l  %arrayidx197 = getelementptr inbounds [32 x i16], [32 x i16]* %63, i64\l... %idxprom193, i64 %indvars.iv1031\l  br label %for.body201\l}"];
	Node0x62bd5b0 -> Node0x62bdac0;
	Node0x62bdac0 [shape=record,label="{for.body201:                                      \l  %histp.5452 = phi i16* [ %arrayidx197, %for.body191 ], [ %add.ptr210,\l... %for.inc208 ]\l  %c1.5451 = phi i32 [ %c1min.0, %for.body191 ], [ %inc209, %for.inc208 ]\l  %64 = load i16, i16* %histp.5452, align 2, !tbaa !13\l  %cmp203 = icmp eq i16 %64, 0\l  br i1 %cmp203, label %for.inc208, label %if.then205\l|{<s0>T|<s1>F}}"];
	Node0x62bdac0:s0 -> Node0x62bdc70;
	Node0x62bdac0:s1 -> Node0x62b6160;
	Node0x62b6160 [shape=record,label="{if.then205:                                       \l  %indvars.iv1031.lcssa = phi i64 [ %indvars.iv1031, %for.body201 ]\l  %65 = trunc i64 %indvars.iv1031.lcssa to i32\l  store i32 %65, i32* %c2max8, align 4, !tbaa !22\l  br label %have_c2max\l}"];
	Node0x62b6160 -> Node0x62bce40;
	Node0x62bdc70 [shape=record,label="{for.inc208:                                       \l  %inc209 = add nsw i32 %c1.5451, 1\l  %add.ptr210 = getelementptr inbounds i16, i16* %histp.5452, i64 32\l  %cmp199 = icmp slt i32 %c1.5451, %c1max.0\l  br i1 %cmp199, label %for.body201, label %for.inc212\l|{<s0>T|<s1>F}}"];
	Node0x62bdc70:s0 -> Node0x62bdac0;
	Node0x62bdc70:s1 -> Node0x62bd740;
	Node0x62bd740 [shape=record,label="{for.inc212:                                       \l  %cmp189 = icmp slt i64 %indvars.iv1029, %60\l  %indvars.iv.next1030 = add nsw i64 %indvars.iv1029, 1\l  br i1 %cmp189, label %for.body191, label %for.inc215\l|{<s0>T|<s1>F}}"];
	Node0x62bd740:s0 -> Node0x62bd5b0;
	Node0x62bd740:s1 -> Node0x62bd420;
	Node0x62bd420 [shape=record,label="{for.inc215:                                       \l  %indvars.iv.next1032 = add nsw i64 %indvars.iv1031, -1\l  %cmp185 = icmp sgt i64 %indvars.iv1031, %62\l  br i1 %cmp185, label %for.body191.lr.ph, label %have_c2max.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x62bd420:s0 -> Node0x62bd320;
	Node0x62bd420:s1 -> Node0x62bf750;
	Node0x62bf750 [shape=record,label="{have_c2max.loopexit:                              \l  br label %have_c2max\l}"];
	Node0x62bf750 -> Node0x62bce40;
	Node0x62bce40 [shape=record,label="{have_c2max:                                       \l  %c2max.0 = phi i32 [ %65, %if.then205 ], [ %17, %have_c2min ], [ %17,\l... %for.cond188.preheader.lr.ph ], [ %17, %have_c2max.loopexit ]\l  %sub = sub nsw i32 %c0max.0, %c0min.0\l  %mul = shl i32 %sub, 4\l  %conv219 = sext i32 %mul to i64\l  %sub220 = sub nsw i32 %c1max.0, %c1min.0\l  %mul222 = mul i32 %sub220, 12\l  %conv223 = sext i32 %mul222 to i64\l  %sub224 = sub nsw i32 %c2max.0, %c2min.0\l  %shl225 = shl i32 %sub224, 3\l  %conv227 = sext i32 %shl225 to i64\l  %mul228 = mul nsw i64 %conv219, %conv219\l  %mul229 = mul nsw i64 %conv223, %conv223\l  %add = add nuw nsw i64 %mul229, %mul228\l  %mul230 = mul nsw i64 %conv227, %conv227\l  %add231 = add nuw nsw i64 %add, %mul230\l  %volume = getelementptr inbounds %struct.box, %struct.box* %boxp, i64 0, i32\l... 6\l  store i64 %add231, i64* %volume, align 8, !tbaa !23\l  %cmp233446 = icmp slt i32 %c0max.0, %c0min.0\l  br i1 %cmp233446, label %for.end265, label %for.cond236.preheader.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x62bce40:s0 -> Node0x62c01c0;
	Node0x62bce40:s1 -> Node0x62c0240;
	Node0x62c0240 [shape=record,label="{for.cond236.preheader.lr.ph:                      \l  %cmp237442 = icmp slt i32 %c1max.0, %c1min.0\l  %idxprom240 = sext i32 %c2min.0 to i64\l  %cmp247438 = icmp slt i32 %c2max.0, %c2min.0\l  %or.cond1079 = or i1 %cmp237442, %cmp247438\l  br i1 %or.cond1079, label %for.end265, label %for.body239.lr.ph.preheader\l|{<s0>T|<s1>F}}"];
	Node0x62c0240:s0 -> Node0x62c01c0;
	Node0x62c0240:s1 -> Node0x62c0590;
	Node0x62c0590 [shape=record,label="{for.body239.lr.ph.preheader:                      \l  %66 = sext i32 %c1min.0 to i64\l  %67 = sext i32 %c1max.0 to i64\l  %68 = sext i32 %c0min.0 to i64\l  %69 = sext i32 %c0max.0 to i64\l  %70 = icmp slt i32 %c2max.0, %c2min.0\l  %smax = select i1 %70, i32 %c2min.0, i32 %c2max.0\l  %71 = sub i32 %smax, %c2min.0\l  %72 = zext i32 %71 to i64\l  %73 = add nuw nsw i64 %72, 1\l  %74 = icmp sgt i32 %c2max.0, %c2min.0\l  %smax1108 = select i1 %74, i32 %c2max.0, i32 %c2min.0\l  %75 = sub i32 %smax1108, %c2min.0\l  %76 = zext i32 %75 to i64\l  %77 = add nuw nsw i64 %76, 1\l  %78 = and i64 %77, 8589934588\l  %79 = add nsw i64 %78, -4\l  %80 = lshr exact i64 %79, 2\l  %min.iters.check = icmp ult i64 %73, 4\l  %n.vec = and i64 %73, 8589934588\l  %cmp.zero = icmp eq i64 %n.vec, 0\l  %cast.crd = trunc i64 %n.vec to i32\l  %ind.end1087 = add i32 %c2min.0, %cast.crd\l  %81 = and i64 %80, 1\l  %lcmp.mod = icmp eq i64 %81, 0\l  %82 = icmp eq i64 %80, 0\l  %cmp.n = icmp eq i64 %73, %n.vec\l  br label %for.body239.lr.ph\l}"];
	Node0x62c0590 -> Node0x62c13d0;
	Node0x62c13d0 [shape=record,label="{for.body239.lr.ph:                                \l  %indvars.iv1027 = phi i64 [ %68, %for.body239.lr.ph.preheader ], [\l... %indvars.iv.next1028, %for.inc263 ]\l  %ccount.0448 = phi i64 [ 0, %for.body239.lr.ph.preheader ], [\l... %ccount.2.inc254.lcssa.lcssa, %for.inc263 ]\l  %arrayidx243 = getelementptr inbounds [32 x i16]*, [32 x i16]** %2, i64\l... %indvars.iv1027\l  %83 = load [32 x i16]*, [32 x i16]** %arrayidx243, align 8\l  br label %for.body239\l}"];
	Node0x62c13d0 -> Node0x62c1a40;
	Node0x62c1a40 [shape=record,label="{for.body239:                                      \l  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc260 ], [ %66,\l... %for.body239.lr.ph ]\l  %ccount.1444 = phi i64 [ %ccount.2.inc254.lcssa, %for.inc260 ], [\l... %ccount.0448, %for.body239.lr.ph ]\l  %arrayidx245 = getelementptr inbounds [32 x i16], [32 x i16]* %83, i64\l... %indvars.iv, i64 %idxprom240\l  br i1 %min.iters.check, label %for.body249.preheader, label\l... %min.iters.checked\l|{<s0>T|<s1>F}}"];
	Node0x62c1a40:s0 -> Node0x62c2050;
	Node0x62c1a40:s1 -> Node0x62c2150;
	Node0x62c2150 [shape=record,label="{min.iters.checked:                                \l  %ind.end = getelementptr i16, i16* %arrayidx245, i64 %n.vec\l  br i1 %cmp.zero, label %for.body249.preheader, label %vector.ph\l|{<s0>T|<s1>F}}"];
	Node0x62c2150:s0 -> Node0x62c2050;
	Node0x62c2150:s1 -> Node0x62c23a0;
	Node0x62c23a0 [shape=record,label="{vector.ph:                                        \l  %84 = insertelement \<2 x i64\> \<i64 undef, i64 0\>, i64 %ccount.1444, i32 0\l  br i1 %lcmp.mod, label %vector.body.prol, label %vector.ph.split\l|{<s0>T|<s1>F}}"];
	Node0x62c23a0:s0 -> Node0x62c2950;
	Node0x62c23a0:s1 -> Node0x62c2a50;
	Node0x62c2950 [shape=record,label="{vector.body.prol:                                 \l  %85 = bitcast i16* %arrayidx245 to \<2 x i16\>*\l  %wide.load.prol = load \<2 x i16\>, \<2 x i16\>* %85, align 2, !tbaa !13\l  %86 = getelementptr i16, i16* %arrayidx245, i64 2\l  %87 = bitcast i16* %86 to \<2 x i16\>*\l  %wide.load1096.prol = load \<2 x i16\>, \<2 x i16\>* %87, align 2, !tbaa !13\l  %88 = icmp ne \<2 x i16\> %wide.load.prol, zeroinitializer\l  %89 = icmp ne \<2 x i16\> %wide.load1096.prol, zeroinitializer\l  %90 = zext \<2 x i1\> %88 to \<2 x i64\>\l  %91 = zext \<2 x i1\> %89 to \<2 x i64\>\l  %92 = add nsw \<2 x i64\> %90, %84\l  br label %vector.ph.split\l}"];
	Node0x62c2950 -> Node0x62c2a50;
	Node0x62c2a50 [shape=record,label="{vector.ph.split:                                  \l  %.lcssa1100.unr = phi \<2 x i64\> [ undef, %vector.ph ], [ %91,\l... %vector.body.prol ]\l  %.lcssa.unr = phi \<2 x i64\> [ undef, %vector.ph ], [ %92, %vector.body.prol ]\l  %index.unr = phi i64 [ 0, %vector.ph ], [ 4, %vector.body.prol ]\l  %vec.phi.unr = phi \<2 x i64\> [ %84, %vector.ph ], [ %92, %vector.body.prol ]\l  %vec.phi1088.unr = phi \<2 x i64\> [ zeroinitializer, %vector.ph ], [ %91,\l... %vector.body.prol ]\l  br i1 %82, label %middle.block, label %vector.ph.split.split\l|{<s0>T|<s1>F}}"];
	Node0x62c2a50:s0 -> Node0x62c38e0;
	Node0x62c2a50:s1 -> Node0x62c39f0;
	Node0x62c39f0 [shape=record,label="{vector.ph.split.split:                            \l  br label %vector.body\l}"];
	Node0x62c39f0 -> Node0x62c3b60;
	Node0x62c3b60 [shape=record,label="{vector.body:                                      \l  %index = phi i64 [ %index.unr, %vector.ph.split.split ], [ %index.next.1,\l... %vector.body ]\l  %vec.phi = phi \<2 x i64\> [ %vec.phi.unr, %vector.ph.split.split ], [ %109,\l... %vector.body ]\l  %vec.phi1088 = phi \<2 x i64\> [ %vec.phi1088.unr, %vector.ph.split.split ], [\l... %110, %vector.body ]\l  %next.gep = getelementptr i16, i16* %arrayidx245, i64 %index\l  %93 = bitcast i16* %next.gep to \<2 x i16\>*\l  %wide.load = load \<2 x i16\>, \<2 x i16\>* %93, align 2, !tbaa !13\l  %94 = getelementptr i16, i16* %next.gep, i64 2\l  %95 = bitcast i16* %94 to \<2 x i16\>*\l  %wide.load1096 = load \<2 x i16\>, \<2 x i16\>* %95, align 2, !tbaa !13\l  %96 = icmp ne \<2 x i16\> %wide.load, zeroinitializer\l  %97 = icmp ne \<2 x i16\> %wide.load1096, zeroinitializer\l  %98 = zext \<2 x i1\> %96 to \<2 x i64\>\l  %99 = zext \<2 x i1\> %97 to \<2 x i64\>\l  %100 = add nsw \<2 x i64\> %98, %vec.phi\l  %101 = add nsw \<2 x i64\> %99, %vec.phi1088\l  %index.next = add i64 %index, 4\l  %next.gep.1 = getelementptr i16, i16* %arrayidx245, i64 %index.next\l  %102 = bitcast i16* %next.gep.1 to \<2 x i16\>*\l  %wide.load.1 = load \<2 x i16\>, \<2 x i16\>* %102, align 2, !tbaa !13\l  %103 = getelementptr i16, i16* %next.gep.1, i64 2\l  %104 = bitcast i16* %103 to \<2 x i16\>*\l  %wide.load1096.1 = load \<2 x i16\>, \<2 x i16\>* %104, align 2, !tbaa !13\l  %105 = icmp ne \<2 x i16\> %wide.load.1, zeroinitializer\l  %106 = icmp ne \<2 x i16\> %wide.load1096.1, zeroinitializer\l  %107 = zext \<2 x i1\> %105 to \<2 x i64\>\l  %108 = zext \<2 x i1\> %106 to \<2 x i64\>\l  %109 = add nsw \<2 x i64\> %107, %100\l  %110 = add nsw \<2 x i64\> %108, %101\l  %index.next.1 = add i64 %index, 8\l  %111 = icmp eq i64 %index.next.1, %n.vec\l  br i1 %111, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x62c3b60:s0 -> Node0x62c4da0;
	Node0x62c3b60:s1 -> Node0x62c3b60;
	Node0x62c4da0 [shape=record,label="{middle.block.unr-lcssa:                           \l  %.lcssa1110 = phi \<2 x i64\> [ %110, %vector.body ]\l  %.lcssa1109 = phi \<2 x i64\> [ %109, %vector.body ]\l  br label %middle.block\l}"];
	Node0x62c4da0 -> Node0x62c38e0;
	Node0x62c38e0 [shape=record,label="{middle.block:                                     \l  %.lcssa1100 = phi \<2 x i64\> [ %.lcssa1100.unr, %vector.ph.split ], [\l... %.lcssa1110, %middle.block.unr-lcssa ]\l  %.lcssa = phi \<2 x i64\> [ %.lcssa.unr, %vector.ph.split ], [ %.lcssa1109,\l... %middle.block.unr-lcssa ]\l  %bin.rdx = add \<2 x i64\> %.lcssa1100, %.lcssa\l  %rdx.shuf = shufflevector \<2 x i64\> %bin.rdx, \<2 x i64\> undef, \<2 x i32\>\l... \<i32 1, i32 undef\>\l  %bin.rdx1099 = add \<2 x i64\> %bin.rdx, %rdx.shuf\l  %112 = extractelement \<2 x i64\> %bin.rdx1099, i32 0\l  br i1 %cmp.n, label %for.inc260, label %for.body249.preheader\l|{<s0>T|<s1>F}}"];
	Node0x62c38e0:s0 -> Node0x62c1bc0;
	Node0x62c38e0:s1 -> Node0x62c2050;
	Node0x62c2050 [shape=record,label="{for.body249.preheader:                            \l  %ccount.2441.ph = phi i64 [ %ccount.1444, %min.iters.checked ], [\l... %ccount.1444, %for.body239 ], [ %112, %middle.block ]\l  %histp.6440.ph = phi i16* [ %arrayidx245, %min.iters.checked ], [\l... %arrayidx245, %for.body239 ], [ %ind.end, %middle.block ]\l  %c2.6439.ph = phi i32 [ %c2min.0, %min.iters.checked ], [ %c2min.0,\l... %for.body239 ], [ %ind.end1087, %middle.block ]\l  br label %for.body249\l}"];
	Node0x62c2050 -> Node0x62c5880;
	Node0x62c5880 [shape=record,label="{for.body249:                                      \l  %ccount.2441 = phi i64 [ %ccount.2.inc254, %for.body249 ], [\l... %ccount.2441.ph, %for.body249.preheader ]\l  %histp.6440 = phi i16* [ %incdec.ptr258, %for.body249 ], [ %histp.6440.ph,\l... %for.body249.preheader ]\l  %c2.6439 = phi i32 [ %inc257, %for.body249 ], [ %c2.6439.ph,\l... %for.body249.preheader ]\l  %113 = load i16, i16* %histp.6440, align 2, !tbaa !13\l  %not.cmp251 = icmp ne i16 %113, 0\l  %inc254 = zext i1 %not.cmp251 to i64\l  %ccount.2.inc254 = add nsw i64 %inc254, %ccount.2441\l  %inc257 = add nsw i32 %c2.6439, 1\l  %incdec.ptr258 = getelementptr inbounds i16, i16* %histp.6440, i64 1\l  %cmp247 = icmp slt i32 %c2.6439, %c2max.0\l  br i1 %cmp247, label %for.body249, label %for.inc260.loopexit, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x62c5880:s0 -> Node0x62c5880;
	Node0x62c5880:s1 -> Node0x62c6170;
	Node0x62c6170 [shape=record,label="{for.inc260.loopexit:                              \l  %ccount.2.inc254.lcssa1111 = phi i64 [ %ccount.2.inc254, %for.body249 ]\l  br label %for.inc260\l}"];
	Node0x62c6170 -> Node0x62c1bc0;
	Node0x62c1bc0 [shape=record,label="{for.inc260:                                       \l  %ccount.2.inc254.lcssa = phi i64 [ %112, %middle.block ], [\l... %ccount.2.inc254.lcssa1111, %for.inc260.loopexit ]\l  %cmp237 = icmp slt i64 %indvars.iv, %67\l  %indvars.iv.next = add nsw i64 %indvars.iv, 1\l  br i1 %cmp237, label %for.body239, label %for.inc263\l|{<s0>T|<s1>F}}"];
	Node0x62c1bc0:s0 -> Node0x62c1a40;
	Node0x62c1bc0:s1 -> Node0x62c15a0;
	Node0x62c15a0 [shape=record,label="{for.inc263:                                       \l  %ccount.2.inc254.lcssa.lcssa = phi i64 [ %ccount.2.inc254.lcssa, %for.inc260\l... ]\l  %cmp233 = icmp slt i64 %indvars.iv1027, %69\l  %indvars.iv.next1028 = add nsw i64 %indvars.iv1027, 1\l  br i1 %cmp233, label %for.body239.lr.ph, label %for.end265.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x62c15a0:s0 -> Node0x62c13d0;
	Node0x62c15a0:s1 -> Node0x62c6690;
	Node0x62c6690 [shape=record,label="{for.end265.loopexit:                              \l  %ccount.2.inc254.lcssa.lcssa.lcssa = phi i64 [ %ccount.2.inc254.lcssa.lcssa,\l... %for.inc263 ]\l  br label %for.end265\l}"];
	Node0x62c6690 -> Node0x62c01c0;
	Node0x62c01c0 [shape=record,label="{for.end265:                                       \l  %ccount.0.lcssa = phi i64 [ 0, %have_c2max ], [ 0,\l... %for.cond236.preheader.lr.ph ], [ %ccount.2.inc254.lcssa.lcssa.lcssa,\l... %for.end265.loopexit ]\l  %colorcount = getelementptr inbounds %struct.box, %struct.box* %boxp, i64 0,\l... i32 7\l  store i64 %ccount.0.lcssa, i64* %colorcount, align 8, !tbaa !29\l  ret void\l}"];
}
