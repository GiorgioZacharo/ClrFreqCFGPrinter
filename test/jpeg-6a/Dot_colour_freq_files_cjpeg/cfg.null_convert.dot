digraph "CFG for 'null_convert' function" {
	label="CFG for 'null_convert' function";

	Node0x6719120 [shape=record,label="{entry:\l  %num_components1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %0 = load i32, i32* %num_components1, align 8, !tbaa !2\l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %1 = load i32, i32* %output_width, align 8, !tbaa !10\l  %cmp37 = icmp sgt i32 %num_rows, 0\l  br i1 %cmp37, label %for.cond.preheader.lr.ph, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x6719120:s0 -> Node0x671b090;
	Node0x6719120:s1 -> Node0x671b150;
	Node0x671b090 [shape=record,label="{for.cond.preheader.lr.ph:                         \l  %cmp234 = icmp sgt i32 %0, 0\l  %cmp730 = icmp eq i32 %1, 0\l  %idx.ext9 = sext i32 %0 to i64\l  br i1 %cmp234, label %for.body.lr.ph.us.preheader, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x671b090:s0 -> Node0x671acf0;
	Node0x671b090:s1 -> Node0x671b150;
	Node0x671acf0 [shape=record,label="{for.body.lr.ph.us.preheader:                      \l  %2 = add i32 %1, -1\l  %xtraiter = and i32 %1, 7\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  %3 = icmp ult i32 %2, 7\l  br label %for.body.lr.ph.us\l}"];
	Node0x671acf0 -> Node0x671b900;
	Node0x671b9e0 [shape=record,label="{for.body.us42:                                    \l  %indvars.iv = phi i64 [ %indvars.iv.next,\l... %for.cond6.for.inc12_crit_edge.us60 ], [ 0, %for.body.us42.preheader ]\l  %arrayidx.us45 = getelementptr inbounds i8**, i8*** %input_buf, i64\l... %indvars.iv\l  %4 = load i8**, i8*** %arrayidx.us45, align 8, !tbaa !11\l  %arrayidx4.us46 = getelementptr inbounds i8*, i8** %4, i64 %idxprom.us\l  %5 = load i8*, i8** %arrayidx4.us46, align 8, !tbaa !11\l  %6 = load i8*, i8** %output_buf.addr.038.us, align 8, !tbaa !11\l  %add.ptr.us47 = getelementptr inbounds i8, i8* %6, i64 %indvars.iv\l  br i1 %lcmp.mod, label %for.body.us42.split, label\l... %for.body8.us48.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x671b9e0:s0 -> Node0x671b3d0;
	Node0x671b9e0:s1 -> Node0x671b4d0;
	Node0x671b4d0 [shape=record,label="{for.body8.us48.prol.preheader:                    \l  br label %for.body8.us48.prol\l}"];
	Node0x671b4d0 -> Node0x671c770;
	Node0x671c770 [shape=record,label="{for.body8.us48.prol:                              \l  %count.033.us49.prol = phi i32 [ %dec11.us54.prol, %for.body8.us48.prol ], [\l... %1, %for.body8.us48.prol.preheader ]\l  %outptr.032.us50.prol = phi i8* [ %add.ptr10.us53.prol, %for.body8.us48.prol\l... ], [ %add.ptr.us47, %for.body8.us48.prol.preheader ]\l  %inptr.031.us51.prol = phi i8* [ %incdec.ptr.us52.prol, %for.body8.us48.prol\l... ], [ %5, %for.body8.us48.prol.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %for.body8.us48.prol ], [ %xtraiter,\l... %for.body8.us48.prol.preheader ]\l  %incdec.ptr.us52.prol = getelementptr inbounds i8, i8* %inptr.031.us51.prol,\l... i64 1\l  %7 = load i8, i8* %inptr.031.us51.prol, align 1, !tbaa !12\l  store i8 %7, i8* %outptr.032.us50.prol, align 1, !tbaa !12\l  %add.ptr10.us53.prol = getelementptr inbounds i8, i8* %outptr.032.us50.prol,\l... i64 %idx.ext9\l  %dec11.us54.prol = add i32 %count.033.us49.prol, -1\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %for.body.us42.split.loopexit, label\l... %for.body8.us48.prol, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x671c770:s0 -> Node0x6709dd0;
	Node0x671c770:s1 -> Node0x671c770;
	Node0x6709dd0 [shape=record,label="{for.body.us42.split.loopexit:                     \l  %dec11.us54.prol.lcssa = phi i32 [ %dec11.us54.prol, %for.body8.us48.prol ]\l  %add.ptr10.us53.prol.lcssa = phi i8* [ %add.ptr10.us53.prol,\l... %for.body8.us48.prol ]\l  %incdec.ptr.us52.prol.lcssa = phi i8* [ %incdec.ptr.us52.prol,\l... %for.body8.us48.prol ]\l  br label %for.body.us42.split\l}"];
	Node0x6709dd0 -> Node0x671b3d0;
	Node0x671b3d0 [shape=record,label="{for.body.us42.split:                              \l  %count.033.us49.unr = phi i32 [ %1, %for.body.us42 ], [\l... %dec11.us54.prol.lcssa, %for.body.us42.split.loopexit ]\l  %outptr.032.us50.unr = phi i8* [ %add.ptr.us47, %for.body.us42 ], [\l... %add.ptr10.us53.prol.lcssa, %for.body.us42.split.loopexit ]\l  %inptr.031.us51.unr = phi i8* [ %5, %for.body.us42 ], [\l... %incdec.ptr.us52.prol.lcssa, %for.body.us42.split.loopexit ]\l  br i1 %3, label %for.cond6.for.inc12_crit_edge.us60, label\l... %for.body.us42.split.split\l|{<s0>T|<s1>F}}"];
	Node0x671b3d0:s0 -> Node0x671bb00;
	Node0x671b3d0:s1 -> Node0x671db70;
	Node0x671db70 [shape=record,label="{for.body.us42.split.split:                        \l  br label %for.body8.us48\l}"];
	Node0x671db70 -> Node0x671dd20;
	Node0x671dd20 [shape=record,label="{for.body8.us48:                                   \l  %count.033.us49 = phi i32 [ %count.033.us49.unr, %for.body.us42.split.split\l... ], [ %dec11.us54.7, %for.body8.us48 ]\l  %outptr.032.us50 = phi i8* [ %outptr.032.us50.unr,\l... %for.body.us42.split.split ], [ %add.ptr10.us53.7, %for.body8.us48 ]\l  %inptr.031.us51 = phi i8* [ %inptr.031.us51.unr, %for.body.us42.split.split\l... ], [ %incdec.ptr.us52.7, %for.body8.us48 ]\l  %incdec.ptr.us52 = getelementptr inbounds i8, i8* %inptr.031.us51, i64 1\l  %8 = load i8, i8* %inptr.031.us51, align 1, !tbaa !12\l  store i8 %8, i8* %outptr.032.us50, align 1, !tbaa !12\l  %add.ptr10.us53 = getelementptr inbounds i8, i8* %outptr.032.us50, i64\l... %idx.ext9\l  %incdec.ptr.us52.1 = getelementptr inbounds i8, i8* %inptr.031.us51, i64 2\l  %9 = load i8, i8* %incdec.ptr.us52, align 1, !tbaa !12\l  store i8 %9, i8* %add.ptr10.us53, align 1, !tbaa !12\l  %add.ptr10.us53.1 = getelementptr inbounds i8, i8* %add.ptr10.us53, i64\l... %idx.ext9\l  %incdec.ptr.us52.2 = getelementptr inbounds i8, i8* %inptr.031.us51, i64 3\l  %10 = load i8, i8* %incdec.ptr.us52.1, align 1, !tbaa !12\l  store i8 %10, i8* %add.ptr10.us53.1, align 1, !tbaa !12\l  %add.ptr10.us53.2 = getelementptr inbounds i8, i8* %add.ptr10.us53.1, i64\l... %idx.ext9\l  %incdec.ptr.us52.3 = getelementptr inbounds i8, i8* %inptr.031.us51, i64 4\l  %11 = load i8, i8* %incdec.ptr.us52.2, align 1, !tbaa !12\l  store i8 %11, i8* %add.ptr10.us53.2, align 1, !tbaa !12\l  %add.ptr10.us53.3 = getelementptr inbounds i8, i8* %add.ptr10.us53.2, i64\l... %idx.ext9\l  %incdec.ptr.us52.4 = getelementptr inbounds i8, i8* %inptr.031.us51, i64 5\l  %12 = load i8, i8* %incdec.ptr.us52.3, align 1, !tbaa !12\l  store i8 %12, i8* %add.ptr10.us53.3, align 1, !tbaa !12\l  %add.ptr10.us53.4 = getelementptr inbounds i8, i8* %add.ptr10.us53.3, i64\l... %idx.ext9\l  %incdec.ptr.us52.5 = getelementptr inbounds i8, i8* %inptr.031.us51, i64 6\l  %13 = load i8, i8* %incdec.ptr.us52.4, align 1, !tbaa !12\l  store i8 %13, i8* %add.ptr10.us53.4, align 1, !tbaa !12\l  %add.ptr10.us53.5 = getelementptr inbounds i8, i8* %add.ptr10.us53.4, i64\l... %idx.ext9\l  %incdec.ptr.us52.6 = getelementptr inbounds i8, i8* %inptr.031.us51, i64 7\l  %14 = load i8, i8* %incdec.ptr.us52.5, align 1, !tbaa !12\l  store i8 %14, i8* %add.ptr10.us53.5, align 1, !tbaa !12\l  %add.ptr10.us53.6 = getelementptr inbounds i8, i8* %add.ptr10.us53.5, i64\l... %idx.ext9\l  %incdec.ptr.us52.7 = getelementptr inbounds i8, i8* %inptr.031.us51, i64 8\l  %15 = load i8, i8* %incdec.ptr.us52.6, align 1, !tbaa !12\l  store i8 %15, i8* %add.ptr10.us53.6, align 1, !tbaa !12\l  %add.ptr10.us53.7 = getelementptr inbounds i8, i8* %add.ptr10.us53.6, i64\l... %idx.ext9\l  %dec11.us54.7 = add i32 %count.033.us49, -8\l  %cmp7.us55.7 = icmp eq i32 %dec11.us54.7, 0\l  br i1 %cmp7.us55.7, label %for.cond6.for.inc12_crit_edge.us60.unr-lcssa,\l... label %for.body8.us48\l|{<s0>T|<s1>F}}"];
	Node0x671dd20:s0 -> Node0x671bed0;
	Node0x671dd20:s1 -> Node0x671dd20;
	Node0x671bed0 [shape=record,label="{for.cond6.for.inc12_crit_edge.us60.unr-lcssa:     \l  br label %for.cond6.for.inc12_crit_edge.us60\l}"];
	Node0x671bed0 -> Node0x671bb00;
	Node0x671bb00 [shape=record,label="{for.cond6.for.inc12_crit_edge.us60:               \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %lftr.wideiv = trunc i64 %indvars.iv.next to i32\l  %exitcond = icmp eq i32 %lftr.wideiv, %0\l  br i1 %exitcond, label %for.cond.for.end13_crit_edge.us.loopexit, label\l... %for.body.us42\l|{<s0>T|<s1>F}}"];
	Node0x671bb00:s0 -> Node0x671fb30;
	Node0x671bb00:s1 -> Node0x671b9e0;
	Node0x671b900 [shape=record,label="{for.body.lr.ph.us:                                \l  %dec41.us.in = phi i32 [ %dec41.us, %for.cond.for.end13_crit_edge.us ], [\l... %num_rows, %for.body.lr.ph.us.preheader ]\l  %input_row.addr.040.us = phi i32 [ %inc14.us,\l... %for.cond.for.end13_crit_edge.us ], [ %input_row,\l... %for.body.lr.ph.us.preheader ]\l  %output_buf.addr.038.us = phi i8** [ %incdec.ptr15.us,\l... %for.cond.for.end13_crit_edge.us ], [ %output_buf,\l... %for.body.lr.ph.us.preheader ]\l  %dec41.us = add nsw i32 %dec41.us.in, -1\l  %idxprom.us = zext i32 %input_row.addr.040.us to i64\l  br i1 %cmp730, label %for.cond.for.end13_crit_edge.us, label\l... %for.body.us42.preheader\l|{<s0>T|<s1>F}}"];
	Node0x671b900:s0 -> Node0x671fcc0;
	Node0x671b900:s1 -> Node0x671bc20;
	Node0x671bc20 [shape=record,label="{for.body.us42.preheader:                          \l  br label %for.body.us42\l}"];
	Node0x671bc20 -> Node0x671b9e0;
	Node0x671fb30 [shape=record,label="{for.cond.for.end13_crit_edge.us.loopexit:         \l  br label %for.cond.for.end13_crit_edge.us\l}"];
	Node0x671fb30 -> Node0x671fcc0;
	Node0x671fcc0 [shape=record,label="{for.cond.for.end13_crit_edge.us:                  \l  %inc14.us = add i32 %input_row.addr.040.us, 1\l  %incdec.ptr15.us = getelementptr inbounds i8*, i8** %output_buf.addr.038.us,\l... i64 1\l  %cmp.us = icmp sgt i32 %dec41.us.in, 1\l  br i1 %cmp.us, label %for.body.lr.ph.us, label %while.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x671fcc0:s0 -> Node0x671b900;
	Node0x671fcc0:s1 -> Node0x6720420;
	Node0x6720420 [shape=record,label="{while.end.loopexit:                               \l  br label %while.end\l}"];
	Node0x6720420 -> Node0x671b150;
	Node0x671b150 [shape=record,label="{while.end:                                        \l  ret void\l}"];
}
