digraph "CFG for 'compress_output' function" {
	label="CFG for 'compress_output' function";

	Node0x66eff60 [shape=record, style = filled, fillcolor = turquoise,  style = filled, fillcolor = blue, label="{entry:\l  %buffer = alloca [4 x [64 x i16]**], align 16\l  %MCU_buffer = alloca [10 x [64 x i16]*], align 16\l  %coef1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 54\l  %0 = bitcast %struct.jpeg_c_coef_controller** %coef1 to\l... %struct.my_coef_controller**\l  %1 = load %struct.my_coef_controller*, %struct.my_coef_controller** %0,\l... align 8, !tbaa !2\l  %MCUs_per_row = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 43\l  %2 = load i32, i32* %MCUs_per_row, align 8, !tbaa !10\l  %sub = add i32 %2, -1\l  %total_iMCU_rows = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 40\l  %3 = bitcast i32* %total_iMCU_rows to i64*\l  %4 = load i64, i64* %3, align 8\l  %5 = trunc i64 %4 to i32\l  %sub2 = add i32 %5, -1\l  %6 = bitcast [4 x [64 x i16]**]* %buffer to i8*\l  call void @llvm.lifetime.start(i64 32, i8* %6) #3\l  %7 = bitcast [10 x [64 x i16]*]* %MCU_buffer to i8*\l  call void @llvm.lifetime.start(i64 80, i8* %7) #3\l  %comps_in_scan = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 41\l  %8 = lshr i64 %4, 32\l  %9 = trunc i64 %8 to i32\l  %cmp191 = icmp sgt i32 %9, 0\l  br i1 %cmp191, label %for.body.lr.ph, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x66eff60:s0 -> Node0x66f0630;
	Node0x66eff60:s1 -> Node0x66efec0;
	Node0x66f0630 [shape=record, style = filled, fillcolor = blue,  style = filled, fillcolor = cyan, label="{for.body.lr.ph:                                   \l  %mem = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1\l  %10 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %whole_image = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 5\l  %iMCU_row_num = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 1\l  br label %for.body\l}"];
	Node0x66f0630 -> Node0x66f1230;
	Node0x66f1230 [shape=record, style = filled, fillcolor = turquoise,  style = filled, fillcolor = blue, label="{for.body:                                         \l  %indvars.iv209 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next210,\l... %for.body ]\l  %arrayidx = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv209\l  %11 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx, align 8, !tbaa !11\l  %12 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !12\l  %access_virt_barray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %12, i64 0, i32 8\l  %13 = load [64 x i16]** (%struct.jpeg_common_struct*,\l... %struct.jvirt_barray_control*, i32, i32, i32)*, [64 x i16]**\l... (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)**\l... %access_virt_barray, align 8, !tbaa !13\l  %component_index = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %11, i64 0, i32 1\l  %14 = load i32, i32* %component_index, align 4, !tbaa !16\l  %idxprom3 = sext i32 %14 to i64\l  %15 = load %struct.jvirt_barray_control**, %struct.jvirt_barray_control***\l... %whole_image, align 8, !tbaa !18\l  %arrayidx4 = getelementptr inbounds %struct.jvirt_barray_control*,\l... %struct.jvirt_barray_control** %15, i64 %idxprom3\l  %16 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control**\l... %arrayidx4, align 8, !tbaa !11\l  %17 = load i32, i32* %iMCU_row_num, align 8, !tbaa !21\l  %v_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %11, i64 0, i32 3\l  %18 = load i32, i32* %v_samp_factor, align 4, !tbaa !22\l  %mul = mul i32 %18, %17\l  %call = tail call [64 x i16]** %13(%struct.jpeg_common_struct* %10,\l... %struct.jvirt_barray_control* %16, i32 %mul, i32 %18, i32 0) #3\l  %arrayidx7 = getelementptr inbounds [4 x [64 x i16]**], [4 x [64 x i16]**]*\l... %buffer, i64 0, i64 %indvars.iv209\l  store [64 x i16]** %call, [64 x i16]*** %arrayidx7, align 8, !tbaa !11\l  %indvars.iv.next210 = add nuw nsw i64 %indvars.iv209, 1\l  %19 = load i32, i32* %comps_in_scan, align 4, !tbaa !23\l  %20 = sext i32 %19 to i64\l  %cmp = icmp slt i64 %indvars.iv.next210, %20\l  br i1 %cmp, label %for.body, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x66f1230:s0 -> Node0x66f1230;
	Node0x66f1230:s1 -> Node0x66dd7e0;
	Node0x66dd7e0 [shape=record, style = filled, fillcolor = blue,  style = filled, fillcolor = cyan, label="{for.end.loopexit:                                 \l  %.lcssa252 = phi i32 [ %19, %for.body ]\l  br label %for.end\l}"];
	Node0x66dd7e0 -> Node0x66efec0;
	Node0x66efec0 [shape=record, style = filled, fillcolor = turquoise,  style = filled, fillcolor = blue, label="{for.end:                                          \l  %21 = phi i32 [ %9, %entry ], [ %.lcssa252, %for.end.loopexit ]\l  %MCU_vert_offset = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 3\l  %22 = bitcast i32* %MCU_vert_offset to i64*\l  %23 = load i64, i64* %22, align 8\l  %24 = trunc i64 %23 to i32\l  %MCU_rows_per_iMCU_row = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 4\l  %25 = lshr i64 %23, 32\l  %26 = trunc i64 %25 to i32\l  %cmp9188 = icmp slt i32 %24, %26\l  br i1 %cmp9188, label %for.body10.lr.ph, label %for.end.for.end83_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x66efec0:s0 -> Node0x66f3d10;
	Node0x66efec0:s1 -> Node0x66f3df0;
	Node0x66f3df0 [shape=record, style = filled, fillcolor = blue, label="{for.end.for.end83_crit_edge:                      \l  %.pre219 = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 1\l  br label %for.end83\l}"];
	Node0x66f3df0 -> Node0x66f4060;
	Node0x66f3d10 [shape=record, style = filled, fillcolor = blue, label="{for.body10.lr.ph:                                 \l  %mcu_ctr = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 2\l  %entropy = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59\l  %arraydecay = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]*\l... %MCU_buffer, i64 0, i64 0\l  %iMCU_row_num28 = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 1\l  %sext = shl i64 %23, 32\l  %27 = ashr exact i64 %sext, 32\l  %.pre = load i32, i32* %mcu_ctr, align 4, !tbaa !24\l  %.pre213 = load i32, i32* %MCUs_per_row, align 8, !tbaa !10\l  br label %for.body10\l}"];
	Node0x66f3d10 -> Node0x66f5200;
	Node0x66f5200 [shape=record, style = filled, fillcolor = blue, label="{for.body10:                                       \l  %28 = phi i32 [ %26, %for.body10.lr.ph ], [ %69, %for.end79 ]\l  %29 = phi i32 [ %.pre213, %for.body10.lr.ph ], [ %70, %for.end79 ]\l  %30 = phi i32 [ %.pre, %for.body10.lr.ph ], [ 0, %for.end79 ]\l  %indvars.iv207 = phi i64 [ %27, %for.body10.lr.ph ], [ %indvars.iv.next208,\l... %for.end79 ]\l  %cmp13186 = icmp ult i32 %30, %29\l  br i1 %cmp13186, label %for.cond15.preheader.preheader, label %for.end79\l|{<s0>T|<s1>F}}"];
	Node0x66f5200:s0 -> Node0x66f2630;
	Node0x66f5200:s1 -> Node0x66f53c0;
	Node0x66f2630 [shape=record, style = filled, fillcolor = blue, label="{for.cond15.preheader.preheader:                   \l  br label %for.cond15.preheader\l}"];
	Node0x66f2630 -> Node0x66f27e0;
	Node0x66f27e0 [shape=record, style = filled, fillcolor = blue, label="{for.cond15.preheader:                             \l  %MCU_col_num.0187 = phi i32 [ %inc78, %for.inc77 ], [ %30,\l... %for.cond15.preheader.preheader ]\l  %31 = load i32, i32* %comps_in_scan, align 4, !tbaa !23\l  %cmp17183 = icmp sgt i32 %31, 0\l  br i1 %cmp17183, label %for.body18.lr.ph, label %for.end71\l|{<s0>T|<s1>F}}"];
	Node0x66f27e0:s0 -> Node0x66f6250;
	Node0x66f27e0:s1 -> Node0x66f6350;
	Node0x66f6250 [shape=record, style = filled, fillcolor = blue, label="{for.body18.lr.ph:                                 \l  %cmp23 = icmp ult i32 %MCU_col_num.0187, %sub\l  %32 = sext i32 %31 to i64\l  br label %for.body18\l}"];
	Node0x66f6250 -> Node0x66f23a0;
	Node0x66f23a0 [shape=record, style = filled, fillcolor = blue, label="{for.body18:                                       \l  %indvars.iv205 = phi i64 [ 0, %for.body18.lr.ph ], [ %indvars.iv.next206,\l... %for.inc69 ]\l  %blkn.0184 = phi i32 [ 0, %for.body18.lr.ph ], [ %blkn.1.lcssa, %for.inc69 ]\l  %arrayidx21 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv205\l  %33 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx21, align 8, !tbaa !11\l  %MCU_width = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %33, i64 0, i32 13\l  %34 = load i32, i32* %MCU_width, align 4, !tbaa !25\l  %mul22 = mul i32 %34, %MCU_col_num.0187\l  br i1 %cmp23, label %cond.end, label %cond.false\l|{<s0>T|<s1>F}}"];
	Node0x66f23a0:s0 -> Node0x66f6fb0;
	Node0x66f23a0:s1 -> Node0x66f7060;
	Node0x66f7060 [shape=record, style = filled, fillcolor = blue, label="{cond.false:                                       \l  %last_col_width = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %33, i64 0, i32 17\l  %35 = load i32, i32* %last_col_width, align 4, !tbaa !26\l  br label %cond.end\l}"];
	Node0x66f7060 -> Node0x66f6fb0;
	Node0x66f6fb0 [shape=record, style = filled, fillcolor = blue, label="{cond.end:                                         \l  %cond = phi i32 [ %35, %cond.false ], [ %34, %for.body18 ]\l  %MCU_height = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %33, i64 0, i32 14\l  %36 = load i32, i32* %MCU_height, align 8, !tbaa !27\l  %cmp26178 = icmp sgt i32 %36, 0\l  br i1 %cmp26178, label %for.body27.lr.ph, label %for.inc69\l|{<s0>T|<s1>F}}"];
	Node0x66f6fb0:s0 -> Node0x66f7820;
	Node0x66f6fb0:s1 -> Node0x66f67b0;
	Node0x66f7820 [shape=record, style = filled, fillcolor = blue, label="{for.body27.lr.ph:                                 \l  %arrayidx34 = getelementptr inbounds [4 x [64 x i16]**], [4 x [64 x i16]**]*\l... %buffer, i64 0, i64 %indvars.iv205\l  %idx.ext = zext i32 %mul22 to i64\l  %cmp37169 = icmp sgt i32 %cond, 0\l  %last_row_height = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %33, i64 0, i32 18\l  br i1 %cmp37169, label %for.body27.us.preheader, label %for.body27.preheader\l|{<s0>T|<s1>F}}"];
	Node0x66f7820:s0 -> Node0x66f7c30;
	Node0x66f7820:s1 -> Node0x66f7d30;
	Node0x66f7d30 [shape=record, style = filled, fillcolor = blue, label="{for.body27.preheader:                             \l  %cmp47174 = icmp sgt i32 %34, 0\l  br label %for.body27\l}"];
	Node0x66f7d30 -> Node0x66f7f40;
	Node0x66f7c30 [shape=record, style = filled, fillcolor = blue, label="{for.body27.us.preheader:                          \l  %37 = sext i32 %36 to i64\l  %.pre215 = load i32, i32* %iMCU_row_num28, align 8, !tbaa !21\l  %cmp29.us = icmp ult i32 %.pre215, %sub2\l  %38 = add i32 %cond, -1\l  %39 = zext i32 %38 to i64\l  %40 = add nuw nsw i64 %39, 1\l  %min.iters.check = icmp ult i64 %40, 4\l  %n.vec = and i64 %40, 8589934588\l  %cmp.zero = icmp eq i64 %n.vec, 0\l  %cast.crd = trunc i64 %n.vec to i32\l  %cmp.n = icmp eq i64 %40, %n.vec\l  br label %for.body27.us\l}"];
	Node0x66f7c30 -> Node0x66f8620;
	Node0x66f8620 [shape=record, style = filled, fillcolor = blue, label="{for.body27.us:                                    \l  %indvars.iv201 = phi i64 [ 0, %for.body27.us.preheader ], [\l... %indvars.iv.next202, %for.inc66.us ]\l  %blkn.1179.us = phi i32 [ %blkn.0184, %for.body27.us.preheader ], [\l... %blkn.3.lcssa.us, %for.inc66.us ]\l  %.pre218 = add nsw i64 %indvars.iv201, %indvars.iv207\l  br i1 %cmp29.us, label %if.then.us, label %lor.lhs.false.us\l|{<s0>T|<s1>F}}"];
	Node0x66f8620:s0 -> Node0x66f8bd0;
	Node0x66f8620:s1 -> Node0x66f8ce0;
	Node0x66f8ce0 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false.us:                                 \l  %41 = load i32, i32* %last_row_height, align 8, !tbaa !28\l  %42 = sext i32 %41 to i64\l  %cmp30.us = icmp slt i64 %.pre218, %42\l  br i1 %cmp30.us, label %if.then.us, label %for.cond45.preheader.us\l|{<s0>T|<s1>F}}"];
	Node0x66f8ce0:s0 -> Node0x66f8bd0;
	Node0x66f8ce0:s1 -> Node0x66f95c0;
	Node0x66f8bd0 [shape=record, style = filled, fillcolor = blue, label="{if.then.us:                                       \l  %43 = load [64 x i16]**, [64 x i16]*** %arrayidx34, align 8, !tbaa !11\l  %arrayidx35.us = getelementptr inbounds [64 x i16]*, [64 x i16]** %43, i64\l... %.pre218\l  %44 = load [64 x i16]*, [64 x i16]** %arrayidx35.us, align 8, !tbaa !11\l  %add.ptr.us = getelementptr inbounds [64 x i16], [64 x i16]* %44, i64\l... %idx.ext\l  %45 = sext i32 %blkn.1179.us to i64\l  br i1 %min.iters.check, label %for.body38.us.preheader, label\l... %min.iters.checked\l|{<s0>T|<s1>F}}"];
	Node0x66f8bd0:s0 -> Node0x66f59f0;
	Node0x66f8bd0:s1 -> Node0x66f5af0;
	Node0x66f59f0 [shape=record, style = filled, fillcolor = blue, label="{for.body38.us.preheader:                          \l  %indvars.iv197.ph = phi i64 [ %45, %min.iters.checked ], [ %45, %if.then.us\l... ], [ %ind.end, %middle.block ]\l  %buffer_ptr.0172.us.ph = phi [64 x i16]* [ %add.ptr.us, %min.iters.checked\l... ], [ %add.ptr.us, %if.then.us ], [ %ind.end229, %middle.block ]\l  %xindex.0171.us.ph = phi i32 [ 0, %min.iters.checked ], [ 0, %if.then.us ],\l... [ %cast.crd, %middle.block ]\l  br label %for.body38.us\l}"];
	Node0x66f59f0 -> Node0x66fa6f0;
	Node0x66f5af0 [shape=record, style = filled, fillcolor = blue, label="{min.iters.checked:                                \l  %ind.end = add nsw i64 %45, %n.vec\l  %ind.end229 = getelementptr [64 x i16], [64 x i16]* %add.ptr.us, i64 %n.vec\l  br i1 %cmp.zero, label %for.body38.us.preheader, label %vector.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x66f5af0:s0 -> Node0x66f59f0;
	Node0x66f5af0:s1 -> Node0x66fa940;
	Node0x66fa940 [shape=record, style = filled, fillcolor = blue, label="{vector.body.preheader:                            \l  br label %vector.body\l}"];
	Node0x66fa940 -> Node0x66faa50;
	Node0x66faa50 [shape=record, style = filled, fillcolor = blue, label="{vector.body:                                      \l  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.body.preheader ]\l  %offset.idx = add i64 %45, %index\l  %next.gep = getelementptr [64 x i16], [64 x i16]* %add.ptr.us, i64 %index\l  %insert.gep = insertelement \<2 x [64 x i16]*\> undef, [64 x i16]* %next.gep,\l... i32 0\l  %46 = or i64 %index, 1\l  %next.gep233 = getelementptr [64 x i16], [64 x i16]* %add.ptr.us, i64 %46\l  %insert.gep234 = insertelement \<2 x [64 x i16]*\> %insert.gep, [64 x i16]*\l... %next.gep233, i32 1\l  %47 = or i64 %index, 2\l  %next.gep235 = getelementptr [64 x i16], [64 x i16]* %add.ptr.us, i64 %47\l  %insert.gep236 = insertelement \<2 x [64 x i16]*\> undef, [64 x i16]*\l... %next.gep235, i32 0\l  %48 = or i64 %index, 3\l  %next.gep237 = getelementptr [64 x i16], [64 x i16]* %add.ptr.us, i64 %48\l  %insert.gep238 = insertelement \<2 x [64 x i16]*\> %insert.gep236, [64 x i16]*\l... %next.gep237, i32 1\l  %49 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]*\l... %MCU_buffer, i64 0, i64 %offset.idx\l  %50 = bitcast [64 x i16]** %49 to \<2 x [64 x i16]*\>*\l  store \<2 x [64 x i16]*\> %insert.gep234, \<2 x [64 x i16]*\>* %50, align 8,\l... !tbaa !11\l  %51 = getelementptr [64 x i16]*, [64 x i16]** %49, i64 2\l  %52 = bitcast [64 x i16]** %51 to \<2 x [64 x i16]*\>*\l  store \<2 x [64 x i16]*\> %insert.gep238, \<2 x [64 x i16]*\>* %52, align 8,\l... !tbaa !11\l  %index.next = add i64 %index, 4\l  %53 = icmp eq i64 %index.next, %n.vec\l  br i1 %53, label %middle.block, label %vector.body, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x66faa50:s0 -> Node0x66f5d20;
	Node0x66faa50:s1 -> Node0x66faa50;
	Node0x66f5d20 [shape=record, style = filled, fillcolor = blue, label="{middle.block:                                     \l  br i1 %cmp.n, label %for.cond45.preheader.us.loopexit, label\l... %for.body38.us.preheader\l|{<s0>T|<s1>F}}"];
	Node0x66f5d20:s0 -> Node0x66fb8d0;
	Node0x66f5d20:s1 -> Node0x66f59f0;
	Node0x66fba20 [shape=record, style = filled, fillcolor = blue, label="{for.inc66.us.loopexit:                            \l  %inc62.us.lcssa = phi i32 [ %inc62.us, %for.body48.us ]\l  br label %for.inc66.us\l}"];
	Node0x66fba20 -> Node0x66f87f0;
	Node0x66f87f0 [shape=record, style = filled, fillcolor = blue, label="{for.inc66.us:                                     \l  %blkn.3.lcssa.us = phi i32 [ %blkn.3.ph.us, %for.cond45.preheader.us ], [\l... %inc62.us.lcssa, %for.inc66.us.loopexit ]\l  %indvars.iv.next202 = add nuw nsw i64 %indvars.iv201, 1\l  %cmp26.us = icmp slt i64 %indvars.iv.next202, %37\l  br i1 %cmp26.us, label %for.body27.us, label %for.inc69.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x66f87f0:s0 -> Node0x66f8620;
	Node0x66f87f0:s1 -> Node0x66fbfb0;
	Node0x66fbb30 [shape=record, style = filled, fillcolor = blue, label="{for.body48.us:                                    \l  %indvars.iv199 = phi i64 [ %59, %for.body48.lr.ph.us ], [\l... %indvars.iv.next200, %for.body48.us ]\l  %xindex.1176.us = phi i32 [ %xindex.1.ph.us, %for.body48.lr.ph.us ], [\l... %inc64.us, %for.body48.us ]\l  %blkn.3175.us = phi i32 [ %blkn.3.ph.us, %for.body48.lr.ph.us ], [\l... %inc62.us, %for.body48.us ]\l  %arrayidx50.us = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 6, i64 %indvars.iv199\l  %54 = load [64 x i16]*, [64 x i16]** %arrayidx50.us, align 8, !tbaa !11\l  %arrayidx52.us = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x\l... i16]*]* %MCU_buffer, i64 0, i64 %indvars.iv199\l  store [64 x i16]* %54, [64 x i16]** %arrayidx52.us, align 8, !tbaa !11\l  %sub53.us = add nsw i32 %blkn.3175.us, -1\l  %idxprom54.us = sext i32 %sub53.us to i64\l  %arrayidx55.us = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x\l... i16]*]* %MCU_buffer, i64 0, i64 %idxprom54.us\l  %55 = load [64 x i16]*, [64 x i16]** %arrayidx55.us, align 8, !tbaa !11\l  %arrayidx57.us = getelementptr inbounds [64 x i16], [64 x i16]* %55, i64 0,\l... i64 0\l  %56 = load i16, i16* %arrayidx57.us, align 2, !tbaa !32\l  %arrayidx61.us = getelementptr inbounds [64 x i16], [64 x i16]* %54, i64 0,\l... i64 0\l  store i16 %56, i16* %arrayidx61.us, align 2, !tbaa !32\l  %inc62.us = add nsw i32 %blkn.3175.us, 1\l  %inc64.us = add nsw i32 %xindex.1176.us, 1\l  %cmp47.us = icmp slt i32 %inc64.us, %58\l  %indvars.iv.next200 = add nsw i64 %indvars.iv199, 1\l  br i1 %cmp47.us, label %for.body48.us, label %for.inc66.us.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x66fbb30:s0 -> Node0x66fbb30;
	Node0x66fbb30:s1 -> Node0x66fba20;
	Node0x66fa6f0 [shape=record, style = filled, fillcolor = blue, label="{for.body38.us:                                    \l  %indvars.iv197 = phi i64 [ %indvars.iv.next198, %for.body38.us ], [\l... %indvars.iv197.ph, %for.body38.us.preheader ]\l  %buffer_ptr.0172.us = phi [64 x i16]* [ %incdec.ptr.us, %for.body38.us ], [\l... %buffer_ptr.0172.us.ph, %for.body38.us.preheader ]\l  %xindex.0171.us = phi i32 [ %inc43.us, %for.body38.us ], [\l... %xindex.0171.us.ph, %for.body38.us.preheader ]\l  %incdec.ptr.us = getelementptr inbounds [64 x i16], [64 x i16]*\l... %buffer_ptr.0172.us, i64 1\l  %arrayidx41.us = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x\l... i16]*]* %MCU_buffer, i64 0, i64 %indvars.iv197\l  store [64 x i16]* %buffer_ptr.0172.us, [64 x i16]** %arrayidx41.us, align 8,\l... !tbaa !11\l  %inc43.us = add nuw nsw i32 %xindex.0171.us, 1\l  %indvars.iv.next198 = add nsw i64 %indvars.iv197, 1\l  %exitcond = icmp eq i32 %inc43.us, %cond\l  br i1 %exitcond, label %for.cond45.preheader.us.loopexit.loopexit, label\l... %for.body38.us, !llvm.loop !33\l|{<s0>T|<s1>F}}"];
	Node0x66fa6f0:s0 -> Node0x66eb620;
	Node0x66fa6f0:s1 -> Node0x66fa6f0;
	Node0x66eb620 [shape=record, style = filled, fillcolor = blue, label="{for.cond45.preheader.us.loopexit.loopexit:        \l  br label %for.cond45.preheader.us.loopexit\l}"];
	Node0x66eb620 -> Node0x66fb8d0;
	Node0x66fb8d0 [shape=record, style = filled, fillcolor = blue, label="{for.cond45.preheader.us.loopexit:                 \l  %57 = add i32 %cond, %blkn.1179.us\l  br label %for.cond45.preheader.us\l}"];
	Node0x66fb8d0 -> Node0x66f95c0;
	Node0x66f95c0 [shape=record, style = filled, fillcolor = blue, label="{for.cond45.preheader.us:                          \l  %blkn.3.ph.us = phi i32 [ %blkn.1179.us, %lor.lhs.false.us ], [ %57,\l... %for.cond45.preheader.us.loopexit ]\l  %xindex.1.ph.us = phi i32 [ 0, %lor.lhs.false.us ], [ %cond,\l... %for.cond45.preheader.us.loopexit ]\l  %cmp47174.us = icmp slt i32 %xindex.1.ph.us, %34\l  br i1 %cmp47174.us, label %for.body48.lr.ph.us, label %for.inc66.us\l|{<s0>T|<s1>F}}"];
	Node0x66f95c0:s0 -> Node0x66fc0c0;
	Node0x66f95c0:s1 -> Node0x66f87f0;
	Node0x66fc0c0 [shape=record, style = filled, fillcolor = blue, label="{for.body48.lr.ph.us:                              \l  %58 = load i32, i32* %MCU_width, align 4\l  %59 = sext i32 %blkn.3.ph.us to i64\l  br label %for.body48.us\l}"];
	Node0x66fc0c0 -> Node0x66fbb30;
	Node0x66f7f40 [shape=record, style = filled, fillcolor = blue, label="{for.body27:                                       \l  %yindex.0180 = phi i32 [ %inc67, %for.inc66 ], [ 0, %for.body27.preheader ]\l  %blkn.1179 = phi i32 [ %blkn.3.lcssa, %for.inc66 ], [ %blkn.0184,\l... %for.body27.preheader ]\l  br i1 %cmp47174, label %for.body48.lr.ph, label %for.inc66\l|{<s0>T|<s1>F}}"];
	Node0x66f7f40:s0 -> Node0x66ebd50;
	Node0x66f7f40:s1 -> Node0x66eba50;
	Node0x66ebd50 [shape=record, style = filled, fillcolor = blue, label="{for.body48.lr.ph:                                 \l  %60 = load i32, i32* %MCU_width, align 4\l  %61 = sext i32 %blkn.1179 to i64\l  br label %for.body48\l}"];
	Node0x66ebd50 -> Node0x66ebf20;
	Node0x66ebf20 [shape=record, style = filled, fillcolor = blue, label="{for.body48:                                       \l  %indvars.iv = phi i64 [ %61, %for.body48.lr.ph ], [ %indvars.iv.next,\l... %for.body48 ]\l  %xindex.1176 = phi i32 [ 0, %for.body48.lr.ph ], [ %inc64, %for.body48 ]\l  %blkn.3175 = phi i32 [ %blkn.1179, %for.body48.lr.ph ], [ %inc62,\l... %for.body48 ]\l  %arrayidx50 = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 6, i64 %indvars.iv\l  %62 = load [64 x i16]*, [64 x i16]** %arrayidx50, align 8, !tbaa !11\l  %arrayidx52 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]*\l... %MCU_buffer, i64 0, i64 %indvars.iv\l  store [64 x i16]* %62, [64 x i16]** %arrayidx52, align 8, !tbaa !11\l  %sub53 = add nsw i32 %blkn.3175, -1\l  %idxprom54 = sext i32 %sub53 to i64\l  %arrayidx55 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]*\l... %MCU_buffer, i64 0, i64 %idxprom54\l  %63 = load [64 x i16]*, [64 x i16]** %arrayidx55, align 8, !tbaa !11\l  %arrayidx57 = getelementptr inbounds [64 x i16], [64 x i16]* %63, i64 0, i64\l... 0\l  %64 = load i16, i16* %arrayidx57, align 2, !tbaa !32\l  %arrayidx61 = getelementptr inbounds [64 x i16], [64 x i16]* %62, i64 0, i64\l... 0\l  store i16 %64, i16* %arrayidx61, align 2, !tbaa !32\l  %inc62 = add nsw i32 %blkn.3175, 1\l  %inc64 = add nuw nsw i32 %xindex.1176, 1\l  %cmp47 = icmp slt i32 %inc64, %60\l  %indvars.iv.next = add nsw i64 %indvars.iv, 1\l  br i1 %cmp47, label %for.body48, label %for.inc66.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x66ebf20:s0 -> Node0x66ebf20;
	Node0x66ebf20:s1 -> Node0x66ecf50;
	Node0x66ecf50 [shape=record, style = filled, fillcolor = blue, label="{for.inc66.loopexit:                               \l  %inc62.lcssa = phi i32 [ %inc62, %for.body48 ]\l  br label %for.inc66\l}"];
	Node0x66ecf50 -> Node0x66eba50;
	Node0x66eba50 [shape=record, style = filled, fillcolor = blue, label="{for.inc66:                                        \l  %blkn.3.lcssa = phi i32 [ %blkn.1179, %for.body27 ], [ %inc62.lcssa,\l... %for.inc66.loopexit ]\l  %inc67 = add nuw nsw i32 %yindex.0180, 1\l  %cmp26 = icmp slt i32 %inc67, %36\l  br i1 %cmp26, label %for.body27, label %for.inc69.loopexit246\l|{<s0>T|<s1>F}}"];
	Node0x66eba50:s0 -> Node0x66f7f40;
	Node0x66eba50:s1 -> Node0x6701350;
	Node0x66fbfb0 [shape=record, style = filled, fillcolor = blue, label="{for.inc69.loopexit:                               \l  %blkn.3.lcssa.us.lcssa = phi i32 [ %blkn.3.lcssa.us, %for.inc66.us ]\l  br label %for.inc69\l}"];
	Node0x66fbfb0 -> Node0x66f67b0;
	Node0x6701350 [shape=record, style = filled, fillcolor = blue, label="{for.inc69.loopexit246:                            \l  %blkn.3.lcssa.lcssa = phi i32 [ %blkn.3.lcssa, %for.inc66 ]\l  br label %for.inc69\l}"];
	Node0x6701350 -> Node0x66f67b0;
	Node0x66f67b0 [shape=record, style = filled, fillcolor = blue, label="{for.inc69:                                        \l  %blkn.1.lcssa = phi i32 [ %blkn.0184, %cond.end ], [ %blkn.3.lcssa.us.lcssa,\l... %for.inc69.loopexit ], [ %blkn.3.lcssa.lcssa, %for.inc69.loopexit246 ]\l  %indvars.iv.next206 = add nuw nsw i64 %indvars.iv205, 1\l  %cmp17 = icmp slt i64 %indvars.iv.next206, %32\l  br i1 %cmp17, label %for.body18, label %for.end71.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x66f67b0:s0 -> Node0x66f23a0;
	Node0x66f67b0:s1 -> Node0x67016c0;
	Node0x67016c0 [shape=record, style = filled, fillcolor = blue, label="{for.end71.loopexit:                               \l  br label %for.end71\l}"];
	Node0x67016c0 -> Node0x66f6350;
	Node0x66f6350 [shape=record, style = filled, fillcolor = blue, label="{for.end71:                                        \l  %65 = load %struct.jpeg_entropy_encoder*, %struct.jpeg_entropy_encoder**\l... %entropy, align 8, !tbaa !35\l  %encode_mcu = getelementptr inbounds %struct.jpeg_entropy_encoder,\l... %struct.jpeg_entropy_encoder* %65, i64 0, i32 1\l  %66 = load i32 (%struct.jpeg_compress_struct*, [64 x i16]**)*, i32\l... (%struct.jpeg_compress_struct*, [64 x i16]**)** %encode_mcu, align 8, !tbaa\l... !36\l  %call72 = call i32 %66(%struct.jpeg_compress_struct* nonnull %cinfo, [64 x\l... i16]** %arraydecay) #3\l  %tobool = icmp eq i32 %call72, 0\l  br i1 %tobool, label %if.then73, label %for.inc77\l|{<s0>T|<s1>F}}"];
	Node0x66f6350:s0 -> Node0x6701b60;
	Node0x66f6350:s1 -> Node0x66f5f50;
	Node0x6701b60 [shape=record, style = filled, fillcolor = blue, label="{if.then73:                                        \l  %indvars.iv207.lcssa = phi i64 [ %indvars.iv207, %for.end71 ]\l  %MCU_col_num.0187.lcssa = phi i32 [ %MCU_col_num.0187, %for.end71 ]\l  %67 = trunc i64 %indvars.iv207.lcssa to i32\l  store i32 %67, i32* %MCU_vert_offset, align 8, !tbaa !38\l  store i32 %MCU_col_num.0187.lcssa, i32* %mcu_ctr, align 4, !tbaa !24\l  br label %cleanup\l}"];
	Node0x6701b60 -> Node0x6702590;
	Node0x66f5f50 [shape=record, style = filled, fillcolor = blue, label="{for.inc77:                                        \l  %inc78 = add i32 %MCU_col_num.0187, 1\l  %68 = load i32, i32* %MCUs_per_row, align 8, !tbaa !10\l  %cmp13 = icmp ult i32 %inc78, %68\l  br i1 %cmp13, label %for.cond15.preheader, label %for.end79.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x66f5f50:s0 -> Node0x66f27e0;
	Node0x66f5f50:s1 -> Node0x66f9980;
	Node0x66f9980 [shape=record, style = filled, fillcolor = blue, label="{for.end79.loopexit:                               \l  %.lcssa = phi i32 [ %68, %for.inc77 ]\l  %.pre216 = load i32, i32* %MCU_rows_per_iMCU_row, align 4, !tbaa !39\l  br label %for.end79\l}"];
	Node0x66f9980 -> Node0x66f53c0;
	Node0x66f53c0 [shape=record, style = filled, fillcolor = blue, label="{for.end79:                                        \l  %69 = phi i32 [ %.pre216, %for.end79.loopexit ], [ %28, %for.body10 ]\l  %70 = phi i32 [ %.lcssa, %for.end79.loopexit ], [ %29, %for.body10 ]\l  store i32 0, i32* %mcu_ctr, align 4, !tbaa !24\l  %indvars.iv.next208 = add i64 %indvars.iv207, 1\l  %71 = sext i32 %69 to i64\l  %cmp9 = icmp slt i64 %indvars.iv.next208, %71\l  br i1 %cmp9, label %for.body10, label %for.end83.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x66f53c0:s0 -> Node0x66f5200;
	Node0x66f53c0:s1 -> Node0x66f9e40;
	Node0x66f9e40 [shape=record, style = filled, fillcolor = blue, label="{for.end83.loopexit:                               \l  %.pre217 = load i32, i32* %comps_in_scan, align 4, !tbaa !23\l  br label %for.end83\l}"];
	Node0x66f9e40 -> Node0x66f4060;
	Node0x66f4060 [shape=record, style = filled, fillcolor = blue, label="{for.end83:                                        \l  %iMCU_row_num84.pre-phi = phi i32* [ %.pre219, %for.end.for.end83_crit_edge\l... ], [ %iMCU_row_num28, %for.end83.loopexit ]\l  %72 = phi i32 [ %21, %for.end.for.end83_crit_edge ], [ %.pre217,\l... %for.end83.loopexit ]\l  %73 = load i32, i32* %iMCU_row_num84.pre-phi, align 8, !tbaa !21\l  %inc85 = add i32 %73, 1\l  store i32 %inc85, i32* %iMCU_row_num84.pre-phi, align 8, !tbaa !21\l  %74 = load %struct.my_coef_controller*, %struct.my_coef_controller** %0,\l... align 8, !tbaa !2\l  %cmp.i = icmp sgt i32 %72, 1\l  br i1 %cmp.i, label %if.then.i, label %if.else.i\l|{<s0>T|<s1>F}}"];
	Node0x66f4060:s0 -> Node0x6703e00;
	Node0x66f4060:s1 -> Node0x6703eb0;
	Node0x6703e00 [shape=record, style = filled, fillcolor = blue,  style = filled, fillcolor = cyan, label="{if.then.i:                                        \l  %MCU_rows_per_iMCU_row.i = getelementptr inbounds\l... %struct.my_coef_controller, %struct.my_coef_controller* %74, i64 0, i32 4\l  store i32 1, i32* %MCU_rows_per_iMCU_row.i, align 4, !tbaa !39\l  br label %start_iMCU_row.exit\l}"];
	Node0x6703e00 -> Node0x6704140;
	Node0x6703eb0 [shape=record, style = filled, fillcolor = turquoise,  style = filled, fillcolor = blue, label="{if.else.i:                                        \l  %iMCU_row_num.i = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %74, i64 0, i32 1\l  %75 = load i32, i32* %iMCU_row_num.i, align 8, !tbaa !21\l  %76 = load i32, i32* %total_iMCU_rows, align 8, !tbaa !40\l  %sub.i = add i32 %76, -1\l  %cmp2.i = icmp ult i32 %75, %sub.i\l  %arrayidx.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 0\l  %77 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx.i, align 8, !tbaa !11\l  br i1 %cmp2.i, label %if.then3.i, label %if.else5.i\l|{<s0>T|<s1>F}}"];
	Node0x6703eb0:s0 -> Node0x6704a70;
	Node0x6703eb0:s1 -> Node0x6704b20;
	Node0x6704a70 [shape=record, style = filled, fillcolor = turquoise,  style = filled, fillcolor = blue, label="{if.then3.i:                                       \l  %v_samp_factor.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %77, i64 0, i32 3\l  %78 = load i32, i32* %v_samp_factor.i, align 4, !tbaa !22\l  %MCU_rows_per_iMCU_row4.i = getelementptr inbounds\l... %struct.my_coef_controller, %struct.my_coef_controller* %74, i64 0, i32 4\l  store i32 %78, i32* %MCU_rows_per_iMCU_row4.i, align 4, !tbaa !39\l  br label %start_iMCU_row.exit\l}"];
	Node0x6704a70 -> Node0x6704140;
	Node0x6704b20 [shape=record, style = filled, fillcolor = blue,  style = filled, fillcolor = cyan, label="{if.else5.i:                                       \l  %last_row_height.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %77, i64 0, i32 18\l  %79 = load i32, i32* %last_row_height.i, align 8, !tbaa !28\l  %MCU_rows_per_iMCU_row8.i = getelementptr inbounds\l... %struct.my_coef_controller, %struct.my_coef_controller* %74, i64 0, i32 4\l  store i32 %79, i32* %MCU_rows_per_iMCU_row8.i, align 4, !tbaa !39\l  br label %start_iMCU_row.exit\l}"];
	Node0x6704b20 -> Node0x6704140;
	Node0x6704140 [shape=record, style = filled, fillcolor = turquoise,  style = filled, fillcolor = blue, label="{start_iMCU_row.exit:                              \l  %mcu_ctr.i = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %74, i64 0, i32 2\l  store i32 0, i32* %mcu_ctr.i, align 4, !tbaa !24\l  %MCU_vert_offset.i = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %74, i64 0, i32 3\l  store i32 0, i32* %MCU_vert_offset.i, align 8, !tbaa !38\l  br label %cleanup\l}"];
	Node0x6704140 -> Node0x6702590;
	Node0x6702590 [shape=record, style = filled, fillcolor = turquoise,  style = filled, fillcolor = blue, label="{cleanup:                                          \l  %retval.0 = phi i32 [ 0, %if.then73 ], [ 1, %start_iMCU_row.exit ]\l  call void @llvm.lifetime.end(i64 80, i8* %7) #3\l  call void @llvm.lifetime.end(i64 32, i8* %6) #3\l  ret i32 %retval.0\l}"];
}
