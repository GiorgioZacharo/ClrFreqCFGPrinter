digraph "CFG for 'jinit_color_deconverter' function" {
	label="CFG for 'jinit_color_deconverter' function";

	Node0x66f12a0 [shape=record,label="{entry:\l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !2\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %0, i64 0, i32 0\l  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !10\l  %2 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %1(%struct.jpeg_common_struct* %2, i32 1, i64 48) #4\l  %cconvert1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 82\l  %3 = bitcast %struct.jpeg_color_deconverter** %cconvert1 to i8**\l  store i8* %call, i8** %3, align 8, !tbaa !13\l  %start_pass2 = bitcast i8* %call to void (%struct.jpeg_decompress_struct*)**\l  store void (%struct.jpeg_decompress_struct*)* @start_pass_dcolor, void\l... (%struct.jpeg_decompress_struct*)** %start_pass2, align 8, !tbaa !14\l  %jpeg_color_space = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 9\l  %4 = load i32, i32* %jpeg_color_space, align 4, !tbaa !17\l  switch i32 %4, label %sw.default [\l    i32 1, label %sw.bb\l    i32 2, label %sw.bb4\l    i32 3, label %sw.bb4\l    i32 4, label %sw.bb13\l    i32 5, label %sw.bb13\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5}}"];
	Node0x66f12a0:s0 -> Node0x66f6d70;
	Node0x66f12a0:s1 -> Node0x66f6e20;
	Node0x66f12a0:s2 -> Node0x66f6f30;
	Node0x66f12a0:s3 -> Node0x66f6f30;
	Node0x66f12a0:s4 -> Node0x66f7080;
	Node0x66f12a0:s5 -> Node0x66f7080;
	Node0x66f6e20 [shape=record,label="{sw.bb:                                            \l  %num_components = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %5 = load i32, i32* %num_components, align 8, !tbaa !18\l  %cmp = icmp eq i32 %5, 1\l  br i1 %cmp, label %sw.epilog, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x66f6e20:s0 -> Node0x66f76b0;
	Node0x66f6e20:s1 -> Node0x66f7760;
	Node0x66f7760 [shape=record,label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %6 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !19\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %6, i64 0, i32 5\l  store i32 8, i32* %msg_code, align 8, !tbaa !20\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %6, i64 0, i32 0\l  %7 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !22\l  tail call void %7(%struct.jpeg_common_struct* nonnull %2) #4\l  br label %sw.epilog\l}"];
	Node0x66f7760 -> Node0x66f76b0;
	Node0x66f6f30 [shape=record,label="{sw.bb4:                                           \l  %num_components5 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %8 = load i32, i32* %num_components5, align 8, !tbaa !18\l  %cmp6 = icmp eq i32 %8, 3\l  br i1 %cmp6, label %sw.epilog, label %if.then7\l|{<s0>T|<s1>F}}"];
	Node0x66f6f30:s0 -> Node0x66f76b0;
	Node0x66f6f30:s1 -> Node0x66f6d20;
	Node0x66f6d20 [shape=record,label="{if.then7:                                         \l  %err8 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err8, align 8,\l... !tbaa !19\l  %msg_code9 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 5\l  store i32 8, i32* %msg_code9, align 8, !tbaa !20\l  %error_exit11 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 0\l  %10 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit11, align 8, !tbaa !22\l  tail call void %10(%struct.jpeg_common_struct* nonnull %2) #4\l  br label %sw.epilog\l}"];
	Node0x66f6d20 -> Node0x66f76b0;
	Node0x66f7080 [shape=record,label="{sw.bb13:                                          \l  %num_components14 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %11 = load i32, i32* %num_components14, align 8, !tbaa !18\l  %cmp15 = icmp eq i32 %11, 4\l  br i1 %cmp15, label %sw.epilog, label %if.then16\l|{<s0>T|<s1>F}}"];
	Node0x66f7080:s0 -> Node0x66f76b0;
	Node0x66f7080:s1 -> Node0x66fa4b0;
	Node0x66fa4b0 [shape=record,label="{if.then16:                                        \l  %err17 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err17, align\l... 8, !tbaa !19\l  %msg_code18 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %12, i64 0, i32 5\l  store i32 8, i32* %msg_code18, align 8, !tbaa !20\l  %error_exit20 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %12, i64 0, i32 0\l  %13 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit20, align 8, !tbaa !22\l  tail call void %13(%struct.jpeg_common_struct* nonnull %2) #4\l  br label %sw.epilog\l}"];
	Node0x66fa4b0 -> Node0x66f76b0;
	Node0x66f6d70 [shape=record,label="{sw.default:                                       \l  %num_components22 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %14 = load i32, i32* %num_components22, align 8, !tbaa !18\l  %cmp23 = icmp slt i32 %14, 1\l  br i1 %cmp23, label %if.then24, label %sw.epilog\l|{<s0>T|<s1>F}}"];
	Node0x66f6d70:s0 -> Node0x66fac10;
	Node0x66f6d70:s1 -> Node0x66f76b0;
	Node0x66fac10 [shape=record,label="{if.then24:                                        \l  %err25 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err25, align\l... 8, !tbaa !19\l  %msg_code26 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %15, i64 0, i32 5\l  store i32 8, i32* %msg_code26, align 8, !tbaa !20\l  %error_exit28 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %15, i64 0, i32 0\l  %16 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit28, align 8, !tbaa !22\l  tail call void %16(%struct.jpeg_common_struct* nonnull %2) #4\l  br label %sw.epilog\l}"];
	Node0x66fac10 -> Node0x66f76b0;
	Node0x66f76b0 [shape=record,label="{sw.epilog:                                        \l  %out_color_space = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 10\l  %17 = load i32, i32* %out_color_space, align 8, !tbaa !23\l  switch i32 %17, label %sw.default84 [\l    i32 1, label %sw.bb30\l    i32 2, label %sw.bb44\l    i32 4, label %sw.bb64\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>4}}"];
	Node0x66f76b0:s0 -> Node0x66fb480;
	Node0x66f76b0:s1 -> Node0x66fb560;
	Node0x66f76b0:s2 -> Node0x66fb630;
	Node0x66f76b0:s3 -> Node0x66fb700;
	Node0x66fb560 [shape=record,label="{sw.bb30:                                          \l  %out_color_components = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  store i32 1, i32* %out_color_components, align 8, !tbaa !24\l  %18 = load i32, i32* %jpeg_color_space, align 4, !tbaa !17\l  switch i32 %18, label %if.else [\l    i32 1, label %if.then35\l    i32 3, label %if.then35\l  ]\l|{<s0>def|<s1>1|<s2>3}}"];
	Node0x66fb560:s0 -> Node0x66fc230;
	Node0x66fb560:s1 -> Node0x66fc2e0;
	Node0x66fb560:s2 -> Node0x66fc2e0;
	Node0x66fc2e0 [shape=record,label="{if.then35:                                        \l  %color_convert = getelementptr inbounds i8, i8* %call, i64 8\l  %19 = bitcast i8* %color_convert to void (%struct.jpeg_decompress_struct*,\l... i8***, i32, i8**, i32)**\l  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*\l... @grayscale_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**,\l... i32)** %19, align 8, !tbaa !25\l  %num_components37 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %20 = load i32, i32* %num_components37, align 8, !tbaa !18\l  %cmp38206 = icmp sgt i32 %20, 1\l  br i1 %cmp38206, label %for.body.lr.ph, label %sw.epilog99\l|{<s0>T|<s1>F}}"];
	Node0x66fc2e0:s0 -> Node0x66fcf20;
	Node0x66fc2e0:s1 -> Node0x66f99d0;
	Node0x66fcf20 [shape=record,label="{for.body.lr.ph:                                   \l  %comp_info = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43\l  %21 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8\l  %22 = sext i32 %20 to i64\l  %23 = sext i32 %20 to i64\l  %24 = add nsw i64 %23, 7\l  %25 = add nsw i64 %23, -2\l  %xtraiter = and i64 %24, 7\l  %lcmp.mod = icmp eq i64 %xtraiter, 0\l  br i1 %lcmp.mod, label %for.body.lr.ph.split, label %for.body.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x66fcf20:s0 -> Node0x66fd900;
	Node0x66fcf20:s1 -> Node0x66fda00;
	Node0x66fda00 [shape=record,label="{for.body.prol.preheader:                          \l  br label %for.body.prol\l}"];
	Node0x66fda00 -> Node0x66fdb90;
	Node0x66fdb90 [shape=record,label="{for.body.prol:                                    \l  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body.prol ], [ 1,\l... %for.body.prol.preheader ]\l  %prol.iter = phi i64 [ %prol.iter.sub, %for.body.prol ], [ %xtraiter,\l... %for.body.prol.preheader ]\l  %component_needed.prol = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %21, i64 %indvars.iv.prol, i32 12\l  store i32 0, i32* %component_needed.prol, align 8, !tbaa !26\l  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1\l  %prol.iter.sub = add i64 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %for.body.lr.ph.split.loopexit, label\l... %for.body.prol, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x66fdb90:s0 -> Node0x66fe450;
	Node0x66fdb90:s1 -> Node0x66fdb90;
	Node0x66fe450 [shape=record,label="{for.body.lr.ph.split.loopexit:                    \l  %indvars.iv.next.prol.lcssa = phi i64 [ %indvars.iv.next.prol,\l... %for.body.prol ]\l  br label %for.body.lr.ph.split\l}"];
	Node0x66fe450 -> Node0x66fd900;
	Node0x66fd900 [shape=record,label="{for.body.lr.ph.split:                             \l  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [\l... %indvars.iv.next.prol.lcssa, %for.body.lr.ph.split.loopexit ]\l  %26 = icmp ult i64 %25, 7\l  br i1 %26, label %sw.epilog99.loopexit, label %for.body.lr.ph.split.split\l|{<s0>T|<s1>F}}"];
	Node0x66fd900:s0 -> Node0x66fe7d0;
	Node0x66fd900:s1 -> Node0x66fe8b0;
	Node0x66fe8b0 [shape=record,label="{for.body.lr.ph.split.split:                       \l  br label %for.body\l}"];
	Node0x66fe8b0 -> Node0x66fea60;
	Node0x66fea60 [shape=record,label="{for.body:                                         \l  %indvars.iv = phi i64 [ %indvars.iv.unr, %for.body.lr.ph.split.split ], [\l... %indvars.iv.next.7, %for.body ]\l  %component_needed = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %21, i64 %indvars.iv, i32 12\l  store i32 0, i32* %component_needed, align 8, !tbaa !26\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %component_needed.1 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %21, i64 %indvars.iv.next, i32 12\l  store i32 0, i32* %component_needed.1, align 8, !tbaa !26\l  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2\l  %component_needed.2 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %21, i64 %indvars.iv.next.1, i32 12\l  store i32 0, i32* %component_needed.2, align 8, !tbaa !26\l  %indvars.iv.next.2 = add nsw i64 %indvars.iv, 3\l  %component_needed.3 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %21, i64 %indvars.iv.next.2, i32 12\l  store i32 0, i32* %component_needed.3, align 8, !tbaa !26\l  %indvars.iv.next.3 = add nsw i64 %indvars.iv, 4\l  %component_needed.4 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %21, i64 %indvars.iv.next.3, i32 12\l  store i32 0, i32* %component_needed.4, align 8, !tbaa !26\l  %indvars.iv.next.4 = add nsw i64 %indvars.iv, 5\l  %component_needed.5 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %21, i64 %indvars.iv.next.4, i32 12\l  store i32 0, i32* %component_needed.5, align 8, !tbaa !26\l  %indvars.iv.next.5 = add nsw i64 %indvars.iv, 6\l  %component_needed.6 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %21, i64 %indvars.iv.next.5, i32 12\l  store i32 0, i32* %component_needed.6, align 8, !tbaa !26\l  %indvars.iv.next.6 = add nsw i64 %indvars.iv, 7\l  %component_needed.7 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %21, i64 %indvars.iv.next.6, i32 12\l  store i32 0, i32* %component_needed.7, align 8, !tbaa !26\l  %indvars.iv.next.7 = add nsw i64 %indvars.iv, 8\l  %cmp38.7 = icmp slt i64 %indvars.iv.next.7, %22\l  br i1 %cmp38.7, label %for.body, label %sw.epilog99.loopexit.unr-lcssa\l|{<s0>T|<s1>F}}"];
	Node0x66fea60:s0 -> Node0x66fea60;
	Node0x66fea60:s1 -> Node0x6700420;
	Node0x66fc230 [shape=record,label="{if.else:                                          \l  %err39 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err39, align\l... 8, !tbaa !19\l  %msg_code40 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %27, i64 0, i32 5\l  store i32 25, i32* %msg_code40, align 8, !tbaa !20\l  %error_exit42 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %27, i64 0, i32 0\l  %28 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit42, align 8, !tbaa !22\l  tail call void %28(%struct.jpeg_common_struct* nonnull %2) #4\l  br label %sw.epilog99\l}"];
	Node0x66fc230 -> Node0x66f99d0;
	Node0x66fb630 [shape=record,label="{sw.bb44:                                          \l  %out_color_components45 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  store i32 3, i32* %out_color_components45, align 8, !tbaa !24\l  %29 = load i32, i32* %jpeg_color_space, align 4, !tbaa !17\l  switch i32 %29, label %if.else57 [\l    i32 3, label %if.then48\l    i32 2, label %if.then54\l  ]\l|{<s0>def|<s1>3|<s2>2}}"];
	Node0x66fb630:s0 -> Node0x6701190;
	Node0x66fb630:s1 -> Node0x6701240;
	Node0x66fb630:s2 -> Node0x66fc5f0;
	Node0x6701240 [shape=record,label="{if.then48:                                        \l  %color_convert50 = getelementptr inbounds i8, i8* %call, i64 8\l  %30 = bitcast i8* %color_convert50 to void (%struct.jpeg_decompress_struct*,\l... i8***, i32, i8**, i32)**\l  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*\l... @ycc_rgb_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**,\l... i32)** %30, align 8, !tbaa !25\l  %31 = bitcast %struct.jpeg_color_deconverter** %cconvert1 to\l... %struct.my_color_deconverter**\l  %32 = load %struct.my_color_deconverter*, %struct.my_color_deconverter**\l... %31, align 8, !tbaa !13\l  %33 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_small.i = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %33, i64 0, i32 0\l  %34 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small.i, align 8, !tbaa !10\l  %call.i = tail call i8* %34(%struct.jpeg_common_struct* nonnull %2, i32 1,\l... i64 1024) #4\l  %Cr_r_tab.i = getelementptr inbounds %struct.my_color_deconverter,\l... %struct.my_color_deconverter* %32, i64 0, i32 1\l  %35 = bitcast i32** %Cr_r_tab.i to i8**\l  store i8* %call.i, i8** %35, align 8, !tbaa !30\l  %36 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_small3.i = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %36, i64 0, i32 0\l  %37 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small3.i, align 8, !tbaa !10\l  %call4.i = tail call i8* %37(%struct.jpeg_common_struct* nonnull %2, i32 1,\l... i64 1024) #4\l  %Cb_b_tab.i = getelementptr inbounds %struct.my_color_deconverter,\l... %struct.my_color_deconverter* %32, i64 0, i32 2\l  %38 = bitcast i32** %Cb_b_tab.i to i8**\l  store i8* %call4.i, i8** %38, align 8, !tbaa !31\l  %39 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_small6.i = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %39, i64 0, i32 0\l  %40 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small6.i, align 8, !tbaa !10\l  %call7.i = tail call i8* %40(%struct.jpeg_common_struct* nonnull %2, i32 1,\l... i64 2048) #4\l  %Cr_g_tab.i = getelementptr inbounds %struct.my_color_deconverter,\l... %struct.my_color_deconverter* %32, i64 0, i32 3\l  %41 = bitcast i64** %Cr_g_tab.i to i8**\l  store i8* %call7.i, i8** %41, align 8, !tbaa !32\l  %42 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_small9.i = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %42, i64 0, i32 0\l  %43 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small9.i, align 8, !tbaa !10\l  %call10.i = tail call i8* %43(%struct.jpeg_common_struct* nonnull %2, i32 1,\l... i64 2048) #4\l  %Cb_g_tab.i = getelementptr inbounds %struct.my_color_deconverter,\l... %struct.my_color_deconverter* %32, i64 0, i32 4\l  %44 = bitcast i64** %Cb_g_tab.i to i8**\l  store i8* %call10.i, i8** %44, align 8, !tbaa !33\l  %45 = load i32*, i32** %Cr_r_tab.i, align 8\l  %46 = load i32*, i32** %Cb_b_tab.i, align 8\l  %47 = load i64*, i64** %Cr_g_tab.i, align 8\l  %.cast.i = bitcast i8* %call10.i to i64*\l  br label %for.body.i\l}"];
	Node0x6701240 -> Node0x66f5df0;
	Node0x66f5df0 [shape=record,label="{for.body.i:                                       \l  %indvars.iv.i = phi i64 [ 0, %if.then48 ], [ %indvars.iv.next.i, %for.body.i\l... ]\l  %x.059.i = phi i64 [ -128, %if.then48 ], [ %inc28.i, %for.body.i ]\l  %mul.i = mul nsw i64 %x.059.i, 91881\l  %add.i = add nsw i64 %mul.i, 32768\l  %shr56.i = lshr i64 %add.i, 16\l  %conv.i = trunc i64 %shr56.i to i32\l  %arrayidx.i = getelementptr inbounds i32, i32* %45, i64 %indvars.iv.i\l  store i32 %conv.i, i32* %arrayidx.i, align 4, !tbaa !34\l  %mul12.i = mul nsw i64 %x.059.i, 116130\l  %add13.i = add nsw i64 %mul12.i, 32768\l  %shr1457.i = lshr i64 %add13.i, 16\l  %conv15.i = trunc i64 %shr1457.i to i32\l  %arrayidx18.i = getelementptr inbounds i32, i32* %46, i64 %indvars.iv.i\l  store i32 %conv15.i, i32* %arrayidx18.i, align 4, !tbaa !34\l  %mul19.i = mul nsw i64 %x.059.i, -46802\l  %arrayidx22.i = getelementptr inbounds i64, i64* %47, i64 %indvars.iv.i\l  store i64 %mul19.i, i64* %arrayidx22.i, align 8, !tbaa !35\l  %mul23.i = mul nsw i64 %x.059.i, -22554\l  %add24.i = add nsw i64 %mul23.i, 32768\l  %arrayidx27.i = getelementptr inbounds i64, i64* %.cast.i, i64 %indvars.iv.i\l  store i64 %add24.i, i64* %arrayidx27.i, align 8, !tbaa !35\l  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1\l  %inc28.i = add nsw i64 %x.059.i, 1\l  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 256\l  br i1 %exitcond.i, label %sw.epilog99.loopexit214, label %for.body.i\l|{<s0>T|<s1>F}}"];
	Node0x66f5df0:s0 -> Node0x6708b00;
	Node0x66f5df0:s1 -> Node0x66f5df0;
	Node0x66fc5f0 [shape=record,label="{if.then54:                                        \l  %color_convert56 = getelementptr inbounds i8, i8* %call, i64 8\l  %48 = bitcast i8* %color_convert56 to void (%struct.jpeg_decompress_struct*,\l... i8***, i32, i8**, i32)**\l  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*\l... @null_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**,\l... i32)** %48, align 8, !tbaa !25\l  br label %sw.epilog99\l}"];
	Node0x66fc5f0 -> Node0x66f99d0;
	Node0x6701190 [shape=record,label="{if.else57:                                        \l  %err58 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err58, align\l... 8, !tbaa !19\l  %msg_code59 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %49, i64 0, i32 5\l  store i32 25, i32* %msg_code59, align 8, !tbaa !20\l  %error_exit61 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %49, i64 0, i32 0\l  %50 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit61, align 8, !tbaa !22\l  tail call void %50(%struct.jpeg_common_struct* nonnull %2) #4\l  br label %sw.epilog99\l}"];
	Node0x6701190 -> Node0x66f99d0;
	Node0x66fb700 [shape=record,label="{sw.bb64:                                          \l  %out_color_components65 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  store i32 4, i32* %out_color_components65, align 8, !tbaa !24\l  %51 = load i32, i32* %jpeg_color_space, align 4, !tbaa !17\l  switch i32 %51, label %if.else77 [\l    i32 5, label %if.then68\l    i32 4, label %if.then74\l  ]\l|{<s0>def|<s1>5|<s2>4}}"];
	Node0x66fb700:s0 -> Node0x67094e0;
	Node0x66fb700:s1 -> Node0x6709590;
	Node0x66fb700:s2 -> Node0x6709670;
	Node0x6709590 [shape=record,label="{if.then68:                                        \l  %color_convert70 = getelementptr inbounds i8, i8* %call, i64 8\l  %52 = bitcast i8* %color_convert70 to void (%struct.jpeg_decompress_struct*,\l... i8***, i32, i8**, i32)**\l  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*\l... @ycck_cmyk_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**,\l... i32)** %52, align 8, !tbaa !25\l  %53 = bitcast %struct.jpeg_color_deconverter** %cconvert1 to\l... %struct.my_color_deconverter**\l  %54 = load %struct.my_color_deconverter*, %struct.my_color_deconverter**\l... %53, align 8, !tbaa !13\l  %55 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_small.i169 = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %55, i64 0, i32 0\l  %56 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small.i169, align 8, !tbaa\l... !10\l  %call.i170 = tail call i8* %56(%struct.jpeg_common_struct* nonnull %2, i32\l... 1, i64 1024) #4\l  %Cr_r_tab.i171 = getelementptr inbounds %struct.my_color_deconverter,\l... %struct.my_color_deconverter* %54, i64 0, i32 1\l  %57 = bitcast i32** %Cr_r_tab.i171 to i8**\l  store i8* %call.i170, i8** %57, align 8, !tbaa !30\l  %58 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_small3.i172 = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %58, i64 0, i32 0\l  %59 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small3.i172, align 8, !tbaa\l... !10\l  %call4.i173 = tail call i8* %59(%struct.jpeg_common_struct* nonnull %2, i32\l... 1, i64 1024) #4\l  %Cb_b_tab.i174 = getelementptr inbounds %struct.my_color_deconverter,\l... %struct.my_color_deconverter* %54, i64 0, i32 2\l  %60 = bitcast i32** %Cb_b_tab.i174 to i8**\l  store i8* %call4.i173, i8** %60, align 8, !tbaa !31\l  %61 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_small6.i175 = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %61, i64 0, i32 0\l  %62 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small6.i175, align 8, !tbaa\l... !10\l  %call7.i176 = tail call i8* %62(%struct.jpeg_common_struct* nonnull %2, i32\l... 1, i64 2048) #4\l  %Cr_g_tab.i177 = getelementptr inbounds %struct.my_color_deconverter,\l... %struct.my_color_deconverter* %54, i64 0, i32 3\l  %63 = bitcast i64** %Cr_g_tab.i177 to i8**\l  store i8* %call7.i176, i8** %63, align 8, !tbaa !32\l  %64 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_small9.i178 = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %64, i64 0, i32 0\l  %65 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small9.i178, align 8, !tbaa\l... !10\l  %call10.i179 = tail call i8* %65(%struct.jpeg_common_struct* nonnull %2, i32\l... 1, i64 2048) #4\l  %Cb_g_tab.i180 = getelementptr inbounds %struct.my_color_deconverter,\l... %struct.my_color_deconverter* %54, i64 0, i32 4\l  %66 = bitcast i64** %Cb_g_tab.i180 to i8**\l  store i8* %call10.i179, i8** %66, align 8, !tbaa !33\l  %67 = load i32*, i32** %Cr_r_tab.i171, align 8\l  %68 = load i32*, i32** %Cb_b_tab.i174, align 8\l  %69 = load i64*, i64** %Cr_g_tab.i177, align 8\l  %.cast.i181 = bitcast i8* %call10.i179 to i64*\l  br label %for.body.i202\l}"];
	Node0x6709590 -> Node0x670ce60;
	Node0x670ce60 [shape=record,label="{for.body.i202:                                    \l  %indvars.iv.i182 = phi i64 [ 0, %if.then68 ], [ %indvars.iv.next.i199,\l... %for.body.i202 ]\l  %x.059.i183 = phi i64 [ -128, %if.then68 ], [ %inc28.i200, %for.body.i202 ]\l  %mul.i184 = mul nsw i64 %x.059.i183, 91881\l  %add.i185 = add nsw i64 %mul.i184, 32768\l  %shr56.i186 = lshr i64 %add.i185, 16\l  %conv.i187 = trunc i64 %shr56.i186 to i32\l  %arrayidx.i188 = getelementptr inbounds i32, i32* %67, i64 %indvars.iv.i182\l  store i32 %conv.i187, i32* %arrayidx.i188, align 4, !tbaa !34\l  %mul12.i189 = mul nsw i64 %x.059.i183, 116130\l  %add13.i190 = add nsw i64 %mul12.i189, 32768\l  %shr1457.i191 = lshr i64 %add13.i190, 16\l  %conv15.i192 = trunc i64 %shr1457.i191 to i32\l  %arrayidx18.i193 = getelementptr inbounds i32, i32* %68, i64 %indvars.iv.i182\l  store i32 %conv15.i192, i32* %arrayidx18.i193, align 4, !tbaa !34\l  %mul19.i194 = mul nsw i64 %x.059.i183, -46802\l  %arrayidx22.i195 = getelementptr inbounds i64, i64* %69, i64 %indvars.iv.i182\l  store i64 %mul19.i194, i64* %arrayidx22.i195, align 8, !tbaa !35\l  %mul23.i196 = mul nsw i64 %x.059.i183, -22554\l  %add24.i197 = add nsw i64 %mul23.i196, 32768\l  %arrayidx27.i198 = getelementptr inbounds i64, i64* %.cast.i181, i64\l... %indvars.iv.i182\l  store i64 %add24.i197, i64* %arrayidx27.i198, align 8, !tbaa !35\l  %indvars.iv.next.i199 = add nuw nsw i64 %indvars.iv.i182, 1\l  %inc28.i200 = add nsw i64 %x.059.i183, 1\l  %exitcond.i201 = icmp eq i64 %indvars.iv.next.i199, 256\l  br i1 %exitcond.i201, label %sw.epilog99.loopexit215, label %for.body.i202\l|{<s0>T|<s1>F}}"];
	Node0x670ce60:s0 -> Node0x670e0f0;
	Node0x670ce60:s1 -> Node0x670ce60;
	Node0x6709670 [shape=record,label="{if.then74:                                        \l  %color_convert76 = getelementptr inbounds i8, i8* %call, i64 8\l  %70 = bitcast i8* %color_convert76 to void (%struct.jpeg_decompress_struct*,\l... i8***, i32, i8**, i32)**\l  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*\l... @null_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**,\l... i32)** %70, align 8, !tbaa !25\l  br label %sw.epilog99\l}"];
	Node0x6709670 -> Node0x66f99d0;
	Node0x67094e0 [shape=record,label="{if.else77:                                        \l  %err78 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %71 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err78, align\l... 8, !tbaa !19\l  %msg_code79 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %71, i64 0, i32 5\l  store i32 25, i32* %msg_code79, align 8, !tbaa !20\l  %error_exit81 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %71, i64 0, i32 0\l  %72 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit81, align 8, !tbaa !22\l  tail call void %72(%struct.jpeg_common_struct* nonnull %2) #4\l  br label %sw.epilog99\l}"];
	Node0x67094e0 -> Node0x66f99d0;
	Node0x66fb480 [shape=record,label="{sw.default84:                                     \l  %73 = load i32, i32* %jpeg_color_space, align 4, !tbaa !17\l  %cmp87 = icmp eq i32 %17, %73\l  br i1 %cmp87, label %if.then88, label %if.else93\l|{<s0>T|<s1>F}}"];
	Node0x66fb480:s0 -> Node0x670e850;
	Node0x66fb480:s1 -> Node0x670e900;
	Node0x670e850 [shape=record,label="{if.then88:                                        \l  %num_components89 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %74 = load i32, i32* %num_components89, align 8, !tbaa !18\l  %out_color_components90 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  store i32 %74, i32* %out_color_components90, align 8, !tbaa !24\l  %color_convert92 = getelementptr inbounds i8, i8* %call, i64 8\l  %75 = bitcast i8* %color_convert92 to void (%struct.jpeg_decompress_struct*,\l... i8***, i32, i8**, i32)**\l  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*\l... @null_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**,\l... i32)** %75, align 8, !tbaa !25\l  br label %sw.epilog99\l}"];
	Node0x670e850 -> Node0x66f99d0;
	Node0x670e900 [shape=record,label="{if.else93:                                        \l  %err94 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %76 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err94, align\l... 8, !tbaa !19\l  %msg_code95 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %76, i64 0, i32 5\l  store i32 25, i32* %msg_code95, align 8, !tbaa !20\l  %error_exit97 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %76, i64 0, i32 0\l  %77 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit97, align 8, !tbaa !22\l  tail call void %77(%struct.jpeg_common_struct* nonnull %2) #4\l  br label %sw.epilog99\l}"];
	Node0x670e900 -> Node0x66f99d0;
	Node0x6700420 [shape=record,label="{sw.epilog99.loopexit.unr-lcssa:                   \l  br label %sw.epilog99.loopexit\l}"];
	Node0x6700420 -> Node0x66fe7d0;
	Node0x66fe7d0 [shape=record,label="{sw.epilog99.loopexit:                             \l  br label %sw.epilog99\l}"];
	Node0x66fe7d0 -> Node0x66f99d0;
	Node0x6708b00 [shape=record,label="{sw.epilog99.loopexit214:                          \l  br label %sw.epilog99\l}"];
	Node0x6708b00 -> Node0x66f99d0;
	Node0x670e0f0 [shape=record,label="{sw.epilog99.loopexit215:                          \l  br label %sw.epilog99\l}"];
	Node0x670e0f0 -> Node0x66f99d0;
	Node0x66f99d0 [shape=record,label="{sw.epilog99:                                      \l  %quantize_colors = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 19\l  %78 = load i32, i32* %quantize_colors, align 4, !tbaa !36\l  %tobool = icmp eq i32 %78, 0\l  br i1 %tobool, label %if.else101, label %if.end104\l|{<s0>T|<s1>F}}"];
	Node0x66f99d0:s0 -> Node0x6701810;
	Node0x66f99d0:s1 -> Node0x67018c0;
	Node0x6701810 [shape=record,label="{if.else101:                                       \l  %out_color_components102 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  %79 = load i32, i32* %out_color_components102, align 8, !tbaa !24\l  br label %if.end104\l}"];
	Node0x6701810 -> Node0x67018c0;
	Node0x67018c0 [shape=record,label="{if.end104:                                        \l  %.sink = phi i32 [ %79, %if.else101 ], [ 1, %sw.epilog99 ]\l  %80 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 29\l  store i32 %.sink, i32* %80, align 4\l  ret void\l}"];
}
