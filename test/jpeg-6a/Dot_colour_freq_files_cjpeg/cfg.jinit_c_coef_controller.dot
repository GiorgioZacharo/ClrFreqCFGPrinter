digraph "CFG for 'jinit_c_coef_controller' function" {
	label="CFG for 'jinit_c_coef_controller' function";

	Node0x699e660 [shape=record,label="{entry:\l  %mem = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1\l  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !3\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %0, i64 0, i32 0\l  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !11\l  %2 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %1(%struct.jpeg_common_struct* %2, i32 1, i64 192) #3\l  %coef1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 54\l  %3 = bitcast %struct.jpeg_c_coef_controller** %coef1 to i8**\l  store i8* %call, i8** %3, align 8, !tbaa !14\l  %start_pass = bitcast i8* %call to void (%struct.jpeg_compress_struct*,\l... i32)**\l  store void (%struct.jpeg_compress_struct*, i32)* @start_pass_coef, void\l... (%struct.jpeg_compress_struct*, i32)** %start_pass, align 8, !tbaa !15\l  %tobool = icmp eq i32 %need_full_buffer, 0\l  br i1 %tobool, label %if.else, label %if.then, !prof !18\l|{<s0>T|<s1>F}}"];
	Node0x699e660:s0 -> Node0x69a0bc0;
	Node0x699e660:s1 -> Node0x69a0c90;
	Node0x69a0c90 [shape=record,label="{if.then:                                          \l  %num_components = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12\l  %4 = load i32, i32* %num_components, align 4, !tbaa !19\l  %cmp53 = icmp sgt i32 %4, 0\l  br i1 %cmp53, label %for.body.lr.ph, label %if.end, !prof !20\l|{<s0>T|<s1>F}}"];
	Node0x69a0c90:s0 -> Node0x699a200;
	Node0x69a0c90:s1 -> Node0x69a13c0;
	Node0x699a200 [shape=record,label="{for.body.lr.ph:                                   \l  %comp_info = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14\l  %5 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !21\l  %whole_image = getelementptr inbounds i8, i8* %call, i64 112\l  %6 = bitcast i8* %whole_image to [10 x %struct.jvirt_barray_control*]*\l  br label %for.body\l}"];
	Node0x699a200 -> Node0x69a19d0;
	Node0x69a19d0 [shape=record,label="{for.body:                                         \l  %indvars.iv56 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next57,\l... %for.body ]\l  %compptr.054 = phi %struct.jpeg_component_info* [ %5, %for.body.lr.ph ], [\l... %incdec.ptr, %for.body ]\l  %7 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !3\l  %request_virt_barray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %7, i64 0, i32 5\l  %8 = load %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32,\l... i32, i32, i32, i32)*, %struct.jvirt_barray_control*\l... (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)**\l... %request_virt_barray, align 8, !tbaa !22\l  %width_in_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.054, i64 0, i32 7\l  %9 = load i32, i32* %width_in_blocks, align 4, !tbaa !23\l  %conv = zext i32 %9 to i64\l  %h_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.054, i64 0, i32 2\l  %10 = load i32, i32* %h_samp_factor, align 8, !tbaa !25\l  %conv3 = sext i32 %10 to i64\l  %call4 = tail call i64 @jround_up(i64 %conv, i64 %conv3) #3\l  %conv5 = trunc i64 %call4 to i32\l  %height_in_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.054, i64 0, i32 8\l  %11 = load i32, i32* %height_in_blocks, align 8, !tbaa !26\l  %conv6 = zext i32 %11 to i64\l  %v_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.054, i64 0, i32 3\l  %12 = load i32, i32* %v_samp_factor, align 4, !tbaa !27\l  %conv7 = sext i32 %12 to i64\l  %call8 = tail call i64 @jround_up(i64 %conv6, i64 %conv7) #3\l  %conv9 = trunc i64 %call8 to i32\l  %13 = load i32, i32* %v_samp_factor, align 4, !tbaa !27\l  %call11 = tail call %struct.jvirt_barray_control*\l... %8(%struct.jpeg_common_struct* nonnull %2, i32 1, i32 0, i32 %conv5, i32\l... %conv9, i32 %13) #3\l  %arrayidx = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10\l... x %struct.jvirt_barray_control*]* %6, i64 0, i64 %indvars.iv56\l  store %struct.jvirt_barray_control* %call11, %struct.jvirt_barray_control**\l... %arrayidx, align 8, !tbaa !28\l  %indvars.iv.next57 = add nuw nsw i64 %indvars.iv56, 1\l  %incdec.ptr = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.054, i64 1\l  %14 = load i32, i32* %num_components, align 4, !tbaa !19\l  %15 = sext i32 %14 to i64\l  %cmp = icmp slt i64 %indvars.iv.next57, %15\l  br i1 %cmp, label %for.body, label %if.end.loopexit, !prof !20\l|{<s0>T|<s1>F}}"];
	Node0x69a19d0:s0 -> Node0x69a19d0;
	Node0x69a19d0:s1 -> Node0x69a4d60;
	Node0x69a0bc0 [shape=record,label="{if.else:                                          \l  %16 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !3\l  %alloc_large = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %16, i64 0, i32 1\l  %17 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_large, align 8, !tbaa !29\l  %call13 = tail call i8* %17(%struct.jpeg_common_struct* %2, i32 1, i64 1280)\l... #3\l  %MCU_buffer = getelementptr inbounds i8, i8* %call, i64 32\l  %18 = bitcast i8* %MCU_buffer to i8**\l  store i8* %call13, i8** %18, align 8, !tbaa !28\l  %arrayidx19.1 = getelementptr inbounds i8, i8* %call, i64 40\l  %19 = insertelement \<2 x i8*\> undef, i8* %call13, i32 0\l  %20 = insertelement \<2 x i8*\> %19, i8* %call13, i32 1\l  %21 = getelementptr i8, \<2 x i8*\> %20, \<2 x i64\> \<i64 128, i64 256\>\l  %22 = bitcast i8* %arrayidx19.1 to \<2 x i8*\>*\l  store \<2 x i8*\> %21, \<2 x i8*\>* %22, align 8, !tbaa !28\l  %arrayidx19.3 = getelementptr inbounds i8, i8* %call, i64 56\l  %23 = getelementptr i8, \<2 x i8*\> %20, \<2 x i64\> \<i64 384, i64 512\>\l  %24 = bitcast i8* %arrayidx19.3 to \<2 x i8*\>*\l  store \<2 x i8*\> %23, \<2 x i8*\>* %24, align 8, !tbaa !28\l  %arrayidx19.5 = getelementptr inbounds i8, i8* %call, i64 72\l  %25 = getelementptr i8, \<2 x i8*\> %20, \<2 x i64\> \<i64 640, i64 768\>\l  %26 = bitcast i8* %arrayidx19.5 to \<2 x i8*\>*\l  store \<2 x i8*\> %25, \<2 x i8*\>* %26, align 8, !tbaa !28\l  %arrayidx19.7 = getelementptr inbounds i8, i8* %call, i64 88\l  %27 = getelementptr i8, \<2 x i8*\> %20, \<2 x i64\> \<i64 896, i64 1024\>\l  %28 = bitcast i8* %arrayidx19.7 to \<2 x i8*\>*\l  store \<2 x i8*\> %27, \<2 x i8*\>* %28, align 8, !tbaa !28\l  %add.ptr.9 = getelementptr inbounds i8, i8* %call13, i64 1152\l  %arrayidx19.9 = getelementptr inbounds i8, i8* %call, i64 104\l  %29 = bitcast i8* %arrayidx19.9 to i8**\l  store i8* %add.ptr.9, i8** %29, align 8, !tbaa !28\l  %whole_image23 = getelementptr inbounds i8, i8* %call, i64 112\l  %arrayidx24 = bitcast i8* %whole_image23 to %struct.jvirt_barray_control**\l  store %struct.jvirt_barray_control* null, %struct.jvirt_barray_control**\l... %arrayidx24, align 8, !tbaa !28\l  br label %if.end\l}"];
	Node0x69a0bc0 -> Node0x69a13c0;
	Node0x69a4d60 [shape=record,label="{if.end.loopexit:                                  \l  br label %if.end\l}"];
	Node0x69a4d60 -> Node0x69a13c0;
	Node0x69a13c0 [shape=record,label="{if.end:                                           \l  ret void\l}"];
}
