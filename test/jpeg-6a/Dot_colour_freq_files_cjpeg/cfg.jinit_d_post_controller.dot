digraph "CFG for 'jinit_d_post_controller' function" {
	label="CFG for 'jinit_d_post_controller' function";

	Node0x4dc05e0 [shape=record,label="{entry:\l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !2\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %0, i64 0, i32 0\l  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !10\l  %2 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %1(%struct.jpeg_common_struct* %2, i32 1, i64 48) #3\l  %post1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 76\l  %3 = bitcast %struct.jpeg_d_post_controller** %post1 to i8**\l  store i8* %call, i8** %3, align 8, !tbaa !13\l  %start_pass = bitcast i8* %call to void (%struct.jpeg_decompress_struct*,\l... i32)**\l  store void (%struct.jpeg_decompress_struct*, i32)* @start_pass_dpost, void\l... (%struct.jpeg_decompress_struct*, i32)** %start_pass, align 8, !tbaa !14\l  %whole_image = getelementptr inbounds i8, i8* %call, i64 16\l  %4 = bitcast i8* %whole_image to %struct.jvirt_sarray_control**\l  %buffer = getelementptr inbounds i8, i8* %call, i64 24\l  %5 = bitcast i8* %buffer to i8***\l  %quantize_colors = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 19\l  call void @llvm.memset.p0i8.i64(i8* %whole_image, i8 0, i64 16, i32 8, i1\l... false)\l  %6 = load i32, i32* %quantize_colors, align 4, !tbaa !17\l  %tobool = icmp eq i32 %6, 0\l  br i1 %tobool, label %if.end19, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x4dc05e0:s0 -> Node0x4dc3590;
	Node0x4dc05e0:s1 -> Node0x4dbd260;
	Node0x4dbd260 [shape=record,label="{if.then:                                          \l  %max_v_samp_factor = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 58\l  %7 = load i32, i32* %max_v_samp_factor, align 8, !tbaa !18\l  %strip_height = getelementptr inbounds i8, i8* %call, i64 32\l  %8 = bitcast i8* %strip_height to i32*\l  store i32 %7, i32* %8, align 8, !tbaa !19\l  %tobool2 = icmp eq i32 %need_full_buffer, 0\l  %9 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !2\l  %10 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %11 = bitcast i32* %10 to i64*\l  %12 = load i64, i64* %11, align 8\l  %13 = trunc i64 %12 to i32\l  %14 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 28\l  %15 = load i32, i32* %14, align 8\l  br i1 %tobool2, label %if.else, label %if.then3\l|{<s0>T|<s1>F}}"];
	Node0x4dbd260:s0 -> Node0x4dc48c0;
	Node0x4dbd260:s1 -> Node0x4dc4970;
	Node0x4dc4970 [shape=record,label="{if.then3:                                         \l  %16 = lshr i64 %12, 32\l  %request_virt_sarray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %9, i64 0, i32 4\l  %17 = load %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32,\l... i32, i32, i32, i32)*, %struct.jvirt_sarray_control*\l... (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)**\l... %request_virt_sarray, align 8, !tbaa !20\l  %mul = mul i32 %15, %13\l  %conv6 = zext i32 %7 to i64\l  %call7 = tail call i64 @jround_up(i64 %16, i64 %conv6) #3\l  %conv8 = trunc i64 %call7 to i32\l  %18 = load i32, i32* %8, align 8, !tbaa !19\l  %call10 = tail call %struct.jvirt_sarray_control*\l... %17(%struct.jpeg_common_struct* nonnull %2, i32 1, i32 0, i32 %mul, i32\l... %conv8, i32 %18) #3\l  store %struct.jvirt_sarray_control* %call10, %struct.jvirt_sarray_control**\l... %4, align 8, !tbaa !21\l  br label %if.end19\l}"];
	Node0x4dc4970 -> Node0x4dc3590;
	Node0x4dc48c0 [shape=record,label="{if.else:                                          \l  %alloc_sarray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %9, i64 0, i32 2\l  %19 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8**\l... (%struct.jpeg_common_struct*, i32, i32, i32)** %alloc_sarray, align 8, !tbaa\l... !22\l  %mul15 = mul i32 %15, %13\l  %call17 = tail call i8** %19(%struct.jpeg_common_struct* nonnull %2, i32 1,\l... i32 %mul15, i32 %7) #3\l  store i8** %call17, i8*** %5, align 8, !tbaa !23\l  br label %if.end19\l}"];
	Node0x4dc48c0 -> Node0x4dc3590;
	Node0x4dc3590 [shape=record,label="{if.end19:                                         \l  ret void\l}"];
}
