digraph "CFG for 'compress_first_pass' function" {
	label="CFG for 'compress_first_pass' function";

	Node0x69d7d30 [shape=record, style = filled, fillcolor = cyan, label="{entry:\l  %coef1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 54\l  %0 = bitcast %struct.jpeg_c_coef_controller** %coef1 to\l... %struct.my_coef_controller**\l  %1 = load %struct.my_coef_controller*, %struct.my_coef_controller** %0,\l... align 8, !tbaa !3\l  %total_iMCU_rows = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 40\l  %2 = load i32, i32* %total_iMCU_rows, align 8, !tbaa !11\l  %sub = add i32 %2, -1\l  %num_components = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12\l  %3 = load i32, i32* %num_components, align 4, !tbaa !12\l  %cmp185 = icmp sgt i32 %3, 0\l  br i1 %cmp185, label %for.body.lr.ph, label %for.end88, !prof !13\l|{<s0>T|<s1>F}}"];
	Node0x69d7d30:s0 -> Node0x69d8240;
	Node0x69d7d30:s1 -> Node0x69dac80;
	Node0x69d8240 [shape=record, style = filled, fillcolor = cyan, label="{for.body.lr.ph:                                   \l  %comp_info = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14\l  %4 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !14\l  %mem = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1\l  %5 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %iMCU_row_num = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 1\l  %fdct = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 58\l  br label %for.body\l}"];
	Node0x69d8240 -> Node0x69db980;
	Node0x69db980 [shape=record, style = filled, fillcolor = cyan, label="{for.body:                                         \l  %indvars.iv261 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next262,\l... %for.inc86 ]\l  %compptr.0187 = phi %struct.jpeg_component_info* [ %4, %for.body.lr.ph ], [\l... %incdec.ptr, %for.inc86 ]\l  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !15\l  %access_virt_barray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %6, i64 0, i32 8\l  %7 = load [64 x i16]** (%struct.jpeg_common_struct*,\l... %struct.jvirt_barray_control*, i32, i32, i32)*, [64 x i16]**\l... (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)**\l... %access_virt_barray, align 8, !tbaa !16\l  %arrayidx = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 6, i64 %indvars.iv261\l  %8 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control**\l... %arrayidx, align 8, !tbaa !19\l  %9 = load i32, i32* %iMCU_row_num, align 8, !tbaa !20\l  %v_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0187, i64 0, i32 3\l  %10 = load i32, i32* %v_samp_factor, align 4, !tbaa !23\l  %mul = mul i32 %10, %9\l  %call = tail call [64 x i16]** %7(%struct.jpeg_common_struct* %5,\l... %struct.jvirt_barray_control* %8, i32 %mul, i32 %10, i32 1) #3\l  %11 = load i32, i32* %iMCU_row_num, align 8, !tbaa !20\l  %cmp4 = icmp ult i32 %11, %sub\l  br i1 %cmp4, label %if.then, label %if.else, !prof !25\l|{<s0>T|<s1>F}}"];
	Node0x69db980:s0 -> Node0x69a5fe0;
	Node0x69db980:s1 -> Node0x69db7e0;
	Node0x69a5fe0 [shape=record, style = filled, fillcolor = cyan, label="{if.then:                                          \l  %12 = load i32, i32* %v_samp_factor, align 4, !tbaa !23\l  br label %if.end10\l}"];
	Node0x69a5fe0 -> Node0x69c0740;
	Node0x69db7e0 [shape=record, style = filled, fillcolor = skyblue, label="{if.else:                                          \l  %height_in_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0187, i64 0, i32 8\l  %13 = load i32, i32* %height_in_blocks, align 8, !tbaa !26\l  %14 = load i32, i32* %v_samp_factor, align 4, !tbaa !23\l  %rem = urem i32 %13, %14\l  %cmp7 = icmp eq i32 %rem, 0\l  %.rem = select i1 %cmp7, i32 %14, i32 %rem\l  br label %if.end10\l}"];
	Node0x69db7e0 -> Node0x69c0740;
	Node0x69c0740 [shape=record, style = filled, fillcolor = cyan, label="{if.end10:                                         \l  %block_rows.0 = phi i32 [ %12, %if.then ], [ %.rem, %if.else ]\l  %width_in_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0187, i64 0, i32 7\l  %15 = load i32, i32* %width_in_blocks, align 4, !tbaa !27\l  %h_samp_factor11 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0187, i64 0, i32 2\l  %16 = load i32, i32* %h_samp_factor11, align 8, !tbaa !28\l  %rem12 = urem i32 %15, %16\l  %cmp13 = icmp sgt i32 %rem12, 0\l  %sub15 = sub nsw i32 %16, %rem12\l  %sub15.rem12 = select i1 %cmp13, i32 %sub15, i32 %rem12\l  %cmp18174 = icmp sgt i32 %block_rows.0, 0\l  br i1 %cmp18174, label %for.body19.lr.ph, label %for.end40, !prof !29\l|{<s0>T|<s1>F}}"];
	Node0x69c0740:s0 -> Node0x69c1290;
	Node0x69c0740:s1 -> Node0x69c1390;
	Node0x69c1290 [shape=record, style = filled, fillcolor = cyan, label="{for.body19.lr.ph:                                 \l  %arrayidx23 = getelementptr inbounds i8**, i8*** %input_buf, i64\l... %indvars.iv261\l  %cmp25 = icmp sgt i32 %sub15.rem12, 0\l  %idx.ext = zext i32 %15 to i64\l  %conv = sext i32 %sub15.rem12 to i64\l  %mul27 = shl nsw i64 %conv, 7\l  br i1 %cmp25, label %for.body19.us.us.preheader, label\l... %for.body19.preheader, !prof !30\l|{<s0>T|<s1>F}}"];
	Node0x69c1290:s0 -> Node0x69c18e0;
	Node0x69c1290:s1 -> Node0x69c1a00;
	Node0x69c1a00 [shape=record, style = filled, fillcolor = cyan, label="{for.body19.preheader:                             \l  br label %for.body19\l}"];
	Node0x69c1a00 -> Node0x69c1cc0;
	Node0x69c18e0 [shape=record, style = filled, fillcolor = blue, label="{for.body19.us.us.preheader:                       \l  %17 = add i32 %sub15.rem12, -1\l  %xtraiter = and i32 %sub15.rem12, 7\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  %18 = icmp ult i32 %17, 7\l  br label %for.body19.us.us\l}"];
	Node0x69c18e0 -> Node0x69c0610;
	Node0x69c0610 [shape=record, style = filled, fillcolor = blue, label="{for.body19.us.us:                                 \l  %indvars.iv249 = phi i64 [ %indvars.iv.next250,\l... %for.cond30.for.inc38.loopexit_crit_edge.us.us ], [ 0,\l... %for.body19.us.us.preheader ]\l  %arrayidx21.us.us = getelementptr inbounds [64 x i16]*, [64 x i16]** %call,\l... i64 %indvars.iv249\l  %19 = load [64 x i16]*, [64 x i16]** %arrayidx21.us.us, align 8, !tbaa !19\l  %20 = load %struct.jpeg_forward_dct*, %struct.jpeg_forward_dct** %fdct,\l... align 8, !tbaa !31\l  %forward_DCT.us.us = getelementptr inbounds %struct.jpeg_forward_dct,\l... %struct.jpeg_forward_dct* %20, i64 0, i32 1\l  %21 = load void (%struct.jpeg_compress_struct*,\l... %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)*, void\l... (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x\l... i16]*, i32, i32, i32)** %forward_DCT.us.us, align 8, !tbaa !32\l  %22 = load i8**, i8*** %arrayidx23, align 8, !tbaa !19\l  %23 = trunc i64 %indvars.iv249 to i32\l  %mul24.us.us = shl nsw i32 %23, 3\l  tail call void %21(%struct.jpeg_compress_struct* %cinfo,\l... %struct.jpeg_component_info* %compptr.0187, i8** %22, [64 x i16]* %19, i32\l... %mul24.us.us, i32 0, i32 %15) #3\l  %add.ptr.us.us = getelementptr inbounds [64 x i16], [64 x i16]* %19, i64\l... %idx.ext\l  %24 = bitcast [64 x i16]* %add.ptr.us.us to i8*\l  tail call void @jzero_far(i8* %24, i64 %mul27) #3\l  %arrayidx28.us.us = getelementptr inbounds [64 x i16], [64 x i16]*\l... %add.ptr.us.us, i64 -1\l  %arrayidx29.us.us = getelementptr inbounds [64 x i16], [64 x i16]*\l... %arrayidx28.us.us, i64 0, i64 0\l  %25 = load i16, i16* %arrayidx29.us.us, align 2, !tbaa !34\l  br i1 %lcmp.mod, label %for.body19.us.us.split, label\l... %for.body33.us.us.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x69c0610:s0 -> Node0x69c3700;
	Node0x69c0610:s1 -> Node0x69c37e0;
	Node0x69c37e0 [shape=record, style = filled, fillcolor = blue, label="{for.body33.us.us.prol.preheader:                  \l  br label %for.body33.us.us.prol\l}"];
	Node0x69c37e0 -> Node0x69c3950;
	Node0x69c3950 [shape=record, style = filled, fillcolor = cyan, label="{for.body33.us.us.prol:                            \l  %indvars.iv245.prol = phi i64 [ %indvars.iv.next246.prol,\l... %for.body33.us.us.prol ], [ 0, %for.body33.us.us.prol.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %for.body33.us.us.prol ], [\l... %xtraiter, %for.body33.us.us.prol.preheader ]\l  %arrayidx35.us.us.prol = getelementptr inbounds [64 x i16], [64 x i16]*\l... %add.ptr.us.us, i64 %indvars.iv245.prol\l  %arrayidx36.us.us.prol = getelementptr inbounds [64 x i16], [64 x i16]*\l... %arrayidx35.us.us.prol, i64 0, i64 0\l  store i16 %25, i16* %arrayidx36.us.us.prol, align 2, !tbaa !34\l  %indvars.iv.next246.prol = add nuw nsw i64 %indvars.iv245.prol, 1\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %for.body19.us.us.split.loopexit, label\l... %for.body33.us.us.prol, !llvm.loop !35\l|{<s0>T|<s1>F}}"];
	Node0x69c3950:s0 -> Node0x69c40c0;
	Node0x69c3950:s1 -> Node0x69c3950;
	Node0x69c40c0 [shape=record, style = filled, fillcolor = blue, label="{for.body19.us.us.split.loopexit:                  \l  %indvars.iv.next246.prol.lcssa = phi i64 [ %indvars.iv.next246.prol,\l... %for.body33.us.us.prol ]\l  br label %for.body19.us.us.split\l}"];
	Node0x69c40c0 -> Node0x69c3700;
	Node0x69c3700 [shape=record, style = filled, fillcolor = blue, label="{for.body19.us.us.split:                           \l  %indvars.iv245.unr = phi i64 [ 0, %for.body19.us.us ], [\l... %indvars.iv.next246.prol.lcssa, %for.body19.us.us.split.loopexit ]\l  br i1 %18, label %for.cond30.for.inc38.loopexit_crit_edge.us.us, label\l... %for.body19.us.us.split.split\l|{<s0>T|<s1>F}}"];
	Node0x69c3700:s0 -> Node0x69c24d0;
	Node0x69c3700:s1 -> Node0x69e5560;
	Node0x69e5560 [shape=record, style = filled, fillcolor = blue, label="{for.body19.us.us.split.split:                     \l  br label %for.body33.us.us\l}"];
	Node0x69e5560 -> Node0x69e56d0;
	Node0x69e57c0 [shape=record, style = filled, fillcolor = blue, label="{for.cond30.for.inc38.loopexit_crit_edge.us.us.unr-lcssa: \l  br label %for.cond30.for.inc38.loopexit_crit_edge.us.us\l}"];
	Node0x69e57c0 -> Node0x69c24d0;
	Node0x69c24d0 [shape=record, style = filled, fillcolor = blue, label="{for.cond30.for.inc38.loopexit_crit_edge.us.us:    \l  %indvars.iv.next250 = add nuw nsw i64 %indvars.iv249, 1\l  %lftr.wideiv251 = trunc i64 %indvars.iv.next250 to i32\l  %exitcond252 = icmp eq i32 %lftr.wideiv251, %block_rows.0\l  br i1 %exitcond252, label %for.end40.loopexit, label %for.body19.us.us,\l... !prof !37\l|{<s0>T|<s1>F}}"];
	Node0x69c24d0:s0 -> Node0x69e5a30;
	Node0x69c24d0:s1 -> Node0x69c0610;
	Node0x69e56d0 [shape=record, style = filled, fillcolor = cyan, label="{for.body33.us.us:                                 \l  %indvars.iv245 = phi i64 [ %indvars.iv245.unr, %for.body19.us.us.split.split\l... ], [ %indvars.iv.next246.7, %for.body33.us.us ]\l  %arrayidx35.us.us = getelementptr inbounds [64 x i16], [64 x i16]*\l... %add.ptr.us.us, i64 %indvars.iv245\l  %arrayidx36.us.us = getelementptr inbounds [64 x i16], [64 x i16]*\l... %arrayidx35.us.us, i64 0, i64 0\l  store i16 %25, i16* %arrayidx36.us.us, align 2, !tbaa !34\l  %indvars.iv.next246 = add nuw nsw i64 %indvars.iv245, 1\l  %arrayidx35.us.us.1 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %add.ptr.us.us, i64 %indvars.iv.next246\l  %arrayidx36.us.us.1 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %arrayidx35.us.us.1, i64 0, i64 0\l  store i16 %25, i16* %arrayidx36.us.us.1, align 2, !tbaa !34\l  %indvars.iv.next246.1 = add nsw i64 %indvars.iv245, 2\l  %arrayidx35.us.us.2 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %add.ptr.us.us, i64 %indvars.iv.next246.1\l  %arrayidx36.us.us.2 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %arrayidx35.us.us.2, i64 0, i64 0\l  store i16 %25, i16* %arrayidx36.us.us.2, align 2, !tbaa !34\l  %indvars.iv.next246.2 = add nsw i64 %indvars.iv245, 3\l  %arrayidx35.us.us.3 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %add.ptr.us.us, i64 %indvars.iv.next246.2\l  %arrayidx36.us.us.3 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %arrayidx35.us.us.3, i64 0, i64 0\l  store i16 %25, i16* %arrayidx36.us.us.3, align 2, !tbaa !34\l  %indvars.iv.next246.3 = add nsw i64 %indvars.iv245, 4\l  %arrayidx35.us.us.4 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %add.ptr.us.us, i64 %indvars.iv.next246.3\l  %arrayidx36.us.us.4 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %arrayidx35.us.us.4, i64 0, i64 0\l  store i16 %25, i16* %arrayidx36.us.us.4, align 2, !tbaa !34\l  %indvars.iv.next246.4 = add nsw i64 %indvars.iv245, 5\l  %arrayidx35.us.us.5 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %add.ptr.us.us, i64 %indvars.iv.next246.4\l  %arrayidx36.us.us.5 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %arrayidx35.us.us.5, i64 0, i64 0\l  store i16 %25, i16* %arrayidx36.us.us.5, align 2, !tbaa !34\l  %indvars.iv.next246.5 = add nsw i64 %indvars.iv245, 6\l  %arrayidx35.us.us.6 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %add.ptr.us.us, i64 %indvars.iv.next246.5\l  %arrayidx36.us.us.6 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %arrayidx35.us.us.6, i64 0, i64 0\l  store i16 %25, i16* %arrayidx36.us.us.6, align 2, !tbaa !34\l  %indvars.iv.next246.6 = add nsw i64 %indvars.iv245, 7\l  %arrayidx35.us.us.7 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %add.ptr.us.us, i64 %indvars.iv.next246.6\l  %arrayidx36.us.us.7 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %arrayidx35.us.us.7, i64 0, i64 0\l  store i16 %25, i16* %arrayidx36.us.us.7, align 2, !tbaa !34\l  %indvars.iv.next246.7 = add nsw i64 %indvars.iv245, 8\l  %lftr.wideiv247.7 = trunc i64 %indvars.iv.next246.7 to i32\l  %exitcond248.7 = icmp eq i32 %lftr.wideiv247.7, %sub15.rem12\l  br i1 %exitcond248.7, label\l... %for.cond30.for.inc38.loopexit_crit_edge.us.us.unr-lcssa, label\l... %for.body33.us.us\l|{<s0>T|<s1>F}}"];
	Node0x69e56d0:s0 -> Node0x69e57c0;
	Node0x69e56d0:s1 -> Node0x69e56d0;
	Node0x69c1cc0 [shape=record, style = filled, fillcolor = cyan, label="{for.body19:                                       \l  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body19 ], [ 0,\l... %for.body19.preheader ]\l  %arrayidx21 = getelementptr inbounds [64 x i16]*, [64 x i16]** %call, i64\l... %indvars.iv\l  %26 = load [64 x i16]*, [64 x i16]** %arrayidx21, align 8, !tbaa !19\l  %27 = load %struct.jpeg_forward_dct*, %struct.jpeg_forward_dct** %fdct,\l... align 8, !tbaa !31\l  %forward_DCT = getelementptr inbounds %struct.jpeg_forward_dct,\l... %struct.jpeg_forward_dct* %27, i64 0, i32 1\l  %28 = load void (%struct.jpeg_compress_struct*,\l... %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)*, void\l... (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x\l... i16]*, i32, i32, i32)** %forward_DCT, align 8, !tbaa !32\l  %29 = load i8**, i8*** %arrayidx23, align 8, !tbaa !19\l  %30 = trunc i64 %indvars.iv to i32\l  %mul24 = shl nsw i32 %30, 3\l  tail call void %28(%struct.jpeg_compress_struct* nonnull %cinfo,\l... %struct.jpeg_component_info* %compptr.0187, i8** %29, [64 x i16]* %26, i32\l... %mul24, i32 0, i32 %15) #3\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %lftr.wideiv = trunc i64 %indvars.iv.next to i32\l  %exitcond = icmp eq i32 %lftr.wideiv, %block_rows.0\l  br i1 %exitcond, label %for.end40.loopexit268, label %for.body19, !prof !37\l|{<s0>T|<s1>F}}"];
	Node0x69c1cc0:s0 -> Node0x69e82c0;
	Node0x69c1cc0:s1 -> Node0x69c1cc0;
	Node0x69e5a30 [shape=record, style = filled, fillcolor = blue, label="{for.end40.loopexit:                               \l  br label %for.end40\l}"];
	Node0x69e5a30 -> Node0x69c1390;
	Node0x69e82c0 [shape=record, style = filled, fillcolor = cyan, label="{for.end40.loopexit268:                            \l  br label %for.end40\l}"];
	Node0x69e82c0 -> Node0x69c1390;
	Node0x69c1390 [shape=record, style = filled, fillcolor = cyan, label="{for.end40:                                        \l  %31 = load i32, i32* %iMCU_row_num, align 8, !tbaa !20\l  %cmp42 = icmp eq i32 %31, %sub\l  br i1 %cmp42, label %if.then44, label %for.inc86, !prof !38\l|{<s0>T|<s1>F}}"];
	Node0x69c1390:s0 -> Node0x69e8ac0;
	Node0x69c1390:s1 -> Node0x69dbb60;
	Node0x69e8ac0 [shape=record, style = filled, fillcolor = skyblue, label="{if.then44:                                        \l  %add = add i32 %sub15.rem12, %15\l  %div = udiv i32 %add, %16\l  %32 = load i32, i32* %v_samp_factor, align 4, !tbaa !23\l  %cmp47183 = icmp slt i32 %block_rows.0, %32\l  br i1 %cmp47183, label %for.body49.lr.ph, label %for.inc86, !prof !39\l|{<s0>T|<s1>F}}"];
	Node0x69e8ac0:s0 -> Node0x69e9000;
	Node0x69e8ac0:s1 -> Node0x69dbb60;
	Node0x69e9000 [shape=record, style = filled, fillcolor = blue, label="{for.body49.lr.ph:                                 \l  %conv55 = zext i32 %add to i64\l  %mul56 = shl nuw nsw i64 %conv55, 7\l  %cmp58178 = icmp eq i32 %div, 0\l  %sub61 = add nsw i32 %16, -1\l  %idxprom62 = sext i32 %sub61 to i64\l  %cmp66176 = icmp sgt i32 %16, 0\l  %idx.ext75 = sext i32 %16 to i64\l  %33 = sext i32 %block_rows.0 to i64\l  br i1 %cmp58178, label %for.body49.preheader, label %for.body49.us.preheader\l|{<s0>T|<s1>F}}"];
	Node0x69e9000:s0 -> Node0x69e96e0;
	Node0x69e9000:s1 -> Node0x69e97e0;
	Node0x69e97e0 [shape=record, style = filled, fillcolor = blue, label="{for.body49.us.preheader:                          \l  %34 = add i32 %16, -1\l  %xtraiter269 = and i32 %16, 7\l  %lcmp.mod270 = icmp eq i32 %xtraiter269, 0\l  %35 = icmp ult i32 %34, 7\l  br label %for.body49.us\l}"];
	Node0x69e97e0 -> Node0x69e9ba0;
	Node0x69e96e0 [shape=record, style = filled, fillcolor = blue, label="{for.body49.preheader:                             \l  br label %for.body49\l}"];
	Node0x69e96e0 -> Node0x69e9c80;
	Node0x69e9ba0 [shape=record, style = filled, fillcolor = blue, label="{for.body49.us:                                    \l  %indvars.iv257 = phi i64 [ %indvars.iv.next258,\l... %for.cond57.for.inc82_crit_edge.us ], [ %33, %for.body49.us.preheader ]\l  %block_row.1184.us = phi i32 [ %inc83.us, %for.cond57.for.inc82_crit_edge.us\l... ], [ %block_rows.0, %for.body49.us.preheader ]\l  %arrayidx51.us = getelementptr inbounds [64 x i16]*, [64 x i16]** %call, i64\l... %indvars.iv257\l  %36 = load [64 x i16]*, [64 x i16]** %arrayidx51.us, align 8, !tbaa !19\l  %sub52.us = add nsw i32 %block_row.1184.us, -1\l  %idxprom53.us = sext i32 %sub52.us to i64\l  %arrayidx54.us = getelementptr inbounds [64 x i16]*, [64 x i16]** %call, i64\l... %idxprom53.us\l  %37 = load [64 x i16]*, [64 x i16]** %arrayidx54.us, align 8, !tbaa !19\l  %38 = bitcast [64 x i16]* %36 to i8*\l  tail call void @jzero_far(i8* %38, i64 %mul56) #3\l  br i1 %cmp66176, label %for.body60.us.us.preheader, label\l... %for.cond57.for.inc82_crit_edge.us\l|{<s0>T|<s1>F}}"];
	Node0x69e9ba0:s0 -> Node0x69ea6c0;
	Node0x69e9ba0:s1 -> Node0x69e9dd0;
	Node0x69ea6c0 [shape=record, style = filled, fillcolor = blue, label="{for.body60.us.us.preheader:                       \l  br label %for.body60.us.us\l}"];
	Node0x69ea6c0 -> Node0x69ea870;
	Node0x69ea960 [shape=record, style = filled, fillcolor = blue, label="{for.cond57.for.inc82_crit_edge.us.loopexit:       \l  br label %for.cond57.for.inc82_crit_edge.us\l}"];
	Node0x69ea960 -> Node0x69e9dd0;
	Node0x69e9dd0 [shape=record, style = filled, fillcolor = blue, label="{for.cond57.for.inc82_crit_edge.us:                \l  %indvars.iv.next258 = add i64 %indvars.iv257, 1\l  %inc83.us = add nsw i32 %block_row.1184.us, 1\l  %39 = load i32, i32* %v_samp_factor, align 4, !tbaa !23\l  %40 = sext i32 %39 to i64\l  %cmp47.us = icmp slt i64 %indvars.iv.next258, %40\l  br i1 %cmp47.us, label %for.body49.us, label %for.inc86.loopexit267, !prof\l... !39\l|{<s0>T|<s1>F}}"];
	Node0x69e9dd0:s0 -> Node0x69e9ba0;
	Node0x69e9dd0:s1 -> Node0x69eac50;
	Node0x69ea870 [shape=record, style = filled, fillcolor = skyblue, label="{for.body60.us.us:                                 \l  %lastblockrow.0182.us.us = phi [64 x i16]* [ %add.ptr78.us.us,\l... %for.cond65.for.end74_crit_edge.us.us ], [ %37, %for.body60.us.us.preheader ]\l  %thisblockrow.0180.us.us = phi [64 x i16]* [ %add.ptr76.us.us,\l... %for.cond65.for.end74_crit_edge.us.us ], [ %36, %for.body60.us.us.preheader ]\l  %MCUindex.0179.us.us = phi i32 [ %inc80.us.us,\l... %for.cond65.for.end74_crit_edge.us.us ], [ 0, %for.body60.us.us.preheader ]\l  %arrayidx64.us.us = getelementptr inbounds [64 x i16], [64 x i16]*\l... %lastblockrow.0182.us.us, i64 %idxprom62, i64 0\l  %41 = load i16, i16* %arrayidx64.us.us, align 2, !tbaa !34\l  br i1 %lcmp.mod270, label %for.body60.us.us.split, label\l... %for.body68.us.us.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x69ea870:s0 -> Node0x69eb980;
	Node0x69ea870:s1 -> Node0x69eba60;
	Node0x69eba60 [shape=record, style = filled, fillcolor = skyblue, label="{for.body68.us.us.prol.preheader:                  \l  br label %for.body68.us.us.prol\l}"];
	Node0x69eba60 -> Node0x69ebc10;
	Node0x69ebc10 [shape=record, style = filled, fillcolor = cyan, label="{for.body68.us.us.prol:                            \l  %indvars.iv253.prol = phi i64 [ %indvars.iv.next254.prol,\l... %for.body68.us.us.prol ], [ 0, %for.body68.us.us.prol.preheader ]\l  %prol.iter271 = phi i32 [ %prol.iter271.sub, %for.body68.us.us.prol ], [\l... %xtraiter269, %for.body68.us.us.prol.preheader ]\l  %arrayidx71.us.us.prol = getelementptr inbounds [64 x i16], [64 x i16]*\l... %thisblockrow.0180.us.us, i64 %indvars.iv253.prol, i64 0\l  store i16 %41, i16* %arrayidx71.us.us.prol, align 2, !tbaa !34\l  %indvars.iv.next254.prol = add nuw nsw i64 %indvars.iv253.prol, 1\l  %prol.iter271.sub = add i32 %prol.iter271, -1\l  %prol.iter271.cmp = icmp eq i32 %prol.iter271.sub, 0\l  br i1 %prol.iter271.cmp, label %for.body60.us.us.split.loopexit, label\l... %for.body68.us.us.prol, !llvm.loop !40\l|{<s0>T|<s1>F}}"];
	Node0x69ebc10:s0 -> Node0x69ec2e0;
	Node0x69ebc10:s1 -> Node0x69ebc10;
	Node0x69ec2e0 [shape=record, style = filled, fillcolor = skyblue, label="{for.body60.us.us.split.loopexit:                  \l  %indvars.iv.next254.prol.lcssa = phi i64 [ %indvars.iv.next254.prol,\l... %for.body68.us.us.prol ]\l  br label %for.body60.us.us.split\l}"];
	Node0x69ec2e0 -> Node0x69eb980;
	Node0x69eb980 [shape=record, style = filled, fillcolor = skyblue, label="{for.body60.us.us.split:                           \l  %indvars.iv253.unr = phi i64 [ 0, %for.body60.us.us ], [\l... %indvars.iv.next254.prol.lcssa, %for.body60.us.us.split.loopexit ]\l  br i1 %35, label %for.cond65.for.end74_crit_edge.us.us, label\l... %for.body60.us.us.split.split\l|{<s0>T|<s1>F}}"];
	Node0x69eb980:s0 -> Node0x69eb370;
	Node0x69eb980:s1 -> Node0x69ec580;
	Node0x69ec580 [shape=record, style = filled, fillcolor = skyblue, label="{for.body60.us.us.split.split:                     \l  br label %for.body68.us.us\l}"];
	Node0x69ec580 -> Node0x69ec730;
	Node0x69ec820 [shape=record, style = filled, fillcolor = skyblue, label="{for.cond65.for.end74_crit_edge.us.us.unr-lcssa:   \l  br label %for.cond65.for.end74_crit_edge.us.us\l}"];
	Node0x69ec820 -> Node0x69eb370;
	Node0x69eb370 [shape=record, style = filled, fillcolor = skyblue, label="{for.cond65.for.end74_crit_edge.us.us:             \l  %add.ptr76.us.us = getelementptr inbounds [64 x i16], [64 x i16]*\l... %thisblockrow.0180.us.us, i64 %idx.ext75\l  %add.ptr78.us.us = getelementptr inbounds [64 x i16], [64 x i16]*\l... %lastblockrow.0182.us.us, i64 %idx.ext75\l  %inc80.us.us = add nuw i32 %MCUindex.0179.us.us, 1\l  %cmp58.us.us = icmp ult i32 %inc80.us.us, %div\l  br i1 %cmp58.us.us, label %for.body60.us.us, label\l... %for.cond57.for.inc82_crit_edge.us.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x69eb370:s0 -> Node0x69ea870;
	Node0x69eb370:s1 -> Node0x69ea960;
	Node0x69ec730 [shape=record, style = filled, fillcolor = cyan, label="{for.body68.us.us:                                 \l  %indvars.iv253 = phi i64 [ %indvars.iv253.unr, %for.body60.us.us.split.split\l... ], [ %indvars.iv.next254.7, %for.body68.us.us ]\l  %arrayidx71.us.us = getelementptr inbounds [64 x i16], [64 x i16]*\l... %thisblockrow.0180.us.us, i64 %indvars.iv253, i64 0\l  store i16 %41, i16* %arrayidx71.us.us, align 2, !tbaa !34\l  %indvars.iv.next254 = add nuw nsw i64 %indvars.iv253, 1\l  %arrayidx71.us.us.1 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %thisblockrow.0180.us.us, i64 %indvars.iv.next254, i64 0\l  store i16 %41, i16* %arrayidx71.us.us.1, align 2, !tbaa !34\l  %indvars.iv.next254.1 = add nsw i64 %indvars.iv253, 2\l  %arrayidx71.us.us.2 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %thisblockrow.0180.us.us, i64 %indvars.iv.next254.1, i64 0\l  store i16 %41, i16* %arrayidx71.us.us.2, align 2, !tbaa !34\l  %indvars.iv.next254.2 = add nsw i64 %indvars.iv253, 3\l  %arrayidx71.us.us.3 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %thisblockrow.0180.us.us, i64 %indvars.iv.next254.2, i64 0\l  store i16 %41, i16* %arrayidx71.us.us.3, align 2, !tbaa !34\l  %indvars.iv.next254.3 = add nsw i64 %indvars.iv253, 4\l  %arrayidx71.us.us.4 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %thisblockrow.0180.us.us, i64 %indvars.iv.next254.3, i64 0\l  store i16 %41, i16* %arrayidx71.us.us.4, align 2, !tbaa !34\l  %indvars.iv.next254.4 = add nsw i64 %indvars.iv253, 5\l  %arrayidx71.us.us.5 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %thisblockrow.0180.us.us, i64 %indvars.iv.next254.4, i64 0\l  store i16 %41, i16* %arrayidx71.us.us.5, align 2, !tbaa !34\l  %indvars.iv.next254.5 = add nsw i64 %indvars.iv253, 6\l  %arrayidx71.us.us.6 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %thisblockrow.0180.us.us, i64 %indvars.iv.next254.5, i64 0\l  store i16 %41, i16* %arrayidx71.us.us.6, align 2, !tbaa !34\l  %indvars.iv.next254.6 = add nsw i64 %indvars.iv253, 7\l  %arrayidx71.us.us.7 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %thisblockrow.0180.us.us, i64 %indvars.iv.next254.6, i64 0\l  store i16 %41, i16* %arrayidx71.us.us.7, align 2, !tbaa !34\l  %indvars.iv.next254.7 = add nsw i64 %indvars.iv253, 8\l  %lftr.wideiv255.7 = trunc i64 %indvars.iv.next254.7 to i32\l  %exitcond256.7 = icmp eq i32 %lftr.wideiv255.7, %16\l  br i1 %exitcond256.7, label %for.cond65.for.end74_crit_edge.us.us.unr-lcssa,\l... label %for.body68.us.us\l|{<s0>T|<s1>F}}"];
	Node0x69ec730:s0 -> Node0x69ec820;
	Node0x69ec730:s1 -> Node0x69ec730;
	Node0x69e9c80 [shape=record, style = filled, fillcolor = blue, label="{for.body49:                                       \l  %indvars.iv259 = phi i64 [ %indvars.iv.next260, %for.body49 ], [ %33,\l... %for.body49.preheader ]\l  %arrayidx51 = getelementptr inbounds [64 x i16]*, [64 x i16]** %call, i64\l... %indvars.iv259\l  %42 = bitcast [64 x i16]** %arrayidx51 to i8**\l  %43 = load i8*, i8** %42, align 8, !tbaa !19\l  tail call void @jzero_far(i8* %43, i64 %mul56) #3\l  %indvars.iv.next260 = add i64 %indvars.iv259, 1\l  %44 = load i32, i32* %v_samp_factor, align 4, !tbaa !23\l  %45 = sext i32 %44 to i64\l  %cmp47 = icmp slt i64 %indvars.iv.next260, %45\l  br i1 %cmp47, label %for.body49, label %for.inc86.loopexit, !prof !39\l|{<s0>T|<s1>F}}"];
	Node0x69e9c80:s0 -> Node0x69e9c80;
	Node0x69e9c80:s1 -> Node0x69e6f30;
	Node0x69e6f30 [shape=record, style = filled, fillcolor = blue, label="{for.inc86.loopexit:                               \l  br label %for.inc86\l}"];
	Node0x69e6f30 -> Node0x69dbb60;
	Node0x69eac50 [shape=record, style = filled, fillcolor = blue, label="{for.inc86.loopexit267:                            \l  br label %for.inc86\l}"];
	Node0x69eac50 -> Node0x69dbb60;
	Node0x69dbb60 [shape=record, style = filled, fillcolor = cyan, label="{for.inc86:                                        \l  %indvars.iv.next262 = add nuw nsw i64 %indvars.iv261, 1\l  %incdec.ptr = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0187, i64 1\l  %46 = load i32, i32* %num_components, align 4, !tbaa !12\l  %47 = sext i32 %46 to i64\l  %cmp = icmp slt i64 %indvars.iv.next262, %47\l  br i1 %cmp, label %for.body, label %for.end88.loopexit, !prof !13\l|{<s0>T|<s1>F}}"];
	Node0x69dbb60:s0 -> Node0x69db980;
	Node0x69dbb60:s1 -> Node0x69e7230;
	Node0x69e7230 [shape=record, style = filled, fillcolor = cyan, label="{for.end88.loopexit:                               \l  br label %for.end88\l}"];
	Node0x69e7230 -> Node0x69dac80;
	Node0x69dac80 [shape=record, style = filled, fillcolor = cyan, label="{for.end88:                                        \l  %call89 = tail call i32 @compress_output(%struct.jpeg_compress_struct*\l... nonnull %cinfo, i8*** %input_buf)\l  ret i32 %call89\l}"];
}
