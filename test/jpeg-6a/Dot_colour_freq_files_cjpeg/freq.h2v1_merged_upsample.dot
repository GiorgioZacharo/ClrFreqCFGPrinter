digraph "CFG for 'h2v1_merged_upsample' function" {
	label="CFG for 'h2v1_merged_upsample' function";

	Node0x5a335e0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %upsample1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 81\l  %0 = bitcast %struct.jpeg_upsampler** %upsample1 to %struct.my_upsampler**\l  %1 = load %struct.my_upsampler*, %struct.my_upsampler** %0, align 8, !tbaa !2\l  %sample_range_limit = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 61\l  %2 = load i8*, i8** %sample_range_limit, align 8, !tbaa !10\l  %Cr_r_tab = getelementptr inbounds %struct.my_upsampler,\l... %struct.my_upsampler* %1, i64 0, i32 2\l  %3 = load i32*, i32** %Cr_r_tab, align 8, !tbaa !11\l  %Cb_b_tab = getelementptr inbounds %struct.my_upsampler,\l... %struct.my_upsampler* %1, i64 0, i32 3\l  %4 = load i32*, i32** %Cb_b_tab, align 8, !tbaa !14\l  %Cr_g_tab = getelementptr inbounds %struct.my_upsampler,\l... %struct.my_upsampler* %1, i64 0, i32 4\l  %5 = load i64*, i64** %Cr_g_tab, align 8, !tbaa !15\l  %Cb_g_tab = getelementptr inbounds %struct.my_upsampler,\l... %struct.my_upsampler* %1, i64 0, i32 5\l  %6 = load i64*, i64** %Cb_g_tab, align 8, !tbaa !16\l  %idxprom = zext i32 %in_row_group_ctr to i64\l  %7 = load i8**, i8*** %input_buf, align 8, !tbaa !17\l  %arrayidx2 = getelementptr inbounds i8*, i8** %7, i64 %idxprom\l  %8 = load i8*, i8** %arrayidx2, align 8, !tbaa !17\l  %arrayidx4 = getelementptr inbounds i8**, i8*** %input_buf, i64 1\l  %9 = load i8**, i8*** %arrayidx4, align 8, !tbaa !17\l  %arrayidx5 = getelementptr inbounds i8*, i8** %9, i64 %idxprom\l  %10 = load i8*, i8** %arrayidx5, align 8, !tbaa !17\l  %arrayidx7 = getelementptr inbounds i8**, i8*** %input_buf, i64 2\l  %11 = load i8**, i8*** %arrayidx7, align 8, !tbaa !17\l  %arrayidx8 = getelementptr inbounds i8*, i8** %11, i64 %idxprom\l  %12 = load i8*, i8** %arrayidx8, align 8, !tbaa !17\l  %13 = load i8*, i8** %output_buf, align 8, !tbaa !17\l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %14 = load i32, i32* %output_width, align 8, !tbaa !18\l  %shr = lshr i32 %14, 1\l  %cmp154 = icmp eq i32 %shr, 0\l  br i1 %cmp154, label %for.end, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5a335e0:s0 -> Node0x5a34100;
	Node0x5a335e0:s1 -> Node0x5a34e90;
	Node0x5a34e90 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader:                               \l  %15 = add nsw i32 %shr, -1\l  %16 = zext i32 %15 to i64\l  %17 = mul nuw nsw i64 %16, 6\l  %18 = add nuw nsw i64 %17, 6\l  %19 = shl nuw nsw i64 %16, 1\l  %20 = add nuw nsw i64 %19, 2\l  %21 = add nuw nsw i64 %16, 1\l  %scevgep164 = getelementptr i8, i8* %12, i64 %21\l  br label %for.body\l}"];
	Node0x5a34e90 -> Node0x5a35440;
	Node0x5a35440 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %col.0159 = phi i32 [ %dec, %for.body ], [ %shr, %for.body.preheader ]\l  %inptr2.0158 = phi i8* [ %incdec.ptr10, %for.body ], [ %12,\l... %for.body.preheader ]\l  %inptr1.0157 = phi i8* [ %incdec.ptr, %for.body ], [ %10,\l... %for.body.preheader ]\l  %inptr0.0156 = phi i8* [ %incdec.ptr36, %for.body ], [ %8,\l... %for.body.preheader ]\l  %outptr.0155 = phi i8* [ %add.ptr50, %for.body ], [ %13, %for.body.preheader\l... ]\l  %incdec.ptr = getelementptr inbounds i8, i8* %inptr1.0157, i64 1\l  %22 = load i8, i8* %inptr1.0157, align 1, !tbaa !19\l  %incdec.ptr10 = getelementptr inbounds i8, i8* %inptr2.0158, i64 1\l  %23 = load i8, i8* %inptr2.0158, align 1, !tbaa !19\l  %idxprom12 = zext i8 %23 to i64\l  %arrayidx13 = getelementptr inbounds i32, i32* %3, i64 %idxprom12\l  %24 = load i32, i32* %arrayidx13, align 4, !tbaa !20\l  %idxprom14 = zext i8 %22 to i64\l  %arrayidx15 = getelementptr inbounds i64, i64* %6, i64 %idxprom14\l  %25 = load i64, i64* %arrayidx15, align 8, !tbaa !21\l  %arrayidx17 = getelementptr inbounds i64, i64* %5, i64 %idxprom12\l  %26 = load i64, i64* %arrayidx17, align 8, !tbaa !21\l  %add = add nsw i64 %26, %25\l  %shr18153 = lshr i64 %add, 16\l  %conv19 = trunc i64 %shr18153 to i32\l  %arrayidx21 = getelementptr inbounds i32, i32* %4, i64 %idxprom14\l  %27 = load i32, i32* %arrayidx21, align 4, !tbaa !20\l  %incdec.ptr22 = getelementptr inbounds i8, i8* %inptr0.0156, i64 1\l  %28 = load i8, i8* %inptr0.0156, align 1, !tbaa !19\l  %conv23 = zext i8 %28 to i32\l  %add24 = add nsw i32 %conv23, %24\l  %idxprom25 = sext i32 %add24 to i64\l  %arrayidx26 = getelementptr inbounds i8, i8* %2, i64 %idxprom25\l  %29 = load i8, i8* %arrayidx26, align 1, !tbaa !19\l  store i8 %29, i8* %outptr.0155, align 1, !tbaa !19\l  %add28 = add nsw i32 %conv23, %conv19\l  %idxprom29 = sext i32 %add28 to i64\l  %arrayidx30 = getelementptr inbounds i8, i8* %2, i64 %idxprom29\l  %30 = load i8, i8* %arrayidx30, align 1, !tbaa !19\l  %arrayidx31 = getelementptr inbounds i8, i8* %outptr.0155, i64 1\l  store i8 %30, i8* %arrayidx31, align 1, !tbaa !19\l  %add32 = add nsw i32 %conv23, %27\l  %idxprom33 = sext i32 %add32 to i64\l  %arrayidx34 = getelementptr inbounds i8, i8* %2, i64 %idxprom33\l  %31 = load i8, i8* %arrayidx34, align 1, !tbaa !19\l  %arrayidx35 = getelementptr inbounds i8, i8* %outptr.0155, i64 2\l  store i8 %31, i8* %arrayidx35, align 1, !tbaa !19\l  %add.ptr = getelementptr inbounds i8, i8* %outptr.0155, i64 3\l  %incdec.ptr36 = getelementptr inbounds i8, i8* %inptr0.0156, i64 2\l  %32 = load i8, i8* %incdec.ptr22, align 1, !tbaa !19\l  %conv37 = zext i8 %32 to i32\l  %add38 = add nsw i32 %conv37, %24\l  %idxprom39 = sext i32 %add38 to i64\l  %arrayidx40 = getelementptr inbounds i8, i8* %2, i64 %idxprom39\l  %33 = load i8, i8* %arrayidx40, align 1, !tbaa !19\l  store i8 %33, i8* %add.ptr, align 1, !tbaa !19\l  %add42 = add nsw i32 %conv37, %conv19\l  %idxprom43 = sext i32 %add42 to i64\l  %arrayidx44 = getelementptr inbounds i8, i8* %2, i64 %idxprom43\l  %34 = load i8, i8* %arrayidx44, align 1, !tbaa !19\l  %arrayidx45 = getelementptr inbounds i8, i8* %outptr.0155, i64 4\l  store i8 %34, i8* %arrayidx45, align 1, !tbaa !19\l  %add46 = add nsw i32 %conv37, %27\l  %idxprom47 = sext i32 %add46 to i64\l  %arrayidx48 = getelementptr inbounds i8, i8* %2, i64 %idxprom47\l  %35 = load i8, i8* %arrayidx48, align 1, !tbaa !19\l  %arrayidx49 = getelementptr inbounds i8, i8* %outptr.0155, i64 5\l  store i8 %35, i8* %arrayidx49, align 1, !tbaa !19\l  %add.ptr50 = getelementptr inbounds i8, i8* %outptr.0155, i64 6\l  %dec = add i32 %col.0159, -1\l  %cmp = icmp eq i32 %dec, 0\l  br i1 %cmp, label %for.end.loopexit, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x5a35440:s0 -> Node0x5a38a20;
	Node0x5a35440:s1 -> Node0x5a35440;
	Node0x5a38a20 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  %scevgep = getelementptr i8, i8* %13, i64 %18\l  %scevgep163 = getelementptr i8, i8* %8, i64 %20\l  %scevgep165 = getelementptr i8, i8* %10, i64 %21\l  %.pre = load i32, i32* %output_width, align 8, !tbaa !18\l  br label %for.end\l}"];
	Node0x5a38a20 -> Node0x5a34100;
	Node0x5a34100 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %36 = phi i32 [ %14, %entry ], [ %.pre, %for.end.loopexit ]\l  %inptr2.0.lcssa = phi i8* [ %12, %entry ], [ %scevgep164, %for.end.loopexit ]\l  %inptr1.0.lcssa = phi i8* [ %10, %entry ], [ %scevgep165, %for.end.loopexit ]\l  %inptr0.0.lcssa = phi i8* [ %8, %entry ], [ %scevgep163, %for.end.loopexit ]\l  %outptr.0.lcssa = phi i8* [ %13, %entry ], [ %scevgep, %for.end.loopexit ]\l  %and = and i32 %36, 1\l  %tobool = icmp eq i32 %and, 0\l  br i1 %tobool, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x5a34100:s0 -> Node0x5a39260;
	Node0x5a34100:s1 -> Node0x5a39330;
	Node0x5a39330 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %37 = load i8, i8* %inptr1.0.lcssa, align 1, !tbaa !19\l  %38 = load i8, i8* %inptr2.0.lcssa, align 1, !tbaa !19\l  %idxprom54 = zext i8 %38 to i64\l  %arrayidx55 = getelementptr inbounds i32, i32* %3, i64 %idxprom54\l  %39 = load i32, i32* %arrayidx55, align 4, !tbaa !20\l  %idxprom56 = zext i8 %37 to i64\l  %arrayidx57 = getelementptr inbounds i64, i64* %6, i64 %idxprom56\l  %40 = load i64, i64* %arrayidx57, align 8, !tbaa !21\l  %arrayidx59 = getelementptr inbounds i64, i64* %5, i64 %idxprom54\l  %41 = load i64, i64* %arrayidx59, align 8, !tbaa !21\l  %add60 = add nsw i64 %41, %40\l  %shr61152 = lshr i64 %add60, 16\l  %conv62 = trunc i64 %shr61152 to i32\l  %arrayidx64 = getelementptr inbounds i32, i32* %4, i64 %idxprom56\l  %42 = load i32, i32* %arrayidx64, align 4, !tbaa !20\l  %43 = load i8, i8* %inptr0.0.lcssa, align 1, !tbaa !19\l  %conv65 = zext i8 %43 to i32\l  %add66 = add nsw i32 %conv65, %39\l  %idxprom67 = sext i32 %add66 to i64\l  %arrayidx68 = getelementptr inbounds i8, i8* %2, i64 %idxprom67\l  %44 = load i8, i8* %arrayidx68, align 1, !tbaa !19\l  store i8 %44, i8* %outptr.0.lcssa, align 1, !tbaa !19\l  %add70 = add nsw i32 %conv65, %conv62\l  %idxprom71 = sext i32 %add70 to i64\l  %arrayidx72 = getelementptr inbounds i8, i8* %2, i64 %idxprom71\l  %45 = load i8, i8* %arrayidx72, align 1, !tbaa !19\l  %arrayidx73 = getelementptr inbounds i8, i8* %outptr.0.lcssa, i64 1\l  store i8 %45, i8* %arrayidx73, align 1, !tbaa !19\l  %add74 = add nsw i32 %conv65, %42\l  %idxprom75 = sext i32 %add74 to i64\l  %arrayidx76 = getelementptr inbounds i8, i8* %2, i64 %idxprom75\l  %46 = load i8, i8* %arrayidx76, align 1, !tbaa !19\l  %arrayidx77 = getelementptr inbounds i8, i8* %outptr.0.lcssa, i64 2\l  store i8 %46, i8* %arrayidx77, align 1, !tbaa !19\l  br label %if.end\l}"];
	Node0x5a39330 -> Node0x5a39260;
	Node0x5a39260 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  ret void\l}"];
}
