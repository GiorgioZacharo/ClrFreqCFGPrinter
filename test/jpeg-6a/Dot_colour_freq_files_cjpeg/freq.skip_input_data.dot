digraph "CFG for 'skip_input_data' function" {
	label="CFG for 'skip_input_data' function";

	Node0x4e2e890 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %src1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5\l  %0 = bitcast %struct.jpeg_source_mgr** %src1 to %struct.my_source_mgr**\l  %1 = load %struct.my_source_mgr*, %struct.my_source_mgr** %0, align 8, !tbaa\l... !2\l  %cmp = icmp sgt i64 %num_bytes, 0\l  br i1 %cmp, label %while.cond.preheader, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x4e2e890:s0 -> Node0x4e2ead0;
	Node0x4e2e890:s1 -> Node0x4e2ebd0;
	Node0x4e2ead0 [shape=record, style = filled, fillcolor = blue, label="{while.cond.preheader:                             \l  %bytes_in_buffer = getelementptr inbounds %struct.my_source_mgr,\l... %struct.my_source_mgr* %1, i64 0, i32 0, i32 1\l  %2 = load i64, i64* %bytes_in_buffer, align 8, !tbaa !10\l  %cmp218 = icmp slt i64 %2, %num_bytes\l  br i1 %cmp218, label %while.body.lr.ph, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x4e2ead0:s0 -> Node0x4e2f510;
	Node0x4e2ead0:s1 -> Node0x4e2f5f0;
	Node0x4e2f510 [shape=record, style = filled, fillcolor = blue, label="{while.body.lr.ph:                                 \l  %.pre.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %.pre31.i = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  br label %while.body\l}"];
	Node0x4e2f510 -> Node0x4e2e780;
	Node0x4e2e780 [shape=record, style = filled, fillcolor = blue, label="{while.body:                                       \l  %3 = phi %struct.my_source_mgr* [ %1, %while.body.lr.ph ], [ %.pre,\l... %fill_input_buffer.exit.while.body_crit_edge ]\l  %4 = phi i64 [ %2, %while.body.lr.ph ], [ %17,\l... %fill_input_buffer.exit.while.body_crit_edge ]\l  %num_bytes.addr.019 = phi i64 [ %num_bytes, %while.body.lr.ph ], [ %sub,\l... %fill_input_buffer.exit.while.body_crit_edge ]\l  %sub = sub nsw i64 %num_bytes.addr.019, %4\l  %buffer.i = getelementptr inbounds %struct.my_source_mgr,\l... %struct.my_source_mgr* %3, i64 0, i32 2\l  %5 = load i8*, i8** %buffer.i, align 8, !tbaa !14\l  %infile.i = getelementptr inbounds %struct.my_source_mgr,\l... %struct.my_source_mgr* %3, i64 0, i32 1\l  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %infile.i, align 8, !tbaa !15\l  %call.i = tail call i64 @fread(i8* %5, i64 1, i64 4096, %struct._IO_FILE*\l... %6) #6\l  %cmp.i = icmp eq i64 %call.i, 0\l  %start_of_file.i = getelementptr inbounds %struct.my_source_mgr,\l... %struct.my_source_mgr* %3, i64 0, i32 3\l  br i1 %cmp.i, label %if.then.i, label %fill_input_buffer.exit\l|{<s0>T|<s1>F}}"];
	Node0x4e2e780:s0 -> Node0x4e30500;
	Node0x4e2e780:s1 -> Node0x4e30610;
	Node0x4e30500 [shape=record, style = filled, fillcolor = blue, label="{if.then.i:                                        \l  %7 = load i32, i32* %start_of_file.i, align 8, !tbaa !16\l  %tobool.i = icmp eq i32 %7, 0\l  br i1 %tobool.i, label %if.end.i, label %if.then2.i\l|{<s0>T|<s1>F}}"];
	Node0x4e30500:s0 -> Node0x4e2f800;
	Node0x4e30500:s1 -> Node0x4e2f8b0;
	Node0x4e2f8b0 [shape=record, style = filled, fillcolor = blue, label="{if.then2.i:                                       \l  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %.pre.i, align\l... 8, !tbaa !17\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 5\l  store i32 41, i32* %msg_code.i, align 8, !tbaa !18\l  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 0\l  %9 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !20\l  tail call void %9(%struct.jpeg_common_struct* %.pre31.i) #6\l  br label %if.end.i\l}"];
	Node0x4e2f8b0 -> Node0x4e2f800;
	Node0x4e2f800 [shape=record, style = filled, fillcolor = blue, label="{if.end.i:                                         \l  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %.pre.i, align\l... 8, !tbaa !17\l  %msg_code5.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %10, i64 0, i32 5\l  store i32 116, i32* %msg_code5.i, align 8, !tbaa !18\l  %emit_message.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %10, i64 0, i32 1\l  %11 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message.i, align 8, !tbaa !21\l  tail call void %11(%struct.jpeg_common_struct* %.pre31.i, i32 -1) #6\l  %12 = load i8*, i8** %buffer.i, align 8, !tbaa !14\l  store i8 -1, i8* %12, align 1, !tbaa !22\l  %13 = load i8*, i8** %buffer.i, align 8, !tbaa !14\l  %arrayidx9.i = getelementptr inbounds i8, i8* %13, i64 1\l  store i8 -39, i8* %arrayidx9.i, align 1, !tbaa !22\l  br label %fill_input_buffer.exit\l}"];
	Node0x4e2f800 -> Node0x4e30610;
	Node0x4e30610 [shape=record, style = filled, fillcolor = blue, label="{fill_input_buffer.exit:                           \l  %nbytes.0.i = phi i64 [ 2, %if.end.i ], [ %call.i, %while.body ]\l  %14 = bitcast i8** %buffer.i to i64*\l  %15 = load i64, i64* %14, align 8, !tbaa !14\l  %16 = bitcast %struct.my_source_mgr* %3 to i64*\l  store i64 %15, i64* %16, align 8, !tbaa !23\l  %bytes_in_buffer.i = getelementptr inbounds %struct.my_source_mgr,\l... %struct.my_source_mgr* %3, i64 0, i32 0, i32 1\l  store i64 %nbytes.0.i, i64* %bytes_in_buffer.i, align 8, !tbaa !10\l  store i32 0, i32* %start_of_file.i, align 8, !tbaa !16\l  %17 = load i64, i64* %bytes_in_buffer, align 8, !tbaa !10\l  %cmp2 = icmp sgt i64 %sub, %17\l  br i1 %cmp2, label %fill_input_buffer.exit.while.body_crit_edge, label\l... %while.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x4e30610:s0 -> Node0x4e2fb00;
	Node0x4e30610:s1 -> Node0x4e23c00;
	Node0x4e2fb00 [shape=record, style = filled, fillcolor = blue, label="{fill_input_buffer.exit.while.body_crit_edge:      \l  %.pre = load %struct.my_source_mgr*, %struct.my_source_mgr** %0, align 8,\l... !tbaa !2\l  br label %while.body\l}"];
	Node0x4e2fb00 -> Node0x4e2e780;
	Node0x4e23c00 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit:                               \l  %.lcssa = phi i64 [ %17, %fill_input_buffer.exit ]\l  %sub.lcssa = phi i64 [ %sub, %fill_input_buffer.exit ]\l  br label %while.end\l}"];
	Node0x4e23c00 -> Node0x4e2f5f0;
	Node0x4e2f5f0 [shape=record, style = filled, fillcolor = blue, label="{while.end:                                        \l  %18 = phi i64 [ %2, %while.cond.preheader ], [ %.lcssa, %while.end.loopexit ]\l  %num_bytes.addr.0.lcssa = phi i64 [ %num_bytes, %while.cond.preheader ], [\l... %sub.lcssa, %while.end.loopexit ]\l  %next_input_byte = getelementptr inbounds %struct.my_source_mgr,\l... %struct.my_source_mgr* %1, i64 0, i32 0, i32 0\l  %19 = load i8*, i8** %next_input_byte, align 8, !tbaa !23\l  %add.ptr = getelementptr inbounds i8, i8* %19, i64 %num_bytes.addr.0.lcssa\l  store i8* %add.ptr, i8** %next_input_byte, align 8, !tbaa !23\l  %sub8 = sub i64 %18, %num_bytes.addr.0.lcssa\l  store i64 %sub8, i64* %bytes_in_buffer, align 8, !tbaa !10\l  br label %if.end\l}"];
	Node0x4e2f5f0 -> Node0x4e2ebd0;
	Node0x4e2ebd0 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  ret void\l}"];
}
