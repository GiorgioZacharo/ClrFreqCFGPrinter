digraph "CFG for 'h2v1_downsample' function" {
	label="CFG for 'h2v1_downsample' function";

	Node0x58ae230 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %width_in_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr, i64 0, i32 7\l  %0 = load i32, i32* %width_in_blocks, align 4, !tbaa !3\l  %mul = shl i32 %0, 3\l  %max_v_samp_factor = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 39\l  %1 = load i32, i32* %max_v_samp_factor, align 4, !tbaa !9\l  %image_width = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 6\l  %2 = load i32, i32* %image_width, align 8, !tbaa !13\l  %mul1 = shl i32 %0, 4\l  %sub.i = sub i32 %mul1, %2\l  %cmp.i = icmp sgt i32 %sub.i, 0\l  %cmp121.i = icmp sgt i32 %1, 0\l  %or.cond.i = and i1 %cmp121.i, %cmp.i\l  br i1 %or.cond.i, label %for.body.us.preheader.i, label %for.cond.preheader\l|{<s0>T|<s1>F}}"];
	Node0x58ae230:s0 -> Node0x58d2680;
	Node0x58ae230:s1 -> Node0x58d2760;
	Node0x58d2680 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.preheader.i:                          \l  %idx.ext.i = zext i32 %2 to i64\l  %3 = xor i32 %mul1, -1\l  %4 = add i32 %2, %3\l  %5 = icmp sgt i32 %4, -2\l  %smax.i = select i1 %5, i32 %4, i32 -2\l  %6 = or i32 %mul1, 1\l  %7 = sub i32 %6, %2\l  %8 = add i32 %7, %smax.i\l  %9 = zext i32 %8 to i64\l  %10 = add nuw nsw i64 %9, 1\l  %11 = add i32 %1, -1\l  %xtraiter50 = and i32 %1, 3\l  %lcmp.mod51 = icmp eq i32 %xtraiter50, 0\l  br i1 %lcmp.mod51, label %for.body.us.preheader.i.split, label\l... %for.body.us.i.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x58d2680:s0 -> Node0x58d29f0;
	Node0x58d2680:s1 -> Node0x58d30f0;
	Node0x58d30f0 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.i.prol.preheader:                     \l  br label %for.body.us.i.prol\l}"];
	Node0x58d30f0 -> Node0x58d32a0;
	Node0x58d32a0 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.i.prol:                               \l  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body.us.i.prol\l... ], [ 0, %for.body.us.i.prol.preheader ]\l  %prol.iter52 = phi i32 [ %prol.iter52.sub, %for.body.us.i.prol ], [\l... %xtraiter50, %for.body.us.i.prol.preheader ]\l  %arrayidx.us.i.prol = getelementptr inbounds i8*, i8** %input_data, i64\l... %indvars.iv.i.prol\l  %12 = load i8*, i8** %arrayidx.us.i.prol, align 8, !tbaa !14\l  %add.ptr.us.i.prol = getelementptr inbounds i8, i8* %12, i64 %idx.ext.i\l  %arrayidx2.us.i.prol = getelementptr inbounds i8, i8* %add.ptr.us.i.prol,\l... i64 -1\l  %13 = load i8, i8* %arrayidx2.us.i.prol, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i.prol, i8 %13, i64\l... %10, i32 1, i1 false) #5\l  %indvars.iv.next.i.prol = add nuw nsw i64 %indvars.iv.i.prol, 1\l  %prol.iter52.sub = add i32 %prol.iter52, -1\l  %prol.iter52.cmp = icmp eq i32 %prol.iter52.sub, 0\l  br i1 %prol.iter52.cmp, label %for.body.us.preheader.i.split.loopexit, label\l... %for.body.us.i.prol, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x58d32a0:s0 -> Node0x58d3e70;
	Node0x58d32a0:s1 -> Node0x58d32a0;
	Node0x58d3e70 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.preheader.i.split.loopexit:           \l  %indvars.iv.next.i.prol.lcssa = phi i64 [ %indvars.iv.next.i.prol,\l... %for.body.us.i.prol ]\l  br label %for.body.us.preheader.i.split\l}"];
	Node0x58d3e70 -> Node0x58d29f0;
	Node0x58d29f0 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.preheader.i.split:                    \l  %indvars.iv.i.unr = phi i64 [ 0, %for.body.us.preheader.i ], [\l... %indvars.iv.next.i.prol.lcssa, %for.body.us.preheader.i.split.loopexit ]\l  %14 = icmp ult i32 %11, 3\l  br i1 %14, label %for.cond.preheader.loopexit, label\l... %for.body.us.preheader.i.split.split\l|{<s0>T|<s1>F}}"];
	Node0x58d29f0:s0 -> Node0x58d4160;
	Node0x58d29f0:s1 -> Node0x58d4280;
	Node0x58d4280 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.preheader.i.split.split:              \l  br label %for.body.us.i\l}"];
	Node0x58d4280 -> Node0x58d4430;
	Node0x58d4430 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.i:                                    \l  %indvars.iv.i = phi i64 [ %indvars.iv.i.unr,\l... %for.body.us.preheader.i.split.split ], [ %indvars.iv.next.i.3,\l... %for.body.us.i ]\l  %arrayidx.us.i = getelementptr inbounds i8*, i8** %input_data, i64\l... %indvars.iv.i\l  %15 = load i8*, i8** %arrayidx.us.i, align 8, !tbaa !14\l  %add.ptr.us.i = getelementptr inbounds i8, i8* %15, i64 %idx.ext.i\l  %arrayidx2.us.i = getelementptr inbounds i8, i8* %add.ptr.us.i, i64 -1\l  %16 = load i8, i8* %arrayidx2.us.i, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i, i8 %16, i64 %10, i32\l... 1, i1 false) #5\l  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1\l  %arrayidx.us.i.1 = getelementptr inbounds i8*, i8** %input_data, i64\l... %indvars.iv.next.i\l  %17 = load i8*, i8** %arrayidx.us.i.1, align 8, !tbaa !14\l  %add.ptr.us.i.1 = getelementptr inbounds i8, i8* %17, i64 %idx.ext.i\l  %arrayidx2.us.i.1 = getelementptr inbounds i8, i8* %add.ptr.us.i.1, i64 -1\l  %18 = load i8, i8* %arrayidx2.us.i.1, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i.1, i8 %18, i64 %10,\l... i32 1, i1 false) #5\l  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2\l  %arrayidx.us.i.2 = getelementptr inbounds i8*, i8** %input_data, i64\l... %indvars.iv.next.i.1\l  %19 = load i8*, i8** %arrayidx.us.i.2, align 8, !tbaa !14\l  %add.ptr.us.i.2 = getelementptr inbounds i8, i8* %19, i64 %idx.ext.i\l  %arrayidx2.us.i.2 = getelementptr inbounds i8, i8* %add.ptr.us.i.2, i64 -1\l  %20 = load i8, i8* %arrayidx2.us.i.2, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i.2, i8 %20, i64 %10,\l... i32 1, i1 false) #5\l  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3\l  %arrayidx.us.i.3 = getelementptr inbounds i8*, i8** %input_data, i64\l... %indvars.iv.next.i.2\l  %21 = load i8*, i8** %arrayidx.us.i.3, align 8, !tbaa !14\l  %add.ptr.us.i.3 = getelementptr inbounds i8, i8* %21, i64 %idx.ext.i\l  %arrayidx2.us.i.3 = getelementptr inbounds i8, i8* %add.ptr.us.i.3, i64 -1\l  %22 = load i8, i8* %arrayidx2.us.i.3, align 1, !tbaa !15\l  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr.us.i.3, i8 %22, i64 %10,\l... i32 1, i1 false) #5\l  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4\l  %lftr.wideiv.3 = trunc i64 %indvars.iv.next.i.3 to i32\l  %exitcond40.3 = icmp eq i32 %lftr.wideiv.3, %1\l  br i1 %exitcond40.3, label %for.cond.preheader.loopexit.unr-lcssa, label\l... %for.body.us.i\l|{<s0>T|<s1>F}}"];
	Node0x58d4430:s0 -> Node0x58d5e90;
	Node0x58d4430:s1 -> Node0x58d4430;
	Node0x58d5e90 [shape=record, style = filled, fillcolor = blue, label="{for.cond.preheader.loopexit.unr-lcssa:            \l  br label %for.cond.preheader.loopexit\l}"];
	Node0x58d5e90 -> Node0x58d4160;
	Node0x58d4160 [shape=record, style = filled, fillcolor = blue, label="{for.cond.preheader.loopexit:                      \l  br label %for.cond.preheader\l}"];
	Node0x58d4160 -> Node0x58d2760;
	Node0x58d2760 [shape=record, style = filled, fillcolor = blue, label="{for.cond.preheader:                               \l  %v_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr, i64 0, i32 3\l  %23 = load i32, i32* %v_samp_factor, align 4, !tbaa !18\l  %cmp37 = icmp sgt i32 %23, 0\l  br i1 %cmp37, label %for.body.lr.ph, label %for.end13\l|{<s0>T|<s1>F}}"];
	Node0x58d2760:s0 -> Node0x58c2360;
	Node0x58d2760:s1 -> Node0x58c2410;
	Node0x58c2360 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  %cmp532 = icmp eq i32 %mul, 0\l  br i1 %cmp532, label %for.body.preheader, label %for.body.us.preheader\l|{<s0>T|<s1>F}}"];
	Node0x58c2360:s0 -> Node0x58c25d0;
	Node0x58c2360:s1 -> Node0x58c2650;
	Node0x58c2650 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.preheader:                            \l  br label %for.body.us\l}"];
	Node0x58c2650 -> Node0x58c27c0;
	Node0x58c25d0 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader:                               \l  %min.iters.check = icmp ult i32 %23, 32\l  br i1 %min.iters.check, label %for.body.preheader46, label %min.iters.checked\l|{<s0>T|<s1>F}}"];
	Node0x58c25d0:s0 -> Node0x58c29c0;
	Node0x58c25d0:s1 -> Node0x58c2a40;
	Node0x58c29c0 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader46:                             \l  %outrow.038.ph = phi i32 [ 0, %min.iters.checked ], [ 0, %for.body.preheader\l... ], [ %n.vec, %middle.block ]\l  br label %for.body\l}"];
	Node0x58c29c0 -> Node0x58c2da0;
	Node0x58c2a40 [shape=record, style = filled, fillcolor = blue, label="{min.iters.checked:                                \l  %n.vec = and i32 %23, -32\l  %cmp.zero = icmp eq i32 %n.vec, 0\l  br i1 %cmp.zero, label %for.body.preheader46, label %vector.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x58c2a40:s0 -> Node0x58c29c0;
	Node0x58c2a40:s1 -> Node0x58c3080;
	Node0x58c3080 [shape=record, style = filled, fillcolor = blue, label="{vector.body.preheader:                            \l  %24 = add i32 %23, -32\l  %25 = lshr i32 %24, 5\l  %26 = add nuw nsw i32 %25, 1\l  %xtraiter = and i32 %26, 7\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %vector.body.preheader.split, label\l... %vector.body.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x58c3080:s0 -> Node0x58c3470;
	Node0x58c3080:s1 -> Node0x58c34f0;
	Node0x58c34f0 [shape=record, style = filled, fillcolor = blue, label="{vector.body.prol.preheader:                       \l  br label %vector.body.prol\l}"];
	Node0x58c34f0 -> Node0x58c3640;
	Node0x58c3640 [shape=record, style = filled, fillcolor = blue, label="{vector.body.prol:                                 \l  %index.prol = phi i32 [ %index.next.prol, %vector.body.prol ], [ 0,\l... %vector.body.prol.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %vector.body.prol ], [ %xtraiter,\l... %vector.body.prol.preheader ]\l  %index.next.prol = add i32 %index.prol, 32\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %vector.body.preheader.split.loopexit, label\l... %vector.body.prol, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x58c3640:s0 -> Node0x58c3ba0;
	Node0x58c3640:s1 -> Node0x58c3640;
	Node0x58c3ba0 [shape=record, style = filled, fillcolor = blue, label="{vector.body.preheader.split.loopexit:             \l  %index.next.prol.lcssa = phi i32 [ %index.next.prol, %vector.body.prol ]\l  br label %vector.body.preheader.split\l}"];
	Node0x58c3ba0 -> Node0x58c3470;
	Node0x58c3470 [shape=record, style = filled, fillcolor = blue, label="{vector.body.preheader.split:                      \l  %index.unr = phi i32 [ 0, %vector.body.preheader ], [\l... %index.next.prol.lcssa, %vector.body.preheader.split.loopexit ]\l  %27 = icmp ult i32 %24, 224\l  br i1 %27, label %middle.block, label %vector.body.preheader.split.split\l|{<s0>T|<s1>F}}"];
	Node0x58c3470:s0 -> Node0x58c2bf0;
	Node0x58c3470:s1 -> Node0x58c3ef0;
	Node0x58c3ef0 [shape=record, style = filled, fillcolor = blue, label="{vector.body.preheader.split.split:                \l  br label %vector.body\l}"];
	Node0x58c3ef0 -> Node0x58c4070;
	Node0x58c4070 [shape=record, style = filled, fillcolor = blue, label="{vector.body:                                      \l  %index = phi i32 [ %index.unr, %vector.body.preheader.split.split ], [\l... %index.next.7, %vector.body ]\l  %index.next.7 = add i32 %index, 256\l  %28 = icmp eq i32 %index.next.7, %n.vec\l  br i1 %28, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x58c4070:s0 -> Node0x58da130;
	Node0x58c4070:s1 -> Node0x58c4070;
	Node0x58da130 [shape=record, style = filled, fillcolor = blue, label="{middle.block.unr-lcssa:                           \l  br label %middle.block\l}"];
	Node0x58da130 -> Node0x58c2bf0;
	Node0x58c2bf0 [shape=record, style = filled, fillcolor = blue, label="{middle.block:                                     \l  %cmp.n = icmp eq i32 %23, %n.vec\l  br i1 %cmp.n, label %for.end13, label %for.body.preheader46\l|{<s0>T|<s1>F}}"];
	Node0x58c2bf0:s0 -> Node0x58c2410;
	Node0x58c2bf0:s1 -> Node0x58c29c0;
	Node0x58c27c0 [shape=record, style = filled, fillcolor = blue, label="{for.body.us:                                      \l  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond4.for.inc11_crit_edge.us\l... ], [ 0, %for.body.us.preheader ]\l  %arrayidx.us = getelementptr inbounds i8*, i8** %output_data, i64 %indvars.iv\l  %29 = load i8*, i8** %arrayidx.us, align 8, !tbaa !14\l  %arrayidx3.us = getelementptr inbounds i8*, i8** %input_data, i64 %indvars.iv\l  %30 = load i8*, i8** %arrayidx3.us, align 8, !tbaa !14\l  br i1 false, label %for.body6.us.prol, label %for.body.us.split\l|{<s0>T|<s1>F}}"];
	Node0x58c27c0:s0 -> Node0x58d53c0;
	Node0x58c27c0:s1 -> Node0x58d54c0;
	Node0x58d53c0 [shape=record, style = filled, fillcolor = blue, label="{for.body6.us.prol:                                \l  br label %for.body.us.split\l}"];
	Node0x58d53c0 -> Node0x58d54c0;
	Node0x58d54c0 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.split:                                \l  %bias.036.us.unr = phi i32 [ 0, %for.body.us ], [ 1, %for.body6.us.prol ]\l  %outcol.033.us.unr = phi i32 [ 0, %for.body.us ], [ 1, %for.body6.us.prol ]\l  br i1 false, label %for.cond4.for.inc11_crit_edge.us, label\l... %for.body.us.split.split\l|{<s0>T|<s1>F}}"];
	Node0x58d54c0:s0 -> Node0x58da4d0;
	Node0x58d54c0:s1 -> Node0x58d5810;
	Node0x58d5810 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.split.split:                          \l  %xor.us = xor i32 %bias.036.us.unr, 1\l  br label %for.body6.us\l}"];
	Node0x58d5810 -> Node0x58d58f0;
	Node0x58d58f0 [shape=record, style = filled, fillcolor = blue, label="{for.body6.us:                                     \l  %outptr.035.us = phi i8* [ %29, %for.body.us.split.split ], [\l... %incdec.ptr.us.1, %for.body6.us ]\l  %inptr.034.us = phi i8* [ %30, %for.body.us.split.split ], [ %add.ptr.us.1,\l... %for.body6.us ]\l  %outcol.033.us = phi i32 [ %outcol.033.us.unr, %for.body.us.split.split ], [\l... %inc.us.1, %for.body6.us ]\l  %31 = load i8, i8* %inptr.034.us, align 1, !tbaa !15\l  %conv.us = zext i8 %31 to i32\l  %arrayidx7.us = getelementptr inbounds i8, i8* %inptr.034.us, i64 1\l  %32 = load i8, i8* %arrayidx7.us, align 1, !tbaa !15\l  %conv8.us = zext i8 %32 to i32\l  %add.us = add nuw nsw i32 %conv.us, %bias.036.us.unr\l  %add9.us = add nuw nsw i32 %add.us, %conv8.us\l  %shr31.us = lshr i32 %add9.us, 1\l  %conv10.us = trunc i32 %shr31.us to i8\l  %incdec.ptr.us = getelementptr inbounds i8, i8* %outptr.035.us, i64 1\l  store i8 %conv10.us, i8* %outptr.035.us, align 1, !tbaa !15\l  %add.ptr.us = getelementptr inbounds i8, i8* %inptr.034.us, i64 2\l  %33 = load i8, i8* %add.ptr.us, align 1, !tbaa !15\l  %conv.us.1 = zext i8 %33 to i32\l  %arrayidx7.us.1 = getelementptr inbounds i8, i8* %inptr.034.us, i64 3\l  %34 = load i8, i8* %arrayidx7.us.1, align 1, !tbaa !15\l  %conv8.us.1 = zext i8 %34 to i32\l  %add.us.1 = add nuw nsw i32 %conv.us.1, %xor.us\l  %add9.us.1 = add nuw nsw i32 %add.us.1, %conv8.us.1\l  %shr31.us.1 = lshr i32 %add9.us.1, 1\l  %conv10.us.1 = trunc i32 %shr31.us.1 to i8\l  %incdec.ptr.us.1 = getelementptr inbounds i8, i8* %outptr.035.us, i64 2\l  store i8 %conv10.us.1, i8* %incdec.ptr.us, align 1, !tbaa !15\l  %add.ptr.us.1 = getelementptr inbounds i8, i8* %inptr.034.us, i64 4\l  %inc.us.1 = add i32 %outcol.033.us, 2\l  %exitcond.1 = icmp eq i32 %inc.us.1, %mul\l  br i1 %exitcond.1, label %for.cond4.for.inc11_crit_edge.us.unr-lcssa, label\l... %for.body6.us\l|{<s0>T|<s1>F}}"];
	Node0x58d58f0:s0 -> Node0x58dca00;
	Node0x58d58f0:s1 -> Node0x58d58f0;
	Node0x58dca00 [shape=record, style = filled, fillcolor = blue, label="{for.cond4.for.inc11_crit_edge.us.unr-lcssa:       \l  br label %for.cond4.for.inc11_crit_edge.us\l}"];
	Node0x58dca00 -> Node0x58da4d0;
	Node0x58da4d0 [shape=record, style = filled, fillcolor = blue, label="{for.cond4.for.inc11_crit_edge.us:                 \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %35 = load i32, i32* %v_samp_factor, align 4, !tbaa !18\l  %36 = sext i32 %35 to i64\l  %cmp.us = icmp slt i64 %indvars.iv.next, %36\l  br i1 %cmp.us, label %for.body.us, label %for.end13.loopexit47\l|{<s0>T|<s1>F}}"];
	Node0x58da4d0:s0 -> Node0x58c27c0;
	Node0x58da4d0:s1 -> Node0x58dcc80;
	Node0x58c2da0 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %outrow.038 = phi i32 [ %inc12, %for.body ], [ %outrow.038.ph,\l... %for.body.preheader46 ]\l  %inc12 = add nuw nsw i32 %outrow.038, 1\l  %cmp = icmp slt i32 %inc12, %23\l  br i1 %cmp, label %for.body, label %for.end13.loopexit, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x58c2da0:s0 -> Node0x58c2da0;
	Node0x58c2da0:s1 -> Node0x58dcf40;
	Node0x58dcf40 [shape=record, style = filled, fillcolor = blue, label="{for.end13.loopexit:                               \l  br label %for.end13\l}"];
	Node0x58dcf40 -> Node0x58c2410;
	Node0x58dcc80 [shape=record, style = filled, fillcolor = blue, label="{for.end13.loopexit47:                             \l  br label %for.end13\l}"];
	Node0x58dcc80 -> Node0x58c2410;
	Node0x58c2410 [shape=record, style = filled, fillcolor = blue, label="{for.end13:                                        \l  ret void\l}"];
}
