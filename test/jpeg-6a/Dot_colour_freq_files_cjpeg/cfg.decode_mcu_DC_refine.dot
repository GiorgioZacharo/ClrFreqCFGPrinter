digraph "CFG for 'decode_mcu_DC_refine' function" {
	label="CFG for 'decode_mcu_DC_refine' function";

	Node0x4fd1080 [shape=record,label="{entry:\l  %br_state = alloca %struct.bitread_working_state, align 16\l  %entropy1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 79\l  %0 = bitcast %struct.jpeg_entropy_decoder** %entropy1 to\l... %struct.phuff_entropy_decoder**\l  %1 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder**\l... %0, align 8, !tbaa !2\l  %Al = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 71\l  %2 = bitcast i32* %Al to i64*\l  %3 = load i64, i64* %2, align 8\l  %4 = trunc i64 %3 to i32\l  %shl = shl i32 1, %4\l  %5 = bitcast %struct.bitread_working_state* %br_state to i8*\l  call void @llvm.lifetime.start(i64 56, i8* %5) #3\l  %restart_interval = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 49\l  %6 = load i32, i32* %restart_interval, align 8, !tbaa !10\l  %tobool = icmp eq i32 %6, 0\l  %7 = lshr i64 %3, 32\l  %8 = trunc i64 %7 to i32\l  br i1 %tobool, label %if.end6, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x4fd1080:s0 -> Node0x4fb2de0;
	Node0x4fd1080:s1 -> Node0x4fb3410;
	Node0x4fb3410 [shape=record,label="{if.then:                                          \l  %restarts_to_go = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 3\l  %9 = load i32, i32* %restarts_to_go, align 4, !tbaa !11\l  %cmp = icmp eq i32 %9, 0\l  br i1 %cmp, label %if.then2, label %if.end6\l|{<s0>T|<s1>F}}"];
	Node0x4fb3410:s0 -> Node0x4fd0f70;
	Node0x4fb3410:s1 -> Node0x4fb2de0;
	Node0x4fd0f70 [shape=record,label="{if.then2:                                         \l  %bits_left.i = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 1, i32 1\l  %10 = load i32, i32* %bits_left.i, align 8, !tbaa !17\l  %div.i = sdiv i32 %10, 8\l  %marker.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 78\l  %11 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader**\l... %marker.i, align 8, !tbaa !18\l  %discarded_bytes.i = getelementptr inbounds %struct.jpeg_marker_reader,\l... %struct.jpeg_marker_reader* %11, i64 0, i32 8\l  %12 = load i32, i32* %discarded_bytes.i, align 4, !tbaa !19\l  %add.i = add i32 %12, %div.i\l  store i32 %add.i, i32* %discarded_bytes.i, align 4, !tbaa !19\l  store i32 0, i32* %bits_left.i, align 8, !tbaa !17\l  %read_restart_marker.i = getelementptr inbounds %struct.jpeg_marker_reader,\l... %struct.jpeg_marker_reader* %11, i64 0, i32 2\l  %13 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %read_restart_marker.i, align 8, !tbaa !21\l  %call.i = tail call i32 %13(%struct.jpeg_decompress_struct* nonnull %cinfo)\l... #3\l  %tobool.i = icmp eq i32 %call.i, 0\l  br i1 %tobool.i, label %cleanup, label %for.cond.preheader.i\l|{<s0>T|<s1>F}}"];
	Node0x4fd0f70:s0 -> Node0x4fb4170;
	Node0x4fd0f70:s1 -> Node0x4fb4270;
	Node0x4fb4270 [shape=record,label="{for.cond.preheader.i:                             \l  %comps_in_scan.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 62\l  %14 = load i32, i32* %comps_in_scan.i, align 8, !tbaa !22\l  %cmp22.i = icmp sgt i32 %14, 0\l  br i1 %cmp22.i, label %for.body.i.preheader, label %process_restart.exit\l|{<s0>T|<s1>F}}"];
	Node0x4fb4270:s0 -> Node0x4fb3760;
	Node0x4fb4270:s1 -> Node0x4fb47c0;
	Node0x4fb3760 [shape=record,label="{for.body.i.preheader:                             \l  br label %for.body.i\l}"];
	Node0x4fb3760 -> Node0x4fb4930;
	Node0x4fb4930 [shape=record,label="{for.body.i:                                       \l  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0,\l... %for.body.i.preheader ]\l  %arrayidx.i = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 2, i32 1, i64 %indvars.iv.i\l  store i32 0, i32* %arrayidx.i, align 4, !tbaa !23\l  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1\l  %15 = load i32, i32* %comps_in_scan.i, align 8, !tbaa !22\l  %16 = sext i32 %15 to i64\l  %cmp.i = icmp slt i64 %indvars.iv.next.i, %16\l  br i1 %cmp.i, label %for.body.i, label %process_restart.exit.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x4fb4930:s0 -> Node0x4fb4930;
	Node0x4fb4930:s1 -> Node0x4fb4f80;
	Node0x4fb4f80 [shape=record,label="{process_restart.exit.loopexit:                    \l  br label %process_restart.exit\l}"];
	Node0x4fb4f80 -> Node0x4fb47c0;
	Node0x4fb47c0 [shape=record,label="{process_restart.exit:                             \l  %EOBRUN.i = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 2, i32 0\l  store i32 0, i32* %EOBRUN.i, align 8, !tbaa !24\l  %17 = load i32, i32* %restart_interval, align 8, !tbaa !10\l  store i32 %17, i32* %restarts_to_go, align 4, !tbaa !11\l  %printed_eod.i = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 1, i32 2\l  store i32 0, i32* %printed_eod.i, align 4, !tbaa !25\l  %unread_marker.phi.trans.insert = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 72\l  %.pre = load i32, i32* %unread_marker.phi.trans.insert, align 4, !tbaa !26\l  br label %if.end6\l}"];
	Node0x4fb47c0 -> Node0x4fb2de0;
	Node0x4fb2de0 [shape=record,label="{if.end6:                                          \l  %18 = phi i32 [ %.pre, %process_restart.exit ], [ %8, %entry ], [ %8,\l... %if.then ]\l  %cinfo7 = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %br_state, i64 0, i32 5\l  store %struct.jpeg_decompress_struct* %cinfo,\l... %struct.jpeg_decompress_struct** %cinfo7, align 8, !tbaa !27\l  %src = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5\l  %19 = bitcast %struct.jpeg_source_mgr** %src to i64**\l  %20 = load i64*, i64** %19, align 8, !tbaa !29\l  %21 = bitcast i64* %20 to \<2 x i64\>*\l  %22 = load \<2 x i64\>, \<2 x i64\>* %21, align 8, !tbaa !30\l  %23 = bitcast %struct.bitread_working_state* %br_state to \<2 x i64\>*\l  store \<2 x i64\> %22, \<2 x i64\>* %23, align 16, !tbaa !30\l  %unread_marker = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 72\l  %unread_marker11 = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %br_state, i64 0, i32 2\l  store i32 %18, i32* %unread_marker11, align 16, !tbaa !31\l  %get_buffer12 = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 1, i32 0\l  %24 = load i64, i64* %get_buffer12, align 8, !tbaa !32\l  %bits_left14 = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 1, i32 1\l  %25 = load i32, i32* %bits_left14, align 8, !tbaa !17\l  %printed_eod = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 1, i32 2\l  %printed_eod_ptr = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %br_state, i64 0, i32 6\l  store i32* %printed_eod, i32** %printed_eod_ptr, align 16, !tbaa !33\l  %blocks_in_MCU = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 66\l  %26 = load i32, i32* %blocks_in_MCU, align 8, !tbaa !34\l  %cmp1687 = icmp sgt i32 %26, 0\l  br i1 %cmp1687, label %for.body.lr.ph, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x4fb2de0:s0 -> Node0x4fb6230;
	Node0x4fb2de0:s1 -> Node0x4fb4500;
	Node0x4fb6230 [shape=record,label="{for.body.lr.ph:                                   \l  %get_buffer23 = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %br_state, i64 0, i32 3\l  %bits_left24 = getelementptr inbounds %struct.bitread_working_state,\l... %struct.bitread_working_state* %br_state, i64 0, i32 4\l  br label %for.body\l}"];
	Node0x4fb6230 -> Node0x4fb6380;
	Node0x4fb6380 [shape=record,label="{for.body:                                         \l  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]\l  %bits_left.090 = phi i32 [ %25, %for.body.lr.ph ], [ %sub, %for.inc ]\l  %get_buffer.089 = phi i64 [ %24, %for.body.lr.ph ], [ %get_buffer.1,\l... %for.inc ]\l  %arrayidx = getelementptr inbounds [64 x i16]*, [64 x i16]** %MCU_data, i64\l... %indvars.iv\l  %27 = load [64 x i16]*, [64 x i16]** %arrayidx, align 8, !tbaa !35\l  %cmp17 = icmp slt i32 %bits_left.090, 1\l  br i1 %cmp17, label %if.then18, label %if.end25\l|{<s0>T|<s1>F}}"];
	Node0x4fb6380:s0 -> Node0x4fddf60;
	Node0x4fb6380:s1 -> Node0x4fde040;
	Node0x4fddf60 [shape=record,label="{if.then18:                                        \l  %call19 = call i32 @jpeg_fill_bit_buffer(%struct.bitread_working_state*\l... nonnull %br_state, i64 %get_buffer.089, i32 %bits_left.090, i32 1) #3\l  %tobool20 = icmp eq i32 %call19, 0\l  br i1 %tobool20, label %cleanup.loopexit, label %if.end22\l|{<s0>T|<s1>F}}"];
	Node0x4fddf60:s0 -> Node0x4fde410;
	Node0x4fddf60:s1 -> Node0x4fde490;
	Node0x4fde490 [shape=record,label="{if.end22:                                         \l  %28 = load i64, i64* %get_buffer23, align 8, !tbaa !36\l  %29 = load i32, i32* %bits_left24, align 16, !tbaa !37\l  br label %if.end25\l}"];
	Node0x4fde490 -> Node0x4fde040;
	Node0x4fde040 [shape=record,label="{if.end25:                                         \l  %get_buffer.1 = phi i64 [ %28, %if.end22 ], [ %get_buffer.089, %for.body ]\l  %bits_left.1 = phi i32 [ %29, %if.end22 ], [ %bits_left.090, %for.body ]\l  %sub = add nsw i32 %bits_left.1, -1\l  %sh_prom = zext i32 %sub to i64\l  %30 = shl i64 1, %sh_prom\l  %and82 = and i64 %30, %get_buffer.1\l  %tobool26 = icmp eq i64 %and82, 0\l  br i1 %tobool26, label %for.inc, label %if.then27\l|{<s0>T|<s1>F}}"];
	Node0x4fde040:s0 -> Node0x4fb64d0;
	Node0x4fde040:s1 -> Node0x4fdea00;
	Node0x4fdea00 [shape=record,label="{if.then27:                                        \l  %arrayidx28 = getelementptr inbounds [64 x i16], [64 x i16]* %27, i64 0, i64\l... 0\l  %31 = load i16, i16* %arrayidx28, align 2, !tbaa !38\l  %conv2983 = zext i16 %31 to i32\l  %or = or i32 %conv2983, %shl\l  %conv30 = trunc i32 %or to i16\l  store i16 %conv30, i16* %arrayidx28, align 2, !tbaa !38\l  br label %for.inc\l}"];
	Node0x4fdea00 -> Node0x4fb64d0;
	Node0x4fb64d0 [shape=record,label="{for.inc:                                          \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %32 = load i32, i32* %blocks_in_MCU, align 8, !tbaa !34\l  %33 = sext i32 %32 to i64\l  %cmp16 = icmp slt i64 %indvars.iv.next, %33\l  br i1 %cmp16, label %for.body, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x4fb64d0:s0 -> Node0x4fb6380;
	Node0x4fb64d0:s1 -> Node0x4fdf160;
	Node0x4fdf160 [shape=record,label="{for.end.loopexit:                                 \l  %sub.lcssa = phi i32 [ %sub, %for.inc ]\l  %get_buffer.1.lcssa = phi i64 [ %get_buffer.1, %for.inc ]\l  %.pre93 = load i64*, i64** %19, align 8, !tbaa !29\l  %34 = bitcast %struct.bitread_working_state* %br_state to \<2 x i64\>*\l  %35 = load \<2 x i64\>, \<2 x i64\>* %34, align 16, !tbaa !30\l  %.pre95 = load i32, i32* %unread_marker11, align 16, !tbaa !31\l  br label %for.end\l}"];
	Node0x4fdf160 -> Node0x4fb4500;
	Node0x4fb4500 [shape=record,label="{for.end:                                          \l  %36 = phi i32 [ %18, %if.end6 ], [ %.pre95, %for.end.loopexit ]\l  %.in = phi i64* [ %20, %if.end6 ], [ %.pre93, %for.end.loopexit ]\l  %bits_left.0.lcssa = phi i32 [ %25, %if.end6 ], [ %sub.lcssa,\l... %for.end.loopexit ]\l  %get_buffer.0.lcssa = phi i64 [ %24, %if.end6 ], [ %get_buffer.1.lcssa,\l... %for.end.loopexit ]\l  %37 = phi \<2 x i64\> [ %22, %if.end6 ], [ %35, %for.end.loopexit ]\l  %38 = bitcast i64* %.in to \<2 x i64\>*\l  store \<2 x i64\> %37, \<2 x i64\>* %38, align 8, !tbaa !30\l  store i32 %36, i32* %unread_marker, align 4, !tbaa !26\l  store i64 %get_buffer.0.lcssa, i64* %get_buffer12, align 8, !tbaa !32\l  store i32 %bits_left.0.lcssa, i32* %bits_left14, align 8, !tbaa !17\l  %restarts_to_go44 = getelementptr inbounds %struct.phuff_entropy_decoder,\l... %struct.phuff_entropy_decoder* %1, i64 0, i32 3\l  %39 = load i32, i32* %restarts_to_go44, align 4, !tbaa !11\l  %dec = add i32 %39, -1\l  store i32 %dec, i32* %restarts_to_go44, align 4, !tbaa !11\l  br label %cleanup\l}"];
	Node0x4fb4500 -> Node0x4fb4170;
	Node0x4fde410 [shape=record,label="{cleanup.loopexit:                                 \l  br label %cleanup\l}"];
	Node0x4fde410 -> Node0x4fb4170;
	Node0x4fb4170 [shape=record,label="{cleanup:                                          \l  %retval.0 = phi i32 [ 1, %for.end ], [ 0, %if.then2 ], [ 0,\l... %cleanup.loopexit ]\l  call void @llvm.lifetime.end(i64 56, i8* %5) #3\l  ret i32 %retval.0\l}"];
}
