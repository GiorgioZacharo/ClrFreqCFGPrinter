digraph "CFG for 'decompress_onepass' function" {
	label="CFG for 'decompress_onepass' function";

	Node0x585d2a0 [shape=record,label="{entry:\l  %coef1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 75\l  %0 = bitcast %struct.jpeg_d_coef_controller** %coef1 to\l... %struct.my_coef_controller**\l  %1 = load %struct.my_coef_controller*, %struct.my_coef_controller** %0,\l... align 8, !tbaa !2\l  %MCUs_per_row = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 64\l  %2 = load i32, i32* %MCUs_per_row, align 8, !tbaa !10\l  %sub = add i32 %2, -1\l  %total_iMCU_rows = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 60\l  %3 = load i32, i32* %total_iMCU_rows, align 8, !tbaa !11\l  %sub2 = add i32 %3, -1\l  %MCU_vert_offset = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 2\l  %4 = load i32, i32* %MCU_vert_offset, align 4, !tbaa !12\l  %MCU_rows_per_iMCU_row = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 3\l  %5 = load i32, i32* %MCU_rows_per_iMCU_row, align 8, !tbaa !15\l  %cmp169 = icmp slt i32 %4, %5\l  br i1 %cmp169, label %for.body.lr.ph, label %entry.for.end64_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x585d2a0:s0 -> Node0x5877800;
	Node0x585d2a0:s1 -> Node0x58778e0;
	Node0x58778e0 [shape=record,label="{entry.for.end64_crit_edge:                        \l  %.pre183 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 35\l  br label %for.end64\l}"];
	Node0x58778e0 -> Node0x5877c00;
	Node0x5877800 [shape=record,label="{for.body.lr.ph:                                   \l  %MCU_ctr = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 1\l  %MCU_buffer = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 4\l  %6 = bitcast [10 x [64 x i16]*]* %MCU_buffer to i8**\l  %blocks_in_MCU = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 66\l  %entropy = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 79\l  %arraydecay = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]*\l... %MCU_buffer, i64 0, i64 0\l  %comps_in_scan = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 62\l  %idct = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 80\l  %input_iMCU_row = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 35\l  %.pre = load i32, i32* %MCU_ctr, align 8, !tbaa !16\l  br label %for.body\l}"];
	Node0x5877800 -> Node0x5878300;
	Node0x5878300 [shape=record,label="{for.body:                                         \l  %7 = phi i32 [ %5, %for.body.lr.ph ], [ %69, %for.end60 ]\l  %8 = phi i32 [ %.pre, %for.body.lr.ph ], [ 0, %for.end60 ]\l  %yoffset.0170 = phi i32 [ %4, %for.body.lr.ph ], [ %inc63, %for.end60 ]\l  %cmp4166 = icmp ugt i32 %8, %sub\l  br i1 %cmp4166, label %for.end60, label %for.body5.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5878300:s0 -> Node0x5877a30;
	Node0x5878300:s1 -> Node0x5878a90;
	Node0x5878a90 [shape=record,label="{for.body5.preheader:                              \l  br label %for.body5\l}"];
	Node0x5878a90 -> Node0x5878c20;
	Node0x5878c20 [shape=record,label="{for.body5:                                        \l  %MCU_col_num.0167 = phi i32 [ %inc59, %for.inc58 ], [ %8,\l... %for.body5.preheader ]\l  %9 = load i8*, i8** %6, align 8, !tbaa !17\l  %10 = load i32, i32* %blocks_in_MCU, align 8, !tbaa !18\l  %conv = sext i32 %10 to i64\l  %mul = shl nsw i64 %conv, 7\l  tail call void @jzero_far(i8* %9, i64 %mul) #5\l  %11 = load %struct.jpeg_entropy_decoder*, %struct.jpeg_entropy_decoder**\l... %entropy, align 8, !tbaa !19\l  %decode_mcu = getelementptr inbounds %struct.jpeg_entropy_decoder,\l... %struct.jpeg_entropy_decoder* %11, i64 0, i32 1\l  %12 = load i32 (%struct.jpeg_decompress_struct*, [64 x i16]**)*, i32\l... (%struct.jpeg_decompress_struct*, [64 x i16]**)** %decode_mcu, align 8, !tbaa\l... !20\l  %call = tail call i32 %12(%struct.jpeg_decompress_struct* %cinfo, [64 x\l... i16]** %arraydecay) #5\l  %tobool = icmp eq i32 %call, 0\l  br i1 %tobool, label %if.then, label %for.cond9.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5878c20:s0 -> Node0x587a410;
	Node0x5878c20:s1 -> Node0x587a510;
	Node0x587a510 [shape=record,label="{for.cond9.preheader:                              \l  %13 = load i32, i32* %comps_in_scan, align 8, !tbaa !22\l  %cmp10163 = icmp sgt i32 %13, 0\l  br i1 %cmp10163, label %for.body12.lr.ph, label %for.inc58\l|{<s0>T|<s1>F}}"];
	Node0x587a510:s0 -> Node0x587a750;
	Node0x587a510:s1 -> Node0x5878d40;
	Node0x587a750 [shape=record,label="{for.body12.lr.ph:                                 \l  %cmp20 = icmp ult i32 %MCU_col_num.0167, %sub\l  br label %for.body12\l}"];
	Node0x587a750 -> Node0x587a940;
	Node0x587a410 [shape=record,label="{if.then:                                          \l  %yoffset.0170.lcssa = phi i32 [ %yoffset.0170, %for.body5 ]\l  %MCU_col_num.0167.lcssa = phi i32 [ %MCU_col_num.0167, %for.body5 ]\l  store i32 %yoffset.0170.lcssa, i32* %MCU_vert_offset, align 4, !tbaa !12\l  store i32 %MCU_col_num.0167.lcssa, i32* %MCU_ctr, align 8, !tbaa !16\l  br label %cleanup\l}"];
	Node0x587a410 -> Node0x587ac40;
	Node0x587a940 [shape=record,label="{for.body12:                                       \l  %14 = phi i32 [ %13, %for.body12.lr.ph ], [ %67, %for.inc55 ]\l  %indvars.iv176 = phi i64 [ 0, %for.body12.lr.ph ], [ %indvars.iv.next177,\l... %for.inc55 ]\l  %blkn.0165 = phi i32 [ 0, %for.body12.lr.ph ], [ %blkn.2, %for.inc55 ]\l  %arrayidx13 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 63, i64 %indvars.iv176\l  %15 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx13, align 8, !tbaa !17\l  %component_needed = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %15, i64 0, i32 12\l  %16 = bitcast i32* %component_needed to i64*\l  %17 = load i64, i64* %16, align 8\l  %18 = trunc i64 %17 to i32\l  %tobool14 = icmp eq i32 %18, 0\l  %19 = lshr i64 %17, 32\l  %20 = trunc i64 %19 to i32\l  br i1 %tobool14, label %if.then15, label %if.end16\l|{<s0>T|<s1>F}}"];
	Node0x587a940:s0 -> Node0x587bb20;
	Node0x587a940:s1 -> Node0x587bbd0;
	Node0x587bb20 [shape=record,label="{if.then15:                                        \l  %MCU_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %15, i64 0, i32 15\l  %21 = load i32, i32* %MCU_blocks, align 4, !tbaa !23\l  %add = add nsw i32 %21, %blkn.0165\l  br label %for.inc55\l}"];
	Node0x587bb20 -> Node0x587adf0;
	Node0x587bbd0 [shape=record,label="{if.end16:                                         \l  %component_index = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %15, i64 0, i32 1\l  %22 = load i32, i32* %component_index, align 4, !tbaa !25\l  %idxprom17 = sext i32 %22 to i64\l  %23 = load %struct.jpeg_inverse_dct*, %struct.jpeg_inverse_dct** %idct,\l... align 8, !tbaa !26\l  %arrayidx19 = getelementptr inbounds %struct.jpeg_inverse_dct,\l... %struct.jpeg_inverse_dct* %23, i64 0, i32 1, i64 %idxprom17\l  %24 = load void (%struct.jpeg_decompress_struct*,\l... %struct.jpeg_component_info*, i16*, i8**, i32)*, void\l... (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i16*, i8**,\l... i32)** %arrayidx19, align 8, !tbaa !17\l  %MCU_width = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %15, i64 0, i32 13\l  %last_col_width = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %15, i64 0, i32 17\l  %cond.in = select i1 %cmp20, i32* %MCU_width, i32* %last_col_width\l  %cond = load i32, i32* %cond.in, align 4, !tbaa !27\l  %DCT_scaled_size = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %15, i64 0, i32 9\l  %MCU_sample_width = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %15, i64 0, i32 16\l  %25 = load i32, i32* %MCU_sample_width, align 8, !tbaa !28\l  %mul25 = mul i32 %25, %MCU_col_num.0167\l  %MCU_height = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %15, i64 0, i32 14\l  %26 = load i32, i32* %MCU_height, align 8, !tbaa !29\l  %cmp27159 = icmp sgt i32 %26, 0\l  br i1 %cmp27159, label %for.body29.lr.ph, label %for.inc55\l|{<s0>T|<s1>F}}"];
	Node0x587bbd0:s0 -> Node0x587dec0;
	Node0x587bbd0:s1 -> Node0x587adf0;
	Node0x587dec0 [shape=record,label="{for.body29.lr.ph:                                 \l  %27 = load i32, i32* %DCT_scaled_size, align 4, !tbaa !30\l  %last_row_height = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %15, i64 0, i32 18\l  %cmp37156 = icmp sgt i32 %cond, 0\l  br i1 %cmp37156, label %for.body29.us.preheader, label %for.body29.preheader\l|{<s0>T|<s1>F}}"];
	Node0x587dec0:s0 -> Node0x587e1d0;
	Node0x587dec0:s1 -> Node0x587e2b0;
	Node0x587e2b0 [shape=record,label="{for.body29.preheader:                             \l  %min.iters.check = icmp ult i32 %26, 8\l  br i1 %min.iters.check, label %for.body29.preheader199, label\l... %min.iters.checked\l|{<s0>T|<s1>F}}"];
	Node0x587e2b0:s0 -> Node0x587e4f0;
	Node0x587e2b0:s1 -> Node0x587e570;
	Node0x587e4f0 [shape=record,label="{for.body29.preheader199:                          \l  %blkn.1162.ph = phi i32 [ %blkn.0165, %min.iters.checked ], [ %blkn.0165,\l... %for.body29.preheader ], [ %52, %middle.block ]\l  %yindex.0160.ph = phi i32 [ 0, %min.iters.checked ], [ 0,\l... %for.body29.preheader ], [ %n.vec, %middle.block ]\l  br label %for.body29\l}"];
	Node0x587e4f0 -> Node0x587ea70;
	Node0x587e570 [shape=record,label="{min.iters.checked:                                \l  %n.vec = and i32 %26, -8\l  %cmp.zero = icmp eq i32 %n.vec, 0\l  br i1 %cmp.zero, label %for.body29.preheader199, label %vector.ph\l|{<s0>T|<s1>F}}"];
	Node0x587e570:s0 -> Node0x587e4f0;
	Node0x587e570:s1 -> Node0x587ed50;
	Node0x587ed50 [shape=record,label="{vector.ph:                                        \l  %28 = insertelement \<4 x i32\> \<i32 undef, i32 0, i32 0, i32 0\>, i32\l... %blkn.0165, i32 0\l  %broadcast.splatinsert192 = insertelement \<4 x i32\> undef, i32 %20, i32 0\l  %broadcast.splat193 = shufflevector \<4 x i32\> %broadcast.splatinsert192, \<4\l... x i32\> undef, \<4 x i32\> zeroinitializer\l  %29 = add i32 %26, -8\l  %30 = lshr i32 %29, 3\l  %31 = add nuw nsw i32 %30, 1\l  %xtraiter = and i32 %31, 7\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %vector.ph.split, label %vector.body.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x587ed50:s0 -> Node0x587fb80;
	Node0x587ed50:s1 -> Node0x587fc90;
	Node0x587fc90 [shape=record,label="{vector.body.prol.preheader:                       \l  br label %vector.body.prol\l}"];
	Node0x587fc90 -> Node0x587fe40;
	Node0x587fe40 [shape=record,label="{vector.body.prol:                                 \l  %index.prol = phi i32 [ %index.next.prol, %vector.body.prol ], [ 0,\l... %vector.body.prol.preheader ]\l  %vec.phi.prol = phi \<4 x i32\> [ %32, %vector.body.prol ], [ %28,\l... %vector.body.prol.preheader ]\l  %vec.phi190.prol = phi \<4 x i32\> [ %33, %vector.body.prol ], [\l... zeroinitializer, %vector.body.prol.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %vector.body.prol ], [ %xtraiter,\l... %vector.body.prol.preheader ]\l  %32 = add nsw \<4 x i32\> %broadcast.splat193, %vec.phi.prol\l  %33 = add nsw \<4 x i32\> %broadcast.splat193, %vec.phi190.prol\l  %index.next.prol = add i32 %index.prol, 8\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %vector.ph.split.loopexit, label\l... %vector.body.prol, !llvm.loop !31\l|{<s0>T|<s1>F}}"];
	Node0x587fe40:s0 -> Node0x5880340;
	Node0x587fe40:s1 -> Node0x587fe40;
	Node0x5880340 [shape=record,label="{vector.ph.split.loopexit:                         \l  %index.next.prol.lcssa = phi i32 [ %index.next.prol, %vector.body.prol ]\l  %.lcssa209 = phi \<4 x i32\> [ %33, %vector.body.prol ]\l  %.lcssa208 = phi \<4 x i32\> [ %32, %vector.body.prol ]\l  br label %vector.ph.split\l}"];
	Node0x5880340 -> Node0x587fb80;
	Node0x587fb80 [shape=record,label="{vector.ph.split:                                  \l  %.lcssa201.unr = phi \<4 x i32\> [ undef, %vector.ph ], [ %.lcssa209,\l... %vector.ph.split.loopexit ]\l  %.lcssa.unr = phi \<4 x i32\> [ undef, %vector.ph ], [ %.lcssa208,\l... %vector.ph.split.loopexit ]\l  %index.unr = phi i32 [ 0, %vector.ph ], [ %index.next.prol.lcssa,\l... %vector.ph.split.loopexit ]\l  %vec.phi.unr = phi \<4 x i32\> [ %28, %vector.ph ], [ %.lcssa208,\l... %vector.ph.split.loopexit ]\l  %vec.phi190.unr = phi \<4 x i32\> [ zeroinitializer, %vector.ph ], [\l... %.lcssa209, %vector.ph.split.loopexit ]\l  %34 = icmp ult i32 %29, 56\l  br i1 %34, label %middle.block, label %vector.ph.split.split\l|{<s0>T|<s1>F}}"];
	Node0x587fb80:s0 -> Node0x587e780;
	Node0x587fb80:s1 -> Node0x58815c0;
	Node0x58815c0 [shape=record,label="{vector.ph.split.split:                            \l  br label %vector.body\l}"];
	Node0x58815c0 -> Node0x5881750;
	Node0x5881750 [shape=record,label="{vector.body:                                      \l  %index = phi i32 [ %index.unr, %vector.ph.split.split ], [ %index.next.7,\l... %vector.body ]\l  %vec.phi = phi \<4 x i32\> [ %vec.phi.unr, %vector.ph.split.split ], [ %49,\l... %vector.body ]\l  %vec.phi190 = phi \<4 x i32\> [ %vec.phi190.unr, %vector.ph.split.split ], [\l... %50, %vector.body ]\l  %35 = add nsw \<4 x i32\> %broadcast.splat193, %vec.phi\l  %36 = add nsw \<4 x i32\> %broadcast.splat193, %vec.phi190\l  %37 = add nsw \<4 x i32\> %broadcast.splat193, %35\l  %38 = add nsw \<4 x i32\> %broadcast.splat193, %36\l  %39 = add nsw \<4 x i32\> %broadcast.splat193, %37\l  %40 = add nsw \<4 x i32\> %broadcast.splat193, %38\l  %41 = add nsw \<4 x i32\> %broadcast.splat193, %39\l  %42 = add nsw \<4 x i32\> %broadcast.splat193, %40\l  %43 = add nsw \<4 x i32\> %broadcast.splat193, %41\l  %44 = add nsw \<4 x i32\> %broadcast.splat193, %42\l  %45 = add nsw \<4 x i32\> %broadcast.splat193, %43\l  %46 = add nsw \<4 x i32\> %broadcast.splat193, %44\l  %47 = add nsw \<4 x i32\> %broadcast.splat193, %45\l  %48 = add nsw \<4 x i32\> %broadcast.splat193, %46\l  %49 = add nsw \<4 x i32\> %broadcast.splat193, %47\l  %50 = add nsw \<4 x i32\> %broadcast.splat193, %48\l  %index.next.7 = add i32 %index, 64\l  %51 = icmp eq i32 %index.next.7, %n.vec\l  br i1 %51, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !33\l|{<s0>T|<s1>F}}"];
	Node0x5881750:s0 -> Node0x5882500;
	Node0x5881750:s1 -> Node0x5881750;
	Node0x5882500 [shape=record,label="{middle.block.unr-lcssa:                           \l  %.lcssa206 = phi \<4 x i32\> [ %50, %vector.body ]\l  %.lcssa205 = phi \<4 x i32\> [ %49, %vector.body ]\l  br label %middle.block\l}"];
	Node0x5882500 -> Node0x587e780;
	Node0x587e780 [shape=record,label="{middle.block:                                     \l  %.lcssa201 = phi \<4 x i32\> [ %.lcssa201.unr, %vector.ph.split ], [\l... %.lcssa206, %middle.block.unr-lcssa ]\l  %.lcssa = phi \<4 x i32\> [ %.lcssa.unr, %vector.ph.split ], [ %.lcssa205,\l... %middle.block.unr-lcssa ]\l  %bin.rdx = add \<4 x i32\> %.lcssa201, %.lcssa\l  %rdx.shuf = shufflevector \<4 x i32\> %bin.rdx, \<4 x i32\> undef, \<4 x i32\>\l... \<i32 2, i32 3, i32 undef, i32 undef\>\l  %bin.rdx196 = add \<4 x i32\> %bin.rdx, %rdx.shuf\l  %rdx.shuf197 = shufflevector \<4 x i32\> %bin.rdx196, \<4 x i32\> undef, \<4 x\l... i32\> \<i32 1, i32 undef, i32 undef, i32 undef\>\l  %bin.rdx198 = add \<4 x i32\> %bin.rdx196, %rdx.shuf197\l  %52 = extractelement \<4 x i32\> %bin.rdx198, i32 0\l  %cmp.n = icmp eq i32 %26, %n.vec\l  br i1 %cmp.n, label %for.inc55, label %for.body29.preheader199\l|{<s0>T|<s1>F}}"];
	Node0x587e780:s0 -> Node0x587adf0;
	Node0x587e780:s1 -> Node0x587e4f0;
	Node0x587e1d0 [shape=record,label="{for.body29.us.preheader:                          \l  %arrayidx23 = getelementptr inbounds i8**, i8*** %output_buf, i64\l... %indvars.iv176\l  %53 = load i8**, i8*** %arrayidx23, align 8, !tbaa !17\l  %mul24 = mul nsw i32 %27, %yoffset.0170\l  %idx.ext = sext i32 %mul24 to i64\l  %add.ptr = getelementptr inbounds i8*, i8** %53, i64 %idx.ext\l  br label %for.body29.us\l}"];
	Node0x587e1d0 -> Node0x5883250;
	Node0x5883250 [shape=record,label="{for.body29.us:                                    \l  %54 = phi i32 [ %60, %if.end46.us ], [ %26, %for.body29.us.preheader ]\l  %55 = phi i32 [ %61, %if.end46.us ], [ %27, %for.body29.us.preheader ]\l  %56 = phi i32 [ %62, %if.end46.us ], [ %20, %for.body29.us.preheader ]\l  %blkn.1162.us = phi i32 [ %add48.us, %if.end46.us ], [ %blkn.0165,\l... %for.body29.us.preheader ]\l  %output_ptr.0161.us = phi i8** [ %add.ptr51.us, %if.end46.us ], [ %add.ptr,\l... %for.body29.us.preheader ]\l  %yindex.0160.us = phi i32 [ %inc53.us, %if.end46.us ], [ 0,\l... %for.body29.us.preheader ]\l  %57 = load i32, i32* %input_iMCU_row, align 8, !tbaa !36\l  %cmp30.us = icmp ult i32 %57, %sub2\l  br i1 %cmp30.us, label %for.body39.us.preheader, label %lor.lhs.false.us\l|{<s0>T|<s1>F}}"];
	Node0x5883250:s0 -> Node0x5883cb0;
	Node0x5883250:s1 -> Node0x5883db0;
	Node0x5883db0 [shape=record,label="{lor.lhs.false.us:                                 \l  %add32.us = add nsw i32 %yindex.0160.us, %yoffset.0170\l  %58 = load i32, i32* %last_row_height, align 8, !tbaa !37\l  %cmp33.us = icmp slt i32 %add32.us, %58\l  br i1 %cmp33.us, label %for.body39.us.preheader, label %if.end46.us\l|{<s0>T|<s1>F}}"];
	Node0x5883db0:s0 -> Node0x5883cb0;
	Node0x5883db0:s1 -> Node0x5883390;
	Node0x5883cb0 [shape=record,label="{for.body39.us.preheader:                          \l  %59 = sext i32 %blkn.1162.us to i64\l  br label %for.body39.us\l}"];
	Node0x5883cb0 -> Node0x5884130;
	Node0x5884240 [shape=record,label="{if.end46.us.loopexit:                             \l  %.lcssa207 = phi i32 [ %66, %for.body39.us ]\l  %.pre178 = load i32, i32* %MCU_width, align 4, !tbaa !38\l  %.pre179 = load i32, i32* %MCU_height, align 8, !tbaa !29\l  br label %if.end46.us\l}"];
	Node0x5884240 -> Node0x5883390;
	Node0x5883390 [shape=record,label="{if.end46.us:                                      \l  %60 = phi i32 [ %.pre179, %if.end46.us.loopexit ], [ %54, %lor.lhs.false.us ]\l  %61 = phi i32 [ %.lcssa207, %if.end46.us.loopexit ], [ %55,\l... %lor.lhs.false.us ]\l  %62 = phi i32 [ %.pre178, %if.end46.us.loopexit ], [ %56, %lor.lhs.false.us ]\l  %add48.us = add nsw i32 %62, %blkn.1162.us\l  %idx.ext50.us = sext i32 %61 to i64\l  %add.ptr51.us = getelementptr inbounds i8*, i8** %output_ptr.0161.us, i64\l... %idx.ext50.us\l  %inc53.us = add nuw nsw i32 %yindex.0160.us, 1\l  %cmp27.us = icmp slt i32 %inc53.us, %60\l  br i1 %cmp27.us, label %for.body29.us, label %for.inc55.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5883390:s0 -> Node0x5883250;
	Node0x5883390:s1 -> Node0x5884a70;
	Node0x5884130 [shape=record,label="{for.body39.us:                                    \l  %indvars.iv = phi i64 [ 0, %for.body39.us.preheader ], [ %indvars.iv.next,\l... %for.body39.us ]\l  %output_col.0158.us = phi i32 [ %mul25, %for.body39.us.preheader ], [\l... %add45.us, %for.body39.us ]\l  %63 = add nsw i64 %indvars.iv, %59\l  %arrayidx43.us = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %1, i64 0, i32 4, i64 %63\l  %64 = bitcast [64 x i16]** %arrayidx43.us to i16**\l  %65 = load i16*, i16** %64, align 8, !tbaa !17\l  tail call void %24(%struct.jpeg_decompress_struct* %cinfo,\l... %struct.jpeg_component_info* nonnull %15, i16* %65, i8** %output_ptr.0161.us,\l... i32 %output_col.0158.us) #5\l  %66 = load i32, i32* %DCT_scaled_size, align 4, !tbaa !30\l  %add45.us = add i32 %66, %output_col.0158.us\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %lftr.wideiv = trunc i64 %indvars.iv.next to i32\l  %exitcond = icmp eq i32 %lftr.wideiv, %cond\l  br i1 %exitcond, label %if.end46.us.loopexit, label %for.body39.us\l|{<s0>T|<s1>F}}"];
	Node0x5884130:s0 -> Node0x5884240;
	Node0x5884130:s1 -> Node0x5884130;
	Node0x587ea70 [shape=record,label="{for.body29:                                       \l  %blkn.1162 = phi i32 [ %add48, %for.body29 ], [ %blkn.1162.ph,\l... %for.body29.preheader199 ]\l  %yindex.0160 = phi i32 [ %inc53, %for.body29 ], [ %yindex.0160.ph,\l... %for.body29.preheader199 ]\l  %add48 = add nsw i32 %20, %blkn.1162\l  %inc53 = add nuw nsw i32 %yindex.0160, 1\l  %cmp27 = icmp slt i32 %inc53, %26\l  br i1 %cmp27, label %for.body29, label %for.inc55.loopexit200, !llvm.loop !39\l|{<s0>T|<s1>F}}"];
	Node0x587ea70:s0 -> Node0x587ea70;
	Node0x587ea70:s1 -> Node0x5885890;
	Node0x5884a70 [shape=record,label="{for.inc55.loopexit:                               \l  %add48.us.lcssa = phi i32 [ %add48.us, %if.end46.us ]\l  %.pre180 = load i32, i32* %comps_in_scan, align 8, !tbaa !22\l  br label %for.inc55\l}"];
	Node0x5884a70 -> Node0x587adf0;
	Node0x5885890 [shape=record,label="{for.inc55.loopexit200:                            \l  %add48.lcssa = phi i32 [ %add48, %for.body29 ]\l  br label %for.inc55\l}"];
	Node0x5885890 -> Node0x587adf0;
	Node0x587adf0 [shape=record,label="{for.inc55:                                        \l  %67 = phi i32 [ %14, %if.then15 ], [ %14, %if.end16 ], [ %.pre180,\l... %for.inc55.loopexit ], [ %14, %middle.block ], [ %14, %for.inc55.loopexit200 ]\l  %blkn.2 = phi i32 [ %add, %if.then15 ], [ %blkn.0165, %if.end16 ], [\l... %add48.us.lcssa, %for.inc55.loopexit ], [ %52, %middle.block ], [\l... %add48.lcssa, %for.inc55.loopexit200 ]\l  %indvars.iv.next177 = add nuw nsw i64 %indvars.iv176, 1\l  %68 = sext i32 %67 to i64\l  %cmp10 = icmp slt i64 %indvars.iv.next177, %68\l  br i1 %cmp10, label %for.body12, label %for.inc58.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x587adf0:s0 -> Node0x587a940;
	Node0x587adf0:s1 -> Node0x5885ee0;
	Node0x5885ee0 [shape=record,label="{for.inc58.loopexit:                               \l  br label %for.inc58\l}"];
	Node0x5885ee0 -> Node0x5878d40;
	Node0x5878d40 [shape=record,label="{for.inc58:                                        \l  %inc59 = add i32 %MCU_col_num.0167, 1\l  %cmp4 = icmp ugt i32 %inc59, %sub\l  br i1 %cmp4, label %for.end60.loopexit, label %for.body5\l|{<s0>T|<s1>F}}"];
	Node0x5878d40:s0 -> Node0x58860f0;
	Node0x5878d40:s1 -> Node0x5878c20;
	Node0x58860f0 [shape=record,label="{for.end60.loopexit:                               \l  %.pre181 = load i32, i32* %MCU_rows_per_iMCU_row, align 8, !tbaa !15\l  br label %for.end60\l}"];
	Node0x58860f0 -> Node0x5877a30;
	Node0x5877a30 [shape=record,label="{for.end60:                                        \l  %69 = phi i32 [ %.pre181, %for.end60.loopexit ], [ %7, %for.body ]\l  store i32 0, i32* %MCU_ctr, align 8, !tbaa !16\l  %inc63 = add nsw i32 %yoffset.0170, 1\l  %cmp = icmp slt i32 %inc63, %69\l  br i1 %cmp, label %for.body, label %for.end64.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5877a30:s0 -> Node0x5878300;
	Node0x5877a30:s1 -> Node0x5886410;
	Node0x5886410 [shape=record,label="{for.end64.loopexit:                               \l  %.pre182 = load i32, i32* %total_iMCU_rows, align 8, !tbaa !11\l  br label %for.end64\l}"];
	Node0x5886410 -> Node0x5877c00;
	Node0x5877c00 [shape=record,label="{for.end64:                                        \l  %input_iMCU_row66.pre-phi = phi i32* [ %.pre183, %entry.for.end64_crit_edge\l... ], [ %input_iMCU_row, %for.end64.loopexit ]\l  %70 = phi i32 [ %3, %entry.for.end64_crit_edge ], [ %.pre182,\l... %for.end64.loopexit ]\l  %output_iMCU_row = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 37\l  %71 = load i32, i32* %output_iMCU_row, align 8, !tbaa !41\l  %inc65 = add i32 %71, 1\l  store i32 %inc65, i32* %output_iMCU_row, align 8, !tbaa !41\l  %72 = load i32, i32* %input_iMCU_row66.pre-phi, align 8, !tbaa !36\l  %inc67 = add i32 %72, 1\l  store i32 %inc67, i32* %input_iMCU_row66.pre-phi, align 8, !tbaa !36\l  %cmp69 = icmp ult i32 %inc67, %70\l  br i1 %cmp69, label %if.then71, label %if.end72\l|{<s0>T|<s1>F}}"];
	Node0x5877c00:s0 -> Node0x585fff0;
	Node0x5877c00:s1 -> Node0x58600d0;
	Node0x585fff0 [shape=record,label="{if.then71:                                        \l  %73 = load %struct.my_coef_controller*, %struct.my_coef_controller** %0,\l... align 8, !tbaa !2\l  %comps_in_scan.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 62\l  %74 = load i32, i32* %comps_in_scan.i, align 8, !tbaa !22\l  %cmp.i = icmp sgt i32 %74, 1\l  br i1 %cmp.i, label %if.then.i, label %if.else.i\l|{<s0>T|<s1>F}}"];
	Node0x585fff0:s0 -> Node0x58603e0;
	Node0x585fff0:s1 -> Node0x58604c0;
	Node0x58603e0 [shape=record,label="{if.then.i:                                        \l  %MCU_rows_per_iMCU_row.i = getelementptr inbounds\l... %struct.my_coef_controller, %struct.my_coef_controller* %73, i64 0, i32 3\l  store i32 1, i32* %MCU_rows_per_iMCU_row.i, align 8, !tbaa !15\l  br label %start_iMCU_row.exit\l}"];
	Node0x58603e0 -> Node0x58607e0;
	Node0x58604c0 [shape=record,label="{if.else.i:                                        \l  %sub.i = add i32 %70, -1\l  %cmp2.i = icmp ult i32 %inc67, %sub.i\l  %arrayidx.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 63, i64 0\l  %75 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx.i, align 8, !tbaa !17\l  br i1 %cmp2.i, label %if.then3.i, label %if.else5.i\l|{<s0>T|<s1>F}}"];
	Node0x58604c0:s0 -> Node0x5860ae0;
	Node0x58604c0:s1 -> Node0x58808a0;
	Node0x5860ae0 [shape=record,label="{if.then3.i:                                       \l  %v_samp_factor.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %75, i64 0, i32 3\l  %76 = load i32, i32* %v_samp_factor.i, align 4, !tbaa !42\l  %MCU_rows_per_iMCU_row4.i = getelementptr inbounds\l... %struct.my_coef_controller, %struct.my_coef_controller* %73, i64 0, i32 3\l  store i32 %76, i32* %MCU_rows_per_iMCU_row4.i, align 8, !tbaa !15\l  br label %start_iMCU_row.exit\l}"];
	Node0x5860ae0 -> Node0x58607e0;
	Node0x58808a0 [shape=record,label="{if.else5.i:                                       \l  %last_row_height.i = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %75, i64 0, i32 18\l  %77 = load i32, i32* %last_row_height.i, align 8, !tbaa !37\l  %MCU_rows_per_iMCU_row8.i = getelementptr inbounds\l... %struct.my_coef_controller, %struct.my_coef_controller* %73, i64 0, i32 3\l  store i32 %77, i32* %MCU_rows_per_iMCU_row8.i, align 8, !tbaa !15\l  br label %start_iMCU_row.exit\l}"];
	Node0x58808a0 -> Node0x58607e0;
	Node0x58607e0 [shape=record,label="{start_iMCU_row.exit:                              \l  %MCU_ctr.i = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %73, i64 0, i32 1\l  store i32 0, i32* %MCU_ctr.i, align 8, !tbaa !16\l  %MCU_vert_offset.i = getelementptr inbounds %struct.my_coef_controller,\l... %struct.my_coef_controller* %73, i64 0, i32 2\l  store i32 0, i32* %MCU_vert_offset.i, align 4, !tbaa !12\l  br label %cleanup\l}"];
	Node0x58607e0 -> Node0x587ac40;
	Node0x58600d0 [shape=record,label="{if.end72:                                         \l  %inputctl = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 77\l  %78 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller**\l... %inputctl, align 8, !tbaa !43\l  %finish_input_pass = getelementptr inbounds %struct.jpeg_input_controller,\l... %struct.jpeg_input_controller* %78, i64 0, i32 3\l  %79 = load void (%struct.jpeg_decompress_struct*)*, void\l... (%struct.jpeg_decompress_struct*)** %finish_input_pass, align 8, !tbaa !44\l  tail call void %79(%struct.jpeg_decompress_struct* nonnull %cinfo) #5\l  br label %cleanup\l}"];
	Node0x58600d0 -> Node0x587ac40;
	Node0x587ac40 [shape=record,label="{cleanup:                                          \l  %retval.0 = phi i32 [ 0, %if.then ], [ 3, %start_iMCU_row.exit ], [ 4,\l... %if.end72 ]\l  ret i32 %retval.0\l}"];
}
