digraph "CFG for 'access_virt_sarray' function" {
	label="CFG for 'access_virt_sarray' function";

	Node0x57acbc0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %add = add i32 %num_rows, %start_row\l  %rows_in_array = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 1\l  %0 = load i32, i32* %rows_in_array, align 8, !tbaa !3\l  %cmp = icmp ugt i32 %add, %0\l  br i1 %cmp, label %if.then, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x57acbc0:s0 -> Node0x57af0d0;
	Node0x57acbc0:s1 -> Node0x57af180;
	Node0x57af180 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false:                                    \l  %maxaccess = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 3\l  %1 = bitcast i32* %maxaccess to i64*\l  %2 = load i64, i64* %1, align 8\l  %3 = trunc i64 %2 to i32\l  %cmp1 = icmp ult i32 %3, %num_rows\l  br i1 %cmp1, label %if.then, label %lor.lhs.false2\l|{<s0>T|<s1>F}}"];
	Node0x57af180:s0 -> Node0x57af0d0;
	Node0x57af180:s1 -> Node0x57acd60;
	Node0x57acd60 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false2:                                   \l  %mem_buffer = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 0\l  %4 = load i8**, i8*** %mem_buffer, align 8, !tbaa !10\l  %cmp3 = icmp eq i8** %4, null\l  br i1 %cmp3, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x57acd60:s0 -> Node0x57af0d0;
	Node0x57acd60:s1 -> Node0x57af920;
	Node0x57af0d0 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %5 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !11\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %5, i64 0, i32 5\l  store i32 20, i32* %msg_code, align 8, !tbaa !13\l  %6 = bitcast %struct.jpeg_error_mgr* %5 to void\l... (%struct.jpeg_common_struct*)**\l  %7 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %6, align 8, !tbaa !16\l  tail call void %7(%struct.jpeg_common_struct* %cinfo) #5\l  br label %if.end\l}"];
	Node0x57af0d0 -> Node0x57af920;
	Node0x57af920 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %cur_start_row = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 6\l  %8 = load i32, i32* %cur_start_row, align 4, !tbaa !17\l  %cmp6 = icmp ugt i32 %8, %start_row\l  br i1 %cmp6, label %if.then11, label %lor.lhs.false7\l|{<s0>T|<s1>F}}"];
	Node0x57af920:s0 -> Node0x57af850;
	Node0x57af920:s1 -> Node0x57b0760;
	Node0x57b0760 [shape=record, style = filled, fillcolor = blue, label="{lor.lhs.false7:                                   \l  %rows_in_mem = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 4\l  %9 = load i32, i32* %rows_in_mem, align 4, !tbaa !18\l  %add9 = add i32 %9, %8\l  %cmp10 = icmp ugt i32 %add, %add9\l  br i1 %cmp10, label %if.then11, label %if.end36\l|{<s0>T|<s1>F}}"];
	Node0x57b0760:s0 -> Node0x57af850;
	Node0x57b0760:s1 -> Node0x57af5f0;
	Node0x57af850 [shape=record, style = filled, fillcolor = blue, label="{if.then11:                                        \l  %b_s_open = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 10\l  %10 = load i32, i32* %b_s_open, align 4, !tbaa !19\l  %tobool = icmp eq i32 %10, 0\l  br i1 %tobool, label %if.then12, label %if.end18\l|{<s0>T|<s1>F}}"];
	Node0x57af850:s0 -> Node0x57b0f40;
	Node0x57af850:s1 -> Node0x57b1020;
	Node0x57b0f40 [shape=record, style = filled, fillcolor = blue, label="{if.then12:                                        \l  %err13 = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err13, align\l... 8, !tbaa !11\l  %msg_code14 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 5\l  store i32 68, i32* %msg_code14, align 8, !tbaa !13\l  %12 = bitcast %struct.jpeg_error_mgr* %11 to void\l... (%struct.jpeg_common_struct*)**\l  %13 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %12, align 8, !tbaa !16\l  tail call void %13(%struct.jpeg_common_struct* %cinfo) #5\l  br label %if.end18\l}"];
	Node0x57b0f40 -> Node0x57b1020;
	Node0x57b1020 [shape=record, style = filled, fillcolor = blue, label="{if.end18:                                         \l  %dirty = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 9\l  %14 = load i32, i32* %dirty, align 8, !tbaa !20\l  %tobool19 = icmp eq i32 %14, 0\l  br i1 %tobool19, label %if.end22, label %if.then20\l|{<s0>T|<s1>F}}"];
	Node0x57b1020:s0 -> Node0x57b1d80;
	Node0x57b1020:s1 -> Node0x57b1e60;
	Node0x57b1e60 [shape=record, style = filled, fillcolor = blue, label="{if.then20:                                        \l  %samplesperrow.i = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 2\l  %15 = load i32, i32* %samplesperrow.i, align 4, !tbaa !21\l  %conv.i = zext i32 %15 to i64\l  %rows_in_mem.i = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 4\l  %16 = load i32, i32* %rows_in_mem.i, align 4, !tbaa !18\l  %cmp96.i = icmp eq i32 %16, 0\l  br i1 %cmp96.i, label %do_sarray_io.exit, label %for.body.lr.ph.i\l|{<s0>T|<s1>F}}"];
	Node0x57b1e60:s0 -> Node0x57b23b0;
	Node0x57b1e60:s1 -> Node0x57b24b0;
	Node0x57b24b0 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph.i:                                 \l  %conv395.i = zext i32 %16 to i64\l  %17 = load i32, i32* %cur_start_row, align 4, !tbaa !17\l  %conv1.i = zext i32 %17 to i64\l  %mul2.i = mul nuw nsw i64 %conv1.i, %conv.i\l  %rowsperchunk.i = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 5\l  %first_undef_row.i = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 7\l  %b_s_info.i = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 12\l  %mem_buffer46.i = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 0\l  %write_backing_store.i = getelementptr inbounds\l... %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %ptr, i64 0, i32\l... 12, i32 1\l  %18 = bitcast i32* %rowsperchunk.i to i64*\l  %.pre101.i = load i64, i64* %18, align 8\l  br label %for.body.i\l}"];
	Node0x57b24b0 -> Node0x57b0cf0;
	Node0x57b0cf0 [shape=record, style = filled, fillcolor = blue, label="{for.body.i:                                       \l  %.in.in.i = phi i64 [ %24, %if.end.i ], [ %.pre101.i, %for.body.lr.ph.i ]\l  %conv399.i = phi i64 [ %conv3.i, %if.end.i ], [ %conv395.i,\l... %for.body.lr.ph.i ]\l  %i.098.i = phi i64 [ %add52.i, %if.end.i ], [ 0, %for.body.lr.ph.i ]\l  %file_offset.097.i = phi i64 [ %add49.i, %if.end.i ], [ %mul2.i,\l... %for.body.lr.ph.i ]\l  %.in.i = lshr i64 %.in.in.i, 32\l  %conv5.i = and i64 %.in.in.i, 4294967295\l  %sub.i = sub nsw i64 %conv399.i, %i.098.i\l  %cmp8.i = icmp slt i64 %conv5.i, %sub.i\l  %conv5.sub.i = select i1 %cmp8.i, i64 %conv5.i, i64 %sub.i\l  %add.i = add nsw i64 %i.098.i, %.in.i\l  %19 = load i32, i32* %first_undef_row.i, align 8, !tbaa !22\l  %conv17.i = zext i32 %19 to i64\l  %sub18.i = sub nsw i64 %conv17.i, %add.i\l  %cmp19.i = icmp slt i64 %conv5.sub.i, %sub18.i\l  %cond27.i = select i1 %cmp19.i, i64 %conv5.sub.i, i64 %sub18.i\l  %20 = load i32, i32* %rows_in_array, align 8, !tbaa !3\l  %conv28.i = zext i32 %20 to i64\l  %sub29.i = sub nsw i64 %conv28.i, %add.i\l  %cmp30.i = icmp slt i64 %cond27.i, %sub29.i\l  %cond27.sub29.i = select i1 %cmp30.i, i64 %cond27.i, i64 %sub29.i\l  %cmp39.i = icmp slt i64 %cond27.sub29.i, 1\l  br i1 %cmp39.i, label %do_sarray_io.exit.loopexit, label %if.end.i\l|{<s0>T|<s1>F}}"];
	Node0x57b0cf0:s0 -> Node0x57b4880;
	Node0x57b0cf0:s1 -> Node0x57b3200;
	Node0x57b3200 [shape=record, style = filled, fillcolor = blue, label="{if.end.i:                                         \l  %mul41.i = mul nsw i64 %cond27.sub29.i, %conv.i\l  %21 = load void (%struct.jpeg_common_struct*, %struct.backing_store_struct*,\l... i8*, i64, i64)*, void (%struct.jpeg_common_struct*,\l... %struct.backing_store_struct*, i8*, i64, i64)** %write_backing_store.i, align\l... 8, !tbaa !23\l  %22 = load i8**, i8*** %mem_buffer46.i, align 8, !tbaa !10\l  %arrayidx.i = getelementptr inbounds i8*, i8** %22, i64 %i.098.i\l  %23 = load i8*, i8** %arrayidx.i, align 8, !tbaa !24\l  tail call void %21(%struct.jpeg_common_struct* %cinfo,\l... %struct.backing_store_struct* nonnull %b_s_info.i, i8* %23, i64\l... %file_offset.097.i, i64 %mul41.i) #5\l  %add49.i = add nsw i64 %mul41.i, %file_offset.097.i\l  %24 = load i64, i64* %18, align 8\l  %conv51.i = and i64 %24, 4294967295\l  %add52.i = add nsw i64 %conv51.i, %i.098.i\l  %25 = load i32, i32* %rows_in_mem.i, align 4, !tbaa !18\l  %conv3.i = zext i32 %25 to i64\l  %cmp.i = icmp sgt i64 %conv3.i, %add52.i\l  br i1 %cmp.i, label %for.body.i, label %do_sarray_io.exit.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x57b3200:s0 -> Node0x57b0cf0;
	Node0x57b3200:s1 -> Node0x57b4880;
	Node0x57b4880 [shape=record, style = filled, fillcolor = blue, label="{do_sarray_io.exit.loopexit:                       \l  br label %do_sarray_io.exit\l}"];
	Node0x57b4880 -> Node0x57b23b0;
	Node0x57b23b0 [shape=record, style = filled, fillcolor = blue, label="{do_sarray_io.exit:                                \l  store i32 0, i32* %dirty, align 8, !tbaa !20\l  br label %if.end22\l}"];
	Node0x57b23b0 -> Node0x57b1d80;
	Node0x57b1d80 [shape=record, style = filled, fillcolor = blue, label="{if.end22:                                         \l  %26 = load i32, i32* %cur_start_row, align 4, !tbaa !17\l  %cmp24 = icmp ult i32 %26, %start_row\l  br i1 %cmp24, label %if.end22.if.end35_crit_edge, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x57b1d80:s0 -> Node0x57b5310;
	Node0x57b1d80:s1 -> Node0x57b5360;
	Node0x57b5310 [shape=record, style = filled, fillcolor = blue, label="{if.end22.if.end35_crit_edge:                      \l  %rows_in_mem.i155.phi.trans.insert = getelementptr inbounds\l... %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %ptr, i64 0, i32 4\l  %.pre = load i32, i32* %rows_in_mem.i155.phi.trans.insert, align 4, !tbaa !18\l  br label %if.end35\l}"];
	Node0x57b5310 -> Node0x57b5590;
	Node0x57b5360 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %conv = zext i32 %add to i64\l  %rows_in_mem27 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 4\l  %27 = load i32, i32* %rows_in_mem27, align 4, !tbaa !18\l  %conv28 = zext i32 %27 to i64\l  %sub = sub nsw i64 %conv, %conv28\l  %cmp29 = icmp slt i64 %sub, 0\l  %.sub = select i1 %cmp29, i64 0, i64 %sub\l  %conv33 = trunc i64 %.sub to i32\l  br label %if.end35\l}"];
	Node0x57b5360 -> Node0x57b5590;
	Node0x57b5590 [shape=record, style = filled, fillcolor = blue, label="{if.end35:                                         \l  %rows_in_mem.i155.pre-phi = phi i32* [ %rows_in_mem.i155.phi.trans.insert,\l... %if.end22.if.end35_crit_edge ], [ %rows_in_mem27, %if.else ]\l  %28 = phi i32 [ %.pre, %if.end22.if.end35_crit_edge ], [ %27, %if.else ]\l  %storemerge = phi i32 [ %start_row, %if.end22.if.end35_crit_edge ], [\l... %conv33, %if.else ]\l  store i32 %storemerge, i32* %cur_start_row, align 4, !tbaa !17\l  %samplesperrow.i150 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 2\l  %29 = load i32, i32* %samplesperrow.i150, align 4, !tbaa !21\l  %conv.i151 = zext i32 %29 to i64\l  %cmp96.i157 = icmp eq i32 %28, 0\l  br i1 %cmp96.i157, label %if.end36, label %for.body.lr.ph.i166\l|{<s0>T|<s1>F}}"];
	Node0x57b5590:s0 -> Node0x57af5f0;
	Node0x57b5590:s1 -> Node0x57b2c40;
	Node0x57b2c40 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph.i166:                              \l  %conv395.i156 = zext i32 %28 to i64\l  %conv1.i153 = zext i32 %storemerge to i64\l  %mul2.i154 = mul nuw nsw i64 %conv.i151, %conv1.i153\l  %rowsperchunk.i158 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 5\l  %first_undef_row.i159 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 7\l  %b_s_info.i161 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 12\l  %read_backing_store.i162 = getelementptr inbounds\l... %struct.backing_store_struct, %struct.backing_store_struct* %b_s_info.i161,\l... i64 0, i32 0\l  %mem_buffer46.i163 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 0\l  %30 = bitcast i32* %rowsperchunk.i158 to i64*\l  %.pre101.i165 = load i64, i64* %30, align 8\l  br label %for.body.us.i\l}"];
	Node0x57b2c40 -> Node0x57b6e00;
	Node0x57b6e00 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.i:                                    \l  %.in102.in.i = phi i64 [ %36, %if.end.us.i ], [ %.pre101.i165,\l... %for.body.lr.ph.i166 ]\l  %conv399.us.i = phi i64 [ %conv3.us.i, %if.end.us.i ], [ %conv395.i156,\l... %for.body.lr.ph.i166 ]\l  %i.098.us.i = phi i64 [ %add52.us.i, %if.end.us.i ], [ 0,\l... %for.body.lr.ph.i166 ]\l  %file_offset.097.us.i = phi i64 [ %add49.us.i, %if.end.us.i ], [ %mul2.i154,\l... %for.body.lr.ph.i166 ]\l  %.in102.i = lshr i64 %.in102.in.i, 32\l  %conv5.us.i = and i64 %.in102.in.i, 4294967295\l  %sub.us.i = sub nsw i64 %conv399.us.i, %i.098.us.i\l  %cmp8.us.i = icmp slt i64 %conv5.us.i, %sub.us.i\l  %conv5.sub.us.i = select i1 %cmp8.us.i, i64 %conv5.us.i, i64 %sub.us.i\l  %add.us.i = add nsw i64 %i.098.us.i, %.in102.i\l  %31 = load i32, i32* %first_undef_row.i159, align 8, !tbaa !22\l  %conv17.us.i = zext i32 %31 to i64\l  %sub18.us.i = sub nsw i64 %conv17.us.i, %add.us.i\l  %cmp19.us.i = icmp slt i64 %conv5.sub.us.i, %sub18.us.i\l  %cond27.us.i = select i1 %cmp19.us.i, i64 %conv5.sub.us.i, i64 %sub18.us.i\l  %32 = load i32, i32* %rows_in_array, align 8, !tbaa !3\l  %conv28.us.i = zext i32 %32 to i64\l  %sub29.us.i = sub nsw i64 %conv28.us.i, %add.us.i\l  %cmp30.us.i = icmp slt i64 %cond27.us.i, %sub29.us.i\l  %cond27.sub29.us.i = select i1 %cmp30.us.i, i64 %cond27.us.i, i64 %sub29.us.i\l  %cmp39.us.i = icmp slt i64 %cond27.sub29.us.i, 1\l  br i1 %cmp39.us.i, label %if.end36.loopexit, label %if.end.us.i\l|{<s0>T|<s1>F}}"];
	Node0x57b6e00:s0 -> Node0x57b81f0;
	Node0x57b6e00:s1 -> Node0x57b6f80;
	Node0x57b6f80 [shape=record, style = filled, fillcolor = blue, label="{if.end.us.i:                                      \l  %mul41.us.i = mul nsw i64 %cond27.sub29.us.i, %conv.i151\l  %33 = load void (%struct.jpeg_common_struct*, %struct.backing_store_struct*,\l... i8*, i64, i64)*, void (%struct.jpeg_common_struct*,\l... %struct.backing_store_struct*, i8*, i64, i64)** %read_backing_store.i162,\l... align 8, !tbaa !25\l  %34 = load i8**, i8*** %mem_buffer46.i163, align 8, !tbaa !10\l  %arrayidx47.us.i = getelementptr inbounds i8*, i8** %34, i64 %i.098.us.i\l  %35 = load i8*, i8** %arrayidx47.us.i, align 8, !tbaa !24\l  tail call void %33(%struct.jpeg_common_struct* %cinfo,\l... %struct.backing_store_struct* nonnull %b_s_info.i161, i8* %35, i64\l... %file_offset.097.us.i, i64 %mul41.us.i) #5\l  %add49.us.i = add nsw i64 %mul41.us.i, %file_offset.097.us.i\l  %36 = load i64, i64* %30, align 8\l  %conv51.us.i = and i64 %36, 4294967295\l  %add52.us.i = add nsw i64 %conv51.us.i, %i.098.us.i\l  %37 = load i32, i32* %rows_in_mem.i155.pre-phi, align 4, !tbaa !18\l  %conv3.us.i = zext i32 %37 to i64\l  %cmp.us.i = icmp sgt i64 %conv3.us.i, %add52.us.i\l  br i1 %cmp.us.i, label %for.body.us.i, label %if.end36.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x57b6f80:s0 -> Node0x57b6e00;
	Node0x57b6f80:s1 -> Node0x57b81f0;
	Node0x57b81f0 [shape=record, style = filled, fillcolor = blue, label="{if.end36.loopexit:                                \l  br label %if.end36\l}"];
	Node0x57b81f0 -> Node0x57af5f0;
	Node0x57af5f0 [shape=record, style = filled, fillcolor = blue, label="{if.end36:                                         \l  %first_undef_row = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 7\l  %38 = bitcast i32* %first_undef_row to i64*\l  %39 = load i64, i64* %38, align 8\l  %40 = trunc i64 %39 to i32\l  %cmp37 = icmp ult i32 %40, %add\l  %41 = lshr i64 %39, 32\l  %42 = trunc i64 %41 to i32\l  br i1 %cmp37, label %if.then39, label %if.end79\l|{<s0>T|<s1>F}}"];
	Node0x57af5f0:s0 -> Node0x5790690;
	Node0x57af5f0:s1 -> Node0x5790770;
	Node0x5790690 [shape=record, style = filled, fillcolor = blue, label="{if.then39:                                        \l  %cmp41 = icmp ult i32 %40, %start_row\l  %tobool44 = icmp eq i32 %writable, 0\l  br i1 %cmp41, label %if.then43, label %if.end54\l|{<s0>T|<s1>F}}"];
	Node0x5790690:s0 -> Node0x5790a30;
	Node0x5790690:s1 -> Node0x5790ab0;
	Node0x5790a30 [shape=record, style = filled, fillcolor = blue, label="{if.then43:                                        \l  br i1 %tobool44, label %if.end58, label %if.end54.thread\l|{<s0>T|<s1>F}}"];
	Node0x5790a30:s0 -> Node0x5790c20;
	Node0x5790a30:s1 -> Node0x5790ca0;
	Node0x5790ca0 [shape=record, style = filled, fillcolor = blue, label="{if.end54.thread:                                  \l  %err46 = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %43 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err46, align\l... 8, !tbaa !11\l  %msg_code47 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %43, i64 0, i32 5\l  store i32 20, i32* %msg_code47, align 8, !tbaa !13\l  %44 = bitcast %struct.jpeg_error_mgr* %43 to void\l... (%struct.jpeg_common_struct*)**\l  %45 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %44, align 8, !tbaa !16\l  tail call void %45(%struct.jpeg_common_struct* %cinfo) #5\l  br label %if.then56\l}"];
	Node0x5790ca0 -> Node0x5791200;
	Node0x5790ab0 [shape=record, style = filled, fillcolor = blue, label="{if.end54:                                         \l  br i1 %tobool44, label %if.end58, label %if.then56, !prof !26\l|{<s0>T|<s1>F}}"];
	Node0x5790ab0:s0 -> Node0x5790c20;
	Node0x5790ab0:s1 -> Node0x5791200;
	Node0x5791200 [shape=record, style = filled, fillcolor = blue, label="{if.then56:                                        \l  %undef_row.0170 = phi i32 [ %start_row, %if.end54.thread ], [ %40, %if.end54\l... ]\l  store i32 %add, i32* %first_undef_row, align 8, !tbaa !22\l  %pre_zero.phi.trans.insert = getelementptr inbounds\l... %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %ptr, i64 0, i32 8\l  %.pre177 = load i32, i32* %pre_zero.phi.trans.insert, align 4, !tbaa !27\l  br label %if.end58\l}"];
	Node0x5791200 -> Node0x5790c20;
	Node0x5790c20 [shape=record, style = filled, fillcolor = blue, label="{if.end58:                                         \l  %46 = phi i32 [ %.pre177, %if.then56 ], [ %42, %if.end54 ], [ %42,\l... %if.then43 ]\l  %tobool55171 = phi i1 [ true, %if.then56 ], [ false, %if.end54 ], [ false,\l... %if.then43 ]\l  %undef_row.0169 = phi i32 [ %undef_row.0170, %if.then56 ], [ %40, %if.end54\l... ], [ %start_row, %if.then43 ]\l  %tobool59 = icmp eq i32 %46, 0\l  br i1 %tobool59, label %if.else69, label %if.then60\l|{<s0>T|<s1>F}}"];
	Node0x5790c20:s0 -> Node0x5791f90;
	Node0x5790c20:s1 -> Node0x5792070;
	Node0x5792070 [shape=record, style = filled, fillcolor = blue, label="{if.then60:                                        \l  %samplesperrow = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 2\l  %47 = load i32, i32* %samplesperrow, align 4, !tbaa !21\l  %conv61 = zext i32 %47 to i64\l  %48 = load i32, i32* %cur_start_row, align 4, !tbaa !17\l  %sub63 = sub i32 %undef_row.0169, %48\l  %sub65 = sub i32 %add, %48\l  %cmp66175 = icmp ult i32 %sub63, %sub65\l  br i1 %cmp66175, label %while.body.lr.ph, label %if.end79\l|{<s0>T|<s1>F}}"];
	Node0x5792070:s0 -> Node0x5792590;
	Node0x5792070:s1 -> Node0x5790770;
	Node0x5792590 [shape=record, style = filled, fillcolor = blue, label="{while.body.lr.ph:                                 \l  %mem_buffer68 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 0\l  %49 = zext i32 %sub63 to i64\l  br label %while.body\l}"];
	Node0x5792590 -> Node0x57927f0;
	Node0x57927f0 [shape=record, style = filled, fillcolor = blue, label="{while.body:                                       \l  %indvars.iv = phi i64 [ %49, %while.body.lr.ph ], [ %indvars.iv.next,\l... %while.body ]\l  %50 = load i8**, i8*** %mem_buffer68, align 8, !tbaa !10\l  %arrayidx = getelementptr inbounds i8*, i8** %50, i64 %indvars.iv\l  %51 = load i8*, i8** %arrayidx, align 8, !tbaa !24\l  tail call void @jzero_far(i8* %51, i64 %conv61) #5\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %lftr.wideiv = trunc i64 %indvars.iv.next to i32\l  %exitcond = icmp eq i32 %lftr.wideiv, %sub65\l  br i1 %exitcond, label %if.end79.loopexit, label %while.body\l|{<s0>T|<s1>F}}"];
	Node0x57927f0:s0 -> Node0x5792fd0;
	Node0x57927f0:s1 -> Node0x57927f0;
	Node0x5791f90 [shape=record, style = filled, fillcolor = blue, label="{if.else69:                                        \l  br i1 %tobool55171, label %if.end79, label %if.then71\l|{<s0>T|<s1>F}}"];
	Node0x5791f90:s0 -> Node0x5790770;
	Node0x5791f90:s1 -> Node0x5793140;
	Node0x5793140 [shape=record, style = filled, fillcolor = blue, label="{if.then71:                                        \l  %err72 = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %52 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err72, align\l... 8, !tbaa !11\l  %msg_code73 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %52, i64 0, i32 5\l  store i32 20, i32* %msg_code73, align 8, !tbaa !13\l  %53 = bitcast %struct.jpeg_error_mgr* %52 to void\l... (%struct.jpeg_common_struct*)**\l  %54 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %53, align 8, !tbaa !16\l  tail call void %54(%struct.jpeg_common_struct* %cinfo) #5\l  br label %if.end79\l}"];
	Node0x5793140 -> Node0x5790770;
	Node0x5792fd0 [shape=record, style = filled, fillcolor = blue, label="{if.end79.loopexit:                                \l  br label %if.end79\l}"];
	Node0x5792fd0 -> Node0x5790770;
	Node0x5790770 [shape=record, style = filled, fillcolor = blue, label="{if.end79:                                         \l  %tobool80 = icmp eq i32 %writable, 0\l  br i1 %tobool80, label %if.end83, label %if.then81\l|{<s0>T|<s1>F}}"];
	Node0x5790770:s0 -> Node0x5793700;
	Node0x5790770:s1 -> Node0x5793780;
	Node0x5793780 [shape=record, style = filled, fillcolor = blue, label="{if.then81:                                        \l  %dirty82 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 9\l  store i32 1, i32* %dirty82, align 8, !tbaa !20\l  br label %if.end83\l}"];
	Node0x5793780 -> Node0x5793700;
	Node0x5793700 [shape=record, style = filled, fillcolor = blue, label="{if.end83:                                         \l  %mem_buffer84 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %ptr, i64 0, i32 0\l  %55 = load i8**, i8*** %mem_buffer84, align 8, !tbaa !10\l  %56 = load i32, i32* %cur_start_row, align 4, !tbaa !17\l  %sub86 = sub i32 %start_row, %56\l  %idx.ext = zext i32 %sub86 to i64\l  %add.ptr = getelementptr inbounds i8*, i8** %55, i64 %idx.ext\l  ret i8** %add.ptr\l}"];
}
