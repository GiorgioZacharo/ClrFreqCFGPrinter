digraph "CFG for 'forward_DCT_float' function" {
	label="CFG for 'forward_DCT_float' function";

	Node0x566c8f0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %workspace = alloca [64 x float], align 16\l  %fdct1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 58\l  %0 = bitcast %struct.jpeg_forward_dct** %fdct1 to\l... %struct.my_fdct_controller**\l  %1 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %0,\l... align 8, !tbaa !3\l  %do_float_dct = getelementptr inbounds %struct.my_fdct_controller,\l... %struct.my_fdct_controller* %1, i64 0, i32 3\l  %2 = load void (float*)*, void (float*)** %do_float_dct, align 8, !tbaa !11\l  %quant_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr, i64 0, i32 4\l  %3 = load i32, i32* %quant_tbl_no, align 8, !tbaa !14\l  %idxprom = sext i32 %3 to i64\l  %arrayidx = getelementptr inbounds %struct.my_fdct_controller,\l... %struct.my_fdct_controller* %1, i64 0, i32 4, i64 %idxprom\l  %4 = load float*, float** %arrayidx, align 8, !tbaa !16\l  %5 = bitcast [64 x float]* %workspace to i8*\l  call void @llvm.lifetime.start(i64 256, i8* %5) #3\l  %idx.ext = zext i32 %start_row to i64\l  %add.ptr = getelementptr inbounds i8*, i8** %sample_data, i64 %idx.ext\l  %cmp108 = icmp eq i32 %num_blocks, 0\l  br i1 %cmp108, label %for.end69, label %for.body.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x566c8f0:s0 -> Node0x566d7a0;
	Node0x566c8f0:s1 -> Node0x566d850;
	Node0x566d850 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  %arraydecay = getelementptr inbounds [64 x float], [64 x float]* %workspace,\l... i64 0, i64 0\l  br label %for.body\l}"];
	Node0x566d850 -> Node0x566da90;
	Node0x566da90 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %indvars.iv114 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next115,\l... %for.end65 ]\l  %start_col.addr.0110 = phi i32 [ %start_col, %for.body.lr.ph ], [ %add68,\l... %for.end65 ]\l  %idx.ext7 = zext i32 %start_col.addr.0110 to i64\l  br label %for.body4\l}"];
	Node0x566da90 -> Node0x566d220;
	Node0x566d220 [shape=record, style = filled, fillcolor = blue, label="{for.body4:                                        \l  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body4 ]\l  %workspaceptr.0105 = phi float* [ %arraydecay, %for.body ], [ %incdec.ptr45,\l... %for.body4 ]\l  %arrayidx6 = getelementptr inbounds i8*, i8** %add.ptr, i64 %indvars.iv\l  %6 = load i8*, i8** %arrayidx6, align 8, !tbaa !16\l  %add.ptr8 = getelementptr inbounds i8, i8* %6, i64 %idx.ext7\l  %incdec.ptr = getelementptr inbounds i8, i8* %add.ptr8, i64 1\l  %7 = load i8, i8* %add.ptr8, align 1, !tbaa !17\l  %conv = zext i8 %7 to i32\l  %sub = add nsw i32 %conv, -128\l  %conv9 = sitofp i32 %sub to float\l  %incdec.ptr10 = getelementptr inbounds float, float* %workspaceptr.0105, i64\l... 1\l  store float %conv9, float* %workspaceptr.0105, align 4, !tbaa !18\l  %incdec.ptr11 = getelementptr inbounds i8, i8* %incdec.ptr, i64 1\l  %8 = load i8, i8* %incdec.ptr, align 1, !tbaa !17\l  %conv12 = zext i8 %8 to i32\l  %sub13 = add nsw i32 %conv12, -128\l  %conv14 = sitofp i32 %sub13 to float\l  %incdec.ptr15 = getelementptr inbounds float, float* %workspaceptr.0105, i64\l... 2\l  store float %conv14, float* %incdec.ptr10, align 4, !tbaa !18\l  %incdec.ptr16 = getelementptr inbounds i8, i8* %incdec.ptr11, i64 1\l  %9 = load i8, i8* %incdec.ptr11, align 1, !tbaa !17\l  %conv17 = zext i8 %9 to i32\l  %sub18 = add nsw i32 %conv17, -128\l  %conv19 = sitofp i32 %sub18 to float\l  %incdec.ptr20 = getelementptr inbounds float, float* %workspaceptr.0105, i64\l... 3\l  store float %conv19, float* %incdec.ptr15, align 4, !tbaa !18\l  %incdec.ptr21 = getelementptr inbounds i8, i8* %incdec.ptr16, i64 1\l  %10 = load i8, i8* %incdec.ptr16, align 1, !tbaa !17\l  %conv22 = zext i8 %10 to i32\l  %sub23 = add nsw i32 %conv22, -128\l  %conv24 = sitofp i32 %sub23 to float\l  %incdec.ptr25 = getelementptr inbounds float, float* %workspaceptr.0105, i64\l... 4\l  store float %conv24, float* %incdec.ptr20, align 4, !tbaa !18\l  %incdec.ptr26 = getelementptr inbounds i8, i8* %incdec.ptr21, i64 1\l  %11 = load i8, i8* %incdec.ptr21, align 1, !tbaa !17\l  %conv27 = zext i8 %11 to i32\l  %sub28 = add nsw i32 %conv27, -128\l  %conv29 = sitofp i32 %sub28 to float\l  %incdec.ptr30 = getelementptr inbounds float, float* %workspaceptr.0105, i64\l... 5\l  store float %conv29, float* %incdec.ptr25, align 4, !tbaa !18\l  %incdec.ptr31 = getelementptr inbounds i8, i8* %incdec.ptr26, i64 1\l  %12 = load i8, i8* %incdec.ptr26, align 1, !tbaa !17\l  %conv32 = zext i8 %12 to i32\l  %sub33 = add nsw i32 %conv32, -128\l  %conv34 = sitofp i32 %sub33 to float\l  %incdec.ptr35 = getelementptr inbounds float, float* %workspaceptr.0105, i64\l... 6\l  store float %conv34, float* %incdec.ptr30, align 4, !tbaa !18\l  %incdec.ptr36 = getelementptr inbounds i8, i8* %incdec.ptr31, i64 1\l  %13 = load i8, i8* %incdec.ptr31, align 1, !tbaa !17\l  %conv37 = zext i8 %13 to i32\l  %sub38 = add nsw i32 %conv37, -128\l  %conv39 = sitofp i32 %sub38 to float\l  %incdec.ptr40 = getelementptr inbounds float, float* %workspaceptr.0105, i64\l... 7\l  store float %conv39, float* %incdec.ptr35, align 4, !tbaa !18\l  %14 = load i8, i8* %incdec.ptr36, align 1, !tbaa !17\l  %conv42 = zext i8 %14 to i32\l  %sub43 = add nsw i32 %conv42, -128\l  %conv44 = sitofp i32 %sub43 to float\l  %incdec.ptr45 = getelementptr inbounds float, float* %workspaceptr.0105, i64\l... 8\l  store float %conv44, float* %incdec.ptr40, align 4, !tbaa !18\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond = icmp eq i64 %indvars.iv.next, 8\l  br i1 %exitcond, label %for.end, label %for.body4\l|{<s0>T|<s1>F}}"];
	Node0x566d220:s0 -> Node0x5670f70;
	Node0x566d220:s1 -> Node0x566d220;
	Node0x5670f70 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  call void %2(float* %arraydecay) #3\l  br label %vector.body\l}"];
	Node0x5670f70 -> Node0x5671190;
	Node0x5671190 [shape=record, style = filled, fillcolor = blue, label="{vector.body:                                      \l  %index = phi i64 [ 0, %for.end ], [ %index.next.1, %vector.body ]\l  %15 = getelementptr inbounds [64 x float], [64 x float]* %workspace, i64 0,\l... i64 %index\l  %16 = bitcast float* %15 to \<4 x float\>*\l  %wide.load = load \<4 x float\>, \<4 x float\>* %16, align 16, !tbaa !18\l  %17 = getelementptr inbounds float, float* %4, i64 %index\l  %18 = bitcast float* %17 to \<4 x float\>*\l  %wide.load117 = load \<4 x float\>, \<4 x float\>* %18, align 4, !tbaa !18\l  %19 = fmul \<4 x float\> %wide.load, %wide.load117\l  %20 = fadd \<4 x float\> %19, \<float 1.638450e+04, float 1.638450e+04, float\l... 1.638450e+04, float 1.638450e+04\>\l  %21 = fptosi \<4 x float\> %20 to \<4 x i32\>\l  %22 = add \<4 x i32\> %21, \<i32 49152, i32 49152, i32 49152, i32 49152\>\l  %23 = trunc \<4 x i32\> %22 to \<4 x i16\>\l  %24 = getelementptr inbounds [64 x i16], [64 x i16]* %coef_blocks, i64\l... %indvars.iv114, i64 %index\l  %25 = bitcast i16* %24 to \<4 x i16\>*\l  store \<4 x i16\> %23, \<4 x i16\>* %25, align 2, !tbaa !20\l  %index.next = or i64 %index, 4\l  %26 = getelementptr inbounds [64 x float], [64 x float]* %workspace, i64 0,\l... i64 %index.next\l  %27 = bitcast float* %26 to \<4 x float\>*\l  %wide.load.1 = load \<4 x float\>, \<4 x float\>* %27, align 16, !tbaa !18\l  %28 = getelementptr inbounds float, float* %4, i64 %index.next\l  %29 = bitcast float* %28 to \<4 x float\>*\l  %wide.load117.1 = load \<4 x float\>, \<4 x float\>* %29, align 4, !tbaa !18\l  %30 = fmul \<4 x float\> %wide.load.1, %wide.load117.1\l  %31 = fadd \<4 x float\> %30, \<float 1.638450e+04, float 1.638450e+04, float\l... 1.638450e+04, float 1.638450e+04\>\l  %32 = fptosi \<4 x float\> %31 to \<4 x i32\>\l  %33 = add \<4 x i32\> %32, \<i32 49152, i32 49152, i32 49152, i32 49152\>\l  %34 = trunc \<4 x i32\> %33 to \<4 x i16\>\l  %35 = getelementptr inbounds [64 x i16], [64 x i16]* %coef_blocks, i64\l... %indvars.iv114, i64 %index.next\l  %36 = bitcast i16* %35 to \<4 x i16\>*\l  store \<4 x i16\> %34, \<4 x i16\>* %36, align 2, !tbaa !20\l  %index.next.1 = add nsw i64 %index, 8\l  %37 = icmp eq i64 %index.next.1, 64\l  br i1 %37, label %for.end65, label %vector.body, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x5671190:s0 -> Node0x566dc30;
	Node0x5671190:s1 -> Node0x5671190;
	Node0x566dc30 [shape=record, style = filled, fillcolor = blue, label="{for.end65:                                        \l  %indvars.iv.next115 = add nuw nsw i64 %indvars.iv114, 1\l  %add68 = add i32 %start_col.addr.0110, 8\l  %lftr.wideiv = trunc i64 %indvars.iv.next115 to i32\l  %exitcond116 = icmp eq i32 %lftr.wideiv, %num_blocks\l  br i1 %exitcond116, label %for.end69.loopexit, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x566dc30:s0 -> Node0x5672880;
	Node0x566dc30:s1 -> Node0x566da90;
	Node0x5672880 [shape=record, style = filled, fillcolor = blue, label="{for.end69.loopexit:                               \l  br label %for.end69\l}"];
	Node0x5672880 -> Node0x566d7a0;
	Node0x566d7a0 [shape=record, style = filled, fillcolor = blue, label="{for.end69:                                        \l  call void @llvm.lifetime.end(i64 256, i8* %5) #3\l  ret void\l}"];
}
