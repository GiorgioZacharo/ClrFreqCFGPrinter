digraph "CFG for 'jpeg_idct_ifast' function" {
	label="CFG for 'jpeg_idct_ifast' function";

	Node0x4d9efb0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %workspace = alloca [64 x i32], align 16\l  %sample_range_limit = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 61\l  %0 = load i8*, i8** %sample_range_limit, align 8, !tbaa !2\l  %1 = bitcast [64 x i32]* %workspace to i8*\l  call void @llvm.lifetime.start(i64 256, i8* %1) #2\l  %dct_table = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr, i64 0, i32 20\l  %2 = bitcast i8** %dct_table to i32**\l  %3 = load i32*, i32** %2, align 8, !tbaa !10\l  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %workspace, i64\l... 0, i64 0\l  br label %for.body\l}"];
	Node0x4d9efb0 -> Node0x4da4ad0;
	Node0x4da4c10 [shape=record, style = filled, fillcolor = blue, label="{for.cond123.preheader:                            \l  %add.ptr = getelementptr inbounds i8, i8* %0, i64 128\l  %idx.ext = zext i32 %output_col to i64\l  br label %for.body126\l}"];
	Node0x4da4c10 -> Node0x4da2690;
	Node0x4da4ad0 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %ctr.0523 = phi i32 [ 8, %entry ], [ %dec, %for.inc ]\l  %wsptr.0522 = phi i32* [ %arraydecay, %entry ], [ %wsptr.1, %for.inc ]\l  %quantptr.0521 = phi i32* [ %3, %entry ], [ %quantptr.1, %for.inc ]\l  %inptr.0520 = phi i16* [ %coef_block, %entry ], [ %inptr.1, %for.inc ]\l  %arrayidx = getelementptr inbounds i16, i16* %inptr.0520, i64 8\l  %4 = load i16, i16* %arrayidx, align 2, !tbaa !12\l  %arrayidx1 = getelementptr inbounds i16, i16* %inptr.0520, i64 16\l  %5 = load i16, i16* %arrayidx1, align 2, !tbaa !12\l  %or507 = or i16 %5, %4\l  %arrayidx3 = getelementptr inbounds i16, i16* %inptr.0520, i64 24\l  %6 = load i16, i16* %arrayidx3, align 2, !tbaa !12\l  %or5508 = or i16 %or507, %6\l  %arrayidx6 = getelementptr inbounds i16, i16* %inptr.0520, i64 32\l  %7 = load i16, i16* %arrayidx6, align 2, !tbaa !12\l  %or8509 = or i16 %or5508, %7\l  %arrayidx9 = getelementptr inbounds i16, i16* %inptr.0520, i64 40\l  %8 = load i16, i16* %arrayidx9, align 2, !tbaa !12\l  %or11510 = or i16 %or8509, %8\l  %arrayidx12 = getelementptr inbounds i16, i16* %inptr.0520, i64 48\l  %9 = load i16, i16* %arrayidx12, align 2, !tbaa !12\l  %or14511 = or i16 %or11510, %9\l  %arrayidx15 = getelementptr inbounds i16, i16* %inptr.0520, i64 56\l  %10 = load i16, i16* %arrayidx15, align 2, !tbaa !12\l  %or17512 = or i16 %or14511, %10\l  %cmp18 = icmp eq i16 %or17512, 0\l  br i1 %cmp18, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x4da4ad0:s0 -> Node0x4da5980;
	Node0x4da4ad0:s1 -> Node0x4da6f20;
	Node0x4da5980 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %11 = load i16, i16* %inptr.0520, align 2, !tbaa !12\l  %conv21 = sext i16 %11 to i32\l  %12 = load i32, i32* %quantptr.0521, align 4, !tbaa !13\l  %mul = mul nsw i32 %conv21, %12\l  store i32 %mul, i32* %wsptr.0522, align 4, !tbaa !13\l  br label %for.inc\l}"];
	Node0x4da5980 -> Node0x4da5080;
	Node0x4da6f20 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %conv16 = sext i16 %10 to i32\l  %conv13 = sext i16 %9 to i32\l  %conv10 = sext i16 %8 to i32\l  %conv7 = sext i16 %7 to i32\l  %conv4 = sext i16 %6 to i32\l  %conv = sext i16 %4 to i32\l  %conv2 = sext i16 %5 to i32\l  %13 = load i16, i16* %inptr.0520, align 2, !tbaa !12\l  %conv34 = sext i16 %13 to i32\l  %14 = load i32, i32* %quantptr.0521, align 4, !tbaa !13\l  %mul36 = mul nsw i32 %conv34, %14\l  %arrayidx39 = getelementptr inbounds i32, i32* %quantptr.0521, i64 16\l  %15 = load i32, i32* %arrayidx39, align 4, !tbaa !13\l  %mul40 = mul nsw i32 %15, %conv2\l  %arrayidx43 = getelementptr inbounds i32, i32* %quantptr.0521, i64 32\l  %16 = load i32, i32* %arrayidx43, align 4, !tbaa !13\l  %mul44 = mul nsw i32 %16, %conv7\l  %arrayidx47 = getelementptr inbounds i32, i32* %quantptr.0521, i64 48\l  %17 = load i32, i32* %arrayidx47, align 4, !tbaa !13\l  %mul48 = mul nsw i32 %17, %conv13\l  %add = add nsw i32 %mul44, %mul36\l  %sub = sub nsw i32 %mul36, %mul44\l  %add49 = add nsw i32 %mul48, %mul40\l  %sub50 = sub nsw i32 %mul40, %mul48\l  %conv51 = sext i32 %sub50 to i64\l  %mul52 = mul nsw i64 %conv51, 362\l  %shr513 = lshr i64 %mul52, 8\l  %conv53 = trunc i64 %shr513 to i32\l  %sub54 = sub nsw i32 %conv53, %add49\l  %add55 = add nsw i32 %add49, %add\l  %sub56 = sub nsw i32 %add, %add49\l  %add57 = add nsw i32 %sub54, %sub\l  %sub58 = sub nsw i32 %sub, %sub54\l  %arrayidx61 = getelementptr inbounds i32, i32* %quantptr.0521, i64 8\l  %18 = load i32, i32* %arrayidx61, align 4, !tbaa !13\l  %mul62 = mul nsw i32 %18, %conv\l  %arrayidx65 = getelementptr inbounds i32, i32* %quantptr.0521, i64 24\l  %19 = load i32, i32* %arrayidx65, align 4, !tbaa !13\l  %mul66 = mul nsw i32 %19, %conv4\l  %arrayidx69 = getelementptr inbounds i32, i32* %quantptr.0521, i64 40\l  %20 = load i32, i32* %arrayidx69, align 4, !tbaa !13\l  %mul70 = mul nsw i32 %20, %conv10\l  %arrayidx73 = getelementptr inbounds i32, i32* %quantptr.0521, i64 56\l  %21 = load i32, i32* %arrayidx73, align 4, !tbaa !13\l  %mul74 = mul nsw i32 %21, %conv16\l  %add75 = add nsw i32 %mul70, %mul66\l  %sub76 = sub nsw i32 %mul70, %mul66\l  %add77 = add nsw i32 %mul74, %mul62\l  %sub78 = sub nsw i32 %mul62, %mul74\l  %add79 = add nsw i32 %add77, %add75\l  %sub80 = sub nsw i32 %add77, %add75\l  %conv81 = sext i32 %sub80 to i64\l  %mul82 = mul nsw i64 %conv81, 362\l  %shr83514 = lshr i64 %mul82, 8\l  %conv84 = trunc i64 %shr83514 to i32\l  %add85 = add nsw i32 %sub78, %sub76\l  %conv86 = sext i32 %add85 to i64\l  %mul87 = mul nsw i64 %conv86, 473\l  %shr88515 = lshr i64 %mul87, 8\l  %conv89 = trunc i64 %shr88515 to i32\l  %conv90 = sext i32 %sub78 to i64\l  %mul91 = mul nsw i64 %conv90, 277\l  %shr92516 = lshr i64 %mul91, 8\l  %conv93 = trunc i64 %shr92516 to i32\l  %sub94 = sub nsw i32 %conv93, %conv89\l  %conv95 = sext i32 %sub76 to i64\l  %mul96 = mul nsw i64 %conv95, -669\l  %shr97517 = lshr i64 %mul96, 8\l  %conv98 = trunc i64 %shr97517 to i32\l  %add99 = sub i32 %conv98, %add79\l  %sub100 = add i32 %add99, %conv89\l  %sub101 = sub nsw i32 %conv84, %sub100\l  %add102 = add nsw i32 %sub101, %sub94\l  %add103 = add nsw i32 %add79, %add55\l  store i32 %add103, i32* %wsptr.0522, align 4, !tbaa !13\l  %sub105 = sub nsw i32 %add55, %add79\l  %add107 = add nsw i32 %sub100, %add57\l  %sub109 = sub nsw i32 %add57, %sub100\l  %add111 = add nsw i32 %sub101, %sub58\l  %sub113 = sub nsw i32 %sub58, %sub101\l  %add115 = add nsw i32 %add102, %sub56\l  %sub117 = sub nsw i32 %sub56, %add102\l  br label %for.inc\l}"];
	Node0x4da6f20 -> Node0x4da5080;
	Node0x4da5080 [shape=record, style = filled, fillcolor = blue, label="{for.inc:                                          \l  %mul.sink529 = phi i32 [ %sub105, %if.end ], [ %mul, %if.then ]\l  %mul.sink528 = phi i32 [ %add107, %if.end ], [ %mul, %if.then ]\l  %mul.sink527 = phi i32 [ %sub109, %if.end ], [ %mul, %if.then ]\l  %mul.sink526 = phi i32 [ %add111, %if.end ], [ %mul, %if.then ]\l  %mul.sink525 = phi i32 [ %sub113, %if.end ], [ %mul, %if.then ]\l  %mul.sink524 = phi i32 [ %add115, %if.end ], [ %mul, %if.then ]\l  %mul.sink = phi i32 [ %sub117, %if.end ], [ %mul, %if.then ]\l  %22 = getelementptr inbounds i32, i32* %wsptr.0522, i64 56\l  store i32 %mul.sink529, i32* %22, align 4\l  %23 = getelementptr inbounds i32, i32* %wsptr.0522, i64 8\l  store i32 %mul.sink528, i32* %23, align 4\l  %24 = getelementptr inbounds i32, i32* %wsptr.0522, i64 48\l  store i32 %mul.sink527, i32* %24, align 4\l  %25 = getelementptr inbounds i32, i32* %wsptr.0522, i64 16\l  store i32 %mul.sink526, i32* %25, align 4\l  %26 = getelementptr inbounds i32, i32* %wsptr.0522, i64 40\l  store i32 %mul.sink525, i32* %26, align 4\l  %27 = getelementptr inbounds i32, i32* %wsptr.0522, i64 32\l  store i32 %mul.sink524, i32* %27, align 4\l  %28 = getelementptr inbounds i32, i32* %wsptr.0522, i64 24\l  store i32 %mul.sink, i32* %28, align 4\l  %wsptr.1 = getelementptr inbounds i32, i32* %wsptr.0522, i64 1\l  %quantptr.1 = getelementptr inbounds i32, i32* %quantptr.0521, i64 1\l  %inptr.1 = getelementptr inbounds i16, i16* %inptr.0520, i64 1\l  %dec = add nsw i32 %ctr.0523, -1\l  %cmp = icmp sgt i32 %ctr.0523, 1\l  br i1 %cmp, label %for.body, label %for.cond123.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4da5080:s0 -> Node0x4da4ad0;
	Node0x4da5080:s1 -> Node0x4da4c10;
	Node0x4da2690 [shape=record, style = filled, fillcolor = blue, label="{for.body126:                                      \l  %indvars.iv = phi i64 [ 0, %for.cond123.preheader ], [ %indvars.iv.next,\l... %for.inc266 ]\l  %wsptr.2518 = phi i32* [ %arraydecay, %for.cond123.preheader ], [ %wsptr.3,\l... %for.inc266 ]\l  %arrayidx127 = getelementptr inbounds i8*, i8** %output_buf, i64 %indvars.iv\l  %29 = load i8*, i8** %arrayidx127, align 8, !tbaa !14\l  %add.ptr128 = getelementptr inbounds i8, i8* %29, i64 %idx.ext\l  %arrayidx129 = getelementptr inbounds i32, i32* %wsptr.2518, i64 1\l  %30 = load i32, i32* %arrayidx129, align 4, !tbaa !13\l  %arrayidx130 = getelementptr inbounds i32, i32* %wsptr.2518, i64 2\l  %31 = load i32, i32* %arrayidx130, align 4, !tbaa !13\l  %or131 = or i32 %31, %30\l  %arrayidx132 = getelementptr inbounds i32, i32* %wsptr.2518, i64 3\l  %32 = load i32, i32* %arrayidx132, align 4, !tbaa !13\l  %or133 = or i32 %or131, %32\l  %arrayidx134 = getelementptr inbounds i32, i32* %wsptr.2518, i64 4\l  %33 = load i32, i32* %arrayidx134, align 4, !tbaa !13\l  %or135 = or i32 %or133, %33\l  %arrayidx136 = getelementptr inbounds i32, i32* %wsptr.2518, i64 5\l  %34 = load i32, i32* %arrayidx136, align 4, !tbaa !13\l  %or137 = or i32 %or135, %34\l  %arrayidx138 = getelementptr inbounds i32, i32* %wsptr.2518, i64 6\l  %35 = load i32, i32* %arrayidx138, align 4, !tbaa !13\l  %or139 = or i32 %or137, %35\l  %arrayidx140 = getelementptr inbounds i32, i32* %wsptr.2518, i64 7\l  %36 = load i32, i32* %arrayidx140, align 4, !tbaa !13\l  %or141 = or i32 %or139, %36\l  %cmp142 = icmp eq i32 %or141, 0\l  %37 = load i32, i32* %wsptr.2518, align 4, !tbaa !13\l  br i1 %cmp142, label %if.then144, label %if.end159\l|{<s0>T|<s1>F}}"];
	Node0x4da2690:s0 -> Node0x4dae560;
	Node0x4da2690:s1 -> Node0x4dae640;
	Node0x4dae560 [shape=record, style = filled, fillcolor = blue, label="{if.then144:                                       \l  %shr147505 = lshr i32 %37, 5\l  %and = and i32 %shr147505, 1023\l  %idxprom148506 = zext i32 %and to i64\l  %arrayidx149 = getelementptr inbounds i8, i8* %add.ptr, i64 %idxprom148506\l  %38 = load i8, i8* %arrayidx149, align 1, !tbaa !15\l  store i8 %38, i8* %add.ptr128, align 1, !tbaa !15\l  %arrayidx151 = getelementptr inbounds i8, i8* %add.ptr128, i64 1\l  store i8 %38, i8* %arrayidx151, align 1, !tbaa !15\l  %arrayidx152 = getelementptr inbounds i8, i8* %add.ptr128, i64 2\l  store i8 %38, i8* %arrayidx152, align 1, !tbaa !15\l  %arrayidx154 = getelementptr inbounds i8, i8* %add.ptr128, i64 4\l  call void @llvm.memset.p0i8.i64(i8* %arrayidx154, i8 %38, i64 4, i32 1, i1\l... false)\l  br label %for.inc266\l}"];
	Node0x4dae560 -> Node0x4dad190;
	Node0x4dae640 [shape=record, style = filled, fillcolor = blue, label="{if.end159:                                        \l  %add162 = add nsw i32 %37, %33\l  %sub165 = sub nsw i32 %37, %33\l  %add168 = add nsw i32 %35, %31\l  %sub171 = sub nsw i32 %31, %35\l  %conv172 = sext i32 %sub171 to i64\l  %mul173 = mul nsw i64 %conv172, 362\l  %shr174484 = lshr i64 %mul173, 8\l  %conv175 = trunc i64 %shr174484 to i32\l  %sub176 = sub nsw i32 %conv175, %add168\l  %add177 = add nsw i32 %add162, %add168\l  %sub178 = sub nsw i32 %add162, %add168\l  %add179 = add nsw i32 %sub176, %sub165\l  %sub180 = sub nsw i32 %sub165, %sub176\l  %add183 = add nsw i32 %34, %32\l  %sub186 = sub nsw i32 %34, %32\l  %add189 = add nsw i32 %36, %30\l  %sub192 = sub nsw i32 %30, %36\l  %add193 = add nsw i32 %add189, %add183\l  %sub194 = sub nsw i32 %add189, %add183\l  %conv195 = sext i32 %sub194 to i64\l  %mul196 = mul nsw i64 %conv195, 362\l  %shr197485 = lshr i64 %mul196, 8\l  %conv198 = trunc i64 %shr197485 to i32\l  %add199 = add nsw i32 %sub192, %sub186\l  %conv200 = sext i32 %add199 to i64\l  %mul201 = mul nsw i64 %conv200, 473\l  %shr202486 = lshr i64 %mul201, 8\l  %conv203 = trunc i64 %shr202486 to i32\l  %conv204 = sext i32 %sub192 to i64\l  %mul205 = mul nsw i64 %conv204, 277\l  %shr206487 = lshr i64 %mul205, 8\l  %conv207 = trunc i64 %shr206487 to i32\l  %sub208 = sub nsw i32 %conv207, %conv203\l  %conv209 = sext i32 %sub186 to i64\l  %mul210 = mul nsw i64 %conv209, -669\l  %shr211488 = lshr i64 %mul210, 8\l  %conv212 = trunc i64 %shr211488 to i32\l  %add213 = sub i32 %conv212, %add193\l  %sub214 = add i32 %add213, %conv203\l  %sub215 = sub nsw i32 %conv198, %sub214\l  %add216 = add nsw i32 %sub215, %sub208\l  %add217 = add nsw i32 %add177, %add193\l  %shr218489 = lshr i32 %add217, 5\l  %and219 = and i32 %shr218489, 1023\l  %idxprom220490 = zext i32 %and219 to i64\l  %arrayidx221 = getelementptr inbounds i8, i8* %add.ptr, i64 %idxprom220490\l  %39 = load i8, i8* %arrayidx221, align 1, !tbaa !15\l  store i8 %39, i8* %add.ptr128, align 1, !tbaa !15\l  %sub223 = sub nsw i32 %add177, %add193\l  %shr224491 = lshr i32 %sub223, 5\l  %and225 = and i32 %shr224491, 1023\l  %idxprom226492 = zext i32 %and225 to i64\l  %arrayidx227 = getelementptr inbounds i8, i8* %add.ptr, i64 %idxprom226492\l  %40 = load i8, i8* %arrayidx227, align 1, !tbaa !15\l  %arrayidx228 = getelementptr inbounds i8, i8* %add.ptr128, i64 7\l  store i8 %40, i8* %arrayidx228, align 1, !tbaa !15\l  %add229 = add nsw i32 %sub214, %add179\l  %shr230493 = lshr i32 %add229, 5\l  %and231 = and i32 %shr230493, 1023\l  %idxprom232494 = zext i32 %and231 to i64\l  %arrayidx233 = getelementptr inbounds i8, i8* %add.ptr, i64 %idxprom232494\l  %41 = load i8, i8* %arrayidx233, align 1, !tbaa !15\l  %arrayidx234 = getelementptr inbounds i8, i8* %add.ptr128, i64 1\l  store i8 %41, i8* %arrayidx234, align 1, !tbaa !15\l  %sub235 = sub nsw i32 %add179, %sub214\l  %shr236495 = lshr i32 %sub235, 5\l  %and237 = and i32 %shr236495, 1023\l  %idxprom238496 = zext i32 %and237 to i64\l  %arrayidx239 = getelementptr inbounds i8, i8* %add.ptr, i64 %idxprom238496\l  %42 = load i8, i8* %arrayidx239, align 1, !tbaa !15\l  %arrayidx240 = getelementptr inbounds i8, i8* %add.ptr128, i64 6\l  store i8 %42, i8* %arrayidx240, align 1, !tbaa !15\l  %add241 = add nsw i32 %sub215, %sub180\l  %shr242497 = lshr i32 %add241, 5\l  %and243 = and i32 %shr242497, 1023\l  %idxprom244498 = zext i32 %and243 to i64\l  %arrayidx245 = getelementptr inbounds i8, i8* %add.ptr, i64 %idxprom244498\l  %43 = load i8, i8* %arrayidx245, align 1, !tbaa !15\l  %arrayidx246 = getelementptr inbounds i8, i8* %add.ptr128, i64 2\l  store i8 %43, i8* %arrayidx246, align 1, !tbaa !15\l  %sub247 = sub nsw i32 %sub180, %sub215\l  %shr248499 = lshr i32 %sub247, 5\l  %and249 = and i32 %shr248499, 1023\l  %idxprom250500 = zext i32 %and249 to i64\l  %arrayidx251 = getelementptr inbounds i8, i8* %add.ptr, i64 %idxprom250500\l  %44 = load i8, i8* %arrayidx251, align 1, !tbaa !15\l  %arrayidx252 = getelementptr inbounds i8, i8* %add.ptr128, i64 5\l  store i8 %44, i8* %arrayidx252, align 1, !tbaa !15\l  %add253 = add nsw i32 %add216, %sub178\l  %shr254501 = lshr i32 %add253, 5\l  %and255 = and i32 %shr254501, 1023\l  %idxprom256502 = zext i32 %and255 to i64\l  %arrayidx257 = getelementptr inbounds i8, i8* %add.ptr, i64 %idxprom256502\l  %45 = load i8, i8* %arrayidx257, align 1, !tbaa !15\l  %arrayidx258 = getelementptr inbounds i8, i8* %add.ptr128, i64 4\l  store i8 %45, i8* %arrayidx258, align 1, !tbaa !15\l  %sub259 = sub nsw i32 %sub178, %add216\l  %shr260503 = lshr i32 %sub259, 5\l  %and261 = and i32 %shr260503, 1023\l  %idxprom262504 = zext i32 %and261 to i64\l  %arrayidx263 = getelementptr inbounds i8, i8* %add.ptr, i64 %idxprom262504\l  %46 = load i8, i8* %arrayidx263, align 1, !tbaa !15\l  br label %for.inc266\l}"];
	Node0x4dae640 -> Node0x4dad190;
	Node0x4dad190 [shape=record, style = filled, fillcolor = blue, label="{for.inc266:                                       \l  %.sink = phi i8 [ %46, %if.end159 ], [ %38, %if.then144 ]\l  %47 = getelementptr inbounds i8, i8* %add.ptr128, i64 3\l  store i8 %.sink, i8* %47, align 1\l  %wsptr.3 = getelementptr inbounds i32, i32* %wsptr.2518, i64 8\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond = icmp eq i64 %indvars.iv.next, 8\l  br i1 %exitcond, label %for.end267, label %for.body126\l|{<s0>T|<s1>F}}"];
	Node0x4dad190:s0 -> Node0x4da3ad0;
	Node0x4dad190:s1 -> Node0x4da2690;
	Node0x4da3ad0 [shape=record, style = filled, fillcolor = blue, label="{for.end267:                                       \l  call void @llvm.lifetime.end(i64 256, i8* %1) #2\l  ret void\l}"];
}
