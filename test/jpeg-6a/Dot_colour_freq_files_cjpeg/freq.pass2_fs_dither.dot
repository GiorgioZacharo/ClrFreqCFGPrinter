digraph "CFG for 'pass2_fs_dither' function" {
	label="CFG for 'pass2_fs_dither' function";

	Node0x62947a0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %cquantize1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %0 = bitcast %struct.jpeg_color_quantizer** %cquantize1 to\l... %struct.my_cquantizer**\l  %1 = load %struct.my_cquantizer*, %struct.my_cquantizer** %0, align 8, !tbaa\l... !2\l  %histogram2 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 3\l  %2 = load [32 x i16]**, [32 x i16]*** %histogram2, align 8, !tbaa !10\l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %3 = load i32, i32* %output_width, align 8, !tbaa !13\l  %sample_range_limit = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 61\l  %4 = load i8*, i8** %sample_range_limit, align 8, !tbaa !14\l  %error_limiter = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 7\l  %5 = load i32*, i32** %error_limiter, align 8, !tbaa !15\l  %colormap = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 32\l  %6 = load i8**, i8*** %colormap, align 8, !tbaa !16\l  %7 = load i8*, i8** %6, align 8, !tbaa !17\l  %arrayidx4 = getelementptr inbounds i8*, i8** %6, i64 1\l  %8 = load i8*, i8** %arrayidx4, align 8, !tbaa !17\l  %arrayidx6 = getelementptr inbounds i8*, i8** %6, i64 2\l  %9 = load i8*, i8** %arrayidx6, align 8, !tbaa !17\l  %cmp284 = icmp sgt i32 %num_rows, 0\l  br i1 %cmp284, label %for.body.lr.ph, label %for.end134\l|{<s0>T|<s1>F}}"];
	Node0x62947a0:s0 -> Node0x629cd00;
	Node0x62947a0:s1 -> Node0x629d480;
	Node0x629cd00 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  %on_odd_row = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 6\l  %fserrors17 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 5\l  %cmp20267 = icmp eq i32 %3, 0\l  %sub = add i32 %3, -1\l  %mul = mul i32 %sub, 3\l  %idx.ext = zext i32 %mul to i64\l  %idx.ext11 = zext i32 %sub to i64\l  %10 = mul i32 %3, 3\l  %mul13 = add i32 %10, 3\l  %idx.ext14 = zext i32 %mul13 to i64\l  %11 = shl nuw nsw i64 %idx.ext11, 1\l  %12 = add nuw nsw i64 %11, 2\l  br label %for.body\l}"];
	Node0x629cd00 -> Node0x629d350;
	Node0x629d350 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.end ]\l  %arrayidx7 = getelementptr inbounds i8*, i8** %input_buf, i64 %indvars.iv\l  %13 = load i8*, i8** %arrayidx7, align 8, !tbaa !17\l  %arrayidx9 = getelementptr inbounds i8*, i8** %output_buf, i64 %indvars.iv\l  %14 = load i8*, i8** %arrayidx9, align 8, !tbaa !17\l  %15 = load i32, i32* %on_odd_row, align 8, !tbaa !18\l  %tobool = icmp eq i32 %15, 0\l  br i1 %tobool, label %if.else, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x629d350:s0 -> Node0x629ea00;
	Node0x629d350:s1 -> Node0x629ead0;
	Node0x629ead0 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext\l  %add.ptr12 = getelementptr inbounds i8, i8* %14, i64 %idx.ext11\l  %16 = load i16*, i16** %fserrors17, align 8, !tbaa !19\l  %add.ptr15 = getelementptr inbounds i16, i16* %16, i64 %idx.ext14\l  br label %if.end\l}"];
	Node0x629ead0 -> Node0x629eee0;
	Node0x629ea00 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %17 = load i16*, i16** %fserrors17, align 8, !tbaa !19\l  br label %if.end\l}"];
	Node0x629ea00 -> Node0x629eee0;
	Node0x629eee0 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %storemerge = phi i32 [ 1, %if.else ], [ 0, %if.then ]\l  %inptr.0 = phi i8* [ %13, %if.else ], [ %add.ptr, %if.then ]\l  %outptr.0 = phi i8* [ %14, %if.else ], [ %add.ptr12, %if.then ]\l  %errorptr.0 = phi i16* [ %17, %if.else ], [ %add.ptr15, %if.then ]\l  %dir.0 = phi i64 [ 1, %if.else ], [ -1, %if.then ]\l  %dir3.0 = phi i32 [ 3, %if.else ], [ -3, %if.then ]\l  store i32 %storemerge, i32* %on_odd_row, align 8, !tbaa !18\l  br i1 %cmp20267, label %for.end, label %for.body21.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x629eee0:s0 -> Node0x629df40;
	Node0x629eee0:s1 -> Node0x629f5d0;
	Node0x629f5d0 [shape=record, style = filled, fillcolor = blue, label="{for.body21.lr.ph:                                 \l  %errorptr.0286 = bitcast i16* %errorptr.0 to i8*\l  %idxprom23 = sext i32 %dir3.0 to i64\l  %add27 = add nsw i32 %dir3.0, 1\l  %idxprom28 = sext i32 %add27 to i64\l  %add34 = add nsw i32 %dir3.0, 2\l  %idxprom35 = sext i32 %add34 to i64\l  %18 = mul nsw i64 %12, %idxprom23\l  %uglygep = getelementptr i8, i8* %errorptr.0286, i64 %18\l  br label %for.body21\l}"];
	Node0x629f5d0 -> Node0x629dcf0;
	Node0x629dcf0 [shape=record, style = filled, fillcolor = blue, label="{for.body21:                                       \l  %cur0.0280 = phi i32 [ 0, %for.body21.lr.ph ], [ %add104, %if.end81 ]\l  %cur1.0279 = phi i32 [ 0, %for.body21.lr.ph ], [ %add112, %if.end81 ]\l  %cur2.0278 = phi i32 [ 0, %for.body21.lr.ph ], [ %add120, %if.end81 ]\l  %belowerr0.0277 = phi i32 [ 0, %for.body21.lr.ph ], [ %sub88, %if.end81 ]\l  %belowerr1.0276 = phi i32 [ 0, %for.body21.lr.ph ], [ %sub92, %if.end81 ]\l  %belowerr2.0275 = phi i32 [ 0, %for.body21.lr.ph ], [ %sub96, %if.end81 ]\l  %bpreverr0.0274 = phi i32 [ 0, %for.body21.lr.ph ], [ %add103, %if.end81 ]\l  %bpreverr1.0273 = phi i32 [ 0, %for.body21.lr.ph ], [ %add111, %if.end81 ]\l  %bpreverr2.0272 = phi i32 [ 0, %for.body21.lr.ph ], [ %add119, %if.end81 ]\l  %col.0271 = phi i32 [ %3, %for.body21.lr.ph ], [ %dec, %if.end81 ]\l  %errorptr.1270 = phi i16* [ %errorptr.0, %for.body21.lr.ph ], [ %arrayidx24,\l... %if.end81 ]\l  %outptr.1269 = phi i8* [ %outptr.0, %for.body21.lr.ph ], [ %add.ptr124,\l... %if.end81 ]\l  %inptr.1268 = phi i8* [ %inptr.0, %for.body21.lr.ph ], [ %add.ptr122,\l... %if.end81 ]\l  %arrayidx24 = getelementptr inbounds i16, i16* %errorptr.1270, i64 %idxprom23\l  %19 = load i16, i16* %arrayidx24, align 2, !tbaa !20\l  %conv = sext i16 %19 to i32\l  %add25 = add i32 %cur0.0280, 8\l  %add26 = add i32 %add25, %conv\l  %shr = ashr i32 %add26, 4\l  %arrayidx29 = getelementptr inbounds i16, i16* %errorptr.1270, i64 %idxprom28\l  %20 = load i16, i16* %arrayidx29, align 2, !tbaa !20\l  %conv30 = sext i16 %20 to i32\l  %add31 = add i32 %cur1.0279, 8\l  %add32 = add i32 %add31, %conv30\l  %shr33 = ashr i32 %add32, 4\l  %arrayidx36 = getelementptr inbounds i16, i16* %errorptr.1270, i64 %idxprom35\l  %21 = load i16, i16* %arrayidx36, align 2, !tbaa !20\l  %conv37 = sext i16 %21 to i32\l  %add38 = add i32 %cur2.0278, 8\l  %add39 = add i32 %add38, %conv37\l  %shr40 = ashr i32 %add39, 4\l  %idxprom41 = sext i32 %shr to i64\l  %arrayidx42 = getelementptr inbounds i32, i32* %5, i64 %idxprom41\l  %22 = load i32, i32* %arrayidx42, align 4, !tbaa !21\l  %idxprom43 = sext i32 %shr33 to i64\l  %arrayidx44 = getelementptr inbounds i32, i32* %5, i64 %idxprom43\l  %23 = load i32, i32* %arrayidx44, align 4, !tbaa !21\l  %idxprom45 = sext i32 %shr40 to i64\l  %arrayidx46 = getelementptr inbounds i32, i32* %5, i64 %idxprom45\l  %24 = load i32, i32* %arrayidx46, align 4, !tbaa !21\l  %25 = load i8, i8* %inptr.1268, align 1, !tbaa !22\l  %conv48 = zext i8 %25 to i32\l  %add49 = add nsw i32 %conv48, %22\l  %arrayidx50 = getelementptr inbounds i8, i8* %inptr.1268, i64 1\l  %26 = load i8, i8* %arrayidx50, align 1, !tbaa !22\l  %conv51 = zext i8 %26 to i32\l  %add52 = add nsw i32 %conv51, %23\l  %arrayidx53 = getelementptr inbounds i8, i8* %inptr.1268, i64 2\l  %27 = load i8, i8* %arrayidx53, align 1, !tbaa !22\l  %conv54 = zext i8 %27 to i32\l  %add55 = add nsw i32 %conv54, %24\l  %idxprom56 = sext i32 %add49 to i64\l  %arrayidx57 = getelementptr inbounds i8, i8* %4, i64 %idxprom56\l  %28 = load i8, i8* %arrayidx57, align 1, !tbaa !22\l  %conv58 = zext i8 %28 to i32\l  %idxprom59 = sext i32 %add52 to i64\l  %arrayidx60 = getelementptr inbounds i8, i8* %4, i64 %idxprom59\l  %29 = load i8, i8* %arrayidx60, align 1, !tbaa !22\l  %conv61 = zext i8 %29 to i32\l  %idxprom62 = sext i32 %add55 to i64\l  %arrayidx63 = getelementptr inbounds i8, i8* %4, i64 %idxprom62\l  %30 = load i8, i8* %arrayidx63, align 1, !tbaa !22\l  %conv64 = zext i8 %30 to i32\l  %shr65261 = lshr i32 %conv64, 3\l  %idxprom66262 = zext i32 %shr65261 to i64\l  %shr67263 = lshr i32 %conv61, 2\l  %idxprom68264 = zext i32 %shr67263 to i64\l  %shr69265 = lshr i32 %conv58, 3\l  %idxprom70266 = zext i32 %shr69265 to i64\l  %arrayidx71 = getelementptr inbounds [32 x i16]*, [32 x i16]** %2, i64\l... %idxprom70266\l  %31 = load [32 x i16]*, [32 x i16]** %arrayidx71, align 8, !tbaa !17\l  %arrayidx73 = getelementptr inbounds [32 x i16], [32 x i16]* %31, i64\l... %idxprom68264, i64 %idxprom66262\l  %32 = load i16, i16* %arrayidx73, align 2, !tbaa !20\l  %cmp75 = icmp eq i16 %32, 0\l  br i1 %cmp75, label %if.then77, label %if.end81\l|{<s0>T|<s1>F}}"];
	Node0x629dcf0:s0 -> Node0x629ee40;
	Node0x629dcf0:s1 -> Node0x62a0030;
	Node0x629ee40 [shape=record, style = filled, fillcolor = blue, label="{if.then77:                                        \l  tail call fastcc void @fill_inverse_cmap(%struct.jpeg_decompress_struct*\l... %cinfo, i32 %shr69265, i32 %shr67263, i32 %shr65261)\l  %.pre = load i16, i16* %arrayidx73, align 2, !tbaa !20\l  br label %if.end81\l}"];
	Node0x629ee40 -> Node0x62a0030;
	Node0x62a0030 [shape=record, style = filled, fillcolor = blue, label="{if.end81:                                         \l  %33 = phi i16 [ %.pre, %if.then77 ], [ %32, %for.body21 ]\l  %conv82 = zext i16 %33 to i32\l  %sub83 = add nsw i32 %conv82, -1\l  %conv84 = trunc i32 %sub83 to i8\l  store i8 %conv84, i8* %outptr.1269, align 1, !tbaa !22\l  %idxprom85 = sext i32 %sub83 to i64\l  %arrayidx86 = getelementptr inbounds i8, i8* %7, i64 %idxprom85\l  %34 = load i8, i8* %arrayidx86, align 1, !tbaa !22\l  %conv87 = zext i8 %34 to i32\l  %sub88 = sub nsw i32 %conv58, %conv87\l  %arrayidx90 = getelementptr inbounds i8, i8* %8, i64 %idxprom85\l  %35 = load i8, i8* %arrayidx90, align 1, !tbaa !22\l  %conv91 = zext i8 %35 to i32\l  %sub92 = sub nsw i32 %conv61, %conv91\l  %arrayidx94 = getelementptr inbounds i8, i8* %9, i64 %idxprom85\l  %36 = load i8, i8* %arrayidx94, align 1, !tbaa !22\l  %conv95 = zext i8 %36 to i32\l  %sub96 = sub nsw i32 %conv64, %conv95\l  %add98 = mul nsw i32 %sub88, 3\l  %add99 = add nsw i32 %add98, %bpreverr0.0274\l  %conv100 = trunc i32 %add99 to i16\l  store i16 %conv100, i16* %errorptr.1270, align 2, !tbaa !20\l  %add102 = mul nsw i32 %sub88, 5\l  %add103 = add nsw i32 %add102, %belowerr0.0277\l  %add104 = mul nsw i32 %sub88, 7\l  %add106 = mul nsw i32 %sub92, 3\l  %add107 = add nsw i32 %add106, %bpreverr1.0273\l  %conv108 = trunc i32 %add107 to i16\l  %arrayidx109 = getelementptr inbounds i16, i16* %errorptr.1270, i64 1\l  store i16 %conv108, i16* %arrayidx109, align 2, !tbaa !20\l  %add110 = mul nsw i32 %sub92, 5\l  %add111 = add nsw i32 %add110, %belowerr1.0276\l  %add112 = mul nsw i32 %sub92, 7\l  %add114 = mul nsw i32 %sub96, 3\l  %add115 = add nsw i32 %add114, %bpreverr2.0272\l  %conv116 = trunc i32 %add115 to i16\l  %arrayidx117 = getelementptr inbounds i16, i16* %errorptr.1270, i64 2\l  store i16 %conv116, i16* %arrayidx117, align 2, !tbaa !20\l  %add118 = mul nsw i32 %sub96, 5\l  %add119 = add nsw i32 %add118, %belowerr2.0275\l  %add120 = mul nsw i32 %sub96, 7\l  %add.ptr122 = getelementptr inbounds i8, i8* %inptr.1268, i64 %idxprom23\l  %add.ptr124 = getelementptr inbounds i8, i8* %outptr.1269, i64 %dir.0\l  %dec = add i32 %col.0271, -1\l  %cmp20 = icmp eq i32 %dec, 0\l  br i1 %cmp20, label %for.end.loopexit, label %for.body21\l|{<s0>T|<s1>F}}"];
	Node0x62a0030:s0 -> Node0x627b8f0;
	Node0x62a0030:s1 -> Node0x629dcf0;
	Node0x627b8f0 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  %add119.lcssa = phi i32 [ %add119, %if.end81 ]\l  %add111.lcssa = phi i32 [ %add111, %if.end81 ]\l  %add103.lcssa = phi i32 [ %add103, %if.end81 ]\l  %uglygep287 = bitcast i8* %uglygep to i16*\l  br label %for.end\l}"];
	Node0x627b8f0 -> Node0x629df40;
	Node0x629df40 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %bpreverr0.0.lcssa = phi i32 [ 0, %if.end ], [ %add103.lcssa,\l... %for.end.loopexit ]\l  %bpreverr1.0.lcssa = phi i32 [ 0, %if.end ], [ %add111.lcssa,\l... %for.end.loopexit ]\l  %bpreverr2.0.lcssa = phi i32 [ 0, %if.end ], [ %add119.lcssa,\l... %for.end.loopexit ]\l  %errorptr.1.lcssa = phi i16* [ %errorptr.0, %if.end ], [ %uglygep287,\l... %for.end.loopexit ]\l  %conv127 = trunc i32 %bpreverr0.0.lcssa to i16\l  store i16 %conv127, i16* %errorptr.1.lcssa, align 2, !tbaa !20\l  %conv129 = trunc i32 %bpreverr1.0.lcssa to i16\l  %arrayidx130 = getelementptr inbounds i16, i16* %errorptr.1.lcssa, i64 1\l  store i16 %conv129, i16* %arrayidx130, align 2, !tbaa !20\l  %conv131 = trunc i32 %bpreverr2.0.lcssa to i16\l  %arrayidx132 = getelementptr inbounds i16, i16* %errorptr.1.lcssa, i64 2\l  store i16 %conv131, i16* %arrayidx132, align 2, !tbaa !20\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %lftr.wideiv = trunc i64 %indvars.iv.next to i32\l  %exitcond = icmp eq i32 %lftr.wideiv, %num_rows\l  br i1 %exitcond, label %for.end134.loopexit, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x629df40:s0 -> Node0x627c3c0;
	Node0x629df40:s1 -> Node0x629d350;
	Node0x627c3c0 [shape=record, style = filled, fillcolor = blue, label="{for.end134.loopexit:                              \l  br label %for.end134\l}"];
	Node0x627c3c0 -> Node0x629d480;
	Node0x629d480 [shape=record, style = filled, fillcolor = blue, label="{for.end134:                                       \l  ret void\l}"];
}
