digraph "CFG for 'jpeg_resync_to_restart' function" {
	label="CFG for 'jpeg_resync_to_restart' function";

	Node0x6908200 [shape=record,label="{entry:\l  %unread_marker = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 72\l  %0 = load i32, i32* %unread_marker, align 4, !tbaa !2\l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %1 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !10\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 5\l  store i32 117, i32* %msg_code, align 8, !tbaa !11\l  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 6, i32 0, i64 0\l  store i32 %0, i32* %arrayidx, align 4, !tbaa !14\l  %arrayidx5 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 6, i32 0, i64 1\l  store i32 %desired, i32* %arrayidx5, align 4, !tbaa !14\l  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 1\l  %2 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !15\l  %3 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %2(%struct.jpeg_common_struct* %3, i32 -1) #4\l  %add = add nsw i32 %desired, 1\l  %and = and i32 %add, 7\l  %add11 = or i32 %and, 208\l  %add14 = add nsw i32 %desired, 2\l  %and15 = and i32 %add14, 7\l  %add16 = or i32 %and15, 208\l  %sub = add i32 %desired, 7\l  %and20 = and i32 %sub, 7\l  %add21 = or i32 %and20, 208\l  %sub24 = add i32 %desired, 6\l  %and25 = and i32 %sub24, 7\l  %add26 = or i32 %and25, 208\l  br label %for.cond.outer\l}"];
	Node0x6908200 -> Node0x690dce0;
	Node0x690dce0 [shape=record,label="{for.cond.outer:                                   \l  %marker.0.ph = phi i32 [ %13, %if.end48 ], [ %0, %entry ]\l  %cmp = icmp slt i32 %marker.0.ph, 192\l  %cmp12 = icmp eq i32 %marker.0.ph, %add11\l  %cmp17 = icmp eq i32 %marker.0.ph, %add16\l  %cmp22 = icmp eq i32 %marker.0.ph, %add21\l  %cmp27 = icmp eq i32 %marker.0.ph, %add26\l  br i1 %cmp, label %for.cond.outer.split.us, label %for.cond.outer.split\l|{<s0>T|<s1>F}}"];
	Node0x690dce0:s0 -> Node0x690e530;
	Node0x690dce0:s1 -> Node0x690e610;
	Node0x690e530 [shape=record,label="{for.cond.outer.split.us:                          \l  %4 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !10\l  %msg_code34.us.us = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %4, i64 0, i32 5\l  store i32 96, i32* %msg_code34.us.us, align 8, !tbaa !11\l  %arrayidx38.us.us = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %4, i64 0, i32 6, i32 0, i64 0\l  store i32 %marker.0.ph, i32* %arrayidx38.us.us, align 4, !tbaa !14\l  %arrayidx42.us.us = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %4, i64 0, i32 6, i32 0, i64 1\l  store i32 2, i32* %arrayidx42.us.us, align 4, !tbaa !14\l  %emit_message44.us.us = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %4, i64 0, i32 1\l  %5 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message44.us.us, align 8, !tbaa !15\l  tail call void %5(%struct.jpeg_common_struct* %3, i32 4) #4\l  br label %sw.bb46\l}"];
	Node0x690e530 -> Node0x6910160;
	Node0x690e610 [shape=record,label="{for.cond.outer.split:                             \l  %6 = and i32 %marker.0.ph, -8\l  %7 = icmp eq i32 %6, 208\l  br i1 %7, label %if.else10.us83.preheader, label %for.cond.outer.split.split\l|{<s0>T|<s1>F}}"];
	Node0x690e610:s0 -> Node0x69103b0;
	Node0x690e610:s1 -> Node0x6910440;
	Node0x69103b0 [shape=record,label="{if.else10.us83.preheader:                         \l  %brmerge = or i1 %cmp12, %cmp17\l  %8 = or i1 %cmp22, %cmp27\l  %.. = select i1 %8, i32 2, i32 1\l  %action.0.us88 = select i1 %brmerge, i32 3, i32 %..\l  br label %if.else10.us83\l}"];
	Node0x69103b0 -> Node0x690edb0;
	Node0x690edb0 [shape=record,label="{if.else10.us83:                                   \l  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !10\l  %msg_code34.us89 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 5\l  store i32 96, i32* %msg_code34.us89, align 8, !tbaa !11\l  %arrayidx38.us90 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 0\l  store i32 %marker.0.ph, i32* %arrayidx38.us90, align 4, !tbaa !14\l  %arrayidx42.us91 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 1\l  store i32 %action.0.us88, i32* %arrayidx42.us91, align 4, !tbaa !14\l  %emit_message44.us92 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 1\l  %10 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message44.us92, align 8, !tbaa !15\l  tail call void %10(%struct.jpeg_common_struct* %3, i32 4) #4\l  switch i32 %action.0.us88, label %if.else10.us83 [\l    i32 1, label %sw.bb\l    i32 2, label %sw.bb46.loopexit\l    i32 3, label %cleanup.loopexit\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3}}"];
	Node0x690edb0:s0 -> Node0x690edb0;
	Node0x690edb0:s1 -> Node0x690a380;
	Node0x690edb0:s2 -> Node0x690a430;
	Node0x690edb0:s3 -> Node0x690a510;
	Node0x6910440 [shape=record,label="{for.cond.outer.split.split:                       \l  %marker.0.ph.lcssa = phi i32 [ %marker.0.ph, %for.cond.outer.split ]\l  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !10\l  %msg_code34.us101 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 5\l  store i32 96, i32* %msg_code34.us101, align 8, !tbaa !11\l  %arrayidx38.us102 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 6, i32 0, i64 0\l  store i32 %marker.0.ph.lcssa, i32* %arrayidx38.us102, align 4, !tbaa !14\l  %arrayidx42.us103 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 6, i32 0, i64 1\l  store i32 3, i32* %arrayidx42.us103, align 4, !tbaa !14\l  %emit_message44.us104 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 1\l  %12 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message44.us104, align 8, !tbaa !15\l  tail call void %12(%struct.jpeg_common_struct* %3, i32 4) #4\l  br label %cleanup\l}"];
	Node0x6910440 -> Node0x69122b0;
	Node0x690a380 [shape=record,label="{sw.bb:                                            \l  store i32 0, i32* %unread_marker, align 4, !tbaa !2\l  br label %cleanup\l}"];
	Node0x690a380 -> Node0x69122b0;
	Node0x690a430 [shape=record,label="{sw.bb46.loopexit:                                 \l  br label %sw.bb46\l}"];
	Node0x690a430 -> Node0x6910160;
	Node0x6910160 [shape=record,label="{sw.bb46:                                          \l  %call = tail call fastcc i32 @next_marker(%struct.jpeg_decompress_struct*\l... nonnull %cinfo)\l  %tobool = icmp eq i32 %call, 0\l  br i1 %tobool, label %cleanup.loopexit129, label %if.end48\l|{<s0>T|<s1>F}}"];
	Node0x6910160:s0 -> Node0x6912ce0;
	Node0x6910160:s1 -> Node0x690dea0;
	Node0x690dea0 [shape=record,label="{if.end48:                                         \l  %13 = load i32, i32* %unread_marker, align 4, !tbaa !2\l  br label %for.cond.outer\l}"];
	Node0x690dea0 -> Node0x690dce0;
	Node0x690a510 [shape=record,label="{cleanup.loopexit:                                 \l  br label %cleanup\l}"];
	Node0x690a510 -> Node0x69122b0;
	Node0x6912ce0 [shape=record,label="{cleanup.loopexit129:                              \l  br label %cleanup\l}"];
	Node0x6912ce0 -> Node0x69122b0;
	Node0x69122b0 [shape=record,label="{cleanup:                                          \l  %retval.0 = phi i32 [ 1, %sw.bb ], [ 1, %for.cond.outer.split.split ], [ 1,\l... %cleanup.loopexit ], [ 0, %cleanup.loopexit129 ]\l  ret i32 %retval.0\l}"];
}
