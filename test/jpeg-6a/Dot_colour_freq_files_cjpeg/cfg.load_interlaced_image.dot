digraph "CFG for 'load_interlaced_image' function" {
	label="CFG for 'load_interlaced_image' function";

	Node0x6a0f740 [shape=record,label="{entry:\l  %0 = bitcast %struct.cjpeg_source_struct* %sinfo to\l... %struct.gif_source_struct*\l  %progress1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 2\l  %1 = bitcast %struct.jpeg_progress_mgr** %progress1 to\l... %struct.cdjpeg_progress_mgr**\l  %2 = load %struct.cdjpeg_progress_mgr*, %struct.cdjpeg_progress_mgr** %1,\l... align 8, !tbaa !3\l  %image_height = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 7\l  %3 = load i32, i32* %image_height, align 4, !tbaa !11\l  %cmp70 = icmp eq i32 %3, 0\l  %cmp2 = icmp ne %struct.cdjpeg_progress_mgr* %2, null\l  br i1 %cmp70, label %for.end15, label %for.body.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x6a0f740:s0 -> Node0x6a12970;
	Node0x6a0f740:s1 -> Node0x6a12a50;
	Node0x6a12a50 [shape=record,label="{for.body.lr.ph:                                   \l  %pass_counter = getelementptr inbounds %struct.cdjpeg_progress_mgr,\l... %struct.cdjpeg_progress_mgr* %2, i64 0, i32 0, i32 1\l  %pass_limit = getelementptr inbounds %struct.cdjpeg_progress_mgr,\l... %struct.cdjpeg_progress_mgr* %2, i64 0, i32 0, i32 2\l  %progress_monitor7 = bitcast %struct.cdjpeg_progress_mgr* %2 to void\l... (%struct.jpeg_common_struct*)**\l  %4 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %mem = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1\l  %interlaced_image = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 8, i32 4\l  %5 = bitcast i8*** %interlaced_image to %struct.jvirt_sarray_control**\l  %image_width = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 6\l  %6 = bitcast i32* %image_width to i64*\l  br i1 %cmp2, label %if.then.us.preheader, label %if.end.preheader\l|{<s0>T|<s1>F}}"];
	Node0x6a12a50:s0 -> Node0x6a132d0;
	Node0x6a12a50:s1 -> Node0x6a133d0;
	Node0x6a133d0 [shape=record,label="{if.end.preheader:                                 \l  br label %if.end\l}"];
	Node0x6a133d0 -> Node0x6a13560;
	Node0x6a132d0 [shape=record,label="{if.then.us.preheader:                             \l  br label %if.then.us\l}"];
	Node0x6a132d0 -> Node0x6a13610;
	Node0x6a13610 [shape=record,label="{if.then.us:                                       \l  %7 = phi i32 [ %17, %for.inc14.us ], [ %3, %if.then.us.preheader ]\l  %row.071.us = phi i32 [ %inc.us, %for.inc14.us ], [ 0, %if.then.us.preheader\l... ]\l  %conv.us = zext i32 %row.071.us to i64\l  store i64 %conv.us, i64* %pass_counter, align 8, !tbaa !12\l  %conv4.us = zext i32 %7 to i64\l  store i64 %conv4.us, i64* %pass_limit, align 8, !tbaa !16\l  %8 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %progress_monitor7, align 8, !tbaa !17\l  tail call void %8(%struct.jpeg_common_struct* %4) #4\l  %9 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !18\l  %access_virt_sarray.us = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %9, i64 0, i32 7\l  %10 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*,\l... i32, i32, i32)*, i8** (%struct.jpeg_common_struct*,\l... %struct.jvirt_sarray_control*, i32, i32, i32)** %access_virt_sarray.us, align\l... 8, !tbaa !19\l  %11 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5,\l... align 8, !tbaa !21\l  %call.us = tail call i8** %10(%struct.jpeg_common_struct* %4,\l... %struct.jvirt_sarray_control* %11, i32 %row.071.us, i32 1, i32 1) #4\l  %12 = load i64, i64* %6, align 8\l  %13 = trunc i64 %12 to i32\l  %cmp967.us = icmp eq i32 %13, 0\l  %14 = lshr i64 %12, 32\l  %15 = trunc i64 %14 to i32\l  br i1 %cmp967.us, label %for.inc14.us, label %for.body11.us.preheader\l|{<s0>T|<s1>F}}"];
	Node0x6a13610:s0 -> Node0x6a13700;
	Node0x6a13610:s1 -> Node0x6a15000;
	Node0x6a15000 [shape=record,label="{for.body11.us.preheader:                          \l  %16 = load i8*, i8** %call.us, align 8, !tbaa !24\l  br label %for.body11.us\l}"];
	Node0x6a15000 -> Node0x6a13fb0;
	Node0x6a13fb0 [shape=record,label="{for.body11.us:                                    \l  %sptr.069.us = phi i8* [ %incdec.ptr.us, %for.body11.us ], [ %16,\l... %for.body11.us.preheader ]\l  %col.068.us = phi i32 [ %dec.us, %for.body11.us ], [ %13,\l... %for.body11.us.preheader ]\l  %call12.us = tail call fastcc i32 @LZWReadByte(%struct.gif_source_struct* %0)\l  %conv13.us = trunc i32 %call12.us to i8\l  %incdec.ptr.us = getelementptr inbounds i8, i8* %sptr.069.us, i64 1\l  store i8 %conv13.us, i8* %sptr.069.us, align 1, !tbaa !25\l  %dec.us = add i32 %col.068.us, -1\l  %cmp9.us = icmp eq i32 %dec.us, 0\l  br i1 %cmp9.us, label %for.inc14.us.loopexit, label %for.body11.us\l|{<s0>T|<s1>F}}"];
	Node0x6a13fb0:s0 -> Node0x6a15b20;
	Node0x6a13fb0:s1 -> Node0x6a13fb0;
	Node0x6a15b20 [shape=record,label="{for.inc14.us.loopexit:                            \l  %.pre74 = load i32, i32* %image_height, align 4, !tbaa !11\l  br label %for.inc14.us\l}"];
	Node0x6a15b20 -> Node0x6a13700;
	Node0x6a13700 [shape=record,label="{for.inc14.us:                                     \l  %17 = phi i32 [ %.pre74, %for.inc14.us.loopexit ], [ %15, %if.then.us ]\l  %inc.us = add i32 %row.071.us, 1\l  %cmp.us = icmp ult i32 %inc.us, %17\l  br i1 %cmp.us, label %if.then.us, label %for.end15.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6a13700:s0 -> Node0x6a13610;
	Node0x6a13700:s1 -> Node0x6a15dc0;
	Node0x6a13560 [shape=record,label="{if.end:                                           \l  %row.071 = phi i32 [ %inc, %for.inc14 ], [ 0, %if.end.preheader ]\l  %18 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !18\l  %access_virt_sarray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %18, i64 0, i32 7\l  %19 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*,\l... i32, i32, i32)*, i8** (%struct.jpeg_common_struct*,\l... %struct.jvirt_sarray_control*, i32, i32, i32)** %access_virt_sarray, align 8,\l... !tbaa !19\l  %20 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5,\l... align 8, !tbaa !21\l  %call = tail call i8** %19(%struct.jpeg_common_struct* %4,\l... %struct.jvirt_sarray_control* %20, i32 %row.071, i32 1, i32 1) #4\l  %21 = load i64, i64* %6, align 8\l  %22 = trunc i64 %21 to i32\l  %cmp967 = icmp eq i32 %22, 0\l  %23 = lshr i64 %21, 32\l  %24 = trunc i64 %23 to i32\l  br i1 %cmp967, label %for.inc14, label %for.body11.preheader\l|{<s0>T|<s1>F}}"];
	Node0x6a13560:s0 -> Node0x6a15f10;
	Node0x6a13560:s1 -> Node0x6a16c50;
	Node0x6a16c50 [shape=record,label="{for.body11.preheader:                             \l  %25 = load i8*, i8** %call, align 8, !tbaa !24\l  br label %for.body11\l}"];
	Node0x6a16c50 -> Node0x6a16d90;
	Node0x6a16d90 [shape=record,label="{for.body11:                                       \l  %sptr.069 = phi i8* [ %incdec.ptr, %for.body11 ], [ %25,\l... %for.body11.preheader ]\l  %col.068 = phi i32 [ %dec, %for.body11 ], [ %22, %for.body11.preheader ]\l  %call12 = tail call fastcc i32 @LZWReadByte(%struct.gif_source_struct* %0)\l  %conv13 = trunc i32 %call12 to i8\l  %incdec.ptr = getelementptr inbounds i8, i8* %sptr.069, i64 1\l  store i8 %conv13, i8* %sptr.069, align 1, !tbaa !25\l  %dec = add i32 %col.068, -1\l  %cmp9 = icmp eq i32 %dec, 0\l  br i1 %cmp9, label %for.inc14.loopexit, label %for.body11\l|{<s0>T|<s1>F}}"];
	Node0x6a16d90:s0 -> Node0x6a177e0;
	Node0x6a16d90:s1 -> Node0x6a16d90;
	Node0x6a177e0 [shape=record,label="{for.inc14.loopexit:                               \l  %.pre = load i32, i32* %image_height, align 4, !tbaa !11\l  br label %for.inc14\l}"];
	Node0x6a177e0 -> Node0x6a15f10;
	Node0x6a15f10 [shape=record,label="{for.inc14:                                        \l  %26 = phi i32 [ %.pre, %for.inc14.loopexit ], [ %24, %if.end ]\l  %inc = add i32 %row.071, 1\l  %cmp = icmp ult i32 %inc, %26\l  br i1 %cmp, label %if.end, label %for.end15.loopexit83\l|{<s0>T|<s1>F}}"];
	Node0x6a15f10:s0 -> Node0x6a13560;
	Node0x6a15f10:s1 -> Node0x6a17a80;
	Node0x6a15dc0 [shape=record,label="{for.end15.loopexit:                               \l  %.lcssa = phi i32 [ %17, %for.inc14.us ]\l  br label %for.end15\l}"];
	Node0x6a15dc0 -> Node0x6a12970;
	Node0x6a17a80 [shape=record,label="{for.end15.loopexit83:                             \l  %.lcssa85 = phi i32 [ %26, %for.inc14 ]\l  br label %for.end15\l}"];
	Node0x6a17a80 -> Node0x6a12970;
	Node0x6a12970 [shape=record,label="{for.end15:                                        \l  %27 = phi i32 [ 0, %entry ], [ %.lcssa, %for.end15.loopexit ], [ %.lcssa85,\l... %for.end15.loopexit83 ]\l  br i1 %cmp2, label %if.then18, label %if.end20\l|{<s0>T|<s1>F}}"];
	Node0x6a12970:s0 -> Node0x6a17d70;
	Node0x6a12970:s1 -> Node0x6a17e20;
	Node0x6a17d70 [shape=record,label="{if.then18:                                        \l  %completed_extra_passes = getelementptr inbounds\l... %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %2, i64 0, i32 1\l  %28 = load i32, i32* %completed_extra_passes, align 8, !tbaa !26\l  %inc19 = add nsw i32 %28, 1\l  store i32 %inc19, i32* %completed_extra_passes, align 8, !tbaa !26\l  br label %if.end20\l}"];
	Node0x6a17d70 -> Node0x6a17e20;
	Node0x6a17e20 [shape=record,label="{if.end20:                                         \l  %get_pixel_rows = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 0, i32 1\l  store i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)*\l... @get_interlaced_row, i32 (%struct.jpeg_compress_struct*,\l... %struct.cjpeg_source_struct*)** %get_pixel_rows, align 8, !tbaa !27\l  %29 = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 8, i32 5\l  store i32 0, i32* %29, align 8, !tbaa !28\l  %add = add i32 %27, 7\l  %div = lshr i32 %add, 3\l  %pass2_offset = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %0, i64 0, i32 24\l  store i32 %div, i32* %pass2_offset, align 4, !tbaa !29\l  %add25 = add i32 %27, 3\l  %div26 = lshr i32 %add25, 3\l  %add27 = add nuw nsw i32 %div26, %div\l  %pass3_offset = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 9\l  %30 = bitcast %struct.cjpeg_source_struct* %pass3_offset to i32*\l  store i32 %add27, i32* %30, align 8, !tbaa !30\l  %add30 = add i32 %27, 1\l  %div31 = lshr i32 %add30, 2\l  %add32 = add nuw nsw i32 %div31, %add27\l  %pass4_offset = getelementptr inbounds %struct.gif_source_struct,\l... %struct.gif_source_struct* %0, i64 0, i32 26\l  store i32 %add32, i32* %pass4_offset, align 4, !tbaa !31\l  %call33 = tail call i32 @get_interlaced_row(%struct.jpeg_compress_struct*\l... nonnull %cinfo, %struct.cjpeg_source_struct* %sinfo)\l  ret i32 1\l}"];
}
