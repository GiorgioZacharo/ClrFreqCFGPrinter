digraph "CFG for 'jinit_d_coef_controller' function" {
	label="CFG for 'jinit_d_coef_controller' function";

	Node0x583e5e0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !2\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %0, i64 0, i32 0\l  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !10\l  %2 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %1(%struct.jpeg_common_struct* %2, i32 1, i64 224) #5\l  %coef1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 75\l  %3 = bitcast %struct.jpeg_d_coef_controller** %coef1 to i8**\l  store i8* %call, i8** %3, align 8, !tbaa !13\l  %start_input_pass = bitcast i8* %call to void\l... (%struct.jpeg_decompress_struct*)**\l  store void (%struct.jpeg_decompress_struct*)* @start_input_pass, void\l... (%struct.jpeg_decompress_struct*)** %start_input_pass, align 8, !tbaa !14\l  %start_output_pass = getelementptr inbounds i8, i8* %call, i64 16\l  %4 = bitcast i8* %start_output_pass to void\l... (%struct.jpeg_decompress_struct*)**\l  store void (%struct.jpeg_decompress_struct*)* @start_output_pass, void\l... (%struct.jpeg_decompress_struct*)** %4, align 8, !tbaa !17\l  %coef_bits_latch = getelementptr inbounds i8, i8* %call, i64 216\l  %5 = bitcast i8* %coef_bits_latch to i32**\l  store i32* null, i32** %5, align 8, !tbaa !18\l  %tobool = icmp eq i32 %need_full_buffer, 0\l  br i1 %tobool, label %if.else, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x583e5e0:s0 -> Node0x5841780;
	Node0x583e5e0:s1 -> Node0x5841850;
	Node0x5841850 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %num_components = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  %6 = load i32, i32* %num_components, align 8, !tbaa !19\l  %cmp76 = icmp sgt i32 %6, 0\l  br i1 %cmp76, label %for.body.lr.ph, label %if.then.for.end_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x5841850:s0 -> Node0x5841d20;
	Node0x5841850:s1 -> Node0x5841e00;
	Node0x5841e00 [shape=record, style = filled, fillcolor = blue, label="{if.then.for.end_crit_edge:                        \l  %.pre = getelementptr inbounds i8, i8* %call, i64 136\l  br label %for.end\l}"];
	Node0x5841e00 -> Node0x58420a0;
	Node0x5841d20 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  %comp_info = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43\l  %7 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !20\l  %progressive_mode = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 44\l  %whole_image = getelementptr inbounds i8, i8* %call, i64 136\l  %8 = bitcast i8* %whole_image to [10 x %struct.jvirt_barray_control*]*\l  br label %for.body\l}"];
	Node0x5841d20 -> Node0x5840c20;
	Node0x5840c20 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %indvars.iv79 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next80,\l... %for.body ]\l  %compptr.077 = phi %struct.jpeg_component_info* [ %7, %for.body.lr.ph ], [\l... %incdec.ptr, %for.body ]\l  %v_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.077, i64 0, i32 3\l  %9 = load i32, i32* %v_samp_factor, align 4, !tbaa !21\l  %10 = load i32, i32* %progressive_mode, align 8, !tbaa !23\l  %tobool3 = icmp eq i32 %10, 0\l  %mul = mul nsw i32 %9, 3\l  %.mul = select i1 %tobool3, i32 %9, i32 %mul\l  %11 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %request_virt_barray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %11, i64 0, i32 5\l  %12 = load %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32,\l... i32, i32, i32, i32)*, %struct.jvirt_barray_control*\l... (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)**\l... %request_virt_barray, align 8, !tbaa !24\l  %width_in_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.077, i64 0, i32 7\l  %13 = load i32, i32* %width_in_blocks, align 4, !tbaa !25\l  %conv = zext i32 %13 to i64\l  %h_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.077, i64 0, i32 2\l  %14 = load i32, i32* %h_samp_factor, align 8, !tbaa !26\l  %conv6 = sext i32 %14 to i64\l  %call7 = tail call i64 @jround_up(i64 %conv, i64 %conv6) #5\l  %conv8 = trunc i64 %call7 to i32\l  %height_in_blocks = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.077, i64 0, i32 8\l  %15 = load i32, i32* %height_in_blocks, align 8, !tbaa !27\l  %conv9 = zext i32 %15 to i64\l  %16 = load i32, i32* %v_samp_factor, align 4, !tbaa !21\l  %conv11 = sext i32 %16 to i64\l  %call12 = tail call i64 @jround_up(i64 %conv9, i64 %conv11) #5\l  %conv13 = trunc i64 %call12 to i32\l  %call14 = tail call %struct.jvirt_barray_control*\l... %12(%struct.jpeg_common_struct* nonnull %2, i32 1, i32 1, i32 %conv8, i32\l... %conv13, i32 %.mul) #5\l  %arrayidx = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10\l... x %struct.jvirt_barray_control*]* %8, i64 0, i64 %indvars.iv79\l  store %struct.jvirt_barray_control* %call14, %struct.jvirt_barray_control**\l... %arrayidx, align 8, !tbaa !28\l  %indvars.iv.next80 = add nuw nsw i64 %indvars.iv79, 1\l  %incdec.ptr = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.077, i64 1\l  %17 = load i32, i32* %num_components, align 8, !tbaa !19\l  %18 = sext i32 %17 to i64\l  %cmp = icmp slt i64 %indvars.iv.next80, %18\l  br i1 %cmp, label %for.body, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5840c20:s0 -> Node0x5840c20;
	Node0x5840c20:s1 -> Node0x5846100;
	Node0x5846100 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  br label %for.end\l}"];
	Node0x5846100 -> Node0x58420a0;
	Node0x58420a0 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %whole_image17.pre-phi = phi i8* [ %.pre, %if.then.for.end_crit_edge ], [\l... %whole_image, %for.end.loopexit ]\l  %consume_data = getelementptr inbounds i8, i8* %call, i64 8\l  %19 = bitcast i8* %consume_data to i32 (%struct.jpeg_decompress_struct*)**\l  store i32 (%struct.jpeg_decompress_struct*)* @consume_data, i32\l... (%struct.jpeg_decompress_struct*)** %19, align 8, !tbaa !29\l  %decompress_data = getelementptr inbounds i8, i8* %call, i64 24\l  %20 = bitcast i8* %decompress_data to i32 (%struct.jpeg_decompress_struct*,\l... i8***)**\l  store i32 (%struct.jpeg_decompress_struct*, i8***)* @decompress_data, i32\l... (%struct.jpeg_decompress_struct*, i8***)** %20, align 8, !tbaa !30\l  %coef_arrays = getelementptr inbounds i8, i8* %call, i64 32\l  %21 = bitcast i8* %coef_arrays to i8**\l  store i8* %whole_image17.pre-phi, i8** %21, align 8, !tbaa !31\l  br label %if.end36\l}"];
	Node0x58420a0 -> Node0x58471d0;
	Node0x5841780 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %22 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_large = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %22, i64 0, i32 1\l  %23 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_large, align 8, !tbaa !32\l  %call20 = tail call i8* %23(%struct.jpeg_common_struct* %2, i32 1, i64 1280)\l... #5\l  %MCU_buffer = getelementptr inbounds i8, i8* %call, i64 56\l  %24 = bitcast i8* %MCU_buffer to i8**\l  store i8* %call20, i8** %24, align 8, !tbaa !28\l  %arrayidx26.1 = getelementptr inbounds i8, i8* %call, i64 64\l  %25 = insertelement \<2 x i8*\> undef, i8* %call20, i32 0\l  %26 = insertelement \<2 x i8*\> %25, i8* %call20, i32 1\l  %27 = getelementptr i8, \<2 x i8*\> %26, \<2 x i64\> \<i64 128, i64 256\>\l  %28 = bitcast i8* %arrayidx26.1 to \<2 x i8*\>*\l  store \<2 x i8*\> %27, \<2 x i8*\>* %28, align 8, !tbaa !28\l  %arrayidx26.3 = getelementptr inbounds i8, i8* %call, i64 80\l  %29 = getelementptr i8, \<2 x i8*\> %26, \<2 x i64\> \<i64 384, i64 512\>\l  %30 = bitcast i8* %arrayidx26.3 to \<2 x i8*\>*\l  store \<2 x i8*\> %29, \<2 x i8*\>* %30, align 8, !tbaa !28\l  %arrayidx26.5 = getelementptr inbounds i8, i8* %call, i64 96\l  %31 = getelementptr i8, \<2 x i8*\> %26, \<2 x i64\> \<i64 640, i64 768\>\l  %32 = bitcast i8* %arrayidx26.5 to \<2 x i8*\>*\l  store \<2 x i8*\> %31, \<2 x i8*\>* %32, align 8, !tbaa !28\l  %arrayidx26.7 = getelementptr inbounds i8, i8* %call, i64 112\l  %33 = getelementptr i8, \<2 x i8*\> %26, \<2 x i64\> \<i64 896, i64 1024\>\l  %34 = bitcast i8* %arrayidx26.7 to \<2 x i8*\>*\l  store \<2 x i8*\> %33, \<2 x i8*\>* %34, align 8, !tbaa !28\l  %add.ptr.9 = getelementptr inbounds i8, i8* %call20, i64 1152\l  %arrayidx26.9 = getelementptr inbounds i8, i8* %call, i64 128\l  %35 = bitcast i8* %arrayidx26.9 to i8**\l  store i8* %add.ptr.9, i8** %35, align 8, !tbaa !28\l  %consume_data31 = getelementptr inbounds i8, i8* %call, i64 8\l  %36 = bitcast i8* %consume_data31 to i32 (%struct.jpeg_decompress_struct*)**\l  store i32 (%struct.jpeg_decompress_struct*)* @dummy_consume_data, i32\l... (%struct.jpeg_decompress_struct*)** %36, align 8, !tbaa !29\l  %decompress_data33 = getelementptr inbounds i8, i8* %call, i64 24\l  %37 = bitcast i8* %decompress_data33 to i32\l... (%struct.jpeg_decompress_struct*, i8***)**\l  store i32 (%struct.jpeg_decompress_struct*, i8***)* @decompress_onepass, i32\l... (%struct.jpeg_decompress_struct*, i8***)** %37, align 8, !tbaa !30\l  %coef_arrays35 = getelementptr inbounds i8, i8* %call, i64 32\l  %38 = bitcast i8* %coef_arrays35 to %struct.jvirt_barray_control***\l  store %struct.jvirt_barray_control** null, %struct.jvirt_barray_control***\l... %38, align 8, !tbaa !31\l  br label %if.end36\l}"];
	Node0x5841780 -> Node0x58471d0;
	Node0x58471d0 [shape=record, style = filled, fillcolor = blue, label="{if.end36:                                         \l  ret void\l}"];
}
