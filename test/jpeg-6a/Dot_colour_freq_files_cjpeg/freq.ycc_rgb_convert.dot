digraph "CFG for 'ycc_rgb_convert' function" {
	label="CFG for 'ycc_rgb_convert' function";

	Node0x6704070 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %cconvert1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 82\l  %0 = bitcast %struct.jpeg_color_deconverter** %cconvert1 to\l... %struct.my_color_deconverter**\l  %1 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %0,\l... align 8, !tbaa !2\l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %2 = load i32, i32* %output_width, align 8, !tbaa !10\l  %sample_range_limit = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 61\l  %3 = load i8*, i8** %sample_range_limit, align 8, !tbaa !11\l  %Cr_r_tab = getelementptr inbounds %struct.my_color_deconverter,\l... %struct.my_color_deconverter* %1, i64 0, i32 1\l  %4 = load i32*, i32** %Cr_r_tab, align 8, !tbaa !12\l  %Cb_b_tab = getelementptr inbounds %struct.my_color_deconverter,\l... %struct.my_color_deconverter* %1, i64 0, i32 2\l  %5 = load i32*, i32** %Cb_b_tab, align 8, !tbaa !15\l  %Cr_g_tab = getelementptr inbounds %struct.my_color_deconverter,\l... %struct.my_color_deconverter* %1, i64 0, i32 3\l  %6 = load i64*, i64** %Cr_g_tab, align 8, !tbaa !16\l  %Cb_g_tab = getelementptr inbounds %struct.my_color_deconverter,\l... %struct.my_color_deconverter* %1, i64 0, i32 4\l  %7 = load i64*, i64** %Cb_g_tab, align 8, !tbaa !17\l  %cmp83 = icmp sgt i32 %num_rows, 0\l  br i1 %cmp83, label %while.body.lr.ph, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x6704070:s0 -> Node0x6716960;
	Node0x6704070:s1 -> Node0x6716a40;
	Node0x6716960 [shape=record, style = filled, fillcolor = blue, label="{while.body.lr.ph:                                 \l  %arrayidx4 = getelementptr inbounds i8**, i8*** %input_buf, i64 1\l  %arrayidx7 = getelementptr inbounds i8**, i8*** %input_buf, i64 2\l  %cmp979 = icmp eq i32 %2, 0\l  br i1 %cmp979, label %while.end, label %while.body.us.preheader\l|{<s0>T|<s1>F}}"];
	Node0x6716960:s0 -> Node0x6716a40;
	Node0x6716960:s1 -> Node0x6716db0;
	Node0x6716db0 [shape=record, style = filled, fillcolor = blue, label="{while.body.us.preheader:                          \l  br label %while.body.us\l}"];
	Node0x6716db0 -> Node0x6716ee0;
	Node0x6716ee0 [shape=record, style = filled, fillcolor = blue, label="{while.body.us:                                    \l  %dec86.us.in = phi i32 [ %dec86.us,\l... %for.cond.while.cond.loopexit_crit_edge.us ], [ %num_rows,\l... %while.body.us.preheader ]\l  %input_row.addr.085.us = phi i32 [ %inc.us,\l... %for.cond.while.cond.loopexit_crit_edge.us ], [ %input_row,\l... %while.body.us.preheader ]\l  %output_buf.addr.084.us = phi i8** [ %incdec.ptr.us,\l... %for.cond.while.cond.loopexit_crit_edge.us ], [ %output_buf,\l... %while.body.us.preheader ]\l  %dec86.us = add nsw i32 %dec86.us.in, -1\l  %idxprom.us = zext i32 %input_row.addr.085.us to i64\l  %8 = load i8**, i8*** %input_buf, align 8, !tbaa !18\l  %arrayidx2.us = getelementptr inbounds i8*, i8** %8, i64 %idxprom.us\l  %9 = load i8*, i8** %arrayidx2.us, align 8, !tbaa !18\l  %10 = load i8**, i8*** %arrayidx4, align 8, !tbaa !18\l  %arrayidx5.us = getelementptr inbounds i8*, i8** %10, i64 %idxprom.us\l  %11 = load i8*, i8** %arrayidx5.us, align 8, !tbaa !18\l  %12 = load i8**, i8*** %arrayidx7, align 8, !tbaa !18\l  %arrayidx8.us = getelementptr inbounds i8*, i8** %12, i64 %idxprom.us\l  %13 = load i8*, i8** %arrayidx8.us, align 8, !tbaa !18\l  %inc.us = add i32 %input_row.addr.085.us, 1\l  %14 = load i8*, i8** %output_buf.addr.084.us, align 8, !tbaa !18\l  br label %for.body.us\l}"];
	Node0x6716ee0 -> Node0x6716440;
	Node0x6716440 [shape=record, style = filled, fillcolor = blue, label="{for.body.us:                                      \l  %indvars.iv = phi i64 [ 0, %while.body.us ], [ %indvars.iv.next,\l... %for.body.us ]\l  %outptr.081.us = phi i8* [ %14, %while.body.us ], [ %add.ptr.us,\l... %for.body.us ]\l  %arrayidx11.us = getelementptr inbounds i8, i8* %9, i64 %indvars.iv\l  %15 = load i8, i8* %arrayidx11.us, align 1, !tbaa !19\l  %conv.us = zext i8 %15 to i32\l  %arrayidx13.us = getelementptr inbounds i8, i8* %11, i64 %indvars.iv\l  %16 = load i8, i8* %arrayidx13.us, align 1, !tbaa !19\l  %arrayidx16.us = getelementptr inbounds i8, i8* %13, i64 %indvars.iv\l  %17 = load i8, i8* %arrayidx16.us, align 1, !tbaa !19\l  %idxprom18.us = zext i8 %17 to i64\l  %arrayidx19.us = getelementptr inbounds i32, i32* %4, i64 %idxprom18.us\l  %18 = load i32, i32* %arrayidx19.us, align 4, !tbaa !20\l  %add.us = add nsw i32 %18, %conv.us\l  %idxprom20.us = sext i32 %add.us to i64\l  %arrayidx21.us = getelementptr inbounds i8, i8* %3, i64 %idxprom20.us\l  %19 = load i8, i8* %arrayidx21.us, align 1, !tbaa !19\l  store i8 %19, i8* %outptr.081.us, align 1, !tbaa !19\l  %idxprom23.us = zext i8 %16 to i64\l  %arrayidx24.us = getelementptr inbounds i64, i64* %7, i64 %idxprom23.us\l  %20 = load i64, i64* %arrayidx24.us, align 8, !tbaa !21\l  %arrayidx26.us = getelementptr inbounds i64, i64* %6, i64 %idxprom18.us\l  %21 = load i64, i64* %arrayidx26.us, align 8, !tbaa !21\l  %add27.us = add nsw i64 %21, %20\l  %shr78.us = lshr i64 %add27.us, 16\l  %conv28.us = trunc i64 %shr78.us to i32\l  %add29.us = add nsw i32 %conv28.us, %conv.us\l  %idxprom30.us = sext i32 %add29.us to i64\l  %arrayidx31.us = getelementptr inbounds i8, i8* %3, i64 %idxprom30.us\l  %22 = load i8, i8* %arrayidx31.us, align 1, !tbaa !19\l  %arrayidx32.us = getelementptr inbounds i8, i8* %outptr.081.us, i64 1\l  store i8 %22, i8* %arrayidx32.us, align 1, !tbaa !19\l  %arrayidx34.us = getelementptr inbounds i32, i32* %5, i64 %idxprom23.us\l  %23 = load i32, i32* %arrayidx34.us, align 4, !tbaa !20\l  %add35.us = add nsw i32 %23, %conv.us\l  %idxprom36.us = sext i32 %add35.us to i64\l  %arrayidx37.us = getelementptr inbounds i8, i8* %3, i64 %idxprom36.us\l  %24 = load i8, i8* %arrayidx37.us, align 1, !tbaa !19\l  %arrayidx38.us = getelementptr inbounds i8, i8* %outptr.081.us, i64 2\l  store i8 %24, i8* %arrayidx38.us, align 1, !tbaa !19\l  %add.ptr.us = getelementptr inbounds i8, i8* %outptr.081.us, i64 3\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %lftr.wideiv = trunc i64 %indvars.iv.next to i32\l  %exitcond = icmp eq i32 %lftr.wideiv, %2\l  br i1 %exitcond, label %for.cond.while.cond.loopexit_crit_edge.us, label\l... %for.body.us\l|{<s0>T|<s1>F}}"];
	Node0x6716440:s0 -> Node0x6717070;
	Node0x6716440:s1 -> Node0x6716440;
	Node0x6717070 [shape=record, style = filled, fillcolor = blue, label="{for.cond.while.cond.loopexit_crit_edge.us:        \l  %incdec.ptr.us = getelementptr inbounds i8*, i8** %output_buf.addr.084.us,\l... i64 1\l  %cmp.us = icmp sgt i32 %dec86.us.in, 1\l  br i1 %cmp.us, label %while.body.us, label %while.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6717070:s0 -> Node0x6716ee0;
	Node0x6717070:s1 -> Node0x671ab00;
	Node0x671ab00 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit:                               \l  br label %while.end\l}"];
	Node0x671ab00 -> Node0x6716a40;
	Node0x6716a40 [shape=record, style = filled, fillcolor = blue, label="{while.end:                                        \l  ret void\l}"];
}
