digraph "CFG for 'emit_dht' function" {
	label="CFG for 'emit_dht' function";

	Node0x5b3e4f0 [shape=record, style = filled, fillcolor = skyblue, label="{entry:\l  %tobool = icmp eq i32 %is_ac, 0\l  %idxprom = sext i32 %index to i64\l  %arrayidx = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 17, i64 %idxprom\l  %add = add nsw i32 %index, 16\l  %arrayidx2 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 %idxprom\l  %index.addr.0 = select i1 %tobool, i32 %index, i32 %add\l  %htbl.0.in = select i1 %tobool, %struct.JHUFF_TBL** %arrayidx2,\l... %struct.JHUFF_TBL** %arrayidx\l  %htbl.0 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %htbl.0.in, align 8,\l... !tbaa !3\l  %cmp = icmp eq %struct.JHUFF_TBL* %htbl.0, null\l  br i1 %cmp, label %if.then3, label %if.end8, !prof !7\l|{<s0>T|<s1>F}}"];
	Node0x5b3e4f0:s0 -> Node0x5b3e2c0;
	Node0x5b3e4f0:s1 -> Node0x5b3e340;
	Node0x5b3e2c0 [shape=record, style = filled, fillcolor = blue, label="{if.then3:                                         \l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %0 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !8\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %0, i64 0, i32 5\l  store i32 49, i32* %msg_code, align 8, !tbaa !13\l  %arrayidx6 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %0, i64 0, i32 6, i32 0, i64 0\l  store i32 %index.addr.0, i32* %arrayidx6, align 4, !tbaa !16\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %0, i64 0, i32 0\l  %1 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !17\l  %2 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %1(%struct.jpeg_common_struct* %2) #1\l  br label %if.end8\l}"];
	Node0x5b3e2c0 -> Node0x5b3e340;
	Node0x5b3e340 [shape=record, style = filled, fillcolor = skyblue, label="{if.end8:                                          \l  %sent_table = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl.0, i64 0, i32 2\l  %3 = load i32, i32* %sent_table, align 4, !tbaa !18\l  %tobool9 = icmp eq i32 %3, 0\l  br i1 %tobool9, label %if.then10, label %if.end40, !prof !20\l|{<s0>T|<s1>F}}"];
	Node0x5b3e340:s0 -> Node0x5b4f8e0;
	Node0x5b3e340:s1 -> Node0x5b4f9c0;
	Node0x5b4f8e0 [shape=record, style = filled, fillcolor = skyblue, label="{if.then10:                                        \l  %dest1.i.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 5\l  %4 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !21\l  %next_output_byte.i.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %4, i64 0, i32 0\l  %5 = load i8*, i8** %next_output_byte.i.i, align 8, !tbaa !22\l  %incdec.ptr.i.i = getelementptr inbounds i8, i8* %5, i64 1\l  store i8* %incdec.ptr.i.i, i8** %next_output_byte.i.i, align 8, !tbaa !22\l  store i8 -1, i8* %5, align 1, !tbaa !24\l  %free_in_buffer.i.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %4, i64 0, i32 1\l  %6 = load i64, i64* %free_in_buffer.i.i, align 8, !tbaa !25\l  %dec.i.i = add i64 %6, -1\l  store i64 %dec.i.i, i64* %free_in_buffer.i.i, align 8, !tbaa !25\l  %cmp.i.i = icmp eq i64 %dec.i.i, 0\l  br i1 %cmp.i.i, label %if.then.i.i, label %emit_byte.exit.i, !prof !26\l|{<s0>T|<s1>F}}"];
	Node0x5b4f8e0:s0 -> Node0x5b50510;
	Node0x5b4f8e0:s1 -> Node0x5b505f0;
	Node0x5b50510 [shape=record, style = filled, fillcolor = blue, label="{if.then.i.i:                                      \l  %empty_output_buffer.i.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %4, i64 0, i32 3\l  %7 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i, align 8, !tbaa !27\l  %call.i.i = tail call i32 %7(%struct.jpeg_compress_struct* nonnull %cinfo) #1\l  %tobool.i.i = icmp eq i32 %call.i.i, 0\l  br i1 %tobool.i.i, label %if.then3.i.i, label %emit_byte.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x5b50510:s0 -> Node0x5b50a20;
	Node0x5b50510:s1 -> Node0x5b505f0;
	Node0x5b50a20 [shape=record, style = filled, fillcolor = blue, label="{if.then3.i.i:                                     \l  %err.i.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i.i, align\l... 8, !tbaa !8\l  %msg_code.i.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 5\l  store i32 22, i32* %msg_code.i.i, align 8, !tbaa !13\l  %error_exit.i.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 0\l  %9 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i.i, align 8, !tbaa !17\l  %10 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %9(%struct.jpeg_common_struct* %10) #1\l  br label %emit_byte.exit.i\l}"];
	Node0x5b50a20 -> Node0x5b505f0;
	Node0x5b505f0 [shape=record, style = filled, fillcolor = skyblue, label="{emit_byte.exit.i:                                 \l  %11 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !21\l  %next_output_byte.i3.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %11, i64 0, i32 0\l  %12 = load i8*, i8** %next_output_byte.i3.i, align 8, !tbaa !22\l  %incdec.ptr.i4.i = getelementptr inbounds i8, i8* %12, i64 1\l  store i8* %incdec.ptr.i4.i, i8** %next_output_byte.i3.i, align 8, !tbaa !22\l  store i8 -60, i8* %12, align 1, !tbaa !24\l  %free_in_buffer.i5.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %11, i64 0, i32 1\l  %13 = load i64, i64* %free_in_buffer.i5.i, align 8, !tbaa !25\l  %dec.i6.i = add i64 %13, -1\l  store i64 %dec.i6.i, i64* %free_in_buffer.i5.i, align 8, !tbaa !25\l  %cmp.i7.i = icmp eq i64 %dec.i6.i, 0\l  br i1 %cmp.i7.i, label %if.then.i11.i, label %for.body.preheader, !prof !26\l|{<s0>T|<s1>F}}"];
	Node0x5b505f0:s0 -> Node0x5b51740;
	Node0x5b505f0:s1 -> Node0x5b51850;
	Node0x5b51740 [shape=record, style = filled, fillcolor = blue, label="{if.then.i11.i:                                    \l  %empty_output_buffer.i8.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %11, i64 0, i32 3\l  %14 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i8.i, align 8, !tbaa\l... !27\l  %call.i9.i = tail call i32 %14(%struct.jpeg_compress_struct* nonnull %cinfo)\l... #1\l  %tobool.i10.i = icmp eq i32 %call.i9.i, 0\l  br i1 %tobool.i10.i, label %if.then3.i15.i, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5b51740:s0 -> Node0x5b51c20;
	Node0x5b51740:s1 -> Node0x5b51850;
	Node0x5b51c20 [shape=record, style = filled, fillcolor = blue, label="{if.then3.i15.i:                                   \l  %err.i12.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i12.i,\l... align 8, !tbaa !8\l  %msg_code.i13.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %15, i64 0, i32 5\l  store i32 22, i32* %msg_code.i13.i, align 8, !tbaa !13\l  %error_exit.i14.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %15, i64 0, i32 0\l  %16 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i14.i, align 8, !tbaa !17\l  %17 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %16(%struct.jpeg_common_struct* %17) #1\l  br label %for.body.preheader\l}"];
	Node0x5b51c20 -> Node0x5b51850;
	Node0x5b51850 [shape=record, style = filled, fillcolor = skyblue, label="{for.body.preheader:                               \l  %arrayidx13 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl.0, i64 0, i32 0, i64 1\l  %18 = load i8, i8* %arrayidx13, align 1, !tbaa !24\l  %conv = zext i8 %18 to i32\l  %arrayidx13.1 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl.0, i64 0, i32 0, i64 2\l  %19 = load i8, i8* %arrayidx13.1, align 1, !tbaa !24\l  %conv.1 = zext i8 %19 to i32\l  %add14.1 = add nuw nsw i32 %conv.1, %conv\l  %arrayidx13.2 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl.0, i64 0, i32 0, i64 3\l  %20 = load i8, i8* %arrayidx13.2, align 1, !tbaa !24\l  %conv.2 = zext i8 %20 to i32\l  %add14.2 = add nuw nsw i32 %conv.2, %add14.1\l  %arrayidx13.3 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl.0, i64 0, i32 0, i64 4\l  %21 = load i8, i8* %arrayidx13.3, align 1, !tbaa !24\l  %conv.3 = zext i8 %21 to i32\l  %add14.3 = add nuw nsw i32 %conv.3, %add14.2\l  %arrayidx13.4 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl.0, i64 0, i32 0, i64 5\l  %22 = load i8, i8* %arrayidx13.4, align 1, !tbaa !24\l  %conv.4 = zext i8 %22 to i32\l  %add14.4 = add nuw nsw i32 %conv.4, %add14.3\l  %arrayidx13.5 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl.0, i64 0, i32 0, i64 6\l  %23 = load i8, i8* %arrayidx13.5, align 1, !tbaa !24\l  %conv.5 = zext i8 %23 to i32\l  %add14.5 = add nuw nsw i32 %conv.5, %add14.4\l  %arrayidx13.6 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl.0, i64 0, i32 0, i64 7\l  %24 = load i8, i8* %arrayidx13.6, align 1, !tbaa !24\l  %conv.6 = zext i8 %24 to i32\l  %add14.6 = add nuw nsw i32 %conv.6, %add14.5\l  %arrayidx13.7 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl.0, i64 0, i32 0, i64 8\l  %25 = load i8, i8* %arrayidx13.7, align 1, !tbaa !24\l  %conv.7 = zext i8 %25 to i32\l  %add14.7 = add nsw i32 %conv.7, %add14.6\l  %arrayidx13.8 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl.0, i64 0, i32 0, i64 9\l  %26 = load i8, i8* %arrayidx13.8, align 1, !tbaa !24\l  %conv.8 = zext i8 %26 to i32\l  %add14.8 = add nsw i32 %conv.8, %add14.7\l  %arrayidx13.9 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl.0, i64 0, i32 0, i64 10\l  %27 = load i8, i8* %arrayidx13.9, align 1, !tbaa !24\l  %conv.9 = zext i8 %27 to i32\l  %add14.9 = add nsw i32 %conv.9, %add14.8\l  %arrayidx13.10 = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %htbl.0, i64 0, i32 0, i64 11\l  %28 = load i8, i8* %arrayidx13.10, align 1, !tbaa !24\l  %conv.10 = zext i8 %28 to i32\l  %add14.10 = add nsw i32 %conv.10, %add14.9\l  %arrayidx13.11 = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %htbl.0, i64 0, i32 0, i64 12\l  %29 = load i8, i8* %arrayidx13.11, align 1, !tbaa !24\l  %conv.11 = zext i8 %29 to i32\l  %add14.11 = add nsw i32 %conv.11, %add14.10\l  %arrayidx13.12 = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %htbl.0, i64 0, i32 0, i64 13\l  %30 = load i8, i8* %arrayidx13.12, align 1, !tbaa !24\l  %conv.12 = zext i8 %30 to i32\l  %add14.12 = add nsw i32 %conv.12, %add14.11\l  %arrayidx13.13 = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %htbl.0, i64 0, i32 0, i64 14\l  %31 = load i8, i8* %arrayidx13.13, align 1, !tbaa !24\l  %conv.13 = zext i8 %31 to i32\l  %add14.13 = add nsw i32 %conv.13, %add14.12\l  %arrayidx13.14 = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %htbl.0, i64 0, i32 0, i64 15\l  %32 = load i8, i8* %arrayidx13.14, align 1, !tbaa !24\l  %conv.14 = zext i8 %32 to i32\l  %add14.14 = add nsw i32 %conv.14, %add14.13\l  %arrayidx13.15 = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %htbl.0, i64 0, i32 0, i64 16\l  %33 = load i8, i8* %arrayidx13.15, align 1, !tbaa !24\l  %conv.15 = zext i8 %33 to i32\l  %add14.15 = add nsw i32 %conv.15, %add14.14\l  %add17 = add nsw i32 %add14.15, 19\l  %shr4.i = lshr i32 %add17, 8\l  %34 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !21\l  %conv.i.i = trunc i32 %shr4.i to i8\l  %next_output_byte.i.i72 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %34, i64 0, i32 0\l  %35 = load i8*, i8** %next_output_byte.i.i72, align 8, !tbaa !22\l  %incdec.ptr.i.i73 = getelementptr inbounds i8, i8* %35, i64 1\l  store i8* %incdec.ptr.i.i73, i8** %next_output_byte.i.i72, align 8, !tbaa !22\l  store i8 %conv.i.i, i8* %35, align 1, !tbaa !24\l  %free_in_buffer.i.i74 = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %34, i64 0, i32 1\l  %36 = load i64, i64* %free_in_buffer.i.i74, align 8, !tbaa !25\l  %dec.i.i75 = add i64 %36, -1\l  store i64 %dec.i.i75, i64* %free_in_buffer.i.i74, align 8, !tbaa !25\l  %cmp.i.i76 = icmp eq i64 %dec.i.i75, 0\l  br i1 %cmp.i.i76, label %if.then.i.i80, label %emit_byte.exit.i85, !prof !26\l|{<s0>T|<s1>F}}"];
	Node0x5b51850:s0 -> Node0x5b56ab0;
	Node0x5b51850:s1 -> Node0x5b56bc0;
	Node0x5b56ab0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i.i80:                                    \l  %empty_output_buffer.i.i77 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %34, i64 0, i32 3\l  %37 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i77, align 8, !tbaa\l... !27\l  %call.i.i78 = tail call i32 %37(%struct.jpeg_compress_struct* nonnull\l... %cinfo) #1\l  %tobool.i.i79 = icmp eq i32 %call.i.i78, 0\l  br i1 %tobool.i.i79, label %if.then3.i.i84, label %emit_byte.exit.i85\l|{<s0>T|<s1>F}}"];
	Node0x5b56ab0:s0 -> Node0x5b56fd0;
	Node0x5b56ab0:s1 -> Node0x5b56bc0;
	Node0x5b56fd0 [shape=record, style = filled, fillcolor = blue, label="{if.then3.i.i84:                                   \l  %err.i.i81 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %38 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i.i81,\l... align 8, !tbaa !8\l  %msg_code.i.i82 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %38, i64 0, i32 5\l  store i32 22, i32* %msg_code.i.i82, align 8, !tbaa !13\l  %error_exit.i.i83 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %38, i64 0, i32 0\l  %39 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i.i83, align 8, !tbaa !17\l  %40 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %39(%struct.jpeg_common_struct* %40) #1\l  br label %emit_byte.exit.i85\l}"];
	Node0x5b56fd0 -> Node0x5b56bc0;
	Node0x5b56bc0 [shape=record, style = filled, fillcolor = skyblue, label="{emit_byte.exit.i85:                               \l  %41 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !21\l  %conv.i6.i = trunc i32 %add17 to i8\l  %next_output_byte.i7.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %41, i64 0, i32 0\l  %42 = load i8*, i8** %next_output_byte.i7.i, align 8, !tbaa !22\l  %incdec.ptr.i8.i = getelementptr inbounds i8, i8* %42, i64 1\l  store i8* %incdec.ptr.i8.i, i8** %next_output_byte.i7.i, align 8, !tbaa !22\l  store i8 %conv.i6.i, i8* %42, align 1, !tbaa !24\l  %free_in_buffer.i9.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %41, i64 0, i32 1\l  %43 = load i64, i64* %free_in_buffer.i9.i, align 8, !tbaa !25\l  %dec.i10.i = add i64 %43, -1\l  store i64 %dec.i10.i, i64* %free_in_buffer.i9.i, align 8, !tbaa !25\l  %cmp.i11.i = icmp eq i64 %dec.i10.i, 0\l  br i1 %cmp.i11.i, label %if.then.i15.i, label %emit_2bytes.exit, !prof !26\l|{<s0>T|<s1>F}}"];
	Node0x5b56bc0:s0 -> Node0x5b57d10;
	Node0x5b56bc0:s1 -> Node0x5b57e20;
	Node0x5b57d10 [shape=record, style = filled, fillcolor = blue, label="{if.then.i15.i:                                    \l  %empty_output_buffer.i12.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %41, i64 0, i32 3\l  %44 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i12.i, align 8, !tbaa\l... !27\l  %call.i13.i = tail call i32 %44(%struct.jpeg_compress_struct* nonnull\l... %cinfo) #1\l  %tobool.i14.i = icmp eq i32 %call.i13.i, 0\l  br i1 %tobool.i14.i, label %if.then3.i19.i, label %emit_2bytes.exit\l|{<s0>T|<s1>F}}"];
	Node0x5b57d10:s0 -> Node0x5b581f0;
	Node0x5b57d10:s1 -> Node0x5b57e20;
	Node0x5b581f0 [shape=record, style = filled, fillcolor = blue, label="{if.then3.i19.i:                                   \l  %err.i16.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i16.i,\l... align 8, !tbaa !8\l  %msg_code.i17.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %45, i64 0, i32 5\l  store i32 22, i32* %msg_code.i17.i, align 8, !tbaa !13\l  %error_exit.i18.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %45, i64 0, i32 0\l  %46 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i18.i, align 8, !tbaa !17\l  %47 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %46(%struct.jpeg_common_struct* %47) #1\l  br label %emit_2bytes.exit\l}"];
	Node0x5b581f0 -> Node0x5b57e20;
	Node0x5b57e20 [shape=record, style = filled, fillcolor = skyblue, label="{emit_2bytes.exit:                                 \l  %48 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !21\l  %conv.i = trunc i32 %index.addr.0 to i8\l  %next_output_byte.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %48, i64 0, i32 0\l  %49 = load i8*, i8** %next_output_byte.i, align 8, !tbaa !22\l  %incdec.ptr.i = getelementptr inbounds i8, i8* %49, i64 1\l  store i8* %incdec.ptr.i, i8** %next_output_byte.i, align 8, !tbaa !22\l  store i8 %conv.i, i8* %49, align 1, !tbaa !24\l  %free_in_buffer.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %48, i64 0, i32 1\l  %50 = load i64, i64* %free_in_buffer.i, align 8, !tbaa !25\l  %dec.i = add i64 %50, -1\l  store i64 %dec.i, i64* %free_in_buffer.i, align 8, !tbaa !25\l  %cmp.i = icmp eq i64 %dec.i, 0\l  br i1 %cmp.i, label %if.then.i, label %for.cond18.preheader, !prof !26\l|{<s0>T|<s1>F}}"];
	Node0x5b57e20:s0 -> Node0x5b58ef0;
	Node0x5b57e20:s1 -> Node0x5b58fd0;
	Node0x5b58ef0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i:                                        \l  %empty_output_buffer.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %48, i64 0, i32 3\l  %51 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i, align 8, !tbaa !27\l  %call.i = tail call i32 %51(%struct.jpeg_compress_struct* nonnull %cinfo) #1\l  %tobool.i = icmp eq i32 %call.i, 0\l  br i1 %tobool.i, label %if.then3.i, label %for.cond18.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5b58ef0:s0 -> Node0x5b593a0;
	Node0x5b58ef0:s1 -> Node0x5b58fd0;
	Node0x5b593a0 [shape=record, style = filled, fillcolor = blue, label="{if.then3.i:                                       \l  %err.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %52 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align\l... 8, !tbaa !8\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %52, i64 0, i32 5\l  store i32 22, i32* %msg_code.i, align 8, !tbaa !13\l  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %52, i64 0, i32 0\l  %53 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !17\l  %54 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %53(%struct.jpeg_common_struct* %54) #1\l  br label %for.cond18.preheader\l}"];
	Node0x5b593a0 -> Node0x5b58fd0;
	Node0x5b58fd0 [shape=record, style = filled, fillcolor = skyblue, label="{for.cond18.preheader:                             \l  %err.i97 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %55 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  br label %for.body21\l}"];
	Node0x5b58fd0 -> Node0x5b05a30;
	Node0x5b05b70 [shape=record, style = filled, fillcolor = skyblue, label="{for.cond29.preheader:                             \l  %cmp30118 = icmp sgt i32 %add14.15, 0\l  br i1 %cmp30118, label %for.body32.preheader, label %for.end38, !prof !28\l|{<s0>T|<s1>F}}"];
	Node0x5b05b70:s0 -> Node0x5b05d30;
	Node0x5b05b70:s1 -> Node0x5b05db0;
	Node0x5b05d30 [shape=record, style = filled, fillcolor = skyblue, label="{for.body32.preheader:                             \l  br label %for.body32\l}"];
	Node0x5b05d30 -> Node0x5b06020;
	Node0x5b05a30 [shape=record, style = filled, fillcolor = cyan, label="{for.body21:                                       \l  %indvars.iv123 = phi i64 [ 1, %for.cond18.preheader ], [\l... %indvars.iv.next124, %emit_byte.exit101 ]\l  %arrayidx24 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl.0, i64 0, i32 0, i64 %indvars.iv123\l  %56 = load i8, i8* %arrayidx24, align 1, !tbaa !24\l  %57 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !21\l  %next_output_byte.i88 = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %57, i64 0, i32 0\l  %58 = load i8*, i8** %next_output_byte.i88, align 8, !tbaa !22\l  %incdec.ptr.i89 = getelementptr inbounds i8, i8* %58, i64 1\l  store i8* %incdec.ptr.i89, i8** %next_output_byte.i88, align 8, !tbaa !22\l  store i8 %56, i8* %58, align 1, !tbaa !24\l  %free_in_buffer.i90 = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %57, i64 0, i32 1\l  %59 = load i64, i64* %free_in_buffer.i90, align 8, !tbaa !25\l  %dec.i91 = add i64 %59, -1\l  store i64 %dec.i91, i64* %free_in_buffer.i90, align 8, !tbaa !25\l  %cmp.i92 = icmp eq i64 %dec.i91, 0\l  br i1 %cmp.i92, label %if.then.i96, label %emit_byte.exit101, !prof !26\l|{<s0>T|<s1>F}}"];
	Node0x5b05a30:s0 -> Node0x5b140b0;
	Node0x5b05a30:s1 -> Node0x5b13710;
	Node0x5b140b0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i96:                                      \l  %empty_output_buffer.i93 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %57, i64 0, i32 3\l  %60 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i93, align 8, !tbaa !27\l  %call.i94 = tail call i32 %60(%struct.jpeg_compress_struct* nonnull %cinfo)\l... #1\l  %tobool.i95 = icmp eq i32 %call.i94, 0\l  br i1 %tobool.i95, label %if.then3.i100, label %emit_byte.exit101\l|{<s0>T|<s1>F}}"];
	Node0x5b140b0:s0 -> Node0x5b14be0;
	Node0x5b140b0:s1 -> Node0x5b13710;
	Node0x5b14be0 [shape=record, style = filled, fillcolor = blue, label="{if.then3.i100:                                    \l  %61 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i97, align\l... 8, !tbaa !8\l  %msg_code.i98 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %61, i64 0, i32 5\l  store i32 22, i32* %msg_code.i98, align 8, !tbaa !13\l  %error_exit.i99 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %61, i64 0, i32 0\l  %62 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i99, align 8, !tbaa !17\l  tail call void %62(%struct.jpeg_common_struct* nonnull %55) #1\l  br label %emit_byte.exit101\l}"];
	Node0x5b14be0 -> Node0x5b13710;
	Node0x5b13710 [shape=record, style = filled, fillcolor = cyan, label="{emit_byte.exit101:                                \l  %indvars.iv.next124 = add nuw nsw i64 %indvars.iv123, 1\l  %exitcond125 = icmp eq i64 %indvars.iv.next124, 17\l  br i1 %exitcond125, label %for.cond29.preheader, label %for.body21, !prof !29\l|{<s0>T|<s1>F}}"];
	Node0x5b13710:s0 -> Node0x5b05b70;
	Node0x5b13710:s1 -> Node0x5b05a30;
	Node0x5b06020 [shape=record, style = filled, fillcolor = cyan, label="{for.body32:                                       \l  %indvars.iv = phi i64 [ %indvars.iv.next, %emit_byte.exit117 ], [ 0,\l... %for.body32.preheader ]\l  %arrayidx34 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL*\l... %htbl.0, i64 0, i32 1, i64 %indvars.iv\l  %63 = load i8, i8* %arrayidx34, align 1, !tbaa !24\l  %64 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !21\l  %next_output_byte.i104 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %64, i64 0, i32 0\l  %65 = load i8*, i8** %next_output_byte.i104, align 8, !tbaa !22\l  %incdec.ptr.i105 = getelementptr inbounds i8, i8* %65, i64 1\l  store i8* %incdec.ptr.i105, i8** %next_output_byte.i104, align 8, !tbaa !22\l  store i8 %63, i8* %65, align 1, !tbaa !24\l  %free_in_buffer.i106 = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %64, i64 0, i32 1\l  %66 = load i64, i64* %free_in_buffer.i106, align 8, !tbaa !25\l  %dec.i107 = add i64 %66, -1\l  store i64 %dec.i107, i64* %free_in_buffer.i106, align 8, !tbaa !25\l  %cmp.i108 = icmp eq i64 %dec.i107, 0\l  br i1 %cmp.i108, label %if.then.i112, label %emit_byte.exit117, !prof !26\l|{<s0>T|<s1>F}}"];
	Node0x5b06020:s0 -> Node0x5b607a0;
	Node0x5b06020:s1 -> Node0x5b3b7c0;
	Node0x5b607a0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i112:                                     \l  %empty_output_buffer.i109 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %64, i64 0, i32 3\l  %67 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i109, align 8, !tbaa\l... !27\l  %call.i110 = tail call i32 %67(%struct.jpeg_compress_struct* nonnull %cinfo)\l... #1\l  %tobool.i111 = icmp eq i32 %call.i110, 0\l  br i1 %tobool.i111, label %if.then3.i116, label %emit_byte.exit117\l|{<s0>T|<s1>F}}"];
	Node0x5b607a0:s0 -> Node0x5b60bb0;
	Node0x5b607a0:s1 -> Node0x5b3b7c0;
	Node0x5b60bb0 [shape=record, style = filled, fillcolor = blue, label="{if.then3.i116:                                    \l  %68 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i97, align\l... 8, !tbaa !8\l  %msg_code.i114 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %68, i64 0, i32 5\l  store i32 22, i32* %msg_code.i114, align 8, !tbaa !13\l  %error_exit.i115 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %68, i64 0, i32 0\l  %69 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i115, align 8, !tbaa !17\l  tail call void %69(%struct.jpeg_common_struct* nonnull %55) #1\l  br label %emit_byte.exit117\l}"];
	Node0x5b60bb0 -> Node0x5b3b7c0;
	Node0x5b3b7c0 [shape=record, style = filled, fillcolor = cyan, label="{emit_byte.exit117:                                \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %lftr.wideiv = trunc i64 %indvars.iv.next to i32\l  %exitcond = icmp eq i32 %lftr.wideiv, %add14.15\l  br i1 %exitcond, label %for.end38.loopexit, label %for.body32, !prof !30\l|{<s0>T|<s1>F}}"];
	Node0x5b3b7c0:s0 -> Node0x5b61290;
	Node0x5b3b7c0:s1 -> Node0x5b06020;
	Node0x5b61290 [shape=record, style = filled, fillcolor = skyblue, label="{for.end38.loopexit:                               \l  br label %for.end38\l}"];
	Node0x5b61290 -> Node0x5b05db0;
	Node0x5b05db0 [shape=record, style = filled, fillcolor = skyblue, label="{for.end38:                                        \l  store i32 1, i32* %sent_table, align 4, !tbaa !18\l  br label %if.end40\l}"];
	Node0x5b05db0 -> Node0x5b4f9c0;
	Node0x5b4f9c0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end40:                                         \l  ret void\l}"];
}
