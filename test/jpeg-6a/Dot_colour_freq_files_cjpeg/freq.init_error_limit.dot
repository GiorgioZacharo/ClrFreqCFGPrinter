digraph "CFG for 'init_error_limit' function" {
	label="CFG for 'init_error_limit' function";

	Node0x6272990 [shape=record, style = filled, fillcolor = blue, label="{for.body8.preheader:\l  %cquantize1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %0 = bitcast %struct.jpeg_color_quantizer** %cquantize1 to\l... %struct.my_cquantizer**\l  %1 = load %struct.my_cquantizer*, %struct.my_cquantizer** %0, align 8, !tbaa\l... !2\l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %2 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !10\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %2, i64 0, i32 0\l  %3 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !11\l  %4 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %3(%struct.jpeg_common_struct* %4, i32 1, i64 2044) #5\l  %add.ptr = getelementptr inbounds i8, i8* %call, i64 1020\l  %5 = bitcast i8* %add.ptr to i32*\l  %error_limiter = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 7\l  %6 = bitcast i32** %error_limiter to i8**\l  store i8* %add.ptr, i8** %6, align 8, !tbaa !14\l  %arrayidx.1 = getelementptr inbounds i8, i8* %call, i64 1024\l  %arrayidx4.3 = getelementptr inbounds i8, i8* %call, i64 1008\l  %7 = bitcast i8* %arrayidx4.3 to \<4 x i32\>*\l  store \<4 x i32\> \<i32 -3, i32 -2, i32 -1, i32 0\>, \<4 x i32\>* %7, align 4,\l... !tbaa !17\l  %8 = bitcast i8* %arrayidx.1 to \<4 x i32\>*\l  store \<4 x i32\> \<i32 1, i32 2, i32 3, i32 4\>, \<4 x i32\>* %8, align 4, !tbaa\l... !17\l  %arrayidx.5 = getelementptr inbounds i8, i8* %call, i64 1040\l  %arrayidx4.7 = getelementptr inbounds i8, i8* %call, i64 992\l  %9 = bitcast i8* %arrayidx4.7 to \<4 x i32\>*\l  store \<4 x i32\> \<i32 -7, i32 -6, i32 -5, i32 -4\>, \<4 x i32\>* %9, align 4,\l... !tbaa !17\l  %10 = bitcast i8* %arrayidx.5 to \<4 x i32\>*\l  store \<4 x i32\> \<i32 5, i32 6, i32 7, i32 8\>, \<4 x i32\>* %10, align 4, !tbaa\l... !17\l  %arrayidx.9 = getelementptr inbounds i8, i8* %call, i64 1056\l  %arrayidx4.11 = getelementptr inbounds i8, i8* %call, i64 976\l  %11 = bitcast i8* %arrayidx4.11 to \<4 x i32\>*\l  store \<4 x i32\> \<i32 -11, i32 -10, i32 -9, i32 -8\>, \<4 x i32\>* %11, align 4,\l... !tbaa !17\l  %12 = bitcast i8* %arrayidx.9 to \<4 x i32\>*\l  store \<4 x i32\> \<i32 9, i32 10, i32 11, i32 12\>, \<4 x i32\>* %12, align 4,\l... !tbaa !17\l  %arrayidx.13 = getelementptr inbounds i8, i8* %call, i64 1072\l  %13 = bitcast i8* %arrayidx.13 to i32*\l  store i32 13, i32* %13, align 4, !tbaa !17\l  %arrayidx.14 = getelementptr inbounds i8, i8* %call, i64 1076\l  %14 = bitcast i8* %arrayidx.14 to i32*\l  store i32 14, i32* %14, align 4, !tbaa !17\l  %arrayidx.15 = getelementptr inbounds i8, i8* %call, i64 1080\l  %15 = bitcast i8* %arrayidx.15 to i32*\l  store i32 15, i32* %15, align 4, !tbaa !17\l  %arrayidx4.15 = getelementptr inbounds i8, i8* %call, i64 960\l  %16 = bitcast i8* %arrayidx4.15 to \<4 x i32\>*\l  store \<4 x i32\> \<i32 -15, i32 -14, i32 -13, i32 -12\>, \<4 x i32\>* %16, align\l... 4, !tbaa !17\l  br label %for.body8\l}"];
	Node0x6272990 -> Node0x6275c70;
	Node0x6275db0 [shape=record, style = filled, fillcolor = blue, label="{for.body20.lr.ph:                                 \l  %add.1.lcssa = phi i32 [ %add.1, %for.body8 ]\l  %out.166.lcssa = phi i32 [ %out.166, %for.body8 ]\l  %sub23 = xor i32 %out.166.lcssa, -1\l  br label %for.body20\l}"];
	Node0x6275db0 -> Node0x62761b0;
	Node0x6275c70 [shape=record, style = filled, fillcolor = blue, label="{for.body8:                                        \l  %indvars.iv71 = phi i64 [ 16, %for.body8.preheader ], [\l... %indvars.iv.next72.1, %for.body8 ]\l  %out.166 = phi i32 [ 16, %for.body8.preheader ], [ %add.1, %for.body8 ]\l  %arrayidx10 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv71\l  store i32 %out.166, i32* %arrayidx10, align 4, !tbaa !17\l  %sub11 = sub nsw i32 0, %out.166\l  %17 = sub nsw i64 0, %indvars.iv71\l  %arrayidx14 = getelementptr inbounds i32, i32* %5, i64 %17\l  store i32 %sub11, i32* %arrayidx14, align 4, !tbaa !17\l  %indvars.iv.next72 = or i64 %indvars.iv71, 1\l  %arrayidx10.1 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv.next72\l  store i32 %out.166, i32* %arrayidx10.1, align 4, !tbaa !17\l  %sub11.1 = sub nsw i32 0, %out.166\l  %18 = xor i64 %indvars.iv71, -1\l  %arrayidx14.1 = getelementptr inbounds i32, i32* %5, i64 %18\l  store i32 %sub11.1, i32* %arrayidx14.1, align 4, !tbaa !17\l  %indvars.iv.next72.1 = add nsw i64 %indvars.iv71, 2\l  %19 = trunc i64 %indvars.iv.next72.1 to i32\l  %add.1 = add nsw i32 %out.166, 1\l  %exitcond75.1 = icmp eq i32 %19, 48\l  br i1 %exitcond75.1, label %for.body20.lr.ph, label %for.body8\l|{<s0>T|<s1>F}}"];
	Node0x6275c70:s0 -> Node0x6275db0;
	Node0x6275c70:s1 -> Node0x6275c70;
	Node0x62761b0 [shape=record, style = filled, fillcolor = blue, label="{for.body20:                                       \l  %indvars.iv = phi i64 [ 48, %for.body20.lr.ph ], [ %indvars.iv.next.3,\l... %for.body20 ]\l  %arrayidx22 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv\l  store i32 %add.1.lcssa, i32* %arrayidx22, align 4, !tbaa !17\l  %20 = sub nsw i64 0, %indvars.iv\l  %arrayidx26 = getelementptr inbounds i32, i32* %5, i64 %20\l  store i32 %sub23, i32* %arrayidx26, align 4, !tbaa !17\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx22.1 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv.next\l  store i32 %add.1.lcssa, i32* %arrayidx22.1, align 4, !tbaa !17\l  %21 = xor i64 %indvars.iv, -1\l  %arrayidx26.1 = getelementptr inbounds i32, i32* %5, i64 %21\l  store i32 %sub23, i32* %arrayidx26.1, align 4, !tbaa !17\l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx22.2 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv.next.1\l  store i32 %add.1.lcssa, i32* %arrayidx22.2, align 4, !tbaa !17\l  %22 = sub i64 -2, %indvars.iv\l  %arrayidx26.2 = getelementptr inbounds i32, i32* %5, i64 %22\l  store i32 %sub23, i32* %arrayidx26.2, align 4, !tbaa !17\l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx22.3 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv.next.2\l  store i32 %add.1.lcssa, i32* %arrayidx22.3, align 4, !tbaa !17\l  %23 = sub i64 -3, %indvars.iv\l  %arrayidx26.3 = getelementptr inbounds i32, i32* %5, i64 %23\l  store i32 %sub23, i32* %arrayidx26.3, align 4, !tbaa !17\l  %indvars.iv.next.3 = add nsw i64 %indvars.iv, 4\l  %lftr.wideiv.3 = trunc i64 %indvars.iv.next.3 to i32\l  %exitcond.3 = icmp eq i32 %lftr.wideiv.3, 256\l  br i1 %exitcond.3, label %for.end29, label %for.body20\l|{<s0>T|<s1>F}}"];
	Node0x62761b0:s0 -> Node0x626d300;
	Node0x62761b0:s1 -> Node0x62761b0;
	Node0x626d300 [shape=record, style = filled, fillcolor = blue, label="{for.end29:                                        \l  ret void\l}"];
}
