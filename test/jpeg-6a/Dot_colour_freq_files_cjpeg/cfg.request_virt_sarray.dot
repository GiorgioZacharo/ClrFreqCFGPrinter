digraph "CFG for 'request_virt_sarray' function" {
	label="CFG for 'request_virt_sarray' function";

	Node0x576fb20 [shape=record,label="{entry:\l  %mem1 = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 1\l  %0 = bitcast %struct.jpeg_memory_mgr** %mem1 to %struct.my_memory_mgr**\l  %1 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %0, align 8, !tbaa\l... !3\l  %cmp = icmp eq i32 %pool_id, 1\l  br i1 %cmp, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x576fb20:s0 -> Node0x57853a0;
	Node0x576fb20:s1 -> Node0x5785470;
	Node0x5785470 [shape=record,label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %2 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !9\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %2, i64 0, i32 5\l  store i32 12, i32* %msg_code, align 8, !tbaa !10\l  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %2, i64 0, i32 6, i32 0, i64 0\l  store i32 %pool_id, i32* %arrayidx, align 4, !tbaa !13\l  %3 = bitcast %struct.jpeg_error_mgr* %2 to void\l... (%struct.jpeg_common_struct*)**\l  %4 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %3, align 8, !tbaa !14\l  tail call void %4(%struct.jpeg_common_struct* nonnull %cinfo) #5\l  br label %if.end\l}"];
	Node0x5785470 -> Node0x57853a0;
	Node0x57853a0 [shape=record,label="{if.end:                                           \l  %call = tail call i8* @alloc_small(%struct.jpeg_common_struct* nonnull\l... %cinfo, i32 %pool_id, i64 152)\l  %5 = bitcast i8* %call to %struct.jvirt_sarray_control*\l  %mem_buffer = bitcast i8* %call to i8***\l  store i8** null, i8*** %mem_buffer, align 8, !tbaa !15\l  %rows_in_array = getelementptr inbounds i8, i8* %call, i64 8\l  %6 = bitcast i8* %rows_in_array to i32*\l  store i32 %numrows, i32* %6, align 8, !tbaa !18\l  %samplesperrow5 = getelementptr inbounds i8, i8* %call, i64 12\l  %7 = bitcast i8* %samplesperrow5 to i32*\l  store i32 %samplesperrow, i32* %7, align 4, !tbaa !19\l  %maxaccess6 = getelementptr inbounds i8, i8* %call, i64 16\l  %8 = bitcast i8* %maxaccess6 to i32*\l  store i32 %maxaccess, i32* %8, align 8, !tbaa !20\l  %pre_zero7 = getelementptr inbounds i8, i8* %call, i64 36\l  %9 = bitcast i8* %pre_zero7 to i32*\l  store i32 %pre_zero, i32* %9, align 4, !tbaa !21\l  %b_s_open = getelementptr inbounds i8, i8* %call, i64 44\l  %10 = bitcast i8* %b_s_open to i32*\l  store i32 0, i32* %10, align 4, !tbaa !22\l  %virt_sarray_list = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %1, i64 0, i32 3\l  %11 = bitcast %struct.jvirt_sarray_control** %virt_sarray_list to i64*\l  %12 = load i64, i64* %11, align 8, !tbaa !23\l  %next = getelementptr inbounds i8, i8* %call, i64 48\l  %13 = bitcast i8* %next to i64*\l  store i64 %12, i64* %13, align 8, !tbaa !26\l  %14 = bitcast %struct.jvirt_sarray_control** %virt_sarray_list to i8**\l  store i8* %call, i8** %14, align 8, !tbaa !23\l  ret %struct.jvirt_sarray_control* %5\l}"];
}
