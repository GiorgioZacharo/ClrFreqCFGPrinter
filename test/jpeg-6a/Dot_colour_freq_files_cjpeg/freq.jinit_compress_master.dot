digraph "CFG for 'jinit_compress_master' function" {
	label="CFG for 'jinit_compress_master' function";

	Node0x608d5d0 [shape=record, style = filled, fillcolor = skyblue, label="{entry:\l  tail call void @jinit_c_master_control(%struct.jpeg_compress_struct* %cinfo,\l... i32 0) #2\l  %raw_data_in = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 23\l  %0 = load i32, i32* %raw_data_in, align 8, !tbaa !3\l  %tobool = icmp eq i32 %0, 0\l  br i1 %tobool, label %if.then, label %if.end, !prof !11\l|{<s0>T|<s1>F}}"];
	Node0x608d5d0:s0 -> Node0x608f2a0;
	Node0x608d5d0:s1 -> Node0x608f370;
	Node0x608f2a0 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  tail call void @jinit_color_converter(%struct.jpeg_compress_struct* nonnull\l... %cinfo) #2\l  tail call void @jinit_downsampler(%struct.jpeg_compress_struct* nonnull\l... %cinfo) #2\l  tail call void @jinit_c_prep_controller(%struct.jpeg_compress_struct*\l... nonnull %cinfo, i32 0) #2\l  br label %if.end\l}"];
	Node0x608f2a0 -> Node0x608f370;
	Node0x608f370 [shape=record, style = filled, fillcolor = skyblue, label="{if.end:                                           \l  tail call void @jinit_forward_dct(%struct.jpeg_compress_struct* nonnull\l... %cinfo) #2\l  %arith_code = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 24\l  %1 = load i32, i32* %arith_code, align 4, !tbaa !12\l  %tobool1 = icmp eq i32 %1, 0\l  br i1 %tobool1, label %if.else, label %if.then2, !prof !11\l|{<s0>T|<s1>F}}"];
	Node0x608f370:s0 -> Node0x60903e0;
	Node0x608f370:s1 -> Node0x60904b0;
	Node0x60904b0 [shape=record, style = filled, fillcolor = blue, label="{if.then2:                                         \l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %2 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !13\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %2, i64 0, i32 5\l  store i32 1, i32* %msg_code, align 8, !tbaa !14\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %2, i64 0, i32 0\l  %3 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !17\l  %4 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %3(%struct.jpeg_common_struct* %4) #2\l  br label %if.end8\l}"];
	Node0x60904b0 -> Node0x6091620;
	Node0x60903e0 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %progressive_mode = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 37\l  %5 = load i32, i32* %progressive_mode, align 4, !tbaa !18\l  %tobool4 = icmp eq i32 %5, 0\l  br i1 %tobool4, label %if.else6, label %if.then5, !prof !19\l|{<s0>T|<s1>F}}"];
	Node0x60903e0:s0 -> Node0x6091a40;
	Node0x60903e0:s1 -> Node0x6091af0;
	Node0x6091af0 [shape=record, style = filled, fillcolor = blue, label="{if.then5:                                         \l  tail call void @jinit_phuff_encoder(%struct.jpeg_compress_struct* nonnull\l... %cinfo) #2\l  br label %if.end8\l}"];
	Node0x6091af0 -> Node0x6091620;
	Node0x6091a40 [shape=record, style = filled, fillcolor = blue, label="{if.else6:                                         \l  tail call void @jinit_huff_encoder(%struct.jpeg_compress_struct* nonnull\l... %cinfo) #2\l  br label %if.end8\l}"];
	Node0x6091a40 -> Node0x6091620;
	Node0x6091620 [shape=record, style = filled, fillcolor = skyblue, label="{if.end8:                                          \l  %num_scans = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 21\l  %6 = load i32, i32* %num_scans, align 8, !tbaa !20\l  %cmp = icmp sgt i32 %6, 1\l  br i1 %cmp, label %lor.end, label %lor.rhs, !prof !11\l|{<s0>T|<s1>F}}"];
	Node0x6091620:s0 -> Node0x6092580;
	Node0x6091620:s1 -> Node0x6092650;
	Node0x6092650 [shape=record, style = filled, fillcolor = blue, label="{lor.rhs:                                          \l  %optimize_coding = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 25\l  %7 = load i32, i32* %optimize_coding, align 8, !tbaa !21\l  %tobool9 = icmp ne i32 %7, 0\l  br label %lor.end\l}"];
	Node0x6092650 -> Node0x6092580;
	Node0x6092580 [shape=record, style = filled, fillcolor = skyblue, label="{lor.end:                                          \l  %8 = phi i1 [ true, %if.end8 ], [ %tobool9, %lor.rhs ]\l  %lor.ext = zext i1 %8 to i32\l  tail call void @jinit_c_coef_controller(%struct.jpeg_compress_struct*\l... nonnull %cinfo, i32 %lor.ext) #2\l  tail call void @jinit_c_main_controller(%struct.jpeg_compress_struct*\l... nonnull %cinfo, i32 0) #2\l  tail call void @jinit_marker_writer(%struct.jpeg_compress_struct* nonnull\l... %cinfo) #2\l  %mem = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1\l  %9 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !22\l  %realize_virt_arrays = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %9, i64 0, i32 6\l  %realize_virt_arrays10 = bitcast \{\}** %realize_virt_arrays to void\l... (%struct.jpeg_common_struct*)**\l  %10 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %realize_virt_arrays10, align 8, !tbaa !23\l  %11 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %10(%struct.jpeg_common_struct* %11) #2\l  %marker = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 55\l  %12 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer**\l... %marker, align 8, !tbaa !25\l  %write_file_header = getelementptr inbounds %struct.jpeg_marker_writer,\l... %struct.jpeg_marker_writer* %12, i64 0, i32 1\l  %write_file_header11 = bitcast \{\}** %write_file_header to void\l... (%struct.jpeg_compress_struct*)**\l  %13 = load void (%struct.jpeg_compress_struct*)*, void\l... (%struct.jpeg_compress_struct*)** %write_file_header11, align 8, !tbaa !26\l  tail call void %13(%struct.jpeg_compress_struct* nonnull %cinfo) #2\l  ret void\l}"];
}
