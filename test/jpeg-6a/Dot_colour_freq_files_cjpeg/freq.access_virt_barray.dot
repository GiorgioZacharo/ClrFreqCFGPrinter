digraph "CFG for 'access_virt_barray' function" {
	label="CFG for 'access_virt_barray' function";

	Node0x57b7e20 [shape=record, style = filled, fillcolor = turquoise, label="{entry:\l  %add = add i32 %num_rows, %start_row\l  %rows_in_array = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 1\l  %0 = load i32, i32* %rows_in_array, align 8, !tbaa !3\l  %cmp = icmp ugt i32 %add, %0\l  br i1 %cmp, label %if.then, label %lor.lhs.false, !prof !10\l|{<s0>T|<s1>F}}"];
	Node0x57b7e20:s0 -> Node0x5794210;
	Node0x57b7e20:s1 -> Node0x57942e0;
	Node0x57942e0 [shape=record, style = filled, fillcolor = turquoise, label="{lor.lhs.false:                                    \l  %maxaccess = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 3\l  %1 = bitcast i32* %maxaccess to i64*\l  %2 = load i64, i64* %1, align 8\l  %3 = trunc i64 %2 to i32\l  %cmp1 = icmp ult i32 %3, %num_rows\l  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !prof !10\l|{<s0>T|<s1>F}}"];
	Node0x57942e0:s0 -> Node0x5794210;
	Node0x57942e0:s1 -> Node0x5793dd0;
	Node0x5793dd0 [shape=record, style = filled, fillcolor = turquoise, label="{lor.lhs.false2:                                   \l  %mem_buffer = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 0\l  %4 = load [64 x i16]**, [64 x i16]*** %mem_buffer, align 8, !tbaa !11\l  %cmp3 = icmp eq [64 x i16]** %4, null\l  br i1 %cmp3, label %if.then, label %if.end, !prof !10\l|{<s0>T|<s1>F}}"];
	Node0x5793dd0:s0 -> Node0x5794210;
	Node0x5793dd0:s1 -> Node0x57c18f0;
	Node0x5794210 [shape=record, style = filled, fillcolor = skyblue, label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %5 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !12\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %5, i64 0, i32 5\l  store i32 20, i32* %msg_code, align 8, !tbaa !14\l  %6 = bitcast %struct.jpeg_error_mgr* %5 to void\l... (%struct.jpeg_common_struct*)**\l  %7 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %6, align 8, !tbaa !17\l  tail call void %7(%struct.jpeg_common_struct* %cinfo) #5\l  br label %if.end\l}"];
	Node0x5794210 -> Node0x57c18f0;
	Node0x57c18f0 [shape=record, style = filled, fillcolor = turquoise, label="{if.end:                                           \l  %cur_start_row = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 6\l  %8 = load i32, i32* %cur_start_row, align 4, !tbaa !18\l  %cmp6 = icmp ugt i32 %8, %start_row\l  br i1 %cmp6, label %if.then11, label %lor.lhs.false7, !prof !10\l|{<s0>T|<s1>F}}"];
	Node0x57c18f0:s0 -> Node0x57c1820;
	Node0x57c18f0:s1 -> Node0x57c26f0;
	Node0x57c26f0 [shape=record, style = filled, fillcolor = turquoise, label="{lor.lhs.false7:                                   \l  %rows_in_mem = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 4\l  %9 = load i32, i32* %rows_in_mem, align 4, !tbaa !19\l  %add9 = add i32 %9, %8\l  %cmp10 = icmp ugt i32 %add, %add9\l  br i1 %cmp10, label %if.then11, label %if.end36, !prof !10\l|{<s0>T|<s1>F}}"];
	Node0x57c26f0:s0 -> Node0x57c1820;
	Node0x57c26f0:s1 -> Node0x57c0fb0;
	Node0x57c1820 [shape=record, style = filled, fillcolor = skyblue, label="{if.then11:                                        \l  %b_s_open = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 10\l  %10 = load i32, i32* %b_s_open, align 4, !tbaa !20\l  %tobool = icmp eq i32 %10, 0\l  br i1 %tobool, label %if.then12, label %if.end18\l|{<s0>T|<s1>F}}"];
	Node0x57c1820:s0 -> Node0x57c2ed0;
	Node0x57c1820:s1 -> Node0x57c2fb0;
	Node0x57c2ed0 [shape=record, style = filled, fillcolor = blue, label="{if.then12:                                        \l  %err13 = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err13, align\l... 8, !tbaa !12\l  %msg_code14 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 5\l  store i32 68, i32* %msg_code14, align 8, !tbaa !14\l  %12 = bitcast %struct.jpeg_error_mgr* %11 to void\l... (%struct.jpeg_common_struct*)**\l  %13 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %12, align 8, !tbaa !17\l  tail call void %13(%struct.jpeg_common_struct* %cinfo) #5\l  br label %if.end18\l}"];
	Node0x57c2ed0 -> Node0x57c2fb0;
	Node0x57c2fb0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end18:                                         \l  %dirty = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 9\l  %14 = load i32, i32* %dirty, align 8, !tbaa !21\l  %tobool19 = icmp eq i32 %14, 0\l  br i1 %tobool19, label %if.end22, label %if.then20\l|{<s0>T|<s1>F}}"];
	Node0x57c2fb0:s0 -> Node0x5798db0;
	Node0x57c2fb0:s1 -> Node0x5798e90;
	Node0x5798e90 [shape=record, style = filled, fillcolor = skyblue, label="{if.then20:                                        \l  %blocksperrow.i = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 2\l  %15 = load i32, i32* %blocksperrow.i, align 4, !tbaa !22\l  %conv.i = zext i32 %15 to i64\l  %mul.i = shl nuw nsw i64 %conv.i, 7\l  %rows_in_mem.i = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 4\l  %16 = load i32, i32* %rows_in_mem.i, align 4, !tbaa !19\l  %cmp96.i = icmp eq i32 %16, 0\l  br i1 %cmp96.i, label %do_barray_io.exit, label %for.body.lr.ph.i\l|{<s0>T|<s1>F}}"];
	Node0x5798e90:s0 -> Node0x57c4be0;
	Node0x5798e90:s1 -> Node0x57c4cc0;
	Node0x57c4cc0 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph.i:                                 \l  %conv395.i = zext i32 %16 to i64\l  %17 = load i32, i32* %cur_start_row, align 4, !tbaa !18\l  %conv1.i = zext i32 %17 to i64\l  %mul2.i = mul nsw i64 %conv1.i, %mul.i\l  %rowsperchunk.i = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 5\l  %first_undef_row.i = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 7\l  %b_s_info.i = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 12\l  %mem_buffer46.i = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 0\l  %write_backing_store.i = getelementptr inbounds\l... %struct.jvirt_barray_control, %struct.jvirt_barray_control* %ptr, i64 0, i32\l... 12, i32 1\l  %18 = bitcast i32* %rowsperchunk.i to i64*\l  %.pre101.i = load i64, i64* %18, align 8\l  br label %for.body.i\l}"];
	Node0x57c4cc0 -> Node0x57c5830;
	Node0x57c5830 [shape=record, style = filled, fillcolor = skyblue, label="{for.body.i:                                       \l  %.in.in.i = phi i64 [ %25, %if.end.i ], [ %.pre101.i, %for.body.lr.ph.i ]\l  %conv399.i = phi i64 [ %conv3.i, %if.end.i ], [ %conv395.i,\l... %for.body.lr.ph.i ]\l  %i.098.i = phi i64 [ %add52.i, %if.end.i ], [ 0, %for.body.lr.ph.i ]\l  %file_offset.097.i = phi i64 [ %add49.i, %if.end.i ], [ %mul2.i,\l... %for.body.lr.ph.i ]\l  %.in.i = lshr i64 %.in.in.i, 32\l  %conv5.i = and i64 %.in.in.i, 4294967295\l  %sub.i = sub nsw i64 %conv399.i, %i.098.i\l  %cmp8.i = icmp slt i64 %conv5.i, %sub.i\l  %conv5.sub.i = select i1 %cmp8.i, i64 %conv5.i, i64 %sub.i\l  %add.i = add nsw i64 %i.098.i, %.in.i\l  %19 = load i32, i32* %first_undef_row.i, align 8, !tbaa !23\l  %conv17.i = zext i32 %19 to i64\l  %sub18.i = sub nsw i64 %conv17.i, %add.i\l  %cmp19.i = icmp slt i64 %conv5.sub.i, %sub18.i\l  %cond27.i = select i1 %cmp19.i, i64 %conv5.sub.i, i64 %sub18.i\l  %20 = load i32, i32* %rows_in_array, align 8, !tbaa !3\l  %conv28.i = zext i32 %20 to i64\l  %sub29.i = sub nsw i64 %conv28.i, %add.i\l  %cmp30.i = icmp slt i64 %cond27.i, %sub29.i\l  %cond27.sub29.i = select i1 %cmp30.i, i64 %cond27.i, i64 %sub29.i\l  %cmp39.i = icmp slt i64 %cond27.sub29.i, 1\l  br i1 %cmp39.i, label %do_barray_io.exit.loopexit, label %if.end.i\l|{<s0>T|<s1>F}}"];
	Node0x57c5830:s0 -> Node0x57c7090;
	Node0x57c5830:s1 -> Node0x57c59f0;
	Node0x57c59f0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end.i:                                         \l  %mul41.i = mul nsw i64 %cond27.sub29.i, %mul.i\l  %21 = load void (%struct.jpeg_common_struct*, %struct.backing_store_struct*,\l... i8*, i64, i64)*, void (%struct.jpeg_common_struct*,\l... %struct.backing_store_struct*, i8*, i64, i64)** %write_backing_store.i, align\l... 8, !tbaa !24\l  %22 = load [64 x i16]**, [64 x i16]*** %mem_buffer46.i, align 8, !tbaa !11\l  %arrayidx.i = getelementptr inbounds [64 x i16]*, [64 x i16]** %22, i64\l... %i.098.i\l  %23 = bitcast [64 x i16]** %arrayidx.i to i8**\l  %24 = load i8*, i8** %23, align 8, !tbaa !25\l  tail call void %21(%struct.jpeg_common_struct* %cinfo,\l... %struct.backing_store_struct* nonnull %b_s_info.i, i8* %24, i64\l... %file_offset.097.i, i64 %mul41.i) #5\l  %add49.i = add nsw i64 %mul41.i, %file_offset.097.i\l  %25 = load i64, i64* %18, align 8\l  %conv51.i = and i64 %25, 4294967295\l  %add52.i = add nsw i64 %conv51.i, %i.098.i\l  %26 = load i32, i32* %rows_in_mem.i, align 4, !tbaa !19\l  %conv3.i = zext i32 %26 to i64\l  %cmp.i = icmp sgt i64 %conv3.i, %add52.i\l  br i1 %cmp.i, label %for.body.i, label %do_barray_io.exit.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x57c59f0:s0 -> Node0x57c5830;
	Node0x57c59f0:s1 -> Node0x57c7090;
	Node0x57c7090 [shape=record, style = filled, fillcolor = blue, label="{do_barray_io.exit.loopexit:                       \l  br label %do_barray_io.exit\l}"];
	Node0x57c7090 -> Node0x57c4be0;
	Node0x57c4be0 [shape=record, style = filled, fillcolor = skyblue, label="{do_barray_io.exit:                                \l  store i32 0, i32* %dirty, align 8, !tbaa !21\l  br label %if.end22\l}"];
	Node0x57c4be0 -> Node0x5798db0;
	Node0x5798db0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end22:                                         \l  %27 = load i32, i32* %cur_start_row, align 4, !tbaa !18\l  %cmp24 = icmp ult i32 %27, %start_row\l  br i1 %cmp24, label %if.end22.if.end35_crit_edge, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5798db0:s0 -> Node0x57c7b80;
	Node0x5798db0:s1 -> Node0x57c7bd0;
	Node0x57c7b80 [shape=record, style = filled, fillcolor = blue, label="{if.end22.if.end35_crit_edge:                      \l  %rows_in_mem.i156.phi.trans.insert = getelementptr inbounds\l... %struct.jvirt_barray_control, %struct.jvirt_barray_control* %ptr, i64 0, i32 4\l  %.pre = load i32, i32* %rows_in_mem.i156.phi.trans.insert, align 4, !tbaa !19\l  br label %if.end35\l}"];
	Node0x57c7b80 -> Node0x57c7e00;
	Node0x57c7bd0 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %conv = zext i32 %add to i64\l  %rows_in_mem27 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 4\l  %28 = load i32, i32* %rows_in_mem27, align 4, !tbaa !19\l  %conv28 = zext i32 %28 to i64\l  %sub = sub nsw i64 %conv, %conv28\l  %cmp29 = icmp slt i64 %sub, 0\l  %.sub = select i1 %cmp29, i64 0, i64 %sub\l  %conv33 = trunc i64 %.sub to i32\l  br label %if.end35\l}"];
	Node0x57c7bd0 -> Node0x57c7e00;
	Node0x57c7e00 [shape=record, style = filled, fillcolor = skyblue, label="{if.end35:                                         \l  %rows_in_mem.i156.pre-phi = phi i32* [ %rows_in_mem.i156.phi.trans.insert,\l... %if.end22.if.end35_crit_edge ], [ %rows_in_mem27, %if.else ]\l  %29 = phi i32 [ %.pre, %if.end22.if.end35_crit_edge ], [ %28, %if.else ]\l  %storemerge = phi i32 [ %start_row, %if.end22.if.end35_crit_edge ], [\l... %conv33, %if.else ]\l  store i32 %storemerge, i32* %cur_start_row, align 4, !tbaa !18\l  %blocksperrow.i150 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 2\l  %30 = load i32, i32* %blocksperrow.i150, align 4, !tbaa !22\l  %conv.i151 = zext i32 %30 to i64\l  %mul.i152 = shl nuw nsw i64 %conv.i151, 7\l  %cmp96.i158 = icmp eq i32 %29, 0\l  br i1 %cmp96.i158, label %if.end36, label %for.body.lr.ph.i167\l|{<s0>T|<s1>F}}"];
	Node0x57c7e00:s0 -> Node0x57c0fb0;
	Node0x57c7e00:s1 -> Node0x57c5580;
	Node0x57c5580 [shape=record, style = filled, fillcolor = skyblue, label="{for.body.lr.ph.i167:                              \l  %conv395.i157 = zext i32 %29 to i64\l  %conv1.i154 = zext i32 %storemerge to i64\l  %mul2.i155 = mul nsw i64 %mul.i152, %conv1.i154\l  %rowsperchunk.i159 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 5\l  %first_undef_row.i160 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 7\l  %b_s_info.i162 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 12\l  %read_backing_store.i163 = getelementptr inbounds\l... %struct.backing_store_struct, %struct.backing_store_struct* %b_s_info.i162,\l... i64 0, i32 0\l  %mem_buffer46.i164 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 0\l  %31 = bitcast i32* %rowsperchunk.i159 to i64*\l  %.pre101.i166 = load i64, i64* %31, align 8\l  br label %for.body.us.i\l}"];
	Node0x57c5580 -> Node0x57c96d0;
	Node0x57c96d0 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us.i:                                    \l  %.in102.in.i = phi i64 [ %38, %if.end.us.i ], [ %.pre101.i166,\l... %for.body.lr.ph.i167 ]\l  %conv399.us.i = phi i64 [ %conv3.us.i, %if.end.us.i ], [ %conv395.i157,\l... %for.body.lr.ph.i167 ]\l  %i.098.us.i = phi i64 [ %add52.us.i, %if.end.us.i ], [ 0,\l... %for.body.lr.ph.i167 ]\l  %file_offset.097.us.i = phi i64 [ %add49.us.i, %if.end.us.i ], [ %mul2.i155,\l... %for.body.lr.ph.i167 ]\l  %.in102.i = lshr i64 %.in102.in.i, 32\l  %conv5.us.i = and i64 %.in102.in.i, 4294967295\l  %sub.us.i = sub nsw i64 %conv399.us.i, %i.098.us.i\l  %cmp8.us.i = icmp slt i64 %conv5.us.i, %sub.us.i\l  %conv5.sub.us.i = select i1 %cmp8.us.i, i64 %conv5.us.i, i64 %sub.us.i\l  %add.us.i = add nsw i64 %i.098.us.i, %.in102.i\l  %32 = load i32, i32* %first_undef_row.i160, align 8, !tbaa !23\l  %conv17.us.i = zext i32 %32 to i64\l  %sub18.us.i = sub nsw i64 %conv17.us.i, %add.us.i\l  %cmp19.us.i = icmp slt i64 %conv5.sub.us.i, %sub18.us.i\l  %cond27.us.i = select i1 %cmp19.us.i, i64 %conv5.sub.us.i, i64 %sub18.us.i\l  %33 = load i32, i32* %rows_in_array, align 8, !tbaa !3\l  %conv28.us.i = zext i32 %33 to i64\l  %sub29.us.i = sub nsw i64 %conv28.us.i, %add.us.i\l  %cmp30.us.i = icmp slt i64 %cond27.us.i, %sub29.us.i\l  %cond27.sub29.us.i = select i1 %cmp30.us.i, i64 %cond27.us.i, i64 %sub29.us.i\l  %cmp39.us.i = icmp slt i64 %cond27.sub29.us.i, 1\l  br i1 %cmp39.us.i, label %if.end36.loopexit, label %if.end.us.i\l|{<s0>T|<s1>F}}"];
	Node0x57c96d0:s0 -> Node0x57caaf0;
	Node0x57c96d0:s1 -> Node0x57c9850;
	Node0x57c9850 [shape=record, style = filled, fillcolor = cyan, label="{if.end.us.i:                                      \l  %mul41.us.i = mul nsw i64 %cond27.sub29.us.i, %mul.i152\l  %34 = load void (%struct.jpeg_common_struct*, %struct.backing_store_struct*,\l... i8*, i64, i64)*, void (%struct.jpeg_common_struct*,\l... %struct.backing_store_struct*, i8*, i64, i64)** %read_backing_store.i163,\l... align 8, !tbaa !26\l  %35 = load [64 x i16]**, [64 x i16]*** %mem_buffer46.i164, align 8, !tbaa !11\l  %arrayidx47.us.i = getelementptr inbounds [64 x i16]*, [64 x i16]** %35, i64\l... %i.098.us.i\l  %36 = bitcast [64 x i16]** %arrayidx47.us.i to i8**\l  %37 = load i8*, i8** %36, align 8, !tbaa !25\l  tail call void %34(%struct.jpeg_common_struct* %cinfo,\l... %struct.backing_store_struct* nonnull %b_s_info.i162, i8* %37, i64\l... %file_offset.097.us.i, i64 %mul41.us.i) #5\l  %add49.us.i = add nsw i64 %mul41.us.i, %file_offset.097.us.i\l  %38 = load i64, i64* %31, align 8\l  %conv51.us.i = and i64 %38, 4294967295\l  %add52.us.i = add nsw i64 %conv51.us.i, %i.098.us.i\l  %39 = load i32, i32* %rows_in_mem.i156.pre-phi, align 4, !tbaa !19\l  %conv3.us.i = zext i32 %39 to i64\l  %cmp.us.i = icmp sgt i64 %conv3.us.i, %add52.us.i\l  br i1 %cmp.us.i, label %for.body.us.i, label %if.end36.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x57c9850:s0 -> Node0x57c96d0;
	Node0x57c9850:s1 -> Node0x57caaf0;
	Node0x57caaf0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end36.loopexit:                                \l  br label %if.end36\l}"];
	Node0x57caaf0 -> Node0x57c0fb0;
	Node0x57c0fb0 [shape=record, style = filled, fillcolor = turquoise, label="{if.end36:                                         \l  %first_undef_row = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 7\l  %40 = bitcast i32* %first_undef_row to i64*\l  %41 = load i64, i64* %40, align 8\l  %42 = trunc i64 %41 to i32\l  %cmp37 = icmp ult i32 %42, %add\l  %43 = lshr i64 %41, 32\l  %44 = trunc i64 %43 to i32\l  br i1 %cmp37, label %if.then39, label %if.end79, !prof !27\l|{<s0>T|<s1>F}}"];
	Node0x57c0fb0:s0 -> Node0x57cb740;
	Node0x57c0fb0:s1 -> Node0x57cb820;
	Node0x57cb740 [shape=record, style = filled, fillcolor = cyan, label="{if.then39:                                        \l  %cmp41 = icmp ult i32 %42, %start_row\l  %tobool44 = icmp eq i32 %writable, 0\l  br i1 %cmp41, label %if.then43, label %if.end54, !prof !28\l|{<s0>T|<s1>F}}"];
	Node0x57cb740:s0 -> Node0x57cbb50;
	Node0x57cb740:s1 -> Node0x57cbbd0;
	Node0x57cbb50 [shape=record, style = filled, fillcolor = blue, label="{if.then43:                                        \l  br i1 %tobool44, label %if.end58, label %if.end54.thread\l|{<s0>T|<s1>F}}"];
	Node0x57cbb50:s0 -> Node0x57cbdf0;
	Node0x57cbb50:s1 -> Node0x57cbe70;
	Node0x57cbe70 [shape=record, style = filled, fillcolor = blue, label="{if.end54.thread:                                  \l  %err46 = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err46, align\l... 8, !tbaa !12\l  %msg_code47 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %45, i64 0, i32 5\l  store i32 20, i32* %msg_code47, align 8, !tbaa !14\l  %46 = bitcast %struct.jpeg_error_mgr* %45 to void\l... (%struct.jpeg_common_struct*)**\l  %47 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %46, align 8, !tbaa !17\l  tail call void %47(%struct.jpeg_common_struct* %cinfo) #5\l  br label %if.then56\l}"];
	Node0x57cbe70 -> Node0x57cc390;
	Node0x57cbbd0 [shape=record, style = filled, fillcolor = cyan, label="{if.end54:                                         \l  br i1 %tobool44, label %if.end58, label %if.then56, !prof !29\l|{<s0>T|<s1>F}}"];
	Node0x57cbbd0:s0 -> Node0x57cbdf0;
	Node0x57cbbd0:s1 -> Node0x57cc390;
	Node0x57cc390 [shape=record, style = filled, fillcolor = cyan, label="{if.then56:                                        \l  %undef_row.0171 = phi i32 [ %start_row, %if.end54.thread ], [ %42, %if.end54\l... ]\l  store i32 %add, i32* %first_undef_row, align 8, !tbaa !23\l  %pre_zero.phi.trans.insert = getelementptr inbounds\l... %struct.jvirt_barray_control, %struct.jvirt_barray_control* %ptr, i64 0, i32 8\l  %.pre178 = load i32, i32* %pre_zero.phi.trans.insert, align 4, !tbaa !30\l  br label %if.end58\l}"];
	Node0x57cc390 -> Node0x57cbdf0;
	Node0x57cbdf0 [shape=record, style = filled, fillcolor = cyan, label="{if.end58:                                         \l  %48 = phi i32 [ %.pre178, %if.then56 ], [ %44, %if.end54 ], [ %44,\l... %if.then43 ]\l  %tobool55172 = phi i1 [ true, %if.then56 ], [ false, %if.end54 ], [ false,\l... %if.then43 ]\l  %undef_row.0170 = phi i32 [ %undef_row.0171, %if.then56 ], [ %42, %if.end54\l... ], [ %start_row, %if.then43 ]\l  %tobool59 = icmp eq i32 %48, 0\l  br i1 %tobool59, label %if.else69, label %if.then60, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x57cbdf0:s0 -> Node0x57cd200;
	Node0x57cbdf0:s1 -> Node0x57cd2e0;
	Node0x57cd2e0 [shape=record, style = filled, fillcolor = blue, label="{if.then60:                                        \l  %blocksperrow = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 2\l  %49 = load i32, i32* %blocksperrow, align 4, !tbaa !22\l  %conv61 = zext i32 %49 to i64\l  %mul = shl nuw nsw i64 %conv61, 7\l  %50 = load i32, i32* %cur_start_row, align 4, !tbaa !18\l  %sub63 = sub i32 %undef_row.0170, %50\l  %sub65 = sub i32 %add, %50\l  %cmp66176 = icmp ult i32 %sub63, %sub65\l  br i1 %cmp66176, label %while.body.lr.ph, label %if.end79\l|{<s0>T|<s1>F}}"];
	Node0x57cd2e0:s0 -> Node0x57cd9f0;
	Node0x57cd2e0:s1 -> Node0x57cb820;
	Node0x57cd9f0 [shape=record, style = filled, fillcolor = blue, label="{while.body.lr.ph:                                 \l  %mem_buffer68 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 0\l  %51 = zext i32 %sub63 to i64\l  br label %while.body\l}"];
	Node0x57cd9f0 -> Node0x57cdc50;
	Node0x57cdc50 [shape=record, style = filled, fillcolor = cyan, label="{while.body:                                       \l  %indvars.iv = phi i64 [ %51, %while.body.lr.ph ], [ %indvars.iv.next,\l... %while.body ]\l  %52 = load [64 x i16]**, [64 x i16]*** %mem_buffer68, align 8, !tbaa !11\l  %arrayidx = getelementptr inbounds [64 x i16]*, [64 x i16]** %52, i64\l... %indvars.iv\l  %53 = bitcast [64 x i16]** %arrayidx to i8**\l  %54 = load i8*, i8** %53, align 8, !tbaa !25\l  tail call void @jzero_far(i8* %54, i64 %mul) #5\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %lftr.wideiv = trunc i64 %indvars.iv.next to i32\l  %exitcond = icmp eq i32 %lftr.wideiv, %sub65\l  br i1 %exitcond, label %if.end79.loopexit, label %while.body\l|{<s0>T|<s1>F}}"];
	Node0x57cdc50:s0 -> Node0x57ce350;
	Node0x57cdc50:s1 -> Node0x57cdc50;
	Node0x57cd200 [shape=record, style = filled, fillcolor = cyan, label="{if.else69:                                        \l  br i1 %tobool55172, label %if.end79, label %if.then71, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x57cd200:s0 -> Node0x57cb820;
	Node0x57cd200:s1 -> Node0x57ce4c0;
	Node0x57ce4c0 [shape=record, style = filled, fillcolor = blue, label="{if.then71:                                        \l  %err72 = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %55 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err72, align\l... 8, !tbaa !12\l  %msg_code73 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %55, i64 0, i32 5\l  store i32 20, i32* %msg_code73, align 8, !tbaa !14\l  %56 = bitcast %struct.jpeg_error_mgr* %55 to void\l... (%struct.jpeg_common_struct*)**\l  %57 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %56, align 8, !tbaa !17\l  tail call void %57(%struct.jpeg_common_struct* %cinfo) #5\l  br label %if.end79\l}"];
	Node0x57ce4c0 -> Node0x57cb820;
	Node0x57ce350 [shape=record, style = filled, fillcolor = blue, label="{if.end79.loopexit:                                \l  br label %if.end79\l}"];
	Node0x57ce350 -> Node0x57cb820;
	Node0x57cb820 [shape=record, style = filled, fillcolor = turquoise, label="{if.end79:                                         \l  %tobool80 = icmp eq i32 %writable, 0\l  br i1 %tobool80, label %if.end83, label %if.then81, !prof !32\l|{<s0>T|<s1>F}}"];
	Node0x57cb820:s0 -> Node0x57cf060;
	Node0x57cb820:s1 -> Node0x57cf0e0;
	Node0x57cf0e0 [shape=record, style = filled, fillcolor = cyan, label="{if.then81:                                        \l  %dirty82 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 9\l  store i32 1, i32* %dirty82, align 8, !tbaa !21\l  br label %if.end83\l}"];
	Node0x57cf0e0 -> Node0x57cf060;
	Node0x57cf060 [shape=record, style = filled, fillcolor = turquoise, label="{if.end83:                                         \l  %mem_buffer84 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %ptr, i64 0, i32 0\l  %58 = load [64 x i16]**, [64 x i16]*** %mem_buffer84, align 8, !tbaa !11\l  %59 = load i32, i32* %cur_start_row, align 4, !tbaa !18\l  %sub86 = sub i32 %start_row, %59\l  %idx.ext = zext i32 %sub86 to i64\l  %add.ptr = getelementptr inbounds [64 x i16]*, [64 x i16]** %58, i64 %idx.ext\l  ret [64 x i16]** %add.ptr\l}"];
}
