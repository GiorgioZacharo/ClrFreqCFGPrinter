digraph "CFG for 'set_quant_slots' function" {
	label="CFG for 'set_quant_slots' function";

	Node0x5e51c80 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %val = alloca i32, align 4\l  %ch = alloca i8, align 1\l  %0 = bitcast i32* %val to i8*\l  call void @llvm.lifetime.start(i64 4, i8* %0) #5\l  store i32 0, i32* %val, align 4, !tbaa !3\l  call void @llvm.lifetime.start(i64 1, i8* nonnull %ch) #5\l  %comp_info20 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14\l  br label %for.body\l}"];
	Node0x5e51c80 -> Node0x5e521b0;
	Node0x5e521b0 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc ]\l  %arg.addr.034 = phi i8* [ %arg, %entry ], [ %arg.addr.2, %for.inc ]\l  %1 = load i8, i8* %arg.addr.034, align 1, !tbaa !7\l  %tobool = icmp eq i8 %1, 0\l  br i1 %tobool, label %if.else, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x5e521b0:s0 -> Node0x5e528f0;
	Node0x5e521b0:s1 -> Node0x5e529c0;
	Node0x5e529c0 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  store i8 44, i8* %ch, align 1, !tbaa !7\l  %call = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %arg.addr.034,\l... i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64\l... 0), i32* nonnull %val, i8* nonnull %ch) #5\l  %cmp1 = icmp sgt i32 %call, 0\l  %2 = load i8, i8* %ch, align 1\l  %cmp3 = icmp eq i8 %2, 44\l  %or.cond = and i1 %cmp1, %cmp3\l  br i1 %or.cond, label %if.end6, label %cleanup.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5e529c0:s0 -> Node0x5e53890;
	Node0x5e529c0:s1 -> Node0x5e53990;
	Node0x5e53890 [shape=record, style = filled, fillcolor = blue, label="{if.end6:                                          \l  %3 = load i32, i32* %val, align 4, !tbaa !3\l  %4 = icmp ugt i32 %3, 3\l  br i1 %4, label %if.then11, label %if.end13\l|{<s0>T|<s1>F}}"];
	Node0x5e53890:s0 -> Node0x5e53bf0;
	Node0x5e53890:s1 -> Node0x5e53ca0;
	Node0x5e53bf0 [shape=record, style = filled, fillcolor = blue, label="{if.then11:                                        \l  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !8\l  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %5, i8* nonnull getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64\l... 0, i64 0), i32 3) #6\l  br label %cleanup\l}"];
	Node0x5e53bf0 -> Node0x5e53fb0;
	Node0x5e53ca0 [shape=record, style = filled, fillcolor = blue, label="{if.end13:                                         \l  %6 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info20, align 8, !tbaa !10\l  %quant_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %6, i64 %indvars.iv, i32 4\l  store i32 %3, i32* %quant_tbl_no, align 8, !tbaa !14\l  br label %while.cond\l}"];
	Node0x5e53ca0 -> Node0x5e54490;
	Node0x5e54490 [shape=record, style = filled, fillcolor = blue, label="{while.cond:                                       \l  %arg.addr.1 = phi i8* [ %arg.addr.034, %if.end13 ], [ %incdec.ptr, %land.rhs\l... ]\l  %7 = load i8, i8* %arg.addr.1, align 1, !tbaa !7\l  %tobool15 = icmp eq i8 %7, 0\l  br i1 %tobool15, label %for.inc.loopexit, label %land.rhs\l|{<s0>T|<s1>F}}"];
	Node0x5e54490:s0 -> Node0x5e54ae0;
	Node0x5e54490:s1 -> Node0x5e52b60;
	Node0x5e52b60 [shape=record, style = filled, fillcolor = blue, label="{land.rhs:                                         \l  %incdec.ptr = getelementptr inbounds i8, i8* %arg.addr.1, i64 1\l  %cmp17 = icmp eq i8 %7, 44\l  br i1 %cmp17, label %for.inc.loopexit, label %while.cond\l|{<s0>T|<s1>F}}"];
	Node0x5e52b60:s0 -> Node0x5e54ae0;
	Node0x5e52b60:s1 -> Node0x5e54490;
	Node0x5e528f0 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %8 = load i32, i32* %val, align 4, !tbaa !3\l  %9 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info20, align 8, !tbaa !10\l  %quant_tbl_no22 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %9, i64 %indvars.iv, i32 4\l  store i32 %8, i32* %quant_tbl_no22, align 8, !tbaa !14\l  br label %for.inc\l}"];
	Node0x5e528f0 -> Node0x5e52360;
	Node0x5e54ae0 [shape=record, style = filled, fillcolor = blue, label="{for.inc.loopexit:                                 \l  %arg.addr.2.ph = phi i8* [ %arg.addr.1, %while.cond ], [ %incdec.ptr,\l... %land.rhs ]\l  br label %for.inc\l}"];
	Node0x5e54ae0 -> Node0x5e52360;
	Node0x5e52360 [shape=record, style = filled, fillcolor = blue, label="{for.inc:                                          \l  %arg.addr.2 = phi i8* [ %arg.addr.034, %if.else ], [ %arg.addr.2.ph,\l... %for.inc.loopexit ]\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %cmp = icmp slt i64 %indvars.iv.next, 10\l  br i1 %cmp, label %for.body, label %cleanup.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5e52360:s0 -> Node0x5e521b0;
	Node0x5e52360:s1 -> Node0x5e53990;
	Node0x5e53990 [shape=record, style = filled, fillcolor = blue, label="{cleanup.loopexit:                                 \l  %retval.0.ph = phi i32 [ 1, %for.inc ], [ 0, %if.then ]\l  br label %cleanup\l}"];
	Node0x5e53990 -> Node0x5e53fb0;
	Node0x5e53fb0 [shape=record, style = filled, fillcolor = blue, label="{cleanup:                                          \l  %retval.0 = phi i32 [ 0, %if.then11 ], [ %retval.0.ph, %cleanup.loopexit ]\l  call void @llvm.lifetime.end(i64 1, i8* nonnull %ch) #5\l  call void @llvm.lifetime.end(i64 4, i8* %0) #5\l  ret i32 %retval.0\l}"];
}
