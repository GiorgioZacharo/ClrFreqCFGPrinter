digraph "CFG for 'start_pass_1_quant' function" {
	label="CFG for 'start_pass_1_quant' function";

	Node0x6a24110 [shape=record,label="{entry:\l  %cquantize1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %0 = bitcast %struct.jpeg_color_quantizer** %cquantize1 to\l... %struct.my_cquantizer**\l  %1 = load %struct.my_cquantizer*, %struct.my_cquantizer** %0, align 8, !tbaa\l... !2\l  %sv_colormap = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 1\l  %2 = bitcast i8*** %sv_colormap to i64*\l  %3 = load i64, i64* %2, align 8, !tbaa !10\l  %colormap = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 32\l  %4 = bitcast i8*** %colormap to i64*\l  store i64 %3, i64* %4, align 8, !tbaa !13\l  %sv_actual = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 2\l  %5 = load i32, i32* %sv_actual, align 8, !tbaa !14\l  %actual_number_of_colors = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 31\l  store i32 %5, i32* %actual_number_of_colors, align 4, !tbaa !15\l  %dither_mode = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 20\l  %6 = load i32, i32* %dither_mode, align 8, !tbaa !16\l  switch i32 %6, label %sw.default [\l    i32 0, label %sw.bb\l    i32 1, label %sw.bb4\l    i32 2, label %sw.bb19\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2}}"];
	Node0x6a24110:s0 -> Node0x6a36880;
	Node0x6a24110:s1 -> Node0x6a36960;
	Node0x6a24110:s2 -> Node0x6a36a10;
	Node0x6a24110:s3 -> Node0x6a36ae0;
	Node0x6a36960 [shape=record,label="{sw.bb:                                            \l  %out_color_components = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  %7 = load i32, i32* %out_color_components, align 8, !tbaa !17\l  %cmp = icmp eq i32 %7, 3\l  %color_quantize = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 0, i32 1\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x6a36960:s0 -> Node0x6a37000;
	Node0x6a36960:s1 -> Node0x6a370d0;
	Node0x6a37000 [shape=record,label="{if.then:                                          \l  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*\l... @color_quantize3, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)**\l... %color_quantize, align 8, !tbaa !18\l  br label %sw.epilog\l}"];
	Node0x6a37000 -> Node0x6a374d0;
	Node0x6a370d0 [shape=record,label="{if.else:                                          \l  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*\l... @color_quantize, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)**\l... %color_quantize, align 8, !tbaa !18\l  br label %sw.epilog\l}"];
	Node0x6a370d0 -> Node0x6a374d0;
	Node0x6a36a10 [shape=record,label="{sw.bb4:                                           \l  %out_color_components5 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  %8 = load i32, i32* %out_color_components5, align 8, !tbaa !17\l  %cmp6 = icmp eq i32 %8, 3\l  %color_quantize9 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 0, i32 1\l  %quantize3_ord_dither.quantize_ord_dither = select i1 %cmp6, void\l... (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* @quantize3_ord_dither,\l... void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* @quantize_ord_dither\l  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*\l... %quantize3_ord_dither.quantize_ord_dither, void\l... (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %color_quantize9, align\l... 8, !tbaa !18\l  %row_index = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 6\l  store i32 0, i32* %row_index, align 4, !tbaa !19\l  %is_padded = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 4\l  %9 = load i32, i32* %is_padded, align 8, !tbaa !20\l  %tobool = icmp eq i32 %9, 0\l  br i1 %tobool, label %if.then14, label %if.end15\l|{<s0>T|<s1>F}}"];
	Node0x6a36a10:s0 -> Node0x6a38cc0;
	Node0x6a36a10:s1 -> Node0x6a38da0;
	Node0x6a38cc0 [shape=record,label="{if.then14:                                        \l  tail call fastcc void @create_colorindex(%struct.jpeg_decompress_struct*\l... nonnull %cinfo)\l  br label %if.end15\l}"];
	Node0x6a38cc0 -> Node0x6a38da0;
	Node0x6a38da0 [shape=record,label="{if.end15:                                         \l  %arrayidx = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 7, i64 0\l  %10 = load [16 x i32]*, [16 x i32]** %arrayidx, align 8, !tbaa !21\l  %cmp16 = icmp eq [16 x i32]* %10, null\l  br i1 %cmp16, label %if.then17, label %sw.epilog\l|{<s0>T|<s1>F}}"];
	Node0x6a38da0:s0 -> Node0x6a29eb0;
	Node0x6a38da0:s1 -> Node0x6a374d0;
	Node0x6a29eb0 [shape=record,label="{if.then17:                                        \l  %11 = load %struct.my_cquantizer*, %struct.my_cquantizer** %0, align 8,\l... !tbaa !2\l  %12 = load i32, i32* %out_color_components5, align 8, !tbaa !17\l  %cmp42.i = icmp sgt i32 %12, 0\l  br i1 %cmp42.i, label %for.body.lr.ph.i, label %sw.epilog\l|{<s0>T|<s1>F}}"];
	Node0x6a29eb0:s0 -> Node0x6a2a150;
	Node0x6a29eb0:s1 -> Node0x6a374d0;
	Node0x6a2a150 [shape=record,label="{for.body.lr.ph.i:                                 \l  %mem.i.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %13 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  br label %for.body.i\l}"];
	Node0x6a2a150 -> Node0x6a2a380;
	Node0x6a2a380 [shape=record,label="{for.body.i:                                       \l  %14 = phi i32 [ %12, %for.body.lr.ph.i ], [ %22, %if.end14.i ]\l  %indvars.iv45.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next46.i,\l... %if.end14.i ]\l  %arrayidx.i = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %11, i64 0, i32 5, i64 %indvars.iv45.i\l  %15 = load i32, i32* %arrayidx.i, align 4, !tbaa !22\l  %cmp340.i = icmp sgt i64 %indvars.iv45.i, 0\l  br i1 %cmp340.i, label %for.body4.i.preheader, label %if.then13.i\l|{<s0>T|<s1>F}}"];
	Node0x6a2a380:s0 -> Node0x6a2aa40;
	Node0x6a2a380:s1 -> Node0x6a2ab40;
	Node0x6a2aa40 [shape=record,label="{for.body4.i.preheader:                            \l  br label %for.body4.i\l}"];
	Node0x6a2aa40 -> Node0x6a2acb0;
	Node0x6a2ad90 [shape=record,label="{for.cond2.i:                                      \l  %cmp3.i = icmp slt i64 %indvars.iv.next.i, %indvars.iv45.i\l  br i1 %cmp3.i, label %for.body4.i, label %if.then13.i.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6a2ad90:s0 -> Node0x6a2acb0;
	Node0x6a2ad90:s1 -> Node0x6a2af80;
	Node0x6a2acb0 [shape=record,label="{for.body4.i:                                      \l  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.cond2.i ], [ 0,\l... %for.body4.i.preheader ]\l  %arrayidx7.i = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %11, i64 0, i32 5, i64 %indvars.iv.i\l  %16 = load i32, i32* %arrayidx7.i, align 4, !tbaa !22\l  %cmp8.i = icmp eq i32 %15, %16\l  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1\l  br i1 %cmp8.i, label %for.end.i, label %for.cond2.i\l|{<s0>T|<s1>F}}"];
	Node0x6a2acb0:s0 -> Node0x6a2ade0;
	Node0x6a2acb0:s1 -> Node0x6a2ad90;
	Node0x6a2ade0 [shape=record,label="{for.end.i:                                        \l  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body4.i ]\l  %arrayidx11.i = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %11, i64 0, i32 7, i64 %indvars.iv.i.lcssa\l  %17 = load [16 x i32]*, [16 x i32]** %arrayidx11.i, align 8, !tbaa !21\l  %cmp12.i = icmp eq [16 x i32]* %17, null\l  br i1 %cmp12.i, label %if.then13.i, label %if.end14.i\l|{<s0>T|<s1>F}}"];
	Node0x6a2ade0:s0 -> Node0x6a2ab40;
	Node0x6a2ade0:s1 -> Node0x6a2a540;
	Node0x6a2af80 [shape=record,label="{if.then13.i.loopexit:                             \l  br label %if.then13.i\l}"];
	Node0x6a2af80 -> Node0x6a2ab40;
	Node0x6a2ab40 [shape=record,label="{if.then13.i:                                      \l  %18 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem.i.i,\l... align 8, !tbaa !23\l  %alloc_small.i.i = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %18, i64 0, i32 0\l  %19 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small.i.i, align 8, !tbaa !24\l  %call.i.i = tail call i8* %19(%struct.jpeg_common_struct* %13, i32 1, i64\l... 1024) #5\l  %20 = bitcast i8* %call.i.i to [16 x i32]*\l  %sub.i.i = add nsw i32 %15, -1\l  %conv.i.i = sext i32 %sub.i.i to i64\l  %mul.i.i = shl nsw i64 %conv.i.i, 9\l  br label %for.cond2.preheader.i.i\l}"];
	Node0x6a2ab40 -> Node0x6a26820;
	Node0x6a26820 [shape=record,label="{for.cond2.preheader.i.i:                          \l  %indvars.iv43.i.i = phi i64 [ 0, %if.then13.i ], [ %indvars.iv.next44.i.i,\l... %for.inc23.i.i ]\l  br label %for.body5.i.i\l}"];
	Node0x6a26820 -> Node0x6a26be0;
	Node0x6a26be0 [shape=record,label="{for.body5.i.i:                                    \l  %indvars.iv.i.i = phi i64 [ 0, %for.cond2.preheader.i.i ], [\l... %indvars.iv.next.i.i, %cond.end.i.i ]\l  %arrayidx7.i.i = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]*\l... @base_dither_matrix, i64 0, i64 %indvars.iv43.i.i, i64 %indvars.iv.i.i\l  %21 = load i8, i8* %arrayidx7.i.i, align 1, !tbaa !27\l  %conv8.i.i = zext i8 %21 to i32\l  %mul9.i.i = shl nuw nsw i32 %conv8.i.i, 1\l  %sub10.i.i = sub nsw i32 255, %mul9.i.i\l  %conv11.i.i = sext i32 %sub10.i.i to i64\l  %mul12.i.i = mul nsw i64 %conv11.i.i, 255\l  %cmp13.i.i = icmp slt i32 %sub10.i.i, 0\l  br i1 %cmp13.i.i, label %cond.true.i.i, label %cond.false.i.i\l|{<s0>T|<s1>F}}"];
	Node0x6a26be0:s0 -> Node0x6a27480;
	Node0x6a26be0:s1 -> Node0x6a27560;
	Node0x6a27480 [shape=record,label="{cond.true.i.i:                                    \l  %sub15.i.i = sub nsw i64 0, %mul12.i.i\l  %div.i.i = sdiv i64 %sub15.i.i, %mul.i.i\l  %sub16.i.i = sub nsw i64 0, %div.i.i\l  br label %cond.end.i.i\l}"];
	Node0x6a27480 -> Node0x6a26d80;
	Node0x6a27560 [shape=record,label="{cond.false.i.i:                                   \l  %div17.i.i = sdiv i64 %mul12.i.i, %mul.i.i\l  br label %cond.end.i.i\l}"];
	Node0x6a27560 -> Node0x6a26d80;
	Node0x6a26d80 [shape=record,label="{cond.end.i.i:                                     \l  %cond.i.i = phi i64 [ %sub16.i.i, %cond.true.i.i ], [ %div17.i.i,\l... %cond.false.i.i ]\l  %conv18.i.i = trunc i64 %cond.i.i to i32\l  %arrayidx22.i.i = getelementptr inbounds [16 x i32], [16 x i32]* %20, i64\l... %indvars.iv43.i.i, i64 %indvars.iv.i.i\l  store i32 %conv18.i.i, i32* %arrayidx22.i.i, align 4, !tbaa !22\l  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1\l  %exitcond.i.i = icmp eq i64 %indvars.iv.next.i.i, 16\l  br i1 %exitcond.i.i, label %for.inc23.i.i, label %for.body5.i.i\l|{<s0>T|<s1>F}}"];
	Node0x6a26d80:s0 -> Node0x6a26a50;
	Node0x6a26d80:s1 -> Node0x6a26be0;
	Node0x6a26a50 [shape=record,label="{for.inc23.i.i:                                    \l  %indvars.iv.next44.i.i = add nuw nsw i64 %indvars.iv43.i.i, 1\l  %exitcond45.i.i = icmp eq i64 %indvars.iv.next44.i.i, 16\l  br i1 %exitcond45.i.i, label %if.end14.loopexit.i, label\l... %for.cond2.preheader.i.i\l|{<s0>T|<s1>F}}"];
	Node0x6a26a50:s0 -> Node0x6a27f30;
	Node0x6a26a50:s1 -> Node0x6a26820;
	Node0x6a27f30 [shape=record,label="{if.end14.loopexit.i:                              \l  %.pre.i = load i32, i32* %out_color_components5, align 8, !tbaa !17\l  br label %if.end14.i\l}"];
	Node0x6a27f30 -> Node0x6a2a540;
	Node0x6a2a540 [shape=record,label="{if.end14.i:                                       \l  %22 = phi i32 [ %14, %for.end.i ], [ %.pre.i, %if.end14.loopexit.i ]\l  %odither.1.i = phi [16 x i32]* [ %17, %for.end.i ], [ %20,\l... %if.end14.loopexit.i ]\l  %arrayidx17.i = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %11, i64 0, i32 7, i64 %indvars.iv45.i\l  store [16 x i32]* %odither.1.i, [16 x i32]** %arrayidx17.i, align 8, !tbaa\l... !21\l  %indvars.iv.next46.i = add nuw nsw i64 %indvars.iv45.i, 1\l  %23 = sext i32 %22 to i64\l  %cmp.i = icmp slt i64 %indvars.iv.next46.i, %23\l  br i1 %cmp.i, label %for.body.i, label %sw.epilog.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6a2a540:s0 -> Node0x6a2a380;
	Node0x6a2a540:s1 -> Node0x6a28380;
	Node0x6a36ae0 [shape=record,label="{sw.bb19:                                          \l  %color_quantize21 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 0, i32 1\l  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*\l... @quantize_fs_dither, void (%struct.jpeg_decompress_struct*, i8**, i8**,\l... i32)** %color_quantize21, align 8, !tbaa !18\l  %on_odd_row = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 9\l  store i32 0, i32* %on_odd_row, align 8, !tbaa !28\l  %arrayidx22 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 8, i64 0\l  %24 = load i16*, i16** %arrayidx22, align 8, !tbaa !21\l  %cmp23 = icmp eq i16* %24, null\l  br i1 %cmp23, label %if.then24, label %sw.bb19.if.end25_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x6a36ae0:s0 -> Node0x6a43a80;
	Node0x6a36ae0:s1 -> Node0x6a43b90;
	Node0x6a43b90 [shape=record,label="{sw.bb19.if.end25_crit_edge:                       \l  %out_color_components26.phi.trans.insert = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  %.pre = load i32, i32* %out_color_components26.phi.trans.insert, align 8,\l... !tbaa !17\l  %.pre76 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  br label %if.end25\l}"];
	Node0x6a43b90 -> Node0x6a2b730;
	Node0x6a43a80 [shape=record,label="{if.then24:                                        \l  %output_width.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %25 = load i32, i32* %output_width.i, align 8, !tbaa !29\l  %add.i = add i32 %25, 2\l  %conv.i = zext i32 %add.i to i64\l  %mul.i = shl nuw nsw i64 %conv.i, 1\l  %out_color_components.i61 = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  %26 = load i32, i32* %out_color_components.i61, align 8, !tbaa !17\l  %cmp12.i62 = icmp sgt i32 %26, 0\l  br i1 %cmp12.i62, label %for.body.lr.ph.i63, label %sw.epilog\l|{<s0>T|<s1>F}}"];
	Node0x6a43a80:s0 -> Node0x6a45030;
	Node0x6a43a80:s1 -> Node0x6a374d0;
	Node0x6a45030 [shape=record,label="{for.body.lr.ph.i63:                               \l  %mem.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %27 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  br label %for.body.i68\l}"];
	Node0x6a45030 -> Node0x6a45260;
	Node0x6a45260 [shape=record,label="{for.body.i68:                                     \l  %indvars.iv.i64 = phi i64 [ 0, %for.body.lr.ph.i63 ], [\l... %indvars.iv.next.i66, %for.body.i68 ]\l  %28 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem.i, align\l... 8, !tbaa !23\l  %alloc_large.i = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %28, i64 0, i32 1\l  %29 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_large.i, align 8, !tbaa !30\l  %call.i = tail call i8* %29(%struct.jpeg_common_struct* %27, i32 1, i64\l... %mul.i) #5\l  %arrayidx.i65 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 8, i64 %indvars.iv.i64\l  %30 = bitcast i16** %arrayidx.i65 to i8**\l  store i8* %call.i, i8** %30, align 8, !tbaa !21\l  %indvars.iv.next.i66 = add nuw nsw i64 %indvars.iv.i64, 1\l  %31 = load i32, i32* %out_color_components.i61, align 8, !tbaa !17\l  %32 = sext i32 %31 to i64\l  %cmp.i67 = icmp slt i64 %indvars.iv.next.i66, %32\l  br i1 %cmp.i67, label %for.body.i68, label %if.end25.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6a45260:s0 -> Node0x6a45260;
	Node0x6a45260:s1 -> Node0x6a2b330;
	Node0x6a2b330 [shape=record,label="{if.end25.loopexit:                                \l  %.lcssa = phi i32 [ %31, %for.body.i68 ]\l  br label %if.end25\l}"];
	Node0x6a2b330 -> Node0x6a2b730;
	Node0x6a2b730 [shape=record,label="{if.end25:                                         \l  %out_color_components26.pre-phi = phi i32* [\l... %out_color_components26.phi.trans.insert, %sw.bb19.if.end25_crit_edge ], [\l... %out_color_components.i61, %if.end25.loopexit ]\l  %output_width.pre-phi = phi i32* [ %.pre76, %sw.bb19.if.end25_crit_edge ], [\l... %output_width.i, %if.end25.loopexit ]\l  %33 = phi i32 [ %.pre, %sw.bb19.if.end25_crit_edge ], [ %.lcssa,\l... %if.end25.loopexit ]\l  %34 = load i32, i32* %output_width.pre-phi, align 8, !tbaa !29\l  %add = add i32 %34, 2\l  %conv = zext i32 %add to i64\l  %mul = shl nuw nsw i64 %conv, 1\l  %cmp2772 = icmp sgt i32 %33, 0\l  br i1 %cmp2772, label %for.body.preheader, label %sw.epilog\l|{<s0>T|<s1>F}}"];
	Node0x6a2b730:s0 -> Node0x6a46900;
	Node0x6a2b730:s1 -> Node0x6a374d0;
	Node0x6a46900 [shape=record,label="{for.body.preheader:                               \l  br label %for.body\l}"];
	Node0x6a46900 -> Node0x6a46a90;
	Node0x6a46a90 [shape=record,label="{for.body:                                         \l  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0,\l... %for.body.preheader ]\l  %arrayidx30 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 8, i64 %indvars.iv\l  %35 = bitcast i16** %arrayidx30 to i8**\l  %36 = load i8*, i8** %35, align 8, !tbaa !21\l  tail call void @jzero_far(i8* %36, i64 %mul) #5\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %37 = load i32, i32* %out_color_components26.pre-phi, align 8, !tbaa !17\l  %38 = sext i32 %37 to i64\l  %cmp27 = icmp slt i64 %indvars.iv.next, %38\l  br i1 %cmp27, label %for.body, label %sw.epilog.loopexit85\l|{<s0>T|<s1>F}}"];
	Node0x6a46a90:s0 -> Node0x6a46a90;
	Node0x6a46a90:s1 -> Node0x6a47310;
	Node0x6a36880 [shape=record,label="{sw.default:                                       \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !31\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %39, i64 0, i32 5\l  store i32 47, i32* %msg_code, align 8, !tbaa !32\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %39, i64 0, i32 0\l  %40 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !34\l  %41 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %40(%struct.jpeg_common_struct* %41) #5\l  br label %sw.epilog\l}"];
	Node0x6a36880 -> Node0x6a374d0;
	Node0x6a28380 [shape=record,label="{sw.epilog.loopexit:                               \l  br label %sw.epilog\l}"];
	Node0x6a28380 -> Node0x6a374d0;
	Node0x6a47310 [shape=record,label="{sw.epilog.loopexit85:                             \l  br label %sw.epilog\l}"];
	Node0x6a47310 -> Node0x6a374d0;
	Node0x6a374d0 [shape=record,label="{sw.epilog:                                        \l  ret void\l}"];
}
