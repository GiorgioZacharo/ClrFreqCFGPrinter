digraph "CFG for 'put_demapped_rgb' function" {
	label="CFG for 'put_demapped_rgb' function";

	Node0x58243a0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %colormap = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 32\l  %0 = load i8**, i8*** %colormap, align 8, !tbaa !2\l  %1 = load i8*, i8** %0, align 8, !tbaa !10\l  %arrayidx2 = getelementptr inbounds i8*, i8** %0, i64 1\l  %2 = load i8*, i8** %arrayidx2, align 8, !tbaa !10\l  %arrayidx4 = getelementptr inbounds i8*, i8** %0, i64 2\l  %3 = load i8*, i8** %arrayidx4, align 8, !tbaa !10\l  %iobuffer = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 1\l  %4 = bitcast %struct.djpeg_dest_struct* %iobuffer to i8**\l  %5 = load i8*, i8** %4, align 8, !tbaa !11\l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %6 = load i32, i32* %output_width, align 8, !tbaa !15\l  %cmp42 = icmp eq i32 %6, 0\l  br i1 %cmp42, label %for.end, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x58243a0:s0 -> Node0x58250b0;
	Node0x58243a0:s1 -> Node0x58251b0;
	Node0x58251b0 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader:                               \l  %buffer = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 0, i32 4\l  %7 = load i8**, i8*** %buffer, align 8, !tbaa !16\l  %8 = load i8*, i8** %7, align 8, !tbaa !10\l  %xtraiter = and i32 %6, 1\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %for.body.preheader.split, label %for.body.prol\l|{<s0>T|<s1>F}}"];
	Node0x58251b0:s0 -> Node0x5824e80;
	Node0x58251b0:s1 -> Node0x58257f0;
	Node0x58257f0 [shape=record, style = filled, fillcolor = blue, label="{for.body.prol:                                    \l  %incdec.ptr.prol = getelementptr inbounds i8, i8* %8, i64 1\l  %9 = load i8, i8* %8, align 1, !tbaa !17\l  %idxprom.prol = zext i8 %9 to i64\l  %arrayidx6.prol = getelementptr inbounds i8, i8* %1, i64 %idxprom.prol\l  %10 = load i8, i8* %arrayidx6.prol, align 1, !tbaa !17\l  %incdec.ptr9.prol = getelementptr inbounds i8, i8* %5, i64 1\l  store i8 %10, i8* %5, align 1, !tbaa !17\l  %arrayidx11.prol = getelementptr inbounds i8, i8* %2, i64 %idxprom.prol\l  %11 = load i8, i8* %arrayidx11.prol, align 1, !tbaa !17\l  %incdec.ptr14.prol = getelementptr inbounds i8, i8* %5, i64 2\l  store i8 %11, i8* %incdec.ptr9.prol, align 1, !tbaa !17\l  %arrayidx16.prol = getelementptr inbounds i8, i8* %3, i64 %idxprom.prol\l  %12 = load i8, i8* %arrayidx16.prol, align 1, !tbaa !17\l  %incdec.ptr19.prol = getelementptr inbounds i8, i8* %5, i64 3\l  store i8 %12, i8* %incdec.ptr14.prol, align 1, !tbaa !17\l  %dec.prol = add i32 %6, -1\l  br label %for.body.preheader.split\l}"];
	Node0x58257f0 -> Node0x5824e80;
	Node0x5824e80 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader.split:                         \l  %col.045.unr = phi i32 [ %6, %for.body.preheader ], [ %dec.prol,\l... %for.body.prol ]\l  %bufferptr.044.unr = phi i8* [ %5, %for.body.preheader ], [\l... %incdec.ptr19.prol, %for.body.prol ]\l  %ptr.043.unr = phi i8* [ %8, %for.body.preheader ], [ %incdec.ptr.prol,\l... %for.body.prol ]\l  %13 = icmp eq i32 %6, 1\l  br i1 %13, label %for.end.loopexit, label %for.body.preheader.split.split\l|{<s0>T|<s1>F}}"];
	Node0x5824e80:s0 -> Node0x5826760;
	Node0x5824e80:s1 -> Node0x5826860;
	Node0x5826860 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader.split.split:                   \l  br label %for.body\l}"];
	Node0x5826860 -> Node0x58269d0;
	Node0x58269d0 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %col.045 = phi i32 [ %col.045.unr, %for.body.preheader.split.split ], [\l... %dec.1, %for.body ]\l  %bufferptr.044 = phi i8* [ %bufferptr.044.unr,\l... %for.body.preheader.split.split ], [ %incdec.ptr19.1, %for.body ]\l  %ptr.043 = phi i8* [ %ptr.043.unr, %for.body.preheader.split.split ], [\l... %incdec.ptr.1, %for.body ]\l  %incdec.ptr = getelementptr inbounds i8, i8* %ptr.043, i64 1\l  %14 = load i8, i8* %ptr.043, align 1, !tbaa !17\l  %idxprom = zext i8 %14 to i64\l  %arrayidx6 = getelementptr inbounds i8, i8* %1, i64 %idxprom\l  %15 = load i8, i8* %arrayidx6, align 1, !tbaa !17\l  %incdec.ptr9 = getelementptr inbounds i8, i8* %bufferptr.044, i64 1\l  store i8 %15, i8* %bufferptr.044, align 1, !tbaa !17\l  %arrayidx11 = getelementptr inbounds i8, i8* %2, i64 %idxprom\l  %16 = load i8, i8* %arrayidx11, align 1, !tbaa !17\l  %incdec.ptr14 = getelementptr inbounds i8, i8* %bufferptr.044, i64 2\l  store i8 %16, i8* %incdec.ptr9, align 1, !tbaa !17\l  %arrayidx16 = getelementptr inbounds i8, i8* %3, i64 %idxprom\l  %17 = load i8, i8* %arrayidx16, align 1, !tbaa !17\l  %incdec.ptr19 = getelementptr inbounds i8, i8* %bufferptr.044, i64 3\l  store i8 %17, i8* %incdec.ptr14, align 1, !tbaa !17\l  %incdec.ptr.1 = getelementptr inbounds i8, i8* %ptr.043, i64 2\l  %18 = load i8, i8* %incdec.ptr, align 1, !tbaa !17\l  %idxprom.1 = zext i8 %18 to i64\l  %arrayidx6.1 = getelementptr inbounds i8, i8* %1, i64 %idxprom.1\l  %19 = load i8, i8* %arrayidx6.1, align 1, !tbaa !17\l  %incdec.ptr9.1 = getelementptr inbounds i8, i8* %bufferptr.044, i64 4\l  store i8 %19, i8* %incdec.ptr19, align 1, !tbaa !17\l  %arrayidx11.1 = getelementptr inbounds i8, i8* %2, i64 %idxprom.1\l  %20 = load i8, i8* %arrayidx11.1, align 1, !tbaa !17\l  %incdec.ptr14.1 = getelementptr inbounds i8, i8* %bufferptr.044, i64 5\l  store i8 %20, i8* %incdec.ptr9.1, align 1, !tbaa !17\l  %arrayidx16.1 = getelementptr inbounds i8, i8* %3, i64 %idxprom.1\l  %21 = load i8, i8* %arrayidx16.1, align 1, !tbaa !17\l  %incdec.ptr19.1 = getelementptr inbounds i8, i8* %bufferptr.044, i64 6\l  store i8 %21, i8* %incdec.ptr14.1, align 1, !tbaa !17\l  %dec.1 = add i32 %col.045, -2\l  %cmp.1 = icmp eq i32 %dec.1, 0\l  br i1 %cmp.1, label %for.end.loopexit.unr-lcssa, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x58269d0:s0 -> Node0x5828810;
	Node0x58269d0:s1 -> Node0x58269d0;
	Node0x5828810 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit.unr-lcssa:                       \l  br label %for.end.loopexit\l}"];
	Node0x5828810 -> Node0x5826760;
	Node0x5826760 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  %.pre = load i8*, i8** %4, align 8, !tbaa !11\l  br label %for.end\l}"];
	Node0x5826760 -> Node0x58250b0;
	Node0x58250b0 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %22 = phi i8* [ %.pre, %for.end.loopexit ], [ %5, %entry ]\l  %buffer_width = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 1, i32 2\l  %23 = bitcast void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*)** %buffer_width to i64*\l  %24 = load i64, i64* %23, align 8, !tbaa !18\l  %output_file = getelementptr inbounds %struct.djpeg_dest_struct,\l... %struct.djpeg_dest_struct* %dinfo, i64 0, i32 3\l  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %output_file, align 8,\l... !tbaa !19\l  %call = tail call i64 @fwrite(i8* %22, i64 1, i64 %24, %struct._IO_FILE* %25)\l  ret void\l}"];
}
