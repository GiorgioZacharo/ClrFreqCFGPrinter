digraph "CFG for 'quantize3_ord_dither' function" {
	label="CFG for 'quantize3_ord_dither' function";

	Node0x6a42ae0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %cquantize1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %0 = bitcast %struct.jpeg_color_quantizer** %cquantize1 to\l... %struct.my_cquantizer**\l  %1 = load %struct.my_cquantizer*, %struct.my_cquantizer** %0, align 8, !tbaa\l... !2\l  %colorindex = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 3\l  %2 = load i8**, i8*** %colorindex, align 8, !tbaa !10\l  %3 = load i8*, i8** %2, align 8, !tbaa !13\l  %arrayidx3 = getelementptr inbounds i8*, i8** %2, i64 1\l  %4 = load i8*, i8** %arrayidx3, align 8, !tbaa !13\l  %arrayidx6 = getelementptr inbounds i8*, i8** %2, i64 2\l  %5 = load i8*, i8** %arrayidx6, align 8, !tbaa !13\l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %6 = load i32, i32* %output_width, align 8, !tbaa !14\l  %cmp102 = icmp sgt i32 %num_rows, 0\l  br i1 %cmp102, label %for.body.lr.ph, label %for.end57\l|{<s0>T|<s1>F}}"];
	Node0x6a42ae0:s0 -> Node0x6a69b50;
	Node0x6a42ae0:s1 -> Node0x6a69c00;
	Node0x6a69b50 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  %row_index7 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 6\l  %arrayidx12 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 7, i64 0\l  %arrayidx16 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 7, i64 1\l  %arrayidx21 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 7, i64 2\l  %cmp2597 = icmp eq i32 %6, 0\l  %.pre106 = load i32, i32* %row_index7, align 4, !tbaa !15\l  br i1 %cmp2597, label %for.body.us.preheader, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x6a69b50:s0 -> Node0x6a6a2a0;
	Node0x6a69b50:s1 -> Node0x6a6a380;
	Node0x6a6a380 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader:                               \l  br label %for.body\l}"];
	Node0x6a6a380 -> Node0x6a6a510;
	Node0x6a6a2a0 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.preheader:                            \l  %7 = add i32 %num_rows, -1\l  %xtraiter = and i32 %num_rows, 7\l  %lcmp.mod = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %for.body.us.preheader.split, label\l... %for.body.us.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x6a6a2a0:s0 -> Node0x6a6a800;
	Node0x6a6a2a0:s1 -> Node0x6a69cb0;
	Node0x6a69cb0 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.prol.preheader:                       \l  br label %for.body.us.prol\l}"];
	Node0x6a69cb0 -> Node0x6a69dd0;
	Node0x6a69dd0 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.prol:                                 \l  %8 = phi i32 [ %and54.us.prol, %for.body.us.prol ], [ %.pre106,\l... %for.body.us.prol.preheader ]\l  %row.0103.us.prol = phi i32 [ %inc.us.prol, %for.body.us.prol ], [ 0,\l... %for.body.us.prol.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %for.body.us.prol ], [ %xtraiter,\l... %for.body.us.prol.preheader ]\l  %add53.us.prol = add nsw i32 %8, 1\l  %and54.us.prol = and i32 %add53.us.prol, 15\l  %inc.us.prol = add nuw nsw i32 %row.0103.us.prol, 1\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %for.body.us.preheader.split.loopexit, label\l... %for.body.us.prol, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x6a69dd0:s0 -> Node0x6a6b4b0;
	Node0x6a69dd0:s1 -> Node0x6a69dd0;
	Node0x6a6b4b0 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.preheader.split.loopexit:             \l  %inc.us.prol.lcssa = phi i32 [ %inc.us.prol, %for.body.us.prol ]\l  %and54.us.prol.lcssa = phi i32 [ %and54.us.prol, %for.body.us.prol ]\l  br label %for.body.us.preheader.split\l}"];
	Node0x6a6b4b0 -> Node0x6a6a800;
	Node0x6a6a800 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.preheader.split:                      \l  %and54.us.lcssa.unr = phi i32 [ undef, %for.body.us.preheader ], [\l... %and54.us.prol.lcssa, %for.body.us.preheader.split.loopexit ]\l  %.unr = phi i32 [ %.pre106, %for.body.us.preheader ], [\l... %and54.us.prol.lcssa, %for.body.us.preheader.split.loopexit ]\l  %row.0103.us.unr = phi i32 [ 0, %for.body.us.preheader ], [\l... %inc.us.prol.lcssa, %for.body.us.preheader.split.loopexit ]\l  %9 = icmp ult i32 %7, 7\l  br i1 %9, label %for.end57.loopexit, label %for.body.us.preheader.split.split\l|{<s0>T|<s1>F}}"];
	Node0x6a6a800:s0 -> Node0x6a6b940;
	Node0x6a6a800:s1 -> Node0x6a6ba40;
	Node0x6a6ba40 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.preheader.split.split:                \l  br label %for.body.us\l}"];
	Node0x6a6ba40 -> Node0x6a6bbf0;
	Node0x6a6bbf0 [shape=record, style = filled, fillcolor = blue, label="{for.body.us:                                      \l  %10 = phi i32 [ %.unr, %for.body.us.preheader.split.split ], [ %and54.us.7,\l... %for.body.us ]\l  %row.0103.us = phi i32 [ %row.0103.us.unr,\l... %for.body.us.preheader.split.split ], [ %inc.us.7, %for.body.us ]\l  %add53.us.7 = add i32 %10, 8\l  %and54.us.7 = and i32 %add53.us.7, 15\l  %inc.us.7 = add nsw i32 %row.0103.us, 8\l  %exitcond.7 = icmp eq i32 %inc.us.7, %num_rows\l  br i1 %exitcond.7, label %for.end57.loopexit.unr-lcssa, label %for.body.us\l|{<s0>T|<s1>F}}"];
	Node0x6a6bbf0:s0 -> Node0x6a6c170;
	Node0x6a6bbf0:s1 -> Node0x6a6bbf0;
	Node0x6a6a510 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %11 = phi i32 [ %and54, %for.end ], [ %.pre106, %for.body.preheader ]\l  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end ], [ 0,\l... %for.body.preheader ]\l  %arrayidx8 = getelementptr inbounds i8*, i8** %input_buf, i64 %indvars.iv\l  %12 = load i8*, i8** %arrayidx8, align 8, !tbaa !13\l  %arrayidx10 = getelementptr inbounds i8*, i8** %output_buf, i64 %indvars.iv\l  %13 = load i8*, i8** %arrayidx10, align 8, !tbaa !13\l  %idxprom11 = sext i32 %11 to i64\l  %14 = load [16 x i32]*, [16 x i32]** %arrayidx12, align 8, !tbaa !13\l  %15 = load [16 x i32]*, [16 x i32]** %arrayidx16, align 8, !tbaa !13\l  %16 = load [16 x i32]*, [16 x i32]** %arrayidx21, align 8, !tbaa !13\l  br label %for.body26\l}"];
	Node0x6a6a510 -> Node0x6a6adc0;
	Node0x6a6adc0 [shape=record, style = filled, fillcolor = blue, label="{for.body26:                                       \l  %input_ptr.0101 = phi i8* [ %12, %for.body ], [ %incdec.ptr41, %for.body26 ]\l  %col.0100 = phi i32 [ %6, %for.body ], [ %dec, %for.body26 ]\l  %col_index.099 = phi i32 [ 0, %for.body ], [ %and, %for.body26 ]\l  %output_ptr.098 = phi i8* [ %13, %for.body ], [ %incdec.ptr51, %for.body26 ]\l  %incdec.ptr = getelementptr inbounds i8, i8* %input_ptr.0101, i64 1\l  %17 = load i8, i8* %input_ptr.0101, align 1, !tbaa !18\l  %conv = zext i8 %17 to i32\l  %idxprom2796 = zext i32 %col_index.099 to i64\l  %arrayidx28 = getelementptr inbounds [16 x i32], [16 x i32]* %14, i64\l... %idxprom11, i64 %idxprom2796\l  %18 = load i32, i32* %arrayidx28, align 4, !tbaa !19\l  %add = add nsw i32 %conv, %18\l  %idxprom29 = sext i32 %add to i64\l  %arrayidx30 = getelementptr inbounds i8, i8* %3, i64 %idxprom29\l  %19 = load i8, i8* %arrayidx30, align 1, !tbaa !18\l  %incdec.ptr32 = getelementptr inbounds i8, i8* %input_ptr.0101, i64 2\l  %20 = load i8, i8* %incdec.ptr, align 1, !tbaa !18\l  %conv33 = zext i8 %20 to i32\l  %arrayidx35 = getelementptr inbounds [16 x i32], [16 x i32]* %15, i64\l... %idxprom11, i64 %idxprom2796\l  %21 = load i32, i32* %arrayidx35, align 4, !tbaa !19\l  %add36 = add nsw i32 %conv33, %21\l  %idxprom37 = sext i32 %add36 to i64\l  %arrayidx38 = getelementptr inbounds i8, i8* %4, i64 %idxprom37\l  %22 = load i8, i8* %arrayidx38, align 1, !tbaa !18\l  %add40 = add i8 %22, %19\l  %incdec.ptr41 = getelementptr inbounds i8, i8* %input_ptr.0101, i64 3\l  %23 = load i8, i8* %incdec.ptr32, align 1, !tbaa !18\l  %conv42 = zext i8 %23 to i32\l  %arrayidx44 = getelementptr inbounds [16 x i32], [16 x i32]* %16, i64\l... %idxprom11, i64 %idxprom2796\l  %24 = load i32, i32* %arrayidx44, align 4, !tbaa !19\l  %add45 = add nsw i32 %conv42, %24\l  %idxprom46 = sext i32 %add45 to i64\l  %arrayidx47 = getelementptr inbounds i8, i8* %5, i64 %idxprom46\l  %25 = load i8, i8* %arrayidx47, align 1, !tbaa !18\l  %add49 = add i8 %add40, %25\l  %incdec.ptr51 = getelementptr inbounds i8, i8* %output_ptr.098, i64 1\l  store i8 %add49, i8* %output_ptr.098, align 1, !tbaa !18\l  %add52 = add nuw nsw i32 %col_index.099, 1\l  %and = and i32 %add52, 15\l  %dec = add i32 %col.0100, -1\l  %cmp25 = icmp eq i32 %dec, 0\l  br i1 %cmp25, label %for.end, label %for.body26\l|{<s0>T|<s1>F}}"];
	Node0x6a6adc0:s0 -> Node0x6a6a980;
	Node0x6a6adc0:s1 -> Node0x6a6adc0;
	Node0x6a6a980 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %add53 = add nsw i32 %11, 1\l  %and54 = and i32 %add53, 15\l  store i32 %and54, i32* %row_index7, align 4, !tbaa !15\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %lftr.wideiv = trunc i64 %indvars.iv.next to i32\l  %exitcond105 = icmp eq i32 %lftr.wideiv, %num_rows\l  br i1 %exitcond105, label %for.end57.loopexit109, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x6a6a980:s0 -> Node0x6a6ec10;
	Node0x6a6a980:s1 -> Node0x6a6a510;
	Node0x6a6c170 [shape=record, style = filled, fillcolor = blue, label="{for.end57.loopexit.unr-lcssa:                     \l  %and54.us.7.lcssa = phi i32 [ %and54.us.7, %for.body.us ]\l  br label %for.end57.loopexit\l}"];
	Node0x6a6c170 -> Node0x6a6b940;
	Node0x6a6b940 [shape=record, style = filled, fillcolor = blue, label="{for.end57.loopexit:                               \l  %and54.us.lcssa = phi i32 [ %and54.us.lcssa.unr,\l... %for.body.us.preheader.split ], [ %and54.us.7.lcssa,\l... %for.end57.loopexit.unr-lcssa ]\l  store i32 %and54.us.lcssa, i32* %row_index7, align 4, !tbaa !15\l  br label %for.end57\l}"];
	Node0x6a6b940 -> Node0x6a69c00;
	Node0x6a6ec10 [shape=record, style = filled, fillcolor = blue, label="{for.end57.loopexit109:                            \l  br label %for.end57\l}"];
	Node0x6a6ec10 -> Node0x6a69c00;
	Node0x6a69c00 [shape=record, style = filled, fillcolor = blue, label="{for.end57:                                        \l  ret void\l}"];
}
