digraph "CFG for 'jinit_write_gif' function" {
	label="CFG for 'jinit_write_gif' function";

	Node0x4bac220 [shape=record,label="{entry:\l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !2\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %0, i64 0, i32 0\l  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !10\l  %2 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %1(%struct.jpeg_common_struct* %2, i32 1, i64 384) #5\l  %cinfo1 = getelementptr inbounds i8, i8* %call, i64 48\l  %3 = bitcast i8* %cinfo1 to %struct.jpeg_decompress_struct**\l  store %struct.jpeg_decompress_struct* %cinfo,\l... %struct.jpeg_decompress_struct** %3, align 8, !tbaa !13\l  %start_output = bitcast i8* %call to void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*)**\l  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)*\l... @start_output_gif, void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*)** %start_output, align 8, !tbaa !16\l  %put_pixel_rows = getelementptr inbounds i8, i8* %call, i64 8\l  %4 = bitcast i8* %put_pixel_rows to void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*, i32)**\l  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*,\l... i32)* @put_pixel_rows, void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*, i32)** %4, align 8, !tbaa !17\l  %finish_output = getelementptr inbounds i8, i8* %call, i64 16\l  %5 = bitcast i8* %finish_output to void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*)**\l  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)*\l... @finish_output_gif, void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*)** %5, align 8, !tbaa !18\l  %out_color_space = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 10\l  %6 = load i32, i32* %out_color_space, align 8, !tbaa !19\l  %.off = add i32 %6, -1\l  %switch = icmp ult i32 %.off, 2\l  br i1 %switch, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x4bac220:s0 -> Node0x4bb2be0;
	Node0x4bac220:s1 -> Node0x4bac180;
	Node0x4bac180 [shape=record,label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %7 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !20\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %7, i64 0, i32 5\l  store i32 1014, i32* %msg_code, align 8, !tbaa !21\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %7, i64 0, i32 0\l  %8 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !23\l  tail call void %8(%struct.jpeg_common_struct* %2) #5\l  %.pr = load i32, i32* %out_color_space, align 8, !tbaa !19\l  br label %if.end\l}"];
	Node0x4bac180 -> Node0x4bb2be0;
	Node0x4bb2be0 [shape=record,label="{if.end:                                           \l  %9 = phi i32 [ %6, %entry ], [ %.pr, %if.then ]\l  %cmp8 = icmp eq i32 %9, 1\l  br i1 %cmp8, label %lor.lhs.false, label %if.then10\l|{<s0>T|<s1>F}}"];
	Node0x4bb2be0:s0 -> Node0x4bb3f50;
	Node0x4bb2be0:s1 -> Node0x4bb4030;
	Node0x4bb3f50 [shape=record,label="{lor.lhs.false:                                    \l  %data_precision = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 42\l  %10 = load i32, i32* %data_precision, align 8, !tbaa !24\l  %cmp9 = icmp sgt i32 %10, 8\l  br i1 %cmp9, label %if.then10, label %if.end15\l|{<s0>T|<s1>F}}"];
	Node0x4bb3f50:s0 -> Node0x4bb4030;
	Node0x4bb3f50:s1 -> Node0x4bb44c0;
	Node0x4bb4030 [shape=record,label="{if.then10:                                        \l  %quantize_colors = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 19\l  store i32 1, i32* %quantize_colors, align 4, !tbaa !25\l  %desired_number_of_colors = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 22\l  %11 = load i32, i32* %desired_number_of_colors, align 8, !tbaa !26\l  %cmp11 = icmp sgt i32 %11, 256\l  br i1 %cmp11, label %if.then12, label %if.end15\l|{<s0>T|<s1>F}}"];
	Node0x4bb4030:s0 -> Node0x4bb4e00;
	Node0x4bb4030:s1 -> Node0x4bb44c0;
	Node0x4bb4e00 [shape=record,label="{if.then12:                                        \l  store i32 256, i32* %desired_number_of_colors, align 8, !tbaa !26\l  br label %if.end15\l}"];
	Node0x4bb4e00 -> Node0x4bb44c0;
	Node0x4bb44c0 [shape=record,label="{if.end15:                                         \l  tail call void @jpeg_calc_output_dimensions(%struct.jpeg_decompress_struct*\l... nonnull %cinfo) #5\l  %output_components = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 29\l  %12 = load i32, i32* %output_components, align 4, !tbaa !27\l  %cmp16 = icmp eq i32 %12, 1\l  br i1 %cmp16, label %if.end22, label %if.then17\l|{<s0>T|<s1>F}}"];
	Node0x4bb44c0:s0 -> Node0x4bb5c10;
	Node0x4bb44c0:s1 -> Node0x4bb5cc0;
	Node0x4bb5cc0 [shape=record,label="{if.then17:                                        \l  %err18 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err18, align\l... 8, !tbaa !20\l  %msg_code19 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %13, i64 0, i32 5\l  store i32 1012, i32* %msg_code19, align 8, !tbaa !21\l  %error_exit21 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %13, i64 0, i32 0\l  %14 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit21, align 8, !tbaa !23\l  tail call void %14(%struct.jpeg_common_struct* nonnull %2) #5\l  br label %if.end22\l}"];
	Node0x4bb5cc0 -> Node0x4bb5c10;
	Node0x4bb5c10 [shape=record,label="{if.end22:                                         \l  %15 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_sarray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %15, i64 0, i32 2\l  %16 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8**\l... (%struct.jpeg_common_struct*, i32, i32, i32)** %alloc_sarray, align 8, !tbaa\l... !28\l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %17 = load i32, i32* %output_width, align 8, !tbaa !29\l  %call24 = tail call i8** %16(%struct.jpeg_common_struct* nonnull %2, i32 1,\l... i32 %17, i32 1) #5\l  %buffer = getelementptr inbounds i8, i8* %call, i64 32\l  %18 = bitcast i8* %buffer to i8***\l  store i8** %call24, i8*** %18, align 8, !tbaa !30\l  %buffer_height = getelementptr inbounds i8, i8* %call, i64 40\l  %19 = bitcast i8* %buffer_height to i32*\l  store i32 1, i32* %19, align 8, !tbaa !31\l  %20 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_small28 = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %20, i64 0, i32 0\l  %21 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small28, align 8, !tbaa !10\l  %call29 = tail call i8* %21(%struct.jpeg_common_struct* nonnull %2, i32 1,\l... i64 10006) #5\l  %hash_code = getelementptr inbounds i8, i8* %call, i64 104\l  %22 = bitcast i8* %hash_code to i8**\l  store i8* %call29, i8** %22, align 8, !tbaa !32\l  %23 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_large = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %23, i64 0, i32 1\l  %24 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_large, align 8, !tbaa !33\l  %call31 = tail call i8* %24(%struct.jpeg_common_struct* nonnull %2, i32 1,\l... i64 40024) #5\l  %hash_value = getelementptr inbounds i8, i8* %call, i64 112\l  %25 = bitcast i8* %hash_value to i8**\l  store i8* %call31, i8** %25, align 8, !tbaa !34\l  %26 = bitcast i8* %call to %struct.djpeg_dest_struct*\l  ret %struct.djpeg_dest_struct* %26\l}"];
}
