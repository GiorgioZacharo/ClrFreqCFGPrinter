digraph "CFG for 'realize_virt_arrays' function" {
	label="CFG for 'realize_virt_arrays' function";

	Node0x5760860 [shape=record,label="{entry:\l  %mem1 = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 1\l  %0 = bitcast %struct.jpeg_memory_mgr** %mem1 to %struct.my_memory_mgr**\l  %1 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %0, align 8, !tbaa\l... !3\l  %virt_sarray_list = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %1, i64 0, i32 3\l  %sptr.0308 = load %struct.jvirt_sarray_control*,\l... %struct.jvirt_sarray_control** %virt_sarray_list, align 8, !tbaa !9\l  %cmp309 = icmp eq %struct.jvirt_sarray_control* %sptr.0308, null\l  br i1 %cmp309, label %for.end, label %for.body.preheader, !prof !10\l|{<s0>T|<s1>F}}"];
	Node0x5760860:s0 -> Node0x578bba0;
	Node0x5760860:s1 -> Node0x578bca0;
	Node0x578bca0 [shape=record,label="{for.body.preheader:                               \l  br label %for.body\l}"];
	Node0x578bca0 -> Node0x578c440;
	Node0x578c440 [shape=record,label="{for.body:                                         \l  %sptr.0312 = phi %struct.jvirt_sarray_control* [ %sptr.0, %for.inc ], [\l... %sptr.0308, %for.body.preheader ]\l  %space_per_minheight.0311 = phi i64 [ %space_per_minheight.1, %for.inc ], [\l... 0, %for.body.preheader ]\l  %maximum_space.0310 = phi i64 [ %maximum_space.1, %for.inc ], [ 0,\l... %for.body.preheader ]\l  %mem_buffer = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.0312, i64 0, i32 0\l  %2 = load i8**, i8*** %mem_buffer, align 8, !tbaa !11\l  %cmp2 = icmp eq i8** %2, null\l  br i1 %cmp2, label %if.then, label %for.inc\l|{<s0>T|<s1>F}}"];
	Node0x578c440:s0 -> Node0x578d330;
	Node0x578c440:s1 -> Node0x578c530;
	Node0x578d330 [shape=record,label="{if.then:                                          \l  %maxaccess = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.0312, i64 0, i32 3\l  %3 = load i32, i32* %maxaccess, align 8, !tbaa !14\l  %conv = zext i32 %3 to i64\l  %samplesperrow = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.0312, i64 0, i32 2\l  %4 = load i32, i32* %samplesperrow, align 4, !tbaa !15\l  %conv3 = zext i32 %4 to i64\l  %mul = mul nuw nsw i64 %conv3, %conv\l  %add = add i64 %mul, %space_per_minheight.0311\l  %rows_in_array = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.0312, i64 0, i32 1\l  %5 = load i32, i32* %rows_in_array, align 8, !tbaa !16\l  %conv5 = zext i32 %5 to i64\l  %mul8 = mul nuw nsw i64 %conv5, %conv3\l  %add10 = add i64 %mul8, %maximum_space.0310\l  br label %for.inc\l}"];
	Node0x578d330 -> Node0x578c530;
	Node0x578c530 [shape=record,label="{for.inc:                                          \l  %maximum_space.1 = phi i64 [ %add10, %if.then ], [ %maximum_space.0310,\l... %for.body ]\l  %space_per_minheight.1 = phi i64 [ %add, %if.then ], [\l... %space_per_minheight.0311, %for.body ]\l  %next = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.0312, i64 0, i32 11\l  %sptr.0 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control**\l... %next, align 8, !tbaa !9\l  %cmp = icmp eq %struct.jvirt_sarray_control* %sptr.0, null\l  br i1 %cmp, label %for.end.loopexit, label %for.body, !prof !10\l|{<s0>T|<s1>F}}"];
	Node0x578c530:s0 -> Node0x5757d80;
	Node0x578c530:s1 -> Node0x578c440;
	Node0x5757d80 [shape=record,label="{for.end.loopexit:                                 \l  %space_per_minheight.1.lcssa = phi i64 [ %space_per_minheight.1, %for.inc ]\l  %maximum_space.1.lcssa = phi i64 [ %maximum_space.1, %for.inc ]\l  br label %for.end\l}"];
	Node0x5757d80 -> Node0x578bba0;
	Node0x578bba0 [shape=record,label="{for.end:                                          \l  %space_per_minheight.0.lcssa = phi i64 [ 0, %entry ], [\l... %space_per_minheight.1.lcssa, %for.end.loopexit ]\l  %maximum_space.0.lcssa = phi i64 [ 0, %entry ], [ %maximum_space.1.lcssa,\l... %for.end.loopexit ]\l  %virt_barray_list = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %1, i64 0, i32 4\l  %bptr.0302 = load %struct.jvirt_barray_control*,\l... %struct.jvirt_barray_control** %virt_barray_list, align 8, !tbaa !9\l  %cmp12303 = icmp eq %struct.jvirt_barray_control* %bptr.0302, null\l  br i1 %cmp12303, label %for.end35, label %for.body14.preheader, !prof !17\l|{<s0>T|<s1>F}}"];
	Node0x578bba0:s0 -> Node0x578fdd0;
	Node0x578bba0:s1 -> Node0x578fee0;
	Node0x578fee0 [shape=record,label="{for.body14.preheader:                             \l  br label %for.body14\l}"];
	Node0x578fee0 -> Node0x5790180;
	Node0x5790180 [shape=record,label="{for.body14:                                       \l  %bptr.0306 = phi %struct.jvirt_barray_control* [ %bptr.0, %for.inc33 ], [\l... %bptr.0302, %for.body14.preheader ]\l  %space_per_minheight.2305 = phi i64 [ %space_per_minheight.3, %for.inc33 ],\l... [ %space_per_minheight.0.lcssa, %for.body14.preheader ]\l  %maximum_space.2304 = phi i64 [ %maximum_space.3, %for.inc33 ], [\l... %maximum_space.0.lcssa, %for.body14.preheader ]\l  %mem_buffer15 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.0306, i64 0, i32 0\l  %6 = load [64 x i16]**, [64 x i16]*** %mem_buffer15, align 8, !tbaa !18\l  %cmp16 = icmp eq [64 x i16]** %6, null\l  br i1 %cmp16, label %if.then18, label %for.inc33, !prof !20\l|{<s0>T|<s1>F}}"];
	Node0x5790180:s0 -> Node0x57786f0;
	Node0x5790180:s1 -> Node0x5790270;
	Node0x57786f0 [shape=record,label="{if.then18:                                        \l  %maxaccess19 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.0306, i64 0, i32 3\l  %7 = load i32, i32* %maxaccess19, align 8, !tbaa !21\l  %conv20 = zext i32 %7 to i64\l  %blocksperrow = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.0306, i64 0, i32 2\l  %8 = load i32, i32* %blocksperrow, align 4, !tbaa !22\l  %conv21 = zext i32 %8 to i64\l  %mul22 = shl nuw nsw i64 %conv20, 7\l  %mul23 = mul i64 %mul22, %conv21\l  %add24 = add i64 %mul23, %space_per_minheight.2305\l  %rows_in_array25 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.0306, i64 0, i32 1\l  %9 = load i32, i32* %rows_in_array25, align 8, !tbaa !23\l  %conv26 = zext i32 %9 to i64\l  %mul29 = shl nuw nsw i64 %conv21, 7\l  %mul30 = mul i64 %mul29, %conv26\l  %add31 = add i64 %mul30, %maximum_space.2304\l  br label %for.inc33\l}"];
	Node0x57786f0 -> Node0x5790270;
	Node0x5790270 [shape=record,label="{for.inc33:                                        \l  %maximum_space.3 = phi i64 [ %add31, %if.then18 ], [ %maximum_space.2304,\l... %for.body14 ]\l  %space_per_minheight.3 = phi i64 [ %add24, %if.then18 ], [\l... %space_per_minheight.2305, %for.body14 ]\l  %next34 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.0306, i64 0, i32 11\l  %bptr.0 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control**\l... %next34, align 8, !tbaa !9\l  %cmp12 = icmp eq %struct.jvirt_barray_control* %bptr.0, null\l  br i1 %cmp12, label %for.end35.loopexit, label %for.body14, !prof !17\l|{<s0>T|<s1>F}}"];
	Node0x5790270:s0 -> Node0x5795770;
	Node0x5790270:s1 -> Node0x5790180;
	Node0x5795770 [shape=record,label="{for.end35.loopexit:                               \l  %space_per_minheight.3.lcssa = phi i64 [ %space_per_minheight.3, %for.inc33 ]\l  %maximum_space.3.lcssa = phi i64 [ %maximum_space.3, %for.inc33 ]\l  br label %for.end35\l}"];
	Node0x5795770 -> Node0x578fdd0;
	Node0x578fdd0 [shape=record,label="{for.end35:                                        \l  %space_per_minheight.2.lcssa = phi i64 [ %space_per_minheight.0.lcssa,\l... %for.end ], [ %space_per_minheight.3.lcssa, %for.end35.loopexit ]\l  %maximum_space.2.lcssa = phi i64 [ %maximum_space.0.lcssa, %for.end ], [\l... %maximum_space.3.lcssa, %for.end35.loopexit ]\l  %cmp36 = icmp slt i64 %space_per_minheight.2.lcssa, 1\l  br i1 %cmp36, label %cleanup, label %if.end39, !prof !24\l|{<s0>T|<s1>F}}"];
	Node0x578fdd0:s0 -> Node0x5796190;
	Node0x578fdd0:s1 -> Node0x5796260;
	Node0x5796260 [shape=record,label="{if.end39:                                         \l  %total_space_allocated = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %1, i64 0, i32 5\l  %10 = load i64, i64* %total_space_allocated, align 8, !tbaa !25\l  %call = tail call i64 @jpeg_mem_available(%struct.jpeg_common_struct*\l... %cinfo, i64 %space_per_minheight.2.lcssa, i64 %maximum_space.2.lcssa, i64\l... %10) #5\l  %cmp40 = icmp slt i64 %call, %maximum_space.2.lcssa\l  br i1 %cmp40, label %if.else, label %if.end47, !prof !24\l|{<s0>T|<s1>F}}"];
	Node0x5796260:s0 -> Node0x5796e50;
	Node0x5796260:s1 -> Node0x5796f20;
	Node0x5796e50 [shape=record,label="{if.else:                                          \l  %div = sdiv i64 %call, %space_per_minheight.2.lcssa\l  %cmp43 = icmp slt i64 %div, 1\l  %.div = select i1 %cmp43, i64 1, i64 %div\l  br label %if.end47\l}"];
	Node0x5796e50 -> Node0x5796f20;
	Node0x5796f20 [shape=record,label="{if.end47:                                         \l  %max_minheights.0 = phi i64 [ %.div, %if.else ], [ 1000000000, %if.end39 ]\l  %sptr.1298 = load %struct.jvirt_sarray_control*,\l... %struct.jvirt_sarray_control** %virt_sarray_list, align 8, !tbaa !9\l  %cmp50299 = icmp eq %struct.jvirt_sarray_control* %sptr.1298, null\l  br i1 %cmp50299, label %for.cond89.preheader, label %for.body52.lr.ph, !prof\l... !10\l|{<s0>T|<s1>F}}"];
	Node0x5796f20:s0 -> Node0x5797480;
	Node0x5796f20:s1 -> Node0x5797580;
	Node0x5797580 [shape=record,label="{for.body52.lr.ph:                                 \l  %err.i = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %last_rowsperchunk = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %1, i64 0, i32 6\l  br label %for.body52\l}"];
	Node0x5797580 -> Node0x5797880;
	Node0x5797960 [shape=record,label="{for.cond89.preheader.loopexit:                    \l  br label %for.cond89.preheader\l}"];
	Node0x5797960 -> Node0x5797480;
	Node0x5797480 [shape=record,label="{for.cond89.preheader:                             \l  %bptr.1294 = load %struct.jvirt_barray_control*,\l... %struct.jvirt_barray_control** %virt_barray_list, align 8, !tbaa !9\l  %cmp90295 = icmp eq %struct.jvirt_barray_control* %bptr.1294, null\l  br i1 %cmp90295, label %cleanup, label %for.body92.lr.ph, !prof !17\l|{<s0>T|<s1>F}}"];
	Node0x5797480:s0 -> Node0x5796190;
	Node0x5797480:s1 -> Node0x5797b30;
	Node0x5797b30 [shape=record,label="{for.body92.lr.ph:                                 \l  %err.i240 = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %last_rowsperchunk128 = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %1, i64 0, i32 6\l  br label %for.body92\l}"];
	Node0x5797b30 -> Node0x5797e40;
	Node0x5797880 [shape=record,label="{for.body52:                                       \l  %sptr.1300 = phi %struct.jvirt_sarray_control* [ %sptr.1298,\l... %for.body52.lr.ph ], [ %sptr.1, %for.inc85 ]\l  %mem_buffer53 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.1300, i64 0, i32 0\l  %11 = load i8**, i8*** %mem_buffer53, align 8, !tbaa !11\l  %cmp54 = icmp eq i8** %11, null\l  br i1 %cmp54, label %if.then56, label %for.inc85\l|{<s0>T|<s1>F}}"];
	Node0x5797880:s0 -> Node0x5778b40;
	Node0x5797880:s1 -> Node0x5778810;
	Node0x5778b40 [shape=record,label="{if.then56:                                        \l  %rows_in_array57 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.1300, i64 0, i32 1\l  %12 = bitcast i32* %rows_in_array57 to i64*\l  %13 = load i64, i64* %12, align 8\l  %14 = trunc i64 %13 to i32\l  %conv58 = and i64 %13, 4294967295\l  %sub = add nsw i64 %conv58, -1\l  %maxaccess59 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.1300, i64 0, i32 3\l  %15 = load i32, i32* %maxaccess59, align 8, !tbaa !14\l  %conv60 = zext i32 %15 to i64\l  %div61 = sdiv i64 %sub, %conv60\l  %cmp63 = icmp slt i64 %div61, %max_minheights.0\l  %16 = lshr i64 %13, 32\l  br i1 %cmp63, label %if.then65, label %if.else67\l|{<s0>T|<s1>F}}"];
	Node0x5778b40:s0 -> Node0x5779a10;
	Node0x5778b40:s1 -> Node0x5799680;
	Node0x5779a10 [shape=record,label="{if.then65:                                        \l  %17 = trunc i64 %16 to i32\l  %rows_in_mem = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.1300, i64 0, i32 4\l  store i32 %14, i32* %rows_in_mem, align 4, !tbaa !29\l  br label %if.end79\l}"];
	Node0x5779a10 -> Node0x5799a40;
	Node0x5799680 [shape=record,label="{if.else67:                                        \l  %mul70 = mul nsw i64 %conv60, %max_minheights.0\l  %conv71 = trunc i64 %mul70 to i32\l  %rows_in_mem72 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.1300, i64 0, i32 4\l  store i32 %conv71, i32* %rows_in_mem72, align 4, !tbaa !29\l  %b_s_info = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.1300, i64 0, i32 12\l  %samplesperrow75 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.1300, i64 0, i32 2\l  %mul77 = mul nuw nsw i64 %16, %conv58\l  tail call void @jpeg_open_backing_store(%struct.jpeg_common_struct* %cinfo,\l... %struct.backing_store_struct* %b_s_info, i64 %mul77) #5\l  %b_s_open = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.1300, i64 0, i32 10\l  store i32 1, i32* %b_s_open, align 4, !tbaa !30\l  %.pre = load i32, i32* %samplesperrow75, align 4, !tbaa !15\l  %.pre315 = load i32, i32* %rows_in_mem72, align 4, !tbaa !29\l  br label %if.end79\l}"];
	Node0x5799680 -> Node0x5799a40;
	Node0x5799a40 [shape=record,label="{if.end79:                                         \l  %18 = phi i32 [ %.pre315, %if.else67 ], [ %14, %if.then65 ]\l  %19 = phi i32 [ %.pre, %if.else67 ], [ %17, %if.then65 ]\l  %20 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %0, align 8,\l... !tbaa !3\l  %conv.i = zext i32 %19 to i64\l  %div.i = udiv i64 999999976, %conv.i\l  %cmp.i = icmp eq i64 %div.i, 0\l  br i1 %cmp.i, label %if.then.i, label %if.end.i, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x5799a40:s0 -> Node0x579b4d0;
	Node0x5799a40:s1 -> Node0x579b5b0;
	Node0x579b4d0 [shape=record,label="{if.then.i:                                        \l  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align\l... 8, !tbaa !32\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %21, i64 0, i32 5\l  store i32 69, i32* %msg_code.i, align 8, !tbaa !33\l  %22 = bitcast %struct.jpeg_error_mgr* %21 to void\l... (%struct.jpeg_common_struct*)**\l  %23 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %22, align 8, !tbaa !35\l  tail call void %23(%struct.jpeg_common_struct* nonnull %cinfo) #5\l  br label %if.end.i\l}"];
	Node0x579b4d0 -> Node0x579b5b0;
	Node0x579b5b0 [shape=record,label="{if.end.i:                                         \l  %conv5.i = zext i32 %18 to i64\l  %cmp6.i = icmp ult i64 %div.i, %conv5.i\l  %conv9.i = trunc i64 %div.i to i32\l  %rowsperchunk.0.i = select i1 %cmp6.i, i32 %conv9.i, i32 %18\l  %last_rowsperchunk.i = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %20, i64 0, i32 6\l  store i32 %rowsperchunk.0.i, i32* %last_rowsperchunk.i, align 8, !tbaa !36\l  %mul12.i = shl nuw nsw i64 %conv5.i, 3\l  %call.i = tail call i8* @alloc_small(%struct.jpeg_common_struct* nonnull\l... %cinfo, i32 1, i64 %mul12.i) #5\l  %24 = bitcast i8* %call.i to i8**\l  %cmp1361.i = icmp eq i32 %18, 0\l  br i1 %cmp1361.i, label %alloc_sarray.exit, label %while.body.i.preheader,\l... !prof !37\l|{<s0>T|<s1>F}}"];
	Node0x579b5b0:s0 -> Node0x579c770;
	Node0x579b5b0:s1 -> Node0x579c850;
	Node0x579c850 [shape=record,label="{while.body.i.preheader:                           \l  br label %while.body.i\l}"];
	Node0x579c850 -> Node0x579c9e0;
	Node0x579ca90 [shape=record,label="{while.cond.loopexit.i.loopexit:                   \l  %inc.i.lcssa = phi i32 [ %inc.i, %for.body.i ]\l  br label %while.cond.loopexit.i\l}"];
	Node0x579ca90 -> Node0x579cd90;
	Node0x579cd90 [shape=record,label="{while.cond.loopexit.i:                            \l  %currow.1.lcssa.i = phi i32 [ %currow.063.i, %alloc_large.exit ], [\l... %inc.i.lcssa, %while.cond.loopexit.i.loopexit ]\l  %cmp13.i = icmp ult i32 %currow.1.lcssa.i, %18\l  br i1 %cmp13.i, label %while.body.i, label %alloc_sarray.exit.loopexit,\l... !prof !37\l|{<s0>T|<s1>F}}"];
	Node0x579cd90:s0 -> Node0x579c9e0;
	Node0x579cd90:s1 -> Node0x579d1f0;
	Node0x579c9e0 [shape=record,label="{while.body.i:                                     \l  %currow.063.i = phi i32 [ %currow.1.lcssa.i, %while.cond.loopexit.i ], [ 0,\l... %while.body.i.preheader ]\l  %rowsperchunk.162.i = phi i32 [ %rowsperchunk.1.sub.i,\l... %while.cond.loopexit.i ], [ %rowsperchunk.0.i, %while.body.i.preheader ]\l  %sub.i = sub i32 %18, %currow.063.i\l  %cmp15.i = icmp ult i32 %rowsperchunk.162.i, %sub.i\l  %rowsperchunk.1.sub.i = select i1 %cmp15.i, i32 %rowsperchunk.162.i, i32\l... %sub.i\l  %conv18.i = zext i32 %rowsperchunk.1.sub.i to i64\l  %mul20.i = mul nuw i64 %conv18.i, %conv.i\l  %25 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %0, align 8,\l... !tbaa !3\l  %cmp.i229 = icmp ugt i64 %mul20.i, 999999976\l  br i1 %cmp.i229, label %if.then.i230, label %if.end.i232, !prof !38\l|{<s0>T|<s1>F}}"];
	Node0x579c9e0:s0 -> Node0x579d850;
	Node0x579c9e0:s1 -> Node0x579d930;
	Node0x579d850 [shape=record,label="{if.then.i230:                                     \l  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align\l... 8, !tbaa !32\l  %msg_code.i.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %26, i64 0, i32 5\l  store i32 53, i32* %msg_code.i.i, align 8, !tbaa !33\l  %arrayidx.i.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %26, i64 0, i32 6, i32 0, i64 0\l  store i32 3, i32* %arrayidx.i.i, align 4, !tbaa !39\l  %27 = bitcast %struct.jpeg_error_mgr* %26 to void\l... (%struct.jpeg_common_struct*)**\l  %28 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %27, align 8, !tbaa !35\l  tail call void %28(%struct.jpeg_common_struct* nonnull %cinfo) #5\l  br label %if.end.i232\l}"];
	Node0x579d850 -> Node0x579d930;
	Node0x579d930 [shape=record,label="{if.end.i232:                                      \l  %rem.i = and i64 %mul20.i, 7\l  %cmp2.i = icmp eq i64 %rem.i, 0\l  %sub.i231 = sub nsw i64 8, %rem.i\l  %add.i = select i1 %cmp2.i, i64 0, i64 %sub.i231\l  %sizeofobject.addr.0.i = add i64 %add.i, %mul20.i\l  %add12.i = add i64 %sizeofobject.addr.0.i, 24\l  %call.i233 = tail call i8* @jpeg_get_large(%struct.jpeg_common_struct*\l... nonnull %cinfo, i64 %add12.i) #5\l  %cmp13.i234 = icmp eq i8* %call.i233, null\l  br i1 %cmp13.i234, label %if.then14.i, label %alloc_large.exit, !prof !38\l|{<s0>T|<s1>F}}"];
	Node0x579d930:s0 -> Node0x579e5b0;
	Node0x579d930:s1 -> Node0x579cf90;
	Node0x579e5b0 [shape=record,label="{if.then14.i:                                      \l  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align\l... 8, !tbaa !32\l  %msg_code.i52.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %29, i64 0, i32 5\l  store i32 53, i32* %msg_code.i52.i, align 8, !tbaa !33\l  %arrayidx.i53.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %29, i64 0, i32 6, i32 0, i64 0\l  store i32 4, i32* %arrayidx.i53.i, align 4, !tbaa !39\l  %30 = bitcast %struct.jpeg_error_mgr* %29 to void\l... (%struct.jpeg_common_struct*)**\l  %31 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %30, align 8, !tbaa !35\l  tail call void %31(%struct.jpeg_common_struct* nonnull %cinfo) #5\l  br label %alloc_large.exit\l}"];
	Node0x579e5b0 -> Node0x579cf90;
	Node0x579cf90 [shape=record,label="{alloc_large.exit:                                 \l  %total_space_allocated.i = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %25, i64 0, i32 5\l  %32 = load i64, i64* %total_space_allocated.i, align 8, !tbaa !25\l  %add17.i = add i64 %32, %add12.i\l  store i64 %add17.i, i64* %total_space_allocated.i, align 8, !tbaa !25\l  %arrayidx18.i = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %25, i64 0, i32 2, i64 1\l  %33 = bitcast %union.large_pool_struct** %arrayidx18.i to i64*\l  %34 = load i64, i64* %33, align 8, !tbaa !9\l  %35 = bitcast i8* %call.i233 to i64*\l  store i64 %34, i64* %35, align 8, !tbaa !40\l  %bytes_used.i = getelementptr inbounds i8, i8* %call.i233, i64 8\l  %36 = bitcast i8* %bytes_used.i to i64*\l  store i64 %sizeofobject.addr.0.i, i64* %36, align 8, !tbaa !42\l  %bytes_left.i = getelementptr inbounds i8, i8* %call.i233, i64 16\l  %37 = bitcast i8* %bytes_left.i to i64*\l  store i64 0, i64* %37, align 8, !tbaa !43\l  %38 = bitcast %union.large_pool_struct** %arrayidx18.i to i8**\l  store i8* %call.i233, i8** %38, align 8, !tbaa !9\l  %cmp2357.i = icmp eq i32 %rowsperchunk.1.sub.i, 0\l  br i1 %cmp2357.i, label %while.cond.loopexit.i, label %for.body.i.preheader,\l... !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x579cf90:s0 -> Node0x579cd90;
	Node0x579cf90:s1 -> Node0x577c770;
	Node0x577c770 [shape=record,label="{for.body.i.preheader:                             \l  %add.ptr.i235 = getelementptr inbounds i8, i8* %call.i233, i64 24\l  br label %for.body.i\l}"];
	Node0x577c770 -> Node0x579cbf0;
	Node0x579cbf0 [shape=record,label="{for.body.i:                                       \l  %workspace.060.i = phi i8* [ %add.ptr.i, %for.body.i ], [ %add.ptr.i235,\l... %for.body.i.preheader ]\l  %i.059.i = phi i32 [ %dec.i, %for.body.i ], [ %rowsperchunk.1.sub.i,\l... %for.body.i.preheader ]\l  %currow.158.i = phi i32 [ %inc.i, %for.body.i ], [ %currow.063.i,\l... %for.body.i.preheader ]\l  %inc.i = add i32 %currow.158.i, 1\l  %idxprom.i = zext i32 %currow.158.i to i64\l  %arrayidx.i = getelementptr inbounds i8*, i8** %24, i64 %idxprom.i\l  store i8* %workspace.060.i, i8** %arrayidx.i, align 8, !tbaa !9\l  %add.ptr.i = getelementptr inbounds i8, i8* %workspace.060.i, i64 %conv.i\l  %dec.i = add i32 %i.059.i, -1\l  %cmp23.i = icmp eq i32 %dec.i, 0\l  br i1 %cmp23.i, label %while.cond.loopexit.i.loopexit, label %for.body.i,\l... !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x579cbf0:s0 -> Node0x579ca90;
	Node0x579cbf0:s1 -> Node0x579cbf0;
	Node0x579d1f0 [shape=record,label="{alloc_sarray.exit.loopexit:                       \l  br label %alloc_sarray.exit\l}"];
	Node0x579d1f0 -> Node0x579c770;
	Node0x579c770 [shape=record,label="{alloc_sarray.exit:                                \l  %39 = bitcast %struct.jvirt_sarray_control* %sptr.1300 to i8**\l  store i8* %call.i, i8** %39, align 8, !tbaa !11\l  %40 = load i32, i32* %last_rowsperchunk, align 8, !tbaa !36\l  %rowsperchunk = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.1300, i64 0, i32 5\l  store i32 %40, i32* %rowsperchunk, align 8, !tbaa !45\l  %cur_start_row = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.1300, i64 0, i32 6\l  store i32 0, i32* %cur_start_row, align 4, !tbaa !46\l  %first_undef_row = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.1300, i64 0, i32 7\l  store i32 0, i32* %first_undef_row, align 8, !tbaa !47\l  %dirty = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.1300, i64 0, i32 9\l  store i32 0, i32* %dirty, align 8, !tbaa !48\l  br label %for.inc85\l}"];
	Node0x579c770 -> Node0x5778810;
	Node0x5778810 [shape=record,label="{for.inc85:                                        \l  %next86 = getelementptr inbounds %struct.jvirt_sarray_control,\l... %struct.jvirt_sarray_control* %sptr.1300, i64 0, i32 11\l  %sptr.1 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control**\l... %next86, align 8, !tbaa !9\l  %cmp50 = icmp eq %struct.jvirt_sarray_control* %sptr.1, null\l  br i1 %cmp50, label %for.cond89.preheader.loopexit, label %for.body52, !prof\l... !10\l|{<s0>T|<s1>F}}"];
	Node0x5778810:s0 -> Node0x5797960;
	Node0x5778810:s1 -> Node0x5797880;
	Node0x5797e40 [shape=record,label="{for.body92:                                       \l  %bptr.1296 = phi %struct.jvirt_barray_control* [ %bptr.1294,\l... %for.body92.lr.ph ], [ %bptr.1, %for.inc134 ]\l  %mem_buffer93 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.1296, i64 0, i32 0\l  %41 = load [64 x i16]**, [64 x i16]*** %mem_buffer93, align 8, !tbaa !18\l  %cmp94 = icmp eq [64 x i16]** %41, null\l  br i1 %cmp94, label %if.then96, label %for.inc134, !prof !20\l|{<s0>T|<s1>F}}"];
	Node0x5797e40:s0 -> Node0x5798310;
	Node0x5797e40:s1 -> Node0x5798010;
	Node0x5798310 [shape=record,label="{if.then96:                                        \l  %rows_in_array97 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.1296, i64 0, i32 1\l  %42 = bitcast i32* %rows_in_array97 to i64*\l  %43 = load i64, i64* %42, align 8\l  %44 = trunc i64 %43 to i32\l  %conv98 = and i64 %43, 4294967295\l  %sub99 = add nsw i64 %conv98, -1\l  %maxaccess100 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.1296, i64 0, i32 3\l  %45 = load i32, i32* %maxaccess100, align 8, !tbaa !21\l  %conv101 = zext i32 %45 to i64\l  %div102 = sdiv i64 %sub99, %conv101\l  %cmp104 = icmp slt i64 %div102, %max_minheights.0\l  %46 = lshr i64 %43, 32\l  br i1 %cmp104, label %if.then106, label %if.else109, !prof !20\l|{<s0>T|<s1>F}}"];
	Node0x5798310:s0 -> Node0x577f410;
	Node0x5798310:s1 -> Node0x577f4c0;
	Node0x577f410 [shape=record,label="{if.then106:                                       \l  %47 = trunc i64 %46 to i32\l  %rows_in_mem108 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.1296, i64 0, i32 4\l  store i32 %44, i32* %rows_in_mem108, align 4, !tbaa !49\l  br label %if.end123\l}"];
	Node0x577f410 -> Node0x577f8b0;
	Node0x577f4c0 [shape=record,label="{if.else109:                                       \l  %mul112 = mul nsw i64 %conv101, %max_minheights.0\l  %conv113 = trunc i64 %mul112 to i32\l  %rows_in_mem114 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.1296, i64 0, i32 4\l  store i32 %conv113, i32* %rows_in_mem114, align 4, !tbaa !49\l  %b_s_info115 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.1296, i64 0, i32 12\l  %blocksperrow118 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.1296, i64 0, i32 2\l  %mul120 = shl nuw nsw i64 %conv98, 7\l  %mul121 = mul i64 %mul120, %46\l  tail call void @jpeg_open_backing_store(%struct.jpeg_common_struct* %cinfo,\l... %struct.backing_store_struct* %b_s_info115, i64 %mul121) #5\l  %b_s_open122 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.1296, i64 0, i32 10\l  store i32 1, i32* %b_s_open122, align 4, !tbaa !50\l  %.pre316 = load i32, i32* %blocksperrow118, align 4, !tbaa !22\l  %.pre317 = load i32, i32* %rows_in_mem114, align 4, !tbaa !49\l  br label %if.end123\l}"];
	Node0x577f4c0 -> Node0x577f8b0;
	Node0x577f8b0 [shape=record,label="{if.end123:                                        \l  %48 = phi i32 [ %.pre317, %if.else109 ], [ %44, %if.then106 ]\l  %49 = phi i32 [ %.pre316, %if.else109 ], [ %47, %if.then106 ]\l  %50 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %0, align 8,\l... !tbaa !3\l  %conv.i237 = zext i32 %49 to i64\l  %mul.i = shl nuw nsw i64 %conv.i237, 7\l  %div.i238 = udiv i64 999999976, %mul.i\l  %cmp.i239 = icmp eq i64 %div.i238, 0\l  br i1 %cmp.i239, label %if.then.i242, label %if.end.i251, !prof !51\l|{<s0>T|<s1>F}}"];
	Node0x577f8b0:s0 -> Node0x57a9370;
	Node0x577f8b0:s1 -> Node0x57a9450;
	Node0x57a9370 [shape=record,label="{if.then.i242:                                     \l  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i240,\l... align 8, !tbaa !32\l  %msg_code.i241 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %51, i64 0, i32 5\l  store i32 69, i32* %msg_code.i241, align 8, !tbaa !33\l  %52 = bitcast %struct.jpeg_error_mgr* %51 to void\l... (%struct.jpeg_common_struct*)**\l  %53 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %52, align 8, !tbaa !35\l  tail call void %53(%struct.jpeg_common_struct* nonnull %cinfo) #5\l  br label %if.end.i251\l}"];
	Node0x57a9370 -> Node0x57a9450;
	Node0x57a9450 [shape=record,label="{if.end.i251:                                      \l  %conv5.i243 = zext i32 %48 to i64\l  %cmp6.i244 = icmp ult i64 %div.i238, %conv5.i243\l  %conv9.i245 = trunc i64 %div.i238 to i32\l  %rowsperchunk.0.i246 = select i1 %cmp6.i244, i32 %conv9.i245, i32 %48\l  %last_rowsperchunk.i247 = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %50, i64 0, i32 6\l  store i32 %rowsperchunk.0.i246, i32* %last_rowsperchunk.i247, align 8, !tbaa\l... !36\l  %mul12.i248 = shl nuw nsw i64 %conv5.i243, 3\l  %call.i249 = tail call i8* @alloc_small(%struct.jpeg_common_struct* nonnull\l... %cinfo, i32 1, i64 %mul12.i248) #5\l  %54 = bitcast i8* %call.i249 to [64 x i16]**\l  %cmp1361.i250 = icmp eq i32 %48, 0\l  br i1 %cmp1361.i250, label %alloc_barray.exit, label\l... %while.body.i262.preheader, !prof !52\l|{<s0>T|<s1>F}}"];
	Node0x57a9450:s0 -> Node0x57aa680;
	Node0x57a9450:s1 -> Node0x57aa760;
	Node0x57aa760 [shape=record,label="{while.body.i262.preheader:                        \l  br label %while.body.i262\l}"];
	Node0x57aa760 -> Node0x57aa910;
	Node0x57aa9c0 [shape=record,label="{while.cond.loopexit.i254.loopexit:                \l  %inc.i266.lcssa = phi i32 [ %inc.i266, %for.body.i272 ]\l  br label %while.cond.loopexit.i254\l}"];
	Node0x57aa9c0 -> Node0x57aacc0;
	Node0x57aacc0 [shape=record,label="{while.cond.loopexit.i254:                         \l  %currow.1.lcssa.i252 = phi i32 [ %currow.063.i255, %alloc_large.exit293 ], [\l... %inc.i266.lcssa, %while.cond.loopexit.i254.loopexit ]\l  %cmp13.i253 = icmp ult i32 %currow.1.lcssa.i252, %48\l  br i1 %cmp13.i253, label %while.body.i262, label\l... %alloc_barray.exit.loopexit, !prof !52\l|{<s0>T|<s1>F}}"];
	Node0x57aacc0:s0 -> Node0x57aa910;
	Node0x57aacc0:s1 -> Node0x57ab120;
	Node0x57aa910 [shape=record,label="{while.body.i262:                                  \l  %currow.063.i255 = phi i32 [ %currow.1.lcssa.i252, %while.cond.loopexit.i254\l... ], [ 0, %while.body.i262.preheader ]\l  %rowsperchunk.162.i256 = phi i32 [ %rowsperchunk.1.sub.i259,\l... %while.cond.loopexit.i254 ], [ %rowsperchunk.0.i246,\l... %while.body.i262.preheader ]\l  %sub.i257 = sub i32 %48, %currow.063.i255\l  %cmp15.i258 = icmp ult i32 %rowsperchunk.162.i256, %sub.i257\l  %rowsperchunk.1.sub.i259 = select i1 %cmp15.i258, i32\l... %rowsperchunk.162.i256, i32 %sub.i257\l  %conv18.i260 = zext i32 %rowsperchunk.1.sub.i259 to i64\l  %mul21.i = mul i64 %conv18.i260, %mul.i\l  %55 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %0, align 8,\l... !tbaa !3\l  %cmp.i274 = icmp ugt i64 %mul21.i, 999999976\l  br i1 %cmp.i274, label %if.then.i278, label %if.end.i279, !prof !38\l|{<s0>T|<s1>F}}"];
	Node0x57aa910:s0 -> Node0x57ab7a0;
	Node0x57aa910:s1 -> Node0x57ab880;
	Node0x57ab7a0 [shape=record,label="{if.then.i278:                                     \l  %56 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i240,\l... align 8, !tbaa !32\l  %msg_code.i.i276 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %56, i64 0, i32 5\l  store i32 53, i32* %msg_code.i.i276, align 8, !tbaa !33\l  %arrayidx.i.i277 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %56, i64 0, i32 6, i32 0, i64 0\l  store i32 3, i32* %arrayidx.i.i277, align 4, !tbaa !39\l  %57 = bitcast %struct.jpeg_error_mgr* %56 to void\l... (%struct.jpeg_common_struct*)**\l  %58 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %57, align 8, !tbaa !35\l  tail call void %58(%struct.jpeg_common_struct* nonnull %cinfo) #5\l  br label %if.end.i279\l}"];
	Node0x57ab7a0 -> Node0x57ab880;
	Node0x57ab880 [shape=record,label="{if.end.i279:                                      \l  %add12.i280 = or i64 %mul21.i, 24\l  %call.i281 = tail call i8* @jpeg_get_large(%struct.jpeg_common_struct*\l... nonnull %cinfo, i64 %add12.i280) #5\l  %cmp13.i282 = icmp eq i8* %call.i281, null\l  br i1 %cmp13.i282, label %if.then14.i286, label %alloc_large.exit293, !prof\l... !38\l|{<s0>T|<s1>F}}"];
	Node0x57ab880:s0 -> Node0x57ac190;
	Node0x57ab880:s1 -> Node0x57aaeb0;
	Node0x57ac190 [shape=record,label="{if.then14.i286:                                   \l  %59 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i240,\l... align 8, !tbaa !32\l  %msg_code.i52.i284 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %59, i64 0, i32 5\l  store i32 53, i32* %msg_code.i52.i284, align 8, !tbaa !33\l  %arrayidx.i53.i285 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %59, i64 0, i32 6, i32 0, i64 0\l  store i32 4, i32* %arrayidx.i53.i285, align 4, !tbaa !39\l  %60 = bitcast %struct.jpeg_error_mgr* %59 to void\l... (%struct.jpeg_common_struct*)**\l  %61 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %60, align 8, !tbaa !35\l  tail call void %61(%struct.jpeg_common_struct* nonnull %cinfo) #5\l  br label %alloc_large.exit293\l}"];
	Node0x57ac190 -> Node0x57aaeb0;
	Node0x57aaeb0 [shape=record,label="{alloc_large.exit293:                              \l  %total_space_allocated.i287 = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %55, i64 0, i32 5\l  %62 = load i64, i64* %total_space_allocated.i287, align 8, !tbaa !25\l  %add17.i288 = add i64 %62, %add12.i280\l  store i64 %add17.i288, i64* %total_space_allocated.i287, align 8, !tbaa !25\l  %arrayidx18.i289 = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %55, i64 0, i32 2, i64 1\l  %63 = bitcast %union.large_pool_struct** %arrayidx18.i289 to i64*\l  %64 = load i64, i64* %63, align 8, !tbaa !9\l  %65 = bitcast i8* %call.i281 to i64*\l  store i64 %64, i64* %65, align 8, !tbaa !40\l  %bytes_used.i290 = getelementptr inbounds i8, i8* %call.i281, i64 8\l  %66 = bitcast i8* %bytes_used.i290 to i64*\l  store i64 %mul21.i, i64* %66, align 8, !tbaa !42\l  %bytes_left.i291 = getelementptr inbounds i8, i8* %call.i281, i64 16\l  %67 = bitcast i8* %bytes_left.i291 to i64*\l  store i64 0, i64* %67, align 8, !tbaa !43\l  %68 = bitcast %union.large_pool_struct** %arrayidx18.i289 to i8**\l  store i8* %call.i281, i8** %68, align 8, !tbaa !9\l  %cmp2357.i261 = icmp eq i32 %rowsperchunk.1.sub.i259, 0\l  br i1 %cmp2357.i261, label %while.cond.loopexit.i254, label\l... %for.body.preheader.i, !prof !53\l|{<s0>T|<s1>F}}"];
	Node0x57aaeb0:s0 -> Node0x57aacc0;
	Node0x57aaeb0:s1 -> Node0x57ad340;
	Node0x57ad340 [shape=record,label="{for.body.preheader.i:                             \l  %add.ptr.i292 = getelementptr inbounds i8, i8* %call.i281, i64 24\l  %69 = bitcast i8* %add.ptr.i292 to [64 x i16]*\l  br label %for.body.i272\l}"];
	Node0x57ad340 -> Node0x57aaaf0;
	Node0x57aaaf0 [shape=record,label="{for.body.i272:                                    \l  %workspace.060.i263 = phi [64 x i16]* [ %add.ptr.i269, %for.body.i272 ], [\l... %69, %for.body.preheader.i ]\l  %i.059.i264 = phi i32 [ %dec.i270, %for.body.i272 ], [\l... %rowsperchunk.1.sub.i259, %for.body.preheader.i ]\l  %currow.158.i265 = phi i32 [ %inc.i266, %for.body.i272 ], [\l... %currow.063.i255, %for.body.preheader.i ]\l  %inc.i266 = add i32 %currow.158.i265, 1\l  %idxprom.i267 = zext i32 %currow.158.i265 to i64\l  %arrayidx.i268 = getelementptr inbounds [64 x i16]*, [64 x i16]** %54, i64\l... %idxprom.i267\l  store [64 x i16]* %workspace.060.i263, [64 x i16]** %arrayidx.i268, align 8,\l... !tbaa !9\l  %add.ptr.i269 = getelementptr inbounds [64 x i16], [64 x i16]*\l... %workspace.060.i263, i64 %conv.i237\l  %dec.i270 = add i32 %i.059.i264, -1\l  %cmp23.i271 = icmp eq i32 %dec.i270, 0\l  br i1 %cmp23.i271, label %while.cond.loopexit.i254.loopexit, label\l... %for.body.i272, !prof !53\l|{<s0>T|<s1>F}}"];
	Node0x57aaaf0:s0 -> Node0x57aa9c0;
	Node0x57aaaf0:s1 -> Node0x57aaaf0;
	Node0x57ab120 [shape=record,label="{alloc_barray.exit.loopexit:                       \l  br label %alloc_barray.exit\l}"];
	Node0x57ab120 -> Node0x57aa680;
	Node0x57aa680 [shape=record,label="{alloc_barray.exit:                                \l  %70 = bitcast %struct.jvirt_barray_control* %bptr.1296 to i8**\l  store i8* %call.i249, i8** %70, align 8, !tbaa !18\l  %71 = load i32, i32* %last_rowsperchunk128, align 8, !tbaa !36\l  %rowsperchunk129 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.1296, i64 0, i32 5\l  store i32 %71, i32* %rowsperchunk129, align 8, !tbaa !54\l  %cur_start_row130 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.1296, i64 0, i32 6\l  store i32 0, i32* %cur_start_row130, align 4, !tbaa !55\l  %first_undef_row131 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.1296, i64 0, i32 7\l  store i32 0, i32* %first_undef_row131, align 8, !tbaa !56\l  %dirty132 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.1296, i64 0, i32 9\l  store i32 0, i32* %dirty132, align 8, !tbaa !57\l  br label %for.inc134\l}"];
	Node0x57aa680 -> Node0x5798010;
	Node0x5798010 [shape=record,label="{for.inc134:                                       \l  %next135 = getelementptr inbounds %struct.jvirt_barray_control,\l... %struct.jvirt_barray_control* %bptr.1296, i64 0, i32 11\l  %bptr.1 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control**\l... %next135, align 8, !tbaa !9\l  %cmp90 = icmp eq %struct.jvirt_barray_control* %bptr.1, null\l  br i1 %cmp90, label %cleanup.loopexit, label %for.body92, !prof !17\l|{<s0>T|<s1>F}}"];
	Node0x5798010:s0 -> Node0x57ae850;
	Node0x5798010:s1 -> Node0x5797e40;
	Node0x57ae850 [shape=record,label="{cleanup.loopexit:                                 \l  br label %cleanup\l}"];
	Node0x57ae850 -> Node0x5796190;
	Node0x5796190 [shape=record,label="{cleanup:                                          \l  ret void\l}"];
}
