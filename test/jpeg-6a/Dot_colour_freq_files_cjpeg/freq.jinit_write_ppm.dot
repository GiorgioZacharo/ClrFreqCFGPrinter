digraph "CFG for 'jinit_write_ppm' function" {
	label="CFG for 'jinit_write_ppm' function";

	Node0x57fec20 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !2\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %0, i64 0, i32 0\l  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !10\l  %2 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %1(%struct.jpeg_common_struct* %2, i32 1, i64 80) #4\l  %start_output = bitcast i8* %call to void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*)**\l  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)*\l... @start_output_ppm, void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*)** %start_output, align 8, !tbaa !13\l  %finish_output = getelementptr inbounds i8, i8* %call, i64 16\l  %3 = bitcast i8* %finish_output to void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*)**\l  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)*\l... @finish_output_ppm, void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*)** %3, align 8, !tbaa !16\l  tail call void @jpeg_calc_output_dimensions(%struct.jpeg_decompress_struct*\l... %cinfo) #4\l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %4 = load i32, i32* %output_width, align 8, !tbaa !17\l  %out_color_components = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  %5 = load i32, i32* %out_color_components, align 8, !tbaa !18\l  %mul = mul i32 %5, %4\l  %samples_per_row = getelementptr inbounds i8, i8* %call, i64 72\l  %6 = bitcast i8* %samples_per_row to i32*\l  store i32 %mul, i32* %6, align 8, !tbaa !19\l  %conv = zext i32 %mul to i64\l  %buffer_width = getelementptr inbounds i8, i8* %call, i64 64\l  %7 = bitcast i8* %buffer_width to i64*\l  store i64 %conv, i64* %7, align 8, !tbaa !20\l  %8 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !2\l  %alloc_small5 = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %8, i64 0, i32 0\l  %9 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small5, align 8, !tbaa !10\l  %call7 = tail call i8* %9(%struct.jpeg_common_struct* %2, i32 1, i64 %conv)\l... #4\l  %iobuffer = getelementptr inbounds i8, i8* %call, i64 48\l  %10 = bitcast i8* %iobuffer to i8**\l  store i8* %call7, i8** %10, align 8, !tbaa !21\l  %quantize_colors = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 19\l  %11 = load i32, i32* %quantize_colors, align 4, !tbaa !22\l  %tobool = icmp eq i32 %11, 0\l  br i1 %tobool, label %if.else26, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x57fec20:s0 -> Node0x5803870;
	Node0x57fec20:s1 -> Node0x5803950;
	Node0x5803950 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %12 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_sarray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %12, i64 0, i32 2\l  %13 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8**\l... (%struct.jpeg_common_struct*, i32, i32, i32)** %alloc_sarray, align 8, !tbaa\l... !23\l  %14 = load i32, i32* %output_width, align 8, !tbaa !17\l  %output_components = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 29\l  %15 = load i32, i32* %output_components, align 4, !tbaa !24\l  %mul10 = mul i32 %15, %14\l  %call11 = tail call i8** %13(%struct.jpeg_common_struct* %2, i32 1, i32\l... %mul10, i32 1) #4\l  %buffer = getelementptr inbounds i8, i8* %call, i64 32\l  %16 = bitcast i8* %buffer to i8***\l  store i8** %call11, i8*** %16, align 8, !tbaa !25\l  %buffer_height = getelementptr inbounds i8, i8* %call, i64 40\l  %17 = bitcast i8* %buffer_height to i32*\l  store i32 1, i32* %17, align 8, !tbaa !26\l  %18 = load i32, i32* %quantize_colors, align 4, !tbaa !22\l  %tobool15 = icmp eq i32 %18, 0\l  br i1 %tobool15, label %if.then16, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5803950:s0 -> Node0x58057b0;
	Node0x5803950:s1 -> Node0x5805890;
	Node0x58057b0 [shape=record, style = filled, fillcolor = blue, label="{if.then16:                                        \l  %put_pixel_rows = getelementptr inbounds i8, i8* %call, i64 8\l  %19 = bitcast i8* %put_pixel_rows to void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*, i32)**\l  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*,\l... i32)* @copy_pixel_rows, void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*, i32)** %19, align 8, !tbaa !27\l  br label %if.end35\l}"];
	Node0x58057b0 -> Node0x5805df0;
	Node0x5805890 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %out_color_space = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 10\l  %20 = load i32, i32* %out_color_space, align 8, !tbaa !28\l  %cmp = icmp eq i32 %20, 1\l  %put_pixel_rows21 = getelementptr inbounds i8, i8* %call, i64 8\l  %21 = bitcast i8* %put_pixel_rows21 to void\l... (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)**\l  br i1 %cmp, label %if.then19, label %if.else22\l|{<s0>T|<s1>F}}"];
	Node0x5805890:s0 -> Node0x5806390;
	Node0x5805890:s1 -> Node0x5806440;
	Node0x5806390 [shape=record, style = filled, fillcolor = blue, label="{if.then19:                                        \l  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*,\l... i32)* @put_demapped_gray, void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*, i32)** %21, align 8, !tbaa !27\l  br label %if.end35\l}"];
	Node0x5806390 -> Node0x5805df0;
	Node0x5806440 [shape=record, style = filled, fillcolor = blue, label="{if.else22:                                        \l  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*,\l... i32)* @put_demapped_rgb, void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*, i32)** %21, align 8, !tbaa !27\l  br label %if.end35\l}"];
	Node0x5806440 -> Node0x5805df0;
	Node0x5803870 [shape=record, style = filled, fillcolor = blue, label="{if.else26:                                        \l  %pixrow = getelementptr inbounds i8, i8* %call, i64 56\l  %22 = bitcast i8* %pixrow to i8**\l  store i8* %call7, i8** %22, align 8, !tbaa !29\l  %buffer30 = getelementptr inbounds i8, i8* %call, i64 32\l  %23 = bitcast i8* %buffer30 to i8**\l  store i8* %pixrow, i8** %23, align 8, !tbaa !25\l  %buffer_height32 = getelementptr inbounds i8, i8* %call, i64 40\l  %24 = bitcast i8* %buffer_height32 to i32*\l  store i32 1, i32* %24, align 8, !tbaa !26\l  %put_pixel_rows34 = getelementptr inbounds i8, i8* %call, i64 8\l  %25 = bitcast i8* %put_pixel_rows34 to void\l... (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)**\l  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*,\l... i32)* @put_pixel_rows, void (%struct.jpeg_decompress_struct*,\l... %struct.djpeg_dest_struct*, i32)** %25, align 8, !tbaa !27\l  br label %if.end35\l}"];
	Node0x5803870 -> Node0x5805df0;
	Node0x5805df0 [shape=record, style = filled, fillcolor = blue, label="{if.end35:                                         \l  %26 = bitcast i8* %call to %struct.djpeg_dest_struct*\l  ret %struct.djpeg_dest_struct* %26\l}"];
}
