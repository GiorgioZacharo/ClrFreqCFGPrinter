digraph "CFG for 'encode_mcu_huff' function" {
	label="CFG for 'encode_mcu_huff' function";

	Node0x63feda0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %state = alloca %struct.working_state, align 16\l  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59\l  %0 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to\l... %struct.huff_entropy_encoder**\l  %1 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %0,\l... align 8, !tbaa !3\l  %2 = bitcast %struct.working_state* %state to i8*\l  call void @llvm.lifetime.start(i64 56, i8* %2) #4\l  %dest = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 5\l  %3 = bitcast %struct.jpeg_destination_mgr** %dest to \<2 x i64\>**\l  %4 = load \<2 x i64\>*, \<2 x i64\>** %3, align 8, !tbaa !11\l  %5 = load \<2 x i64\>, \<2 x i64\>* %4, align 8, !tbaa !12\l  %free_in_buffer4 = getelementptr inbounds %struct.working_state,\l... %struct.working_state* %state, i64 0, i32 1\l  %6 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  store \<2 x i64\> %5, \<2 x i64\>* %6, align 16, !tbaa !12\l  %cur = getelementptr inbounds %struct.working_state, %struct.working_state*\l... %state, i64 0, i32 2\l  %saved = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 1\l  %7 = bitcast %struct.savable_state* %cur to i8*\l  %8 = bitcast %struct.savable_state* %saved to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 32, i32 8, i1\l... false), !tbaa.struct !13\l  %cinfo5 = getelementptr inbounds %struct.working_state,\l... %struct.working_state* %state, i64 0, i32 3\l  store %struct.jpeg_compress_struct* %cinfo, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %restart_interval = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 29\l  %9 = load i32, i32* %restart_interval, align 8, !tbaa !20\l  %tobool = icmp eq i32 %9, 0\l  %10 = extractelement \<2 x i64\> %5, i32 0\l  %11 = inttoptr i64 %10 to i8*\l  br i1 %tobool, label %for.cond.preheader, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x63feda0:s0 -> Node0x64272e0;
	Node0x63feda0:s1 -> Node0x63fed20;
	Node0x63fed20 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %restarts_to_go = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 2\l  %12 = bitcast i32* %restarts_to_go to i64*\l  %13 = load i64, i64* %12, align 8\l  %14 = trunc i64 %13 to i32\l  %cmp = icmp eq i32 %14, 0\l  %15 = lshr i64 %13, 32\l  %16 = trunc i64 %15 to i8\l  br i1 %cmp, label %if.then6, label %for.cond.preheader\l|{<s0>T|<s1>F}}"];
	Node0x63fed20:s0 -> Node0x63ff800;
	Node0x63fed20:s1 -> Node0x64272e0;
	Node0x63ff800 [shape=record, style = filled, fillcolor = blue, label="{if.then6:                                         \l  %put_bits1.i125 = getelementptr inbounds %struct.working_state,\l... %struct.working_state* %state, i64 0, i32 2, i32 1\l  %17 = load i32, i32* %put_bits1.i125, align 8, !tbaa !21\l  %put_buffer10.i130 = getelementptr inbounds %struct.working_state,\l... %struct.working_state* %state, i64 0, i32 2, i32 0\l  %cmp1188.i132 = icmp sgt i32 %17, 0\l  %next_output_byte.i134 = getelementptr inbounds %struct.working_state,\l... %struct.working_state* %state, i64 0, i32 0\l  br i1 %cmp1188.i132, label %while.body.i145.preheader, label %if.end.i\l|{<s0>T|<s1>F}}"];
	Node0x63ff800:s0 -> Node0x6427fa0;
	Node0x63ff800:s1 -> Node0x64280c0;
	Node0x6427fa0 [shape=record, style = filled, fillcolor = blue, label="{while.body.i145.preheader:                        \l  %sub6.i127 = sub i32 17, %17\l  %sh_prom7.i128 = zext i32 %sub6.i127 to i64\l  %shl8.i129 = shl i64 127, %sh_prom7.i128\l  %18 = load i64, i64* %put_buffer10.i130, align 16, !tbaa !22\l  %or.i131 = or i64 %shl8.i129, %18\l  %add.i126 = add nsw i32 %17, 7\l  %19 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  %20 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  br label %while.body.i145\l}"];
	Node0x6427fa0 -> Node0x64288c0;
	Node0x64288c0 [shape=record, style = filled, fillcolor = blue, label="{while.body.i145:                                  \l  %21 = phi i8* [ %.pre, %cleanup.i170 ], [ %11, %while.body.i145.preheader ]\l  %put_bits.090.i138 = phi i32 [ %sub39.i168, %cleanup.i170 ], [ %add.i126,\l... %while.body.i145.preheader ]\l  %put_buffer.089.i139 = phi i64 [ %shl38.i167, %cleanup.i170 ], [ %or.i131,\l... %while.body.i145.preheader ]\l  %shr73.i140 = lshr i64 %put_buffer.089.i139, 16\l  %conv15.i141 = trunc i64 %shr73.i140 to i8\l  %incdec.ptr.i142 = getelementptr inbounds i8, i8* %21, i64 1\l  store i8* %incdec.ptr.i142, i8** %next_output_byte.i134, align 16, !tbaa !23\l  store i8 %conv15.i141, i8* %21, align 1, !tbaa !12\l  %22 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec.i143 = add i64 %22, -1\l  store i64 %dec.i143, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp16.i144 = icmp eq i64 %dec.i143, 0\l  br i1 %cmp16.i144, label %if.then18.i150, label %if.end21.i155\l|{<s0>T|<s1>F}}"];
	Node0x64288c0:s0 -> Node0x6429d00;
	Node0x64288c0:s1 -> Node0x6429de0;
	Node0x6429d00 [shape=record, style = filled, fillcolor = blue, label="{if.then18.i150:                                   \l  %23 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i.i146 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %23, i64 0, i32 5\l  %24 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i146, align 8, !tbaa !11\l  %empty_output_buffer.i.i147 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %24, i64 0, i32 3\l  %25 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i147, align 8, !tbaa\l... !25\l  %call.i.i148 = tail call i32 %25(%struct.jpeg_compress_struct* %23) #4\l  %tobool.i.i149 = icmp eq i32 %call.i.i148, 0\l  br i1 %tobool.i.i149, label %cleanup.loopexit524, label\l... %dump_buffer.exit.i152\l|{<s0>T|<s1>F}}"];
	Node0x6429d00:s0 -> Node0x642b140;
	Node0x6429d00:s1 -> Node0x642b220;
	Node0x642b220 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit.i152:                            \l  %26 = bitcast %struct.jpeg_destination_mgr* %24 to \<2 x i64\>*\l  %27 = load \<2 x i64\>, \<2 x i64\>* %26, align 8, !tbaa !12\l  store \<2 x i64\> %27, \<2 x i64\>* %19, align 16, !tbaa !12\l  br label %if.end21.i155\l}"];
	Node0x642b220 -> Node0x6429de0;
	Node0x6429de0 [shape=record, style = filled, fillcolor = blue, label="{if.end21.i155:                                    \l  %conv14.i153 = and i64 %shr73.i140, 255\l  %cmp22.i154 = icmp eq i64 %conv14.i153, 255\l  br i1 %cmp22.i154, label %if.then24.i159, label %cleanup.i170\l|{<s0>T|<s1>F}}"];
	Node0x6429de0:s0 -> Node0x642b630;
	Node0x6429de0:s1 -> Node0x6428a60;
	Node0x642b630 [shape=record, style = filled, fillcolor = blue, label="{if.then24.i159:                                   \l  %28 = load i8*, i8** %next_output_byte.i134, align 16, !tbaa !23\l  %incdec.ptr26.i156 = getelementptr inbounds i8, i8* %28, i64 1\l  store i8* %incdec.ptr26.i156, i8** %next_output_byte.i134, align 16, !tbaa\l... !23\l  store i8 0, i8* %28, align 1, !tbaa !12\l  %29 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec28.i157 = add i64 %29, -1\l  store i64 %dec28.i157, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp29.i158 = icmp eq i64 %dec28.i157, 0\l  br i1 %cmp29.i158, label %if.then31.i164, label %cleanup.i170\l|{<s0>T|<s1>F}}"];
	Node0x642b630:s0 -> Node0x642c490;
	Node0x642b630:s1 -> Node0x6428a60;
	Node0x642c490 [shape=record, style = filled, fillcolor = blue, label="{if.then31.i164:                                   \l  %30 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i75.i160 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %30, i64 0, i32 5\l  %31 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i75.i160, align 8, !tbaa !11\l  %empty_output_buffer.i76.i161 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %31, i64 0, i32 3\l  %32 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i76.i161, align 8,\l... !tbaa !25\l  %call.i77.i162 = tail call i32 %32(%struct.jpeg_compress_struct* %30) #4\l  %tobool.i78.i163 = icmp eq i32 %call.i77.i162, 0\l  br i1 %tobool.i78.i163, label %cleanup.loopexit524, label\l... %dump_buffer.exit83.i166\l|{<s0>T|<s1>F}}"];
	Node0x642c490:s0 -> Node0x642b140;
	Node0x642c490:s1 -> Node0x642d1a0;
	Node0x642d1a0 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit83.i166:                          \l  %33 = bitcast %struct.jpeg_destination_mgr* %31 to \<2 x i64\>*\l  %34 = load \<2 x i64\>, \<2 x i64\>* %33, align 8, !tbaa !12\l  store \<2 x i64\> %34, \<2 x i64\>* %20, align 16, !tbaa !12\l  br label %cleanup.i170\l}"];
	Node0x642d1a0 -> Node0x6428a60;
	Node0x6428a60 [shape=record, style = filled, fillcolor = blue, label="{cleanup.i170:                                     \l  %shl38.i167 = shl i64 %put_buffer.089.i139, 8\l  %sub39.i168 = add nsw i32 %put_bits.090.i138, -8\l  %cmp11.i169 = icmp sgt i32 %sub39.i168, 7\l  %.pre = load i8*, i8** %next_output_byte.i134, align 16, !tbaa !23\l  br i1 %cmp11.i169, label %while.body.i145, label %if.end.i.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6428a60:s0 -> Node0x64288c0;
	Node0x6428a60:s1 -> Node0x642d610;
	Node0x642d610 [shape=record, style = filled, fillcolor = blue, label="{if.end.i.loopexit:                                \l  %.pre.lcssa = phi i8* [ %.pre, %cleanup.i170 ]\l  br label %if.end.i\l}"];
	Node0x642d610 -> Node0x64280c0;
	Node0x64280c0 [shape=record, style = filled, fillcolor = blue, label="{if.end.i:                                         \l  %35 = phi i8* [ %11, %if.then6 ], [ %.pre.lcssa, %if.end.i.loopexit ]\l  store i64 0, i64* %put_buffer10.i130, align 16, !tbaa !22\l  store i32 0, i32* %put_bits1.i125, align 8, !tbaa !21\l  %incdec.ptr.i = getelementptr inbounds i8, i8* %35, i64 1\l  store i8* %incdec.ptr.i, i8** %next_output_byte.i134, align 16, !tbaa !23\l  store i8 -1, i8* %35, align 1, !tbaa !12\l  %36 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec.i = add i64 %36, -1\l  store i64 %dec.i, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp.i = icmp eq i64 %dec.i, 0\l  br i1 %cmp.i, label %if.then1.i, label %if.end.if.end6_crit_edge.i\l|{<s0>T|<s1>F}}"];
	Node0x64280c0:s0 -> Node0x6404270;
	Node0x64280c0:s1 -> Node0x6404380;
	Node0x6404380 [shape=record, style = filled, fillcolor = blue, label="{if.end.if.end6_crit_edge.i:                       \l  %.pre.i = load i8*, i8** %next_output_byte.i134, align 16, !tbaa !23\l  br label %if.end6.i\l}"];
	Node0x6404380 -> Node0x6404510;
	Node0x6404270 [shape=record, style = filled, fillcolor = blue, label="{if.then1.i:                                       \l  %37 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %37, i64 0, i32 5\l  %38 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !11\l  %empty_output_buffer.i.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %38, i64 0, i32 3\l  %39 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i, align 8, !tbaa !25\l  %call.i32.i = tail call i32 %39(%struct.jpeg_compress_struct* %37) #4\l  %tobool.i33.i = icmp eq i32 %call.i32.i, 0\l  br i1 %tobool.i33.i, label %cleanup, label %dump_buffer.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x6404270:s0 -> Node0x642f000;
	Node0x6404270:s1 -> Node0x642f0e0;
	Node0x642f0e0 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit.i:                               \l  %40 = bitcast %struct.jpeg_destination_mgr* %38 to \<2 x i64\>*\l  %41 = load \<2 x i64\>, \<2 x i64\>* %40, align 8, !tbaa !12\l  %42 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  store \<2 x i64\> %41, \<2 x i64\>* %42, align 16, !tbaa !12\l  %43 = extractelement \<2 x i64\> %41, i32 0\l  %44 = inttoptr i64 %43 to i8*\l  br label %if.end6.i\l}"];
	Node0x642f0e0 -> Node0x6404510;
	Node0x6404510 [shape=record, style = filled, fillcolor = blue, label="{if.end6.i:                                        \l  %45 = phi i8* [ %.pre.i, %if.end.if.end6_crit_edge.i ], [ %44,\l... %dump_buffer.exit.i ]\l  %add.i = add i8 %16, -48\l  %incdec.ptr8.i = getelementptr inbounds i8, i8* %45, i64 1\l  store i8* %incdec.ptr8.i, i8** %next_output_byte.i134, align 16, !tbaa !23\l  store i8 %add.i, i8* %45, align 1, !tbaa !12\l  %46 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec10.i = add i64 %46, -1\l  store i64 %dec10.i, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp11.i = icmp eq i64 %dec10.i, 0\l  %47 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  br i1 %cmp11.i, label %if.then13.i, label %for.cond.preheader.i\l|{<s0>T|<s1>F}}"];
	Node0x6404510:s0 -> Node0x642fa00;
	Node0x6404510:s1 -> Node0x642fae0;
	Node0x642fa00 [shape=record, style = filled, fillcolor = blue, label="{if.then13.i:                                      \l  %dest1.i37.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %47, i64 0, i32 5\l  %48 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i37.i, align 8, !tbaa !11\l  %empty_output_buffer.i38.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %48, i64 0, i32 3\l  %49 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i38.i, align 8, !tbaa\l... !25\l  %call.i39.i = tail call i32 %49(%struct.jpeg_compress_struct* %47) #4\l  %tobool.i40.i = icmp eq i32 %call.i39.i, 0\l  br i1 %tobool.i40.i, label %cleanup, label %dump_buffer.exit45.i\l|{<s0>T|<s1>F}}"];
	Node0x642fa00:s0 -> Node0x642f000;
	Node0x642fa00:s1 -> Node0x64300b0;
	Node0x64300b0 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit45.i:                             \l  %50 = bitcast %struct.jpeg_destination_mgr* %48 to \<2 x i64\>*\l  %51 = load \<2 x i64\>, \<2 x i64\>* %50, align 8, !tbaa !12\l  %52 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  store \<2 x i64\> %51, \<2 x i64\>* %52, align 16, !tbaa !12\l  br label %for.cond.preheader.i\l}"];
	Node0x64300b0 -> Node0x642fae0;
	Node0x642fae0 [shape=record, style = filled, fillcolor = blue, label="{for.cond.preheader.i:                             \l  %comps_in_scan49.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %47, i64 0, i32 41\l  %53 = load i32, i32* %comps_in_scan49.i, align 4, !tbaa !27\l  %cmp1950.i = icmp sgt i32 %53, 0\l  br i1 %cmp1950.i, label %for.body.i.preheader, label %for.cond.preheader\l|{<s0>T|<s1>F}}"];
	Node0x642fae0:s0 -> Node0x6430570;
	Node0x642fae0:s1 -> Node0x64272e0;
	Node0x6430570 [shape=record, style = filled, fillcolor = blue, label="{for.body.i.preheader:                             \l  br label %for.body.i\l}"];
	Node0x6430570 -> Node0x64306e0;
	Node0x64306e0 [shape=record, style = filled, fillcolor = blue, label="{for.body.i:                                       \l  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0,\l... %for.body.i.preheader ]\l  %arrayidx.i = getelementptr inbounds %struct.working_state,\l... %struct.working_state* %state, i64 0, i32 2, i32 2, i64 %indvars.iv.i\l  store i32 0, i32* %arrayidx.i, align 4, !tbaa !16\l  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1\l  %54 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %comps_in_scan.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %54, i64 0, i32 41\l  %55 = load i32, i32* %comps_in_scan.i, align 4, !tbaa !27\l  %56 = sext i32 %55 to i64\l  %cmp19.i = icmp slt i64 %indvars.iv.next.i, %56\l  br i1 %cmp19.i, label %for.body.i, label %for.cond.preheader.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x64306e0:s0 -> Node0x64306e0;
	Node0x64306e0:s1 -> Node0x6430cf0;
	Node0x6430cf0 [shape=record, style = filled, fillcolor = blue, label="{for.cond.preheader.loopexit:                      \l  br label %for.cond.preheader\l}"];
	Node0x6430cf0 -> Node0x64272e0;
	Node0x64272e0 [shape=record, style = filled, fillcolor = blue, label="{for.cond.preheader:                               \l  %blocks_in_MCU = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 45\l  %57 = load i32, i32* %blocks_in_MCU, align 8, !tbaa !28\l  %cmp11494 = icmp sgt i32 %57, 0\l  br i1 %cmp11494, label %for.body.lr.ph, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x64272e0:s0 -> Node0x642c080;
	Node0x64272e0:s1 -> Node0x642c160;
	Node0x642c080 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  %put_bits1.i177 = getelementptr inbounds %struct.working_state,\l... %struct.working_state* %state, i64 0, i32 2, i32 1\l  %put_buffer10.i192 = getelementptr inbounds %struct.working_state,\l... %struct.working_state* %state, i64 0, i32 2, i32 0\l  %next_output_byte.i196 = getelementptr inbounds %struct.working_state,\l... %struct.working_state* %state, i64 0, i32 0\l  %58 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  %59 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  %60 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  %61 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  %62 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  %63 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  %64 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  %65 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  %66 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  %67 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  %68 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  %69 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  br label %for.body\l}"];
	Node0x642c080 -> Node0x64320b0;
	Node0x64320b0 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end27 ]\l  %arrayidx = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 46, i64 %indvars.iv\l  %70 = load i32, i32* %arrayidx, align 4, !tbaa !16\l  %idxprom12 = sext i32 %70 to i64\l  %arrayidx13 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %idxprom12\l  %71 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx13, align 8, !tbaa !29\l  %arrayidx15 = getelementptr inbounds [64 x i16]*, [64 x i16]** %MCU_data,\l... i64 %indvars.iv\l  %72 = load [64 x i16]*, [64 x i16]** %arrayidx15, align 8, !tbaa !29\l  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %72, i64 0, i64\l... 0\l  %arrayidx19 = getelementptr inbounds %struct.working_state,\l... %struct.working_state* %state, i64 0, i32 2, i32 2, i64 %idxprom12\l  %73 = load i32, i32* %arrayidx19, align 4, !tbaa !16\l  %dc_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %71, i64 0, i32 5\l  %74 = load i32, i32* %dc_tbl_no, align 4, !tbaa !30\l  %idxprom20 = sext i32 %74 to i64\l  %arrayidx21 = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 4, i64 %idxprom20\l  %75 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx21,\l... align 8, !tbaa !29\l  %ac_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %71, i64 0, i32 6\l  %76 = load i32, i32* %ac_tbl_no, align 8, !tbaa !32\l  %idxprom22 = sext i32 %76 to i64\l  %arrayidx23 = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 5, i64 %idxprom22\l  %77 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx23,\l... align 8, !tbaa !29\l  %78 = load i16, i16* %arraydecay, align 2, !tbaa !33\l  %conv.i96 = sext i16 %78 to i32\l  %sub.i = sub nsw i32 %conv.i96, %73\l  %cmp.i97 = icmp slt i32 %sub.i, 0\l  %sub2.i = sub nsw i32 0, %sub.i\l  %temp.0.i = select i1 %cmp.i97, i32 %sub2.i, i32 %sub.i\l  %sub.lobit.i = ashr i32 %sub.i, 31\l  %temp2.0.i = add nsw i32 %sub.lobit.i, %sub.i\l  %tobool140.i = icmp eq i32 %temp.0.i, 0\l  br i1 %tobool140.i, label %while.end.i, label %while.body.i.preheader\l|{<s0>T|<s1>F}}"];
	Node0x64320b0:s0 -> Node0x6433620;
	Node0x64320b0:s1 -> Node0x6433730;
	Node0x6433730 [shape=record, style = filled, fillcolor = blue, label="{while.body.i.preheader:                           \l  br label %while.body.i\l}"];
	Node0x6433730 -> Node0x64338c0;
	Node0x64338c0 [shape=record, style = filled, fillcolor = blue, label="{while.body.i:                                     \l  %nbits.0142.i = phi i32 [ %inc.i, %while.body.i ], [ 0,\l... %while.body.i.preheader ]\l  %temp.1141.i = phi i32 [ %shr.i, %while.body.i ], [ %temp.0.i,\l... %while.body.i.preheader ]\l  %inc.i = add nuw nsw i32 %nbits.0142.i, 1\l  %shr.i = ashr i32 %temp.1141.i, 1\l  %tobool.i = icmp eq i32 %shr.i, 0\l  br i1 %tobool.i, label %while.end.i.loopexit, label %while.body.i\l|{<s0>T|<s1>F}}"];
	Node0x64338c0:s0 -> Node0x6433e10;
	Node0x64338c0:s1 -> Node0x64338c0;
	Node0x6433e10 [shape=record, style = filled, fillcolor = blue, label="{while.end.i.loopexit:                             \l  %inc.i.lcssa = phi i32 [ %inc.i, %while.body.i ]\l  br label %while.end.i\l}"];
	Node0x6433e10 -> Node0x6433620;
	Node0x6433620 [shape=record, style = filled, fillcolor = blue, label="{while.end.i:                                      \l  %nbits.0.lcssa.i = phi i32 [ 0, %for.body ], [ %inc.i.lcssa,\l... %while.end.i.loopexit ]\l  %idxprom.i = sext i32 %nbits.0.lcssa.i to i64\l  %arrayidx3.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %75, i64 0, i32 0, i64 %idxprom.i\l  %79 = load i32, i32* %arrayidx3.i, align 4, !tbaa !16\l  %arrayidx5.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %75, i64 0, i32 1, i64 %idxprom.i\l  %80 = load i8, i8* %arrayidx5.i, align 1, !tbaa !12\l  %conv6.i = sext i8 %80 to i32\l  %conv.i176 = zext i32 %79 to i64\l  %81 = load i32, i32* %put_bits1.i177, align 8, !tbaa !21\l  %cmp.i178 = icmp eq i8 %80, 0\l  br i1 %cmp.i178, label %if.then.i183, label %if.end.i195\l|{<s0>T|<s1>F}}"];
	Node0x6433620:s0 -> Node0x642e880;
	Node0x6433620:s1 -> Node0x642e960;
	Node0x642e880 [shape=record, style = filled, fillcolor = blue, label="{if.then.i183:                                     \l  %82 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %err.i180 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %82, i64 0, i32 0\l  %83 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i180,\l... align 8, !tbaa !34\l  %msg_code.i181 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %83, i64 0, i32 5\l  store i32 39, i32* %msg_code.i181, align 8, !tbaa !35\l  %error_exit.i182 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %83, i64 0, i32 0\l  %84 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i182, align 8, !tbaa !37\l  %85 = bitcast %struct.jpeg_compress_struct* %82 to\l... %struct.jpeg_common_struct*\l  tail call void %84(%struct.jpeg_common_struct* %85) #4\l  br label %if.end.i195\l}"];
	Node0x642e880 -> Node0x642e960;
	Node0x642e960 [shape=record, style = filled, fillcolor = blue, label="{if.end.i195:                                      \l  %sh_prom.i184 = zext i32 %conv6.i to i64\l  %shl.i185 = shl i64 1, %sh_prom.i184\l  %sub.i186 = add i64 %shl.i185, 4294967295\l  %and.i187 = and i64 %sub.i186, %conv.i176\l  %add.i188 = add nsw i32 %81, %conv6.i\l  %sub6.i189 = sub nsw i32 24, %add.i188\l  %sh_prom7.i190 = zext i32 %sub6.i189 to i64\l  %shl8.i191 = shl i64 %and.i187, %sh_prom7.i190\l  %86 = load i64, i64* %put_buffer10.i192, align 16, !tbaa !22\l  %or.i193 = or i64 %86, %shl8.i191\l  %cmp1188.i194 = icmp sgt i32 %add.i188, 7\l  br i1 %cmp1188.i194, label %while.body.i207.preheader, label %if.end9.i\l|{<s0>T|<s1>F}}"];
	Node0x642e960:s0 -> Node0x6435a00;
	Node0x642e960:s1 -> Node0x6435b20;
	Node0x6435a00 [shape=record, style = filled, fillcolor = blue, label="{while.body.i207.preheader:                        \l  br label %while.body.i207\l}"];
	Node0x6435a00 -> Node0x6435c90;
	Node0x6435c90 [shape=record, style = filled, fillcolor = blue, label="{while.body.i207:                                  \l  %put_bits.090.i200 = phi i32 [ %sub39.i229, %cleanup.i231 ], [ %add.i188,\l... %while.body.i207.preheader ]\l  %put_buffer.089.i201 = phi i64 [ %shl38.i228, %cleanup.i231 ], [ %or.i193,\l... %while.body.i207.preheader ]\l  %shr73.i202 = lshr i64 %put_buffer.089.i201, 16\l  %conv15.i203 = trunc i64 %shr73.i202 to i8\l  %87 = load i8*, i8** %next_output_byte.i196, align 16, !tbaa !23\l  %incdec.ptr.i204 = getelementptr inbounds i8, i8* %87, i64 1\l  store i8* %incdec.ptr.i204, i8** %next_output_byte.i196, align 16, !tbaa !23\l  store i8 %conv15.i203, i8* %87, align 1, !tbaa !12\l  %88 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec.i205 = add i64 %88, -1\l  store i64 %dec.i205, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp16.i206 = icmp eq i64 %dec.i205, 0\l  br i1 %cmp16.i206, label %if.then18.i211, label %if.end21.i216\l|{<s0>T|<s1>F}}"];
	Node0x6435c90:s0 -> Node0x6409e30;
	Node0x6435c90:s1 -> Node0x6409f10;
	Node0x6409e30 [shape=record, style = filled, fillcolor = blue, label="{if.then18.i211:                                   \l  %89 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i.i208 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %89, i64 0, i32 5\l  %90 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i208, align 8, !tbaa !11\l  %empty_output_buffer.i.i209 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %90, i64 0, i32 3\l  %91 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i209, align 8, !tbaa\l... !25\l  %call.i.i = tail call i32 %91(%struct.jpeg_compress_struct* %89) #4\l  %tobool.i.i210 = icmp eq i32 %call.i.i, 0\l  br i1 %tobool.i.i210, label %cleanup.loopexit523, label\l... %dump_buffer.exit.i213\l|{<s0>T|<s1>F}}"];
	Node0x6409e30:s0 -> Node0x640a520;
	Node0x6409e30:s1 -> Node0x640a600;
	Node0x640a600 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit.i213:                            \l  %92 = bitcast %struct.jpeg_destination_mgr* %90 to \<2 x i64\>*\l  %93 = load \<2 x i64\>, \<2 x i64\>* %92, align 8, !tbaa !12\l  store \<2 x i64\> %93, \<2 x i64\>* %68, align 16, !tbaa !12\l  br label %if.end21.i216\l}"];
	Node0x640a600 -> Node0x6409f10;
	Node0x6409f10 [shape=record, style = filled, fillcolor = blue, label="{if.end21.i216:                                    \l  %conv14.i214 = and i64 %shr73.i202, 255\l  %cmp22.i215 = icmp eq i64 %conv14.i214, 255\l  br i1 %cmp22.i215, label %if.then24.i220, label %cleanup.i231\l|{<s0>T|<s1>F}}"];
	Node0x6409f10:s0 -> Node0x640a9d0;
	Node0x6409f10:s1 -> Node0x6435db0;
	Node0x640a9d0 [shape=record, style = filled, fillcolor = blue, label="{if.then24.i220:                                   \l  %94 = load i8*, i8** %next_output_byte.i196, align 16, !tbaa !23\l  %incdec.ptr26.i217 = getelementptr inbounds i8, i8* %94, i64 1\l  store i8* %incdec.ptr26.i217, i8** %next_output_byte.i196, align 16, !tbaa\l... !23\l  store i8 0, i8* %94, align 1, !tbaa !12\l  %95 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec28.i218 = add i64 %95, -1\l  store i64 %dec28.i218, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp29.i219 = icmp eq i64 %dec28.i218, 0\l  br i1 %cmp29.i219, label %if.then31.i225, label %cleanup.i231\l|{<s0>T|<s1>F}}"];
	Node0x640a9d0:s0 -> Node0x6415400;
	Node0x640a9d0:s1 -> Node0x6435db0;
	Node0x6415400 [shape=record, style = filled, fillcolor = blue, label="{if.then31.i225:                                   \l  %96 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i75.i221 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %96, i64 0, i32 5\l  %97 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i75.i221, align 8, !tbaa !11\l  %empty_output_buffer.i76.i222 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %97, i64 0, i32 3\l  %98 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i76.i222, align 8,\l... !tbaa !25\l  %call.i77.i223 = tail call i32 %98(%struct.jpeg_compress_struct* %96) #4\l  %tobool.i78.i224 = icmp eq i32 %call.i77.i223, 0\l  br i1 %tobool.i78.i224, label %cleanup.loopexit523, label\l... %dump_buffer.exit83.i227\l|{<s0>T|<s1>F}}"];
	Node0x6415400:s0 -> Node0x640a520;
	Node0x6415400:s1 -> Node0x640bd40;
	Node0x640bd40 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit83.i227:                          \l  %99 = bitcast %struct.jpeg_destination_mgr* %97 to \<2 x i64\>*\l  %100 = load \<2 x i64\>, \<2 x i64\>* %99, align 8, !tbaa !12\l  store \<2 x i64\> %100, \<2 x i64\>* %69, align 16, !tbaa !12\l  br label %cleanup.i231\l}"];
	Node0x640bd40 -> Node0x6435db0;
	Node0x6435db0 [shape=record, style = filled, fillcolor = blue, label="{cleanup.i231:                                     \l  %shl38.i228 = shl i64 %put_buffer.089.i201, 8\l  %sub39.i229 = add nsw i32 %put_bits.090.i200, -8\l  %cmp11.i230 = icmp sgt i32 %sub39.i229, 7\l  br i1 %cmp11.i230, label %while.body.i207, label %if.end9.i.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6435db0:s0 -> Node0x6435c90;
	Node0x6435db0:s1 -> Node0x64159c0;
	Node0x64159c0 [shape=record, style = filled, fillcolor = blue, label="{if.end9.i.loopexit:                               \l  %sub39.i229.lcssa = phi i32 [ %sub39.i229, %cleanup.i231 ]\l  %shl38.i228.lcssa = phi i64 [ %shl38.i228, %cleanup.i231 ]\l  br label %if.end9.i\l}"];
	Node0x64159c0 -> Node0x6435b20;
	Node0x6435b20 [shape=record, style = filled, fillcolor = blue, label="{if.end9.i:                                        \l  %101 = phi i32 [ %add.i188, %if.end.i195 ], [ %sub39.i229.lcssa,\l... %if.end9.i.loopexit ]\l  %102 = phi i64 [ %or.i193, %if.end.i195 ], [ %shl38.i228.lcssa,\l... %if.end9.i.loopexit ]\l  store i64 %102, i64* %put_buffer10.i192, align 16, !tbaa !22\l  store i32 %101, i32* %put_bits1.i177, align 8, !tbaa !21\l  %tobool10.i = icmp eq i32 %nbits.0.lcssa.i, 0\l  br i1 %tobool10.i, label %for.cond.preheader.i98, label %if.end.i256\l|{<s0>T|<s1>F}}"];
	Node0x6435b20:s0 -> Node0x6431170;
	Node0x6435b20:s1 -> Node0x6431250;
	Node0x6431250 [shape=record, style = filled, fillcolor = blue, label="{if.end.i256:                                      \l  %conv.i237 = zext i32 %temp2.0.i to i64\l  %sh_prom.i245 = zext i32 %nbits.0.lcssa.i to i64\l  %shl.i246 = shl i64 1, %sh_prom.i245\l  %sub.i247 = add i64 %shl.i246, 4294967295\l  %and.i248 = and i64 %sub.i247, %conv.i237\l  %add.i249 = add nsw i32 %101, %nbits.0.lcssa.i\l  %sub6.i250 = sub nsw i32 24, %add.i249\l  %sh_prom7.i251 = zext i32 %sub6.i250 to i64\l  %shl8.i252 = shl i64 %and.i248, %sh_prom7.i251\l  %or.i254 = or i64 %shl8.i252, %102\l  %cmp1188.i255 = icmp sgt i32 %add.i249, 7\l  br i1 %cmp1188.i255, label %while.body.i268.preheader, label\l... %emit_bits.exit298\l|{<s0>T|<s1>F}}"];
	Node0x6431250:s0 -> Node0x640c2f0;
	Node0x6431250:s1 -> Node0x640c370;
	Node0x640c2f0 [shape=record, style = filled, fillcolor = blue, label="{while.body.i268.preheader:                        \l  br label %while.body.i268\l}"];
	Node0x640c2f0 -> Node0x640c500;
	Node0x640c500 [shape=record, style = filled, fillcolor = blue, label="{while.body.i268:                                  \l  %put_bits.090.i261 = phi i32 [ %sub39.i291, %cleanup.i293 ], [ %add.i249,\l... %while.body.i268.preheader ]\l  %put_buffer.089.i262 = phi i64 [ %shl38.i290, %cleanup.i293 ], [ %or.i254,\l... %while.body.i268.preheader ]\l  %shr73.i263 = lshr i64 %put_buffer.089.i262, 16\l  %conv15.i264 = trunc i64 %shr73.i263 to i8\l  %103 = load i8*, i8** %next_output_byte.i196, align 16, !tbaa !23\l  %incdec.ptr.i265 = getelementptr inbounds i8, i8* %103, i64 1\l  store i8* %incdec.ptr.i265, i8** %next_output_byte.i196, align 16, !tbaa !23\l  store i8 %conv15.i264, i8* %103, align 1, !tbaa !12\l  %104 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec.i266 = add i64 %104, -1\l  store i64 %dec.i266, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp16.i267 = icmp eq i64 %dec.i266, 0\l  br i1 %cmp16.i267, label %if.then18.i273, label %if.end21.i278\l|{<s0>T|<s1>F}}"];
	Node0x640c500:s0 -> Node0x640cf30;
	Node0x640c500:s1 -> Node0x640d010;
	Node0x640cf30 [shape=record, style = filled, fillcolor = blue, label="{if.then18.i273:                                   \l  %105 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i.i269 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %105, i64 0, i32 5\l  %106 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i269, align 8, !tbaa !11\l  %empty_output_buffer.i.i270 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %106, i64 0, i32 3\l  %107 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i270, align 8, !tbaa\l... !25\l  %call.i.i271 = tail call i32 %107(%struct.jpeg_compress_struct* %105) #4\l  %tobool.i.i272 = icmp eq i32 %call.i.i271, 0\l  br i1 %tobool.i.i272, label %cleanup.loopexit522, label\l... %dump_buffer.exit.i275\l|{<s0>T|<s1>F}}"];
	Node0x640cf30:s0 -> Node0x643f6e0;
	Node0x640cf30:s1 -> Node0x643f7f0;
	Node0x643f7f0 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit.i275:                            \l  %108 = bitcast %struct.jpeg_destination_mgr* %106 to \<2 x i64\>*\l  %109 = load \<2 x i64\>, \<2 x i64\>* %108, align 8, !tbaa !12\l  store \<2 x i64\> %109, \<2 x i64\>* %66, align 16, !tbaa !12\l  br label %if.end21.i278\l}"];
	Node0x643f7f0 -> Node0x640d010;
	Node0x640d010 [shape=record, style = filled, fillcolor = blue, label="{if.end21.i278:                                    \l  %conv14.i276 = and i64 %shr73.i263, 255\l  %cmp22.i277 = icmp eq i64 %conv14.i276, 255\l  br i1 %cmp22.i277, label %if.then24.i282, label %cleanup.i293\l|{<s0>T|<s1>F}}"];
	Node0x640d010:s0 -> Node0x643fbc0;
	Node0x640d010:s1 -> Node0x640c620;
	Node0x643fbc0 [shape=record, style = filled, fillcolor = blue, label="{if.then24.i282:                                   \l  %110 = load i8*, i8** %next_output_byte.i196, align 16, !tbaa !23\l  %incdec.ptr26.i279 = getelementptr inbounds i8, i8* %110, i64 1\l  store i8* %incdec.ptr26.i279, i8** %next_output_byte.i196, align 16, !tbaa\l... !23\l  store i8 0, i8* %110, align 1, !tbaa !12\l  %111 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec28.i280 = add i64 %111, -1\l  store i64 %dec28.i280, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp29.i281 = icmp eq i64 %dec28.i280, 0\l  br i1 %cmp29.i281, label %if.then31.i287, label %cleanup.i293\l|{<s0>T|<s1>F}}"];
	Node0x643fbc0:s0 -> Node0x6440100;
	Node0x643fbc0:s1 -> Node0x640c620;
	Node0x6440100 [shape=record, style = filled, fillcolor = blue, label="{if.then31.i287:                                   \l  %112 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i75.i283 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %112, i64 0, i32 5\l  %113 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i75.i283, align 8, !tbaa !11\l  %empty_output_buffer.i76.i284 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %113, i64 0, i32 3\l  %114 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i76.i284, align 8,\l... !tbaa !25\l  %call.i77.i285 = tail call i32 %114(%struct.jpeg_compress_struct* %112) #4\l  %tobool.i78.i286 = icmp eq i32 %call.i77.i285, 0\l  br i1 %tobool.i78.i286, label %cleanup.loopexit522, label\l... %dump_buffer.exit83.i289\l|{<s0>T|<s1>F}}"];
	Node0x6440100:s0 -> Node0x643f6e0;
	Node0x6440100:s1 -> Node0x64406b0;
	Node0x64406b0 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit83.i289:                          \l  %115 = bitcast %struct.jpeg_destination_mgr* %113 to \<2 x i64\>*\l  %116 = load \<2 x i64\>, \<2 x i64\>* %115, align 8, !tbaa !12\l  store \<2 x i64\> %116, \<2 x i64\>* %67, align 16, !tbaa !12\l  br label %cleanup.i293\l}"];
	Node0x64406b0 -> Node0x640c620;
	Node0x640c620 [shape=record, style = filled, fillcolor = blue, label="{cleanup.i293:                                     \l  %shl38.i290 = shl i64 %put_buffer.089.i262, 8\l  %sub39.i291 = add nsw i32 %put_bits.090.i261, -8\l  %cmp11.i292 = icmp sgt i32 %sub39.i291, 7\l  br i1 %cmp11.i292, label %while.body.i268, label %emit_bits.exit298.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x640c620:s0 -> Node0x640c500;
	Node0x640c620:s1 -> Node0x6440ae0;
	Node0x6440ae0 [shape=record, style = filled, fillcolor = blue, label="{emit_bits.exit298.loopexit:                       \l  %sub39.i291.lcssa = phi i32 [ %sub39.i291, %cleanup.i293 ]\l  %shl38.i290.lcssa = phi i64 [ %shl38.i290, %cleanup.i293 ]\l  br label %emit_bits.exit298\l}"];
	Node0x6440ae0 -> Node0x640c370;
	Node0x640c370 [shape=record, style = filled, fillcolor = blue, label="{emit_bits.exit298:                                \l  %put_bits.0.lcssa.i294 = phi i32 [ %add.i249, %if.end.i256 ], [\l... %sub39.i291.lcssa, %emit_bits.exit298.loopexit ]\l  %put_buffer.0.lcssa.i295 = phi i64 [ %or.i254, %if.end.i256 ], [\l... %shl38.i290.lcssa, %emit_bits.exit298.loopexit ]\l  store i64 %put_buffer.0.lcssa.i295, i64* %put_buffer10.i192, align 16, !tbaa\l... !22\l  store i32 %put_bits.0.lcssa.i294, i32* %put_bits1.i177, align 8, !tbaa !21\l  br label %for.cond.preheader.i98\l}"];
	Node0x640c370 -> Node0x6431170;
	Node0x6431170 [shape=record, style = filled, fillcolor = blue, label="{for.cond.preheader.i98:                           \l  %117 = phi i64 [ %put_buffer.0.lcssa.i295, %emit_bits.exit298 ], [ %102,\l... %if.end9.i ]\l  %118 = phi i32 [ %put_bits.0.lcssa.i294, %emit_bits.exit298 ], [ %101,\l... %if.end9.i ]\l  %arrayidx33.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %77, i64 0, i32 0, i64 240\l  %arrayidx35.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %77, i64 0, i32 1, i64 240\l  br label %for.body.i100\l}"];
	Node0x6431170 -> Node0x6441220;
	Node0x6441220 [shape=record, style = filled, fillcolor = blue, label="{for.body.i100:                                    \l  %119 = phi i64 [ %117, %for.cond.preheader.i98 ], [ %182, %for.inc.i ]\l  %120 = phi i32 [ %118, %for.cond.preheader.i98 ], [ %183, %for.inc.i ]\l  %indvars.iv.i99 = phi i64 [ 1, %for.cond.preheader.i98 ], [\l... %indvars.iv.next.i102, %for.inc.i ]\l  %r.0139.i = phi i32 [ 0, %for.cond.preheader.i98 ], [ %r.2.i, %for.inc.i ]\l  %arrayidx20.i = getelementptr inbounds [0 x i32], [0 x i32]*\l... @jpeg_natural_order, i64 0, i64 %indvars.iv.i99\l  %121 = load i32, i32* %arrayidx20.i, align 4, !tbaa !16\l  %idxprom21.i = sext i32 %121 to i64\l  %arrayidx22.i = getelementptr inbounds [64 x i16], [64 x i16]* %72, i64 0,\l... i64 %idxprom21.i\l  %122 = load i16, i16* %arrayidx22.i, align 2, !tbaa !33\l  %conv23.i = sext i16 %122 to i32\l  %cmp24.i = icmp eq i16 %122, 0\l  br i1 %cmp24.i, label %if.then26.i, label %while.cond28.preheader.i\l|{<s0>T|<s1>F}}"];
	Node0x6441220:s0 -> Node0x6441d00;
	Node0x6441220:s1 -> Node0x6441e10;
	Node0x6441e10 [shape=record, style = filled, fillcolor = blue, label="{while.cond28.preheader.i:                         \l  %cmp29136.i = icmp sgt i32 %r.0139.i, 15\l  br i1 %cmp29136.i, label %while.body31.i.preheader, label %while.end42.i\l|{<s0>T|<s1>F}}"];
	Node0x6441e10:s0 -> Node0x6442070;
	Node0x6441e10:s1 -> Node0x6442130;
	Node0x6442070 [shape=record, style = filled, fillcolor = blue, label="{while.body31.i.preheader:                         \l  br label %while.body31.i\l}"];
	Node0x6442070 -> Node0x6442270;
	Node0x6441d00 [shape=record, style = filled, fillcolor = blue, label="{if.then26.i:                                      \l  %inc27.i = add nsw i32 %r.0139.i, 1\l  br label %for.inc.i\l}"];
	Node0x6441d00 -> Node0x64413a0;
	Node0x6442270 [shape=record, style = filled, fillcolor = blue, label="{while.body31.i:                                   \l  %123 = phi i64 [ %put_buffer.0.lcssa.i357, %if.end40.i ], [ %119,\l... %while.body31.i.preheader ]\l  %124 = phi i32 [ %put_bits.0.lcssa.i356, %if.end40.i ], [ %120,\l... %while.body31.i.preheader ]\l  %r.1137.i = phi i32 [ %sub41.i, %if.end40.i ], [ %r.0139.i,\l... %while.body31.i.preheader ]\l  %125 = load i32, i32* %arrayidx33.i, align 4, !tbaa !16\l  %126 = load i8, i8* %arrayidx35.i, align 4, !tbaa !12\l  %conv36.i = sext i8 %126 to i32\l  %conv.i299 = zext i32 %125 to i64\l  %cmp.i301 = icmp eq i8 %126, 0\l  br i1 %cmp.i301, label %if.then.i306, label %if.end.i318\l|{<s0>T|<s1>F}}"];
	Node0x6442270:s0 -> Node0x6442b80;
	Node0x6442270:s1 -> Node0x6442c60;
	Node0x6442b80 [shape=record, style = filled, fillcolor = blue, label="{if.then.i306:                                     \l  %127 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %err.i303 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %127, i64 0, i32 0\l  %128 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i303,\l... align 8, !tbaa !34\l  %msg_code.i304 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %128, i64 0, i32 5\l  store i32 39, i32* %msg_code.i304, align 8, !tbaa !35\l  %error_exit.i305 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %128, i64 0, i32 0\l  %129 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i305, align 8, !tbaa !37\l  %130 = bitcast %struct.jpeg_compress_struct* %127 to\l... %struct.jpeg_common_struct*\l  tail call void %129(%struct.jpeg_common_struct* %130) #4\l  br label %if.end.i318\l}"];
	Node0x6442b80 -> Node0x6442c60;
	Node0x6442c60 [shape=record, style = filled, fillcolor = blue, label="{if.end.i318:                                      \l  %sh_prom.i307 = zext i32 %conv36.i to i64\l  %shl.i308 = shl i64 1, %sh_prom.i307\l  %sub.i309 = add i64 %shl.i308, 4294967295\l  %and.i310 = and i64 %sub.i309, %conv.i299\l  %add.i311 = add nsw i32 %124, %conv36.i\l  %sub6.i312 = sub nsw i32 24, %add.i311\l  %sh_prom7.i313 = zext i32 %sub6.i312 to i64\l  %shl8.i314 = shl i64 %and.i310, %sh_prom7.i313\l  %or.i316 = or i64 %123, %shl8.i314\l  %cmp1188.i317 = icmp sgt i32 %add.i311, 7\l  br i1 %cmp1188.i317, label %while.body.i330.preheader, label %if.end40.i\l|{<s0>T|<s1>F}}"];
	Node0x6442c60:s0 -> Node0x6443db0;
	Node0x6442c60:s1 -> Node0x6442450;
	Node0x6443db0 [shape=record, style = filled, fillcolor = blue, label="{while.body.i330.preheader:                        \l  br label %while.body.i330\l}"];
	Node0x6443db0 -> Node0x6443f60;
	Node0x6443f60 [shape=record, style = filled, fillcolor = blue, label="{while.body.i330:                                  \l  %put_bits.090.i323 = phi i32 [ %sub39.i353, %cleanup.i355 ], [ %add.i311,\l... %while.body.i330.preheader ]\l  %put_buffer.089.i324 = phi i64 [ %shl38.i352, %cleanup.i355 ], [ %or.i316,\l... %while.body.i330.preheader ]\l  %shr73.i325 = lshr i64 %put_buffer.089.i324, 16\l  %conv15.i326 = trunc i64 %shr73.i325 to i8\l  %131 = load i8*, i8** %next_output_byte.i196, align 16, !tbaa !23\l  %incdec.ptr.i327 = getelementptr inbounds i8, i8* %131, i64 1\l  store i8* %incdec.ptr.i327, i8** %next_output_byte.i196, align 16, !tbaa !23\l  store i8 %conv15.i326, i8* %131, align 1, !tbaa !12\l  %132 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec.i328 = add i64 %132, -1\l  store i64 %dec.i328, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp16.i329 = icmp eq i64 %dec.i328, 0\l  br i1 %cmp16.i329, label %if.then18.i335, label %if.end21.i340\l|{<s0>T|<s1>F}}"];
	Node0x6443f60:s0 -> Node0x6444990;
	Node0x6443f60:s1 -> Node0x6444a70;
	Node0x6444990 [shape=record, style = filled, fillcolor = blue, label="{if.then18.i335:                                   \l  %133 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i.i331 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %133, i64 0, i32 5\l  %134 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i331, align 8, !tbaa !11\l  %empty_output_buffer.i.i332 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %134, i64 0, i32 3\l  %135 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i332, align 8, !tbaa\l... !25\l  %call.i.i333 = tail call i32 %135(%struct.jpeg_compress_struct* %133) #4\l  %tobool.i.i334 = icmp eq i32 %call.i.i333, 0\l  br i1 %tobool.i.i334, label %cleanup.loopexit, label %dump_buffer.exit.i337\l|{<s0>T|<s1>F}}"];
	Node0x6444990:s0 -> Node0x6445080;
	Node0x6444990:s1 -> Node0x6445160;
	Node0x6445160 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit.i337:                            \l  %136 = bitcast %struct.jpeg_destination_mgr* %134 to \<2 x i64\>*\l  %137 = load \<2 x i64\>, \<2 x i64\>* %136, align 8, !tbaa !12\l  store \<2 x i64\> %137, \<2 x i64\>* %62, align 16, !tbaa !12\l  br label %if.end21.i340\l}"];
	Node0x6445160 -> Node0x6444a70;
	Node0x6444a70 [shape=record, style = filled, fillcolor = blue, label="{if.end21.i340:                                    \l  %conv14.i338 = and i64 %shr73.i325, 255\l  %cmp22.i339 = icmp eq i64 %conv14.i338, 255\l  br i1 %cmp22.i339, label %if.then24.i344, label %cleanup.i355\l|{<s0>T|<s1>F}}"];
	Node0x6444a70:s0 -> Node0x6445530;
	Node0x6444a70:s1 -> Node0x6444080;
	Node0x6445530 [shape=record, style = filled, fillcolor = blue, label="{if.then24.i344:                                   \l  %138 = load i8*, i8** %next_output_byte.i196, align 16, !tbaa !23\l  %incdec.ptr26.i341 = getelementptr inbounds i8, i8* %138, i64 1\l  store i8* %incdec.ptr26.i341, i8** %next_output_byte.i196, align 16, !tbaa\l... !23\l  store i8 0, i8* %138, align 1, !tbaa !12\l  %139 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec28.i342 = add i64 %139, -1\l  store i64 %dec28.i342, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp29.i343 = icmp eq i64 %dec28.i342, 0\l  br i1 %cmp29.i343, label %if.then31.i349, label %cleanup.i355\l|{<s0>T|<s1>F}}"];
	Node0x6445530:s0 -> Node0x6445a70;
	Node0x6445530:s1 -> Node0x6444080;
	Node0x6445a70 [shape=record, style = filled, fillcolor = blue, label="{if.then31.i349:                                   \l  %140 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i75.i345 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %140, i64 0, i32 5\l  %141 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i75.i345, align 8, !tbaa !11\l  %empty_output_buffer.i76.i346 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %141, i64 0, i32 3\l  %142 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i76.i346, align 8,\l... !tbaa !25\l  %call.i77.i347 = tail call i32 %142(%struct.jpeg_compress_struct* %140) #4\l  %tobool.i78.i348 = icmp eq i32 %call.i77.i347, 0\l  br i1 %tobool.i78.i348, label %cleanup.loopexit, label\l... %dump_buffer.exit83.i351\l|{<s0>T|<s1>F}}"];
	Node0x6445a70:s0 -> Node0x6445080;
	Node0x6445a70:s1 -> Node0x6446060;
	Node0x6446060 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit83.i351:                          \l  %143 = bitcast %struct.jpeg_destination_mgr* %141 to \<2 x i64\>*\l  %144 = load \<2 x i64\>, \<2 x i64\>* %143, align 8, !tbaa !12\l  store \<2 x i64\> %144, \<2 x i64\>* %63, align 16, !tbaa !12\l  br label %cleanup.i355\l}"];
	Node0x6446060 -> Node0x6444080;
	Node0x6444080 [shape=record, style = filled, fillcolor = blue, label="{cleanup.i355:                                     \l  %shl38.i352 = shl i64 %put_buffer.089.i324, 8\l  %sub39.i353 = add nsw i32 %put_bits.090.i323, -8\l  %cmp11.i354 = icmp sgt i32 %sub39.i353, 7\l  br i1 %cmp11.i354, label %while.body.i330, label %if.end40.i.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6444080:s0 -> Node0x6443f60;
	Node0x6444080:s1 -> Node0x6446490;
	Node0x6446490 [shape=record, style = filled, fillcolor = blue, label="{if.end40.i.loopexit:                              \l  %sub39.i353.lcssa = phi i32 [ %sub39.i353, %cleanup.i355 ]\l  %shl38.i352.lcssa = phi i64 [ %shl38.i352, %cleanup.i355 ]\l  br label %if.end40.i\l}"];
	Node0x6446490 -> Node0x6442450;
	Node0x6442450 [shape=record, style = filled, fillcolor = blue, label="{if.end40.i:                                       \l  %put_bits.0.lcssa.i356 = phi i32 [ %add.i311, %if.end.i318 ], [\l... %sub39.i353.lcssa, %if.end40.i.loopexit ]\l  %put_buffer.0.lcssa.i357 = phi i64 [ %or.i316, %if.end.i318 ], [\l... %shl38.i352.lcssa, %if.end40.i.loopexit ]\l  store i64 %put_buffer.0.lcssa.i357, i64* %put_buffer10.i192, align 16, !tbaa\l... !22\l  store i32 %put_bits.0.lcssa.i356, i32* %put_bits1.i177, align 8, !tbaa !21\l  %sub41.i = add nsw i32 %r.1137.i, -16\l  %cmp29.i = icmp sgt i32 %sub41.i, 15\l  br i1 %cmp29.i, label %while.body31.i, label %while.end42.i.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6442450:s0 -> Node0x6442270;
	Node0x6442450:s1 -> Node0x6446930;
	Node0x6446930 [shape=record, style = filled, fillcolor = blue, label="{while.end42.i.loopexit:                           \l  %sub41.i.lcssa = phi i32 [ %sub41.i, %if.end40.i ]\l  %put_buffer.0.lcssa.i357.lcssa = phi i64 [ %put_buffer.0.lcssa.i357,\l... %if.end40.i ]\l  %put_bits.0.lcssa.i356.lcssa = phi i32 [ %put_bits.0.lcssa.i356, %if.end40.i\l... ]\l  br label %while.end42.i\l}"];
	Node0x6446930 -> Node0x6442130;
	Node0x6442130 [shape=record, style = filled, fillcolor = blue, label="{while.end42.i:                                    \l  %145 = phi i64 [ %119, %while.cond28.preheader.i ], [\l... %put_buffer.0.lcssa.i357.lcssa, %while.end42.i.loopexit ]\l  %146 = phi i32 [ %120, %while.cond28.preheader.i ], [\l... %put_bits.0.lcssa.i356.lcssa, %while.end42.i.loopexit ]\l  %r.1.lcssa.i = phi i32 [ %r.0139.i, %while.cond28.preheader.i ], [\l... %sub41.i.lcssa, %while.end42.i.loopexit ]\l  %cmp43.i = icmp slt i16 %122, 0\l  %sub46.i = sub nsw i32 0, %conv23.i\l  %temp.2.i = select i1 %cmp43.i, i32 %sub46.i, i32 %conv23.i\l  %.lobit.i = ashr i16 %122, 15\l  br label %while.cond49.i\l}"];
	Node0x6442130 -> Node0x6446fb0;
	Node0x6446fb0 [shape=record, style = filled, fillcolor = blue, label="{while.cond49.i:                                   \l  %temp.3.i = phi i32 [ %shr50.i, %while.cond49.i ], [ %temp.2.i,\l... %while.end42.i ]\l  %nbits.1.i = phi i32 [ %inc53.i, %while.cond49.i ], [ 1, %while.end42.i ]\l  %shr50.i = ashr i32 %temp.3.i, 1\l  %tobool51.i = icmp eq i32 %shr50.i, 0\l  %inc53.i = add nuw nsw i32 %nbits.1.i, 1\l  br i1 %tobool51.i, label %while.end54.i, label %while.cond49.i\l|{<s0>T|<s1>F}}"];
	Node0x6446fb0:s0 -> Node0x6447500;
	Node0x6446fb0:s1 -> Node0x6446fb0;
	Node0x6447500 [shape=record, style = filled, fillcolor = blue, label="{while.end54.i:                                    \l  %nbits.1.i.lcssa = phi i32 [ %nbits.1.i, %while.cond49.i ]\l  %147 = sext i16 %.lobit.i to i32\l  %shl.i = shl i32 %r.1.lcssa.i, 4\l  %add.i101 = add nsw i32 %nbits.1.i.lcssa, %shl.i\l  %idxprom55.i = sext i32 %add.i101 to i64\l  %arrayidx57.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %77, i64 0, i32 0, i64 %idxprom55.i\l  %148 = load i32, i32* %arrayidx57.i, align 4, !tbaa !16\l  %arrayidx60.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %77, i64 0, i32 1, i64 %idxprom55.i\l  %149 = load i8, i8* %arrayidx60.i, align 1, !tbaa !12\l  %conv61.i = sext i8 %149 to i32\l  %conv.i361 = zext i32 %148 to i64\l  %cmp.i363 = icmp eq i8 %149, 0\l  br i1 %cmp.i363, label %if.then.i368, label %if.end.i380\l|{<s0>T|<s1>F}}"];
	Node0x6447500:s0 -> Node0x6447cc0;
	Node0x6447500:s1 -> Node0x6447da0;
	Node0x6447cc0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i368:                                     \l  %150 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %err.i365 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %150, i64 0, i32 0\l  %151 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i365,\l... align 8, !tbaa !34\l  %msg_code.i366 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %151, i64 0, i32 5\l  store i32 39, i32* %msg_code.i366, align 8, !tbaa !35\l  %error_exit.i367 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %151, i64 0, i32 0\l  %152 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i367, align 8, !tbaa !37\l  %153 = bitcast %struct.jpeg_compress_struct* %150 to\l... %struct.jpeg_common_struct*\l  tail call void %152(%struct.jpeg_common_struct* %153) #4\l  br label %if.end.i380\l}"];
	Node0x6447cc0 -> Node0x6447da0;
	Node0x6447da0 [shape=record, style = filled, fillcolor = blue, label="{if.end.i380:                                      \l  %sh_prom.i369 = zext i32 %conv61.i to i64\l  %shl.i370 = shl i64 1, %sh_prom.i369\l  %sub.i371 = add i64 %shl.i370, 4294967295\l  %and.i372 = and i64 %sub.i371, %conv.i361\l  %add.i373 = add nsw i32 %146, %conv61.i\l  %sub6.i374 = sub nsw i32 24, %add.i373\l  %sh_prom7.i375 = zext i32 %sub6.i374 to i64\l  %shl8.i376 = shl i64 %and.i372, %sh_prom7.i375\l  %or.i378 = or i64 %145, %shl8.i376\l  %cmp1188.i379 = icmp sgt i32 %add.i373, 7\l  br i1 %cmp1188.i379, label %while.body.i392.preheader, label %if.end65.i\l|{<s0>T|<s1>F}}"];
	Node0x6447da0:s0 -> Node0x6448ae0;
	Node0x6447da0:s1 -> Node0x6448bc0;
	Node0x6448ae0 [shape=record, style = filled, fillcolor = blue, label="{while.body.i392.preheader:                        \l  br label %while.body.i392\l}"];
	Node0x6448ae0 -> Node0x6448d30;
	Node0x6448d30 [shape=record, style = filled, fillcolor = blue, label="{while.body.i392:                                  \l  %put_bits.090.i385 = phi i32 [ %sub39.i415, %cleanup.i417 ], [ %add.i373,\l... %while.body.i392.preheader ]\l  %put_buffer.089.i386 = phi i64 [ %shl38.i414, %cleanup.i417 ], [ %or.i378,\l... %while.body.i392.preheader ]\l  %shr73.i387 = lshr i64 %put_buffer.089.i386, 16\l  %conv15.i388 = trunc i64 %shr73.i387 to i8\l  %154 = load i8*, i8** %next_output_byte.i196, align 16, !tbaa !23\l  %incdec.ptr.i389 = getelementptr inbounds i8, i8* %154, i64 1\l  store i8* %incdec.ptr.i389, i8** %next_output_byte.i196, align 16, !tbaa !23\l  store i8 %conv15.i388, i8* %154, align 1, !tbaa !12\l  %155 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec.i390 = add i64 %155, -1\l  store i64 %dec.i390, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp16.i391 = icmp eq i64 %dec.i390, 0\l  br i1 %cmp16.i391, label %if.then18.i397, label %if.end21.i402\l|{<s0>T|<s1>F}}"];
	Node0x6448d30:s0 -> Node0x6449720;
	Node0x6448d30:s1 -> Node0x6449800;
	Node0x6449720 [shape=record, style = filled, fillcolor = blue, label="{if.then18.i397:                                   \l  %156 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i.i393 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %156, i64 0, i32 5\l  %157 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i393, align 8, !tbaa !11\l  %empty_output_buffer.i.i394 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %157, i64 0, i32 3\l  %158 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i394, align 8, !tbaa\l... !25\l  %call.i.i395 = tail call i32 %158(%struct.jpeg_compress_struct* %156) #4\l  %tobool.i.i396 = icmp eq i32 %call.i.i395, 0\l  br i1 %tobool.i.i396, label %cleanup.loopexit520, label\l... %dump_buffer.exit.i399\l|{<s0>T|<s1>F}}"];
	Node0x6449720:s0 -> Node0x6449e10;
	Node0x6449720:s1 -> Node0x643dea0;
	Node0x643dea0 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit.i399:                            \l  %159 = bitcast %struct.jpeg_destination_mgr* %157 to \<2 x i64\>*\l  %160 = load \<2 x i64\>, \<2 x i64\>* %159, align 8, !tbaa !12\l  store \<2 x i64\> %160, \<2 x i64\>* %60, align 16, !tbaa !12\l  br label %if.end21.i402\l}"];
	Node0x643dea0 -> Node0x6449800;
	Node0x6449800 [shape=record, style = filled, fillcolor = blue, label="{if.end21.i402:                                    \l  %conv14.i400 = and i64 %shr73.i387, 255\l  %cmp22.i401 = icmp eq i64 %conv14.i400, 255\l  br i1 %cmp22.i401, label %if.then24.i406, label %cleanup.i417\l|{<s0>T|<s1>F}}"];
	Node0x6449800:s0 -> Node0x643e270;
	Node0x6449800:s1 -> Node0x6448e10;
	Node0x643e270 [shape=record, style = filled, fillcolor = blue, label="{if.then24.i406:                                   \l  %161 = load i8*, i8** %next_output_byte.i196, align 16, !tbaa !23\l  %incdec.ptr26.i403 = getelementptr inbounds i8, i8* %161, i64 1\l  store i8* %incdec.ptr26.i403, i8** %next_output_byte.i196, align 16, !tbaa\l... !23\l  store i8 0, i8* %161, align 1, !tbaa !12\l  %162 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec28.i404 = add i64 %162, -1\l  store i64 %dec28.i404, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp29.i405 = icmp eq i64 %dec28.i404, 0\l  br i1 %cmp29.i405, label %if.then31.i411, label %cleanup.i417\l|{<s0>T|<s1>F}}"];
	Node0x643e270:s0 -> Node0x643e7b0;
	Node0x643e270:s1 -> Node0x6448e10;
	Node0x643e7b0 [shape=record, style = filled, fillcolor = blue, label="{if.then31.i411:                                   \l  %163 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i75.i407 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %163, i64 0, i32 5\l  %164 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i75.i407, align 8, !tbaa !11\l  %empty_output_buffer.i76.i408 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %164, i64 0, i32 3\l  %165 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i76.i408, align 8,\l... !tbaa !25\l  %call.i77.i409 = tail call i32 %165(%struct.jpeg_compress_struct* %163) #4\l  %tobool.i78.i410 = icmp eq i32 %call.i77.i409, 0\l  br i1 %tobool.i78.i410, label %cleanup.loopexit520, label\l... %dump_buffer.exit83.i413\l|{<s0>T|<s1>F}}"];
	Node0x643e7b0:s0 -> Node0x6449e10;
	Node0x643e7b0:s1 -> Node0x643eda0;
	Node0x643eda0 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit83.i413:                          \l  %166 = bitcast %struct.jpeg_destination_mgr* %164 to \<2 x i64\>*\l  %167 = load \<2 x i64\>, \<2 x i64\>* %166, align 8, !tbaa !12\l  store \<2 x i64\> %167, \<2 x i64\>* %61, align 16, !tbaa !12\l  br label %cleanup.i417\l}"];
	Node0x643eda0 -> Node0x6448e10;
	Node0x6448e10 [shape=record, style = filled, fillcolor = blue, label="{cleanup.i417:                                     \l  %shl38.i414 = shl i64 %put_buffer.089.i386, 8\l  %sub39.i415 = add nsw i32 %put_bits.090.i385, -8\l  %cmp11.i416 = icmp sgt i32 %sub39.i415, 7\l  br i1 %cmp11.i416, label %while.body.i392, label %if.end65.i.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6448e10:s0 -> Node0x6448d30;
	Node0x6448e10:s1 -> Node0x643f1d0;
	Node0x643f1d0 [shape=record, style = filled, fillcolor = blue, label="{if.end65.i.loopexit:                              \l  %sub39.i415.lcssa = phi i32 [ %sub39.i415, %cleanup.i417 ]\l  %shl38.i414.lcssa = phi i64 [ %shl38.i414, %cleanup.i417 ]\l  br label %if.end65.i\l}"];
	Node0x643f1d0 -> Node0x6448bc0;
	Node0x6448bc0 [shape=record, style = filled, fillcolor = blue, label="{if.end65.i:                                       \l  %put_bits.0.lcssa.i418 = phi i32 [ %add.i373, %if.end.i380 ], [\l... %sub39.i415.lcssa, %if.end65.i.loopexit ]\l  %put_buffer.0.lcssa.i419 = phi i64 [ %or.i378, %if.end.i380 ], [\l... %shl38.i414.lcssa, %if.end65.i.loopexit ]\l  store i64 %put_buffer.0.lcssa.i419, i64* %put_buffer10.i192, align 16, !tbaa\l... !22\l  store i32 %put_bits.0.lcssa.i418, i32* %put_bits1.i177, align 8, !tbaa !21\l  %temp2.1.i = add nsw i32 %147, %conv23.i\l  %conv.i423 = zext i32 %temp2.1.i to i64\l  %sh_prom.i425 = zext i32 %nbits.1.i.lcssa to i64\l  %shl.i426 = shl i64 1, %sh_prom.i425\l  %sub.i427 = add i64 %shl.i426, 4294967295\l  %and.i428 = and i64 %sub.i427, %conv.i423\l  %add.i429 = add nsw i32 %put_bits.0.lcssa.i418, %nbits.1.i.lcssa\l  %sub6.i430 = sub nsw i32 24, %add.i429\l  %sh_prom7.i431 = zext i32 %sub6.i430 to i64\l  %shl8.i432 = shl i64 %and.i428, %sh_prom7.i431\l  %or.i434 = or i64 %put_buffer.0.lcssa.i419, %shl8.i432\l  %cmp1188.i435 = icmp sgt i32 %add.i429, 7\l  br i1 %cmp1188.i435, label %while.body.i448.preheader, label\l... %emit_bits.exit478\l|{<s0>T|<s1>F}}"];
	Node0x6448bc0:s0 -> Node0x644d630;
	Node0x6448bc0:s1 -> Node0x644d710;
	Node0x644d630 [shape=record, style = filled, fillcolor = blue, label="{while.body.i448.preheader:                        \l  br label %while.body.i448\l}"];
	Node0x644d630 -> Node0x644d8a0;
	Node0x644d8a0 [shape=record, style = filled, fillcolor = blue, label="{while.body.i448:                                  \l  %put_bits.090.i441 = phi i32 [ %sub39.i471, %cleanup.i473 ], [ %add.i429,\l... %while.body.i448.preheader ]\l  %put_buffer.089.i442 = phi i64 [ %shl38.i470, %cleanup.i473 ], [ %or.i434,\l... %while.body.i448.preheader ]\l  %shr73.i443 = lshr i64 %put_buffer.089.i442, 16\l  %conv15.i444 = trunc i64 %shr73.i443 to i8\l  %168 = load i8*, i8** %next_output_byte.i196, align 16, !tbaa !23\l  %incdec.ptr.i445 = getelementptr inbounds i8, i8* %168, i64 1\l  store i8* %incdec.ptr.i445, i8** %next_output_byte.i196, align 16, !tbaa !23\l  store i8 %conv15.i444, i8* %168, align 1, !tbaa !12\l  %169 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec.i446 = add i64 %169, -1\l  store i64 %dec.i446, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp16.i447 = icmp eq i64 %dec.i446, 0\l  br i1 %cmp16.i447, label %if.then18.i453, label %if.end21.i458\l|{<s0>T|<s1>F}}"];
	Node0x644d8a0:s0 -> Node0x6434530;
	Node0x644d8a0:s1 -> Node0x6434610;
	Node0x6434530 [shape=record, style = filled, fillcolor = blue, label="{if.then18.i453:                                   \l  %170 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i.i449 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %170, i64 0, i32 5\l  %171 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i449, align 8, !tbaa !11\l  %empty_output_buffer.i.i450 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %171, i64 0, i32 3\l  %172 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i450, align 8, !tbaa\l... !25\l  %call.i.i451 = tail call i32 %172(%struct.jpeg_compress_struct* %170) #4\l  %tobool.i.i452 = icmp eq i32 %call.i.i451, 0\l  br i1 %tobool.i.i452, label %cleanup.loopexit519, label\l... %dump_buffer.exit.i455\l|{<s0>T|<s1>F}}"];
	Node0x6434530:s0 -> Node0x6434c20;
	Node0x6434530:s1 -> Node0x6434d00;
	Node0x6434d00 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit.i455:                            \l  %173 = bitcast %struct.jpeg_destination_mgr* %171 to \<2 x i64\>*\l  %174 = load \<2 x i64\>, \<2 x i64\>* %173, align 8, !tbaa !12\l  store \<2 x i64\> %174, \<2 x i64\>* %58, align 16, !tbaa !12\l  br label %if.end21.i458\l}"];
	Node0x6434d00 -> Node0x6434610;
	Node0x6434610 [shape=record, style = filled, fillcolor = blue, label="{if.end21.i458:                                    \l  %conv14.i456 = and i64 %shr73.i443, 255\l  %cmp22.i457 = icmp eq i64 %conv14.i456, 255\l  br i1 %cmp22.i457, label %if.then24.i462, label %cleanup.i473\l|{<s0>T|<s1>F}}"];
	Node0x6434610:s0 -> Node0x641e6b0;
	Node0x6434610:s1 -> Node0x644d950;
	Node0x641e6b0 [shape=record, style = filled, fillcolor = blue, label="{if.then24.i462:                                   \l  %175 = load i8*, i8** %next_output_byte.i196, align 16, !tbaa !23\l  %incdec.ptr26.i459 = getelementptr inbounds i8, i8* %175, i64 1\l  store i8* %incdec.ptr26.i459, i8** %next_output_byte.i196, align 16, !tbaa\l... !23\l  store i8 0, i8* %175, align 1, !tbaa !12\l  %176 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec28.i460 = add i64 %176, -1\l  store i64 %dec28.i460, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp29.i461 = icmp eq i64 %dec28.i460, 0\l  br i1 %cmp29.i461, label %if.then31.i467, label %cleanup.i473\l|{<s0>T|<s1>F}}"];
	Node0x641e6b0:s0 -> Node0x641ebf0;
	Node0x641e6b0:s1 -> Node0x644d950;
	Node0x641ebf0 [shape=record, style = filled, fillcolor = blue, label="{if.then31.i467:                                   \l  %177 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i75.i463 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %177, i64 0, i32 5\l  %178 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i75.i463, align 8, !tbaa !11\l  %empty_output_buffer.i76.i464 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %178, i64 0, i32 3\l  %179 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i76.i464, align 8,\l... !tbaa !25\l  %call.i77.i465 = tail call i32 %179(%struct.jpeg_compress_struct* %177) #4\l  %tobool.i78.i466 = icmp eq i32 %call.i77.i465, 0\l  br i1 %tobool.i78.i466, label %cleanup.loopexit519, label\l... %dump_buffer.exit83.i469\l|{<s0>T|<s1>F}}"];
	Node0x641ebf0:s0 -> Node0x6434c20;
	Node0x641ebf0:s1 -> Node0x641f1a0;
	Node0x641f1a0 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit83.i469:                          \l  %180 = bitcast %struct.jpeg_destination_mgr* %178 to \<2 x i64\>*\l  %181 = load \<2 x i64\>, \<2 x i64\>* %180, align 8, !tbaa !12\l  store \<2 x i64\> %181, \<2 x i64\>* %59, align 16, !tbaa !12\l  br label %cleanup.i473\l}"];
	Node0x641f1a0 -> Node0x644d950;
	Node0x644d950 [shape=record, style = filled, fillcolor = blue, label="{cleanup.i473:                                     \l  %shl38.i470 = shl i64 %put_buffer.089.i442, 8\l  %sub39.i471 = add nsw i32 %put_bits.090.i441, -8\l  %cmp11.i472 = icmp sgt i32 %sub39.i471, 7\l  br i1 %cmp11.i472, label %while.body.i448, label %emit_bits.exit478.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x644d950:s0 -> Node0x644d8a0;
	Node0x644d950:s1 -> Node0x641f5d0;
	Node0x641f5d0 [shape=record, style = filled, fillcolor = blue, label="{emit_bits.exit478.loopexit:                       \l  %sub39.i471.lcssa = phi i32 [ %sub39.i471, %cleanup.i473 ]\l  %shl38.i470.lcssa = phi i64 [ %shl38.i470, %cleanup.i473 ]\l  br label %emit_bits.exit478\l}"];
	Node0x641f5d0 -> Node0x644d710;
	Node0x644d710 [shape=record, style = filled, fillcolor = blue, label="{emit_bits.exit478:                                \l  %put_bits.0.lcssa.i474 = phi i32 [ %add.i429, %if.end65.i ], [\l... %sub39.i471.lcssa, %emit_bits.exit478.loopexit ]\l  %put_buffer.0.lcssa.i475 = phi i64 [ %or.i434, %if.end65.i ], [\l... %shl38.i470.lcssa, %emit_bits.exit478.loopexit ]\l  store i64 %put_buffer.0.lcssa.i475, i64* %put_buffer10.i192, align 16, !tbaa\l... !22\l  store i32 %put_bits.0.lcssa.i474, i32* %put_bits1.i177, align 8, !tbaa !21\l  br label %for.inc.i\l}"];
	Node0x644d710 -> Node0x64413a0;
	Node0x64413a0 [shape=record, style = filled, fillcolor = blue, label="{for.inc.i:                                        \l  %182 = phi i64 [ %119, %if.then26.i ], [ %put_buffer.0.lcssa.i475,\l... %emit_bits.exit478 ]\l  %183 = phi i32 [ %120, %if.then26.i ], [ %put_bits.0.lcssa.i474,\l... %emit_bits.exit478 ]\l  %r.2.i = phi i32 [ %inc27.i, %if.then26.i ], [ 0, %emit_bits.exit478 ]\l  %indvars.iv.next.i102 = add nuw nsw i64 %indvars.iv.i99, 1\l  %cmp17.i = icmp slt i64 %indvars.iv.next.i102, 64\l  br i1 %cmp17.i, label %for.body.i100, label %for.end.i\l|{<s0>T|<s1>F}}"];
	Node0x64413a0:s0 -> Node0x6441220;
	Node0x64413a0:s1 -> Node0x641fd40;
	Node0x641fd40 [shape=record, style = filled, fillcolor = blue, label="{for.end.i:                                        \l  %r.2.i.lcssa = phi i32 [ %r.2.i, %for.inc.i ]\l  %.lcssa526 = phi i32 [ %183, %for.inc.i ]\l  %.lcssa = phi i64 [ %182, %for.inc.i ]\l  %cmp72.i = icmp sgt i32 %r.2.i.lcssa, 0\l  br i1 %cmp72.i, label %if.then74.i, label %if.end27\l|{<s0>T|<s1>F}}"];
	Node0x641fd40:s0 -> Node0x641ff90;
	Node0x641fd40:s1 -> Node0x6432200;
	Node0x641ff90 [shape=record, style = filled, fillcolor = blue, label="{if.then74.i:                                      \l  %arrayidx76.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %77, i64 0, i32 0, i64 0\l  %184 = load i32, i32* %arrayidx76.i, align 4, !tbaa !16\l  %arrayidx78.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %77, i64 0, i32 1, i64 0\l  %185 = load i8, i8* %arrayidx78.i, align 4, !tbaa !12\l  %conv79.i = sext i8 %185 to i32\l  %conv.i104 = zext i32 %184 to i64\l  %cmp.i105 = icmp eq i8 %185, 0\l  br i1 %cmp.i105, label %if.then.i, label %if.end.i109\l|{<s0>T|<s1>F}}"];
	Node0x641ff90:s0 -> Node0x6420510;
	Node0x641ff90:s1 -> Node0x64205f0;
	Node0x6420510 [shape=record, style = filled, fillcolor = blue, label="{if.then.i:                                        \l  %186 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %err.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %186, i64 0, i32 0\l  %187 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align\l... 8, !tbaa !34\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %187, i64 0, i32 5\l  store i32 39, i32* %msg_code.i, align 8, !tbaa !35\l  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %187, i64 0, i32 0\l  %188 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !37\l  %189 = bitcast %struct.jpeg_compress_struct* %186 to\l... %struct.jpeg_common_struct*\l  tail call void %188(%struct.jpeg_common_struct* %189) #4\l  br label %if.end.i109\l}"];
	Node0x6420510 -> Node0x64205f0;
	Node0x64205f0 [shape=record, style = filled, fillcolor = blue, label="{if.end.i109:                                      \l  %sh_prom.i = zext i32 %conv79.i to i64\l  %shl.i106 = shl i64 1, %sh_prom.i\l  %sub.i107 = add i64 %shl.i106, 4294967295\l  %and.i = and i64 %sub.i107, %conv.i104\l  %add.i108 = add nsw i32 %.lcssa526, %conv79.i\l  %sub6.i = sub nsw i32 24, %add.i108\l  %sh_prom7.i = zext i32 %sub6.i to i64\l  %shl8.i = shl i64 %and.i, %sh_prom7.i\l  %or.i = or i64 %.lcssa, %shl8.i\l  %cmp1188.i = icmp sgt i32 %add.i108, 7\l  br i1 %cmp1188.i, label %while.body.i115.preheader, label %emit_bits.exit\l|{<s0>T|<s1>F}}"];
	Node0x64205f0:s0 -> Node0x64212f0;
	Node0x64205f0:s1 -> Node0x64213d0;
	Node0x64212f0 [shape=record, style = filled, fillcolor = blue, label="{while.body.i115.preheader:                        \l  br label %while.body.i115\l}"];
	Node0x64212f0 -> Node0x6421540;
	Node0x6421540 [shape=record, style = filled, fillcolor = blue, label="{while.body.i115:                                  \l  %put_bits.090.i = phi i32 [ %sub39.i, %cleanup.i ], [ %add.i108,\l... %while.body.i115.preheader ]\l  %put_buffer.089.i = phi i64 [ %shl38.i, %cleanup.i ], [ %or.i,\l... %while.body.i115.preheader ]\l  %shr73.i = lshr i64 %put_buffer.089.i, 16\l  %conv15.i = trunc i64 %shr73.i to i8\l  %190 = load i8*, i8** %next_output_byte.i196, align 16, !tbaa !23\l  %incdec.ptr.i113 = getelementptr inbounds i8, i8* %190, i64 1\l  store i8* %incdec.ptr.i113, i8** %next_output_byte.i196, align 16, !tbaa !23\l  store i8 %conv15.i, i8* %190, align 1, !tbaa !12\l  %191 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec.i114 = add i64 %191, -1\l  store i64 %dec.i114, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp16.i = icmp eq i64 %dec.i114, 0\l  br i1 %cmp16.i, label %if.then18.i, label %if.end21.i\l|{<s0>T|<s1>F}}"];
	Node0x6421540:s0 -> Node0x6421eb0;
	Node0x6421540:s1 -> Node0x6421f90;
	Node0x6421eb0 [shape=record, style = filled, fillcolor = blue, label="{if.then18.i:                                      \l  %192 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i.i116 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %192, i64 0, i32 5\l  %193 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i116, align 8, !tbaa !11\l  %empty_output_buffer.i.i117 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %193, i64 0, i32 3\l  %194 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i117, align 8, !tbaa\l... !25\l  %call.i.i118 = tail call i32 %194(%struct.jpeg_compress_struct* %192) #4\l  %tobool.i.i119 = icmp eq i32 %call.i.i118, 0\l  br i1 %tobool.i.i119, label %cleanup.loopexit521, label\l... %dump_buffer.exit.i121\l|{<s0>T|<s1>F}}"];
	Node0x6421eb0:s0 -> Node0x6422560;
	Node0x6421eb0:s1 -> Node0x6422640;
	Node0x6422640 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit.i121:                            \l  %195 = bitcast %struct.jpeg_destination_mgr* %193 to \<2 x i64\>*\l  %196 = load \<2 x i64\>, \<2 x i64\>* %195, align 8, !tbaa !12\l  store \<2 x i64\> %196, \<2 x i64\>* %64, align 16, !tbaa !12\l  br label %if.end21.i\l}"];
	Node0x6422640 -> Node0x6421f90;
	Node0x6421f90 [shape=record, style = filled, fillcolor = blue, label="{if.end21.i:                                       \l  %conv14.i = and i64 %shr73.i, 255\l  %cmp22.i = icmp eq i64 %conv14.i, 255\l  br i1 %cmp22.i, label %if.then24.i, label %cleanup.i\l|{<s0>T|<s1>F}}"];
	Node0x6421f90:s0 -> Node0x6422a10;
	Node0x6421f90:s1 -> Node0x6421610;
	Node0x6422a10 [shape=record, style = filled, fillcolor = blue, label="{if.then24.i:                                      \l  %197 = load i8*, i8** %next_output_byte.i196, align 16, !tbaa !23\l  %incdec.ptr26.i = getelementptr inbounds i8, i8* %197, i64 1\l  store i8* %incdec.ptr26.i, i8** %next_output_byte.i196, align 16, !tbaa !23\l  store i8 0, i8* %197, align 1, !tbaa !12\l  %198 = load i64, i64* %free_in_buffer4, align 8, !tbaa !24\l  %dec28.i = add i64 %198, -1\l  store i64 %dec28.i, i64* %free_in_buffer4, align 8, !tbaa !24\l  %cmp29.i122 = icmp eq i64 %dec28.i, 0\l  br i1 %cmp29.i122, label %if.then31.i, label %cleanup.i\l|{<s0>T|<s1>F}}"];
	Node0x6422a10:s0 -> Node0x6422ee0;
	Node0x6422a10:s1 -> Node0x6421610;
	Node0x6422ee0 [shape=record, style = filled, fillcolor = blue, label="{if.then31.i:                                      \l  %199 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo5, align 16, !tbaa !17\l  %dest1.i75.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %199, i64 0, i32 5\l  %200 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i75.i, align 8, !tbaa !11\l  %empty_output_buffer.i76.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %200, i64 0, i32 3\l  %201 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i76.i, align 8, !tbaa\l... !25\l  %call.i77.i = tail call i32 %201(%struct.jpeg_compress_struct* %199) #4\l  %tobool.i78.i = icmp eq i32 %call.i77.i, 0\l  br i1 %tobool.i78.i, label %cleanup.loopexit521, label %dump_buffer.exit83.i\l|{<s0>T|<s1>F}}"];
	Node0x6422ee0:s0 -> Node0x6422560;
	Node0x6422ee0:s1 -> Node0x64234e0;
	Node0x64234e0 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit83.i:                             \l  %202 = bitcast %struct.jpeg_destination_mgr* %200 to \<2 x i64\>*\l  %203 = load \<2 x i64\>, \<2 x i64\>* %202, align 8, !tbaa !12\l  store \<2 x i64\> %203, \<2 x i64\>* %65, align 16, !tbaa !12\l  br label %cleanup.i\l}"];
	Node0x64234e0 -> Node0x6421610;
	Node0x6421610 [shape=record, style = filled, fillcolor = blue, label="{cleanup.i:                                        \l  %shl38.i = shl i64 %put_buffer.089.i, 8\l  %sub39.i = add nsw i32 %put_bits.090.i, -8\l  %cmp11.i123 = icmp sgt i32 %sub39.i, 7\l  br i1 %cmp11.i123, label %while.body.i115, label %emit_bits.exit.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6421610:s0 -> Node0x6421540;
	Node0x6421610:s1 -> Node0x6423910;
	Node0x6423910 [shape=record, style = filled, fillcolor = blue, label="{emit_bits.exit.loopexit:                          \l  %sub39.i.lcssa = phi i32 [ %sub39.i, %cleanup.i ]\l  %shl38.i.lcssa = phi i64 [ %shl38.i, %cleanup.i ]\l  br label %emit_bits.exit\l}"];
	Node0x6423910 -> Node0x64213d0;
	Node0x64213d0 [shape=record, style = filled, fillcolor = blue, label="{emit_bits.exit:                                   \l  %put_bits.0.lcssa.i = phi i32 [ %add.i108, %if.end.i109 ], [ %sub39.i.lcssa,\l... %emit_bits.exit.loopexit ]\l  %put_buffer.0.lcssa.i = phi i64 [ %or.i, %if.end.i109 ], [ %shl38.i.lcssa,\l... %emit_bits.exit.loopexit ]\l  store i64 %put_buffer.0.lcssa.i, i64* %put_buffer10.i192, align 16, !tbaa !22\l  store i32 %put_bits.0.lcssa.i, i32* %put_bits1.i177, align 8, !tbaa !21\l  br label %if.end27\l}"];
	Node0x64213d0 -> Node0x6432200;
	Node0x6432200 [shape=record, style = filled, fillcolor = blue, label="{if.end27:                                         \l  %204 = load [64 x i16]*, [64 x i16]** %arrayidx15, align 8, !tbaa !29\l  %arrayidx31 = getelementptr inbounds [64 x i16], [64 x i16]* %204, i64 0,\l... i64 0\l  %205 = load i16, i16* %arrayidx31, align 2, !tbaa !33\l  %conv = sext i16 %205 to i32\l  store i32 %conv, i32* %arrayidx19, align 4, !tbaa !16\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %206 = load i32, i32* %blocks_in_MCU, align 8, !tbaa !28\l  %207 = sext i32 %206 to i64\l  %cmp11 = icmp slt i64 %indvars.iv.next, %207\l  br i1 %cmp11, label %for.body, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6432200:s0 -> Node0x64320b0;
	Node0x6432200:s1 -> Node0x6460030;
	Node0x6460030 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  br label %for.end\l}"];
	Node0x6460030 -> Node0x642c160;
	Node0x642c160 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %208 = bitcast %struct.jpeg_destination_mgr** %dest to \<2 x i64\>**\l  %209 = load \<2 x i64\>*, \<2 x i64\>** %208, align 8, !tbaa !11\l  %210 = bitcast %struct.working_state* %state to \<2 x i64\>*\l  %211 = load \<2 x i64\>, \<2 x i64\>* %210, align 16, !tbaa !12\l  store \<2 x i64\> %211, \<2 x i64\>* %209, align 8, !tbaa !12\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %7, i64 32, i32 8, i1\l... false), !tbaa.struct !13\l  %212 = load i32, i32* %restart_interval, align 8, !tbaa !20\l  %tobool45 = icmp eq i32 %212, 0\l  br i1 %tobool45, label %cleanup, label %if.then46\l|{<s0>T|<s1>F}}"];
	Node0x642c160:s0 -> Node0x642f000;
	Node0x642c160:s1 -> Node0x6460360;
	Node0x6460360 [shape=record, style = filled, fillcolor = blue, label="{if.then46:                                        \l  %restarts_to_go47 = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 2\l  %213 = bitcast i32* %restarts_to_go47 to i64*\l  %214 = load i64, i64* %213, align 8\l  %215 = trunc i64 %214 to i32\l  %cmp48 = icmp eq i32 %215, 0\l  br i1 %cmp48, label %if.then50, label %if.end56\l|{<s0>T|<s1>F}}"];
	Node0x6460360:s0 -> Node0x6425670;
	Node0x6460360:s1 -> Node0x6425720;
	Node0x6425670 [shape=record, style = filled, fillcolor = blue, label="{if.then50:                                        \l  %216 = lshr i64 %214, 32\l  %217 = trunc i64 %216 to i32\l  store i32 %212, i32* %restarts_to_go47, align 8, !tbaa !38\l  %next_restart_num53 = getelementptr inbounds %struct.huff_entropy_encoder,\l... %struct.huff_entropy_encoder* %1, i64 0, i32 3\l  %inc54 = add nsw i32 %217, 1\l  %and = and i32 %inc54, 7\l  store i32 %and, i32* %next_restart_num53, align 4, !tbaa !41\l  br label %if.end56\l}"];
	Node0x6425670 -> Node0x6425720;
	Node0x6425720 [shape=record, style = filled, fillcolor = blue, label="{if.end56:                                         \l  %218 = phi i32 [ %212, %if.then50 ], [ %215, %if.then46 ]\l  %dec = add i32 %218, -1\l  store i32 %dec, i32* %restarts_to_go47, align 8, !tbaa !38\l  br label %cleanup\l}"];
	Node0x6425720 -> Node0x642f000;
	Node0x6445080 [shape=record, style = filled, fillcolor = blue, label="{cleanup.loopexit:                                 \l  br label %cleanup\l}"];
	Node0x6445080 -> Node0x642f000;
	Node0x6434c20 [shape=record, style = filled, fillcolor = blue, label="{cleanup.loopexit519:                              \l  br label %cleanup\l}"];
	Node0x6434c20 -> Node0x642f000;
	Node0x6449e10 [shape=record, style = filled, fillcolor = blue, label="{cleanup.loopexit520:                              \l  br label %cleanup\l}"];
	Node0x6449e10 -> Node0x642f000;
	Node0x6422560 [shape=record, style = filled, fillcolor = blue, label="{cleanup.loopexit521:                              \l  br label %cleanup\l}"];
	Node0x6422560 -> Node0x642f000;
	Node0x643f6e0 [shape=record, style = filled, fillcolor = blue, label="{cleanup.loopexit522:                              \l  br label %cleanup\l}"];
	Node0x643f6e0 -> Node0x642f000;
	Node0x640a520 [shape=record, style = filled, fillcolor = blue, label="{cleanup.loopexit523:                              \l  br label %cleanup\l}"];
	Node0x640a520 -> Node0x642f000;
	Node0x642b140 [shape=record, style = filled, fillcolor = blue, label="{cleanup.loopexit524:                              \l  br label %cleanup\l}"];
	Node0x642b140 -> Node0x642f000;
	Node0x642f000 [shape=record, style = filled, fillcolor = blue, label="{cleanup:                                          \l  %retval.0 = phi i32 [ 1, %for.end ], [ 1, %if.end56 ], [ 0, %if.then1.i ], [\l... 0, %if.then13.i ], [ 0, %cleanup.loopexit ], [ 0, %cleanup.loopexit519 ], [\l... 0, %cleanup.loopexit520 ], [ 0, %cleanup.loopexit521 ], [ 0,\l... %cleanup.loopexit522 ], [ 0, %cleanup.loopexit523 ], [ 0,\l... %cleanup.loopexit524 ]\l  call void @llvm.lifetime.end(i64 56, i8* nonnull %2) #4\l  ret i32 %retval.0\l}"];
}
