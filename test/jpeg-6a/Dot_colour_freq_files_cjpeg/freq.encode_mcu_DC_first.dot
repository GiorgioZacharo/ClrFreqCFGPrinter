digraph "CFG for 'encode_mcu_DC_first' function" {
	label="CFG for 'encode_mcu_DC_first' function";

	Node0x55c7e60 [shape=record, style = filled, fillcolor = green, label="{entry:\l  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59\l  %0 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to\l... %struct.phuff_entropy_encoder**\l  %1 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder**\l... %0, align 8, !tbaa !3\l  %Al2 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 50\l  %2 = load i32, i32* %Al2, align 8, !tbaa !11\l  %dest = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 5\l  %3 = bitcast %struct.jpeg_destination_mgr** %dest to \<2 x i64\>**\l  %4 = load \<2 x i64\>*, \<2 x i64\>** %3, align 8, !tbaa !12\l  %next_output_byte3 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 2\l  %5 = load \<2 x i64\>, \<2 x i64\>* %4, align 8, !tbaa !13\l  %free_in_buffer5 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 3\l  %6 = bitcast i8** %next_output_byte3 to \<2 x i64\>*\l  store \<2 x i64\> %5, \<2 x i64\>* %6, align 8, !tbaa !13\l  %restart_interval = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 29\l  %7 = load i32, i32* %restart_interval, align 8, !tbaa !14\l  %tobool = icmp eq i32 %7, 0\l  br i1 %tobool, label %for.cond.preheader, label %if.then, !prof !15\l|{<s0>T|<s1>F}}"];
	Node0x55c7e60:s0 -> Node0x55c9bc0;
	Node0x55c7e60:s1 -> Node0x55c9cc0;
	Node0x55c9cc0 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %restarts_to_go = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 12\l  %8 = bitcast i32* %restarts_to_go to i64*\l  %9 = load i64, i64* %8, align 8\l  %10 = trunc i64 %9 to i32\l  %cmp = icmp eq i32 %10, 0\l  br i1 %cmp, label %if.then6, label %for.cond.preheader\l|{<s0>T|<s1>F}}"];
	Node0x55c9cc0:s0 -> Node0x55c8520;
	Node0x55c9cc0:s1 -> Node0x55c9bc0;
	Node0x55c8520 [shape=record, style = filled, fillcolor = blue, label="{if.then6:                                         \l  %11 = lshr i64 %9, 32\l  %12 = trunc i64 %11 to i32\l  tail call fastcc void @emit_restart(%struct.phuff_entropy_encoder* nonnull\l... %1, i32 %12)\l  br label %for.cond.preheader\l}"];
	Node0x55c8520 -> Node0x55c9bc0;
	Node0x55c9bc0 [shape=record, style = filled, fillcolor = green, label="{for.cond.preheader:                               \l  %blocks_in_MCU = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 45\l  %13 = load i32, i32* %blocks_in_MCU, align 8, !tbaa !16\l  %cmp8211 = icmp sgt i32 %13, 0\l  br i1 %cmp8211, label %for.body.lr.ph, label %for.end, !prof !17\l|{<s0>T|<s1>F}}"];
	Node0x55c9bc0:s0 -> Node0x55caa30;
	Node0x55c9bc0:s1 -> Node0x55cab10;
	Node0x55caa30 [shape=record, style = filled, fillcolor = turquoise, label="{for.body.lr.ph:                                   \l  %gather_statistics.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 1\l  %put_bits1.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 5\l  %cinfo.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 6\l  %put_buffer11.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 4\l  %14 = bitcast i8** %next_output_byte3 to \<2 x i64\>*\l  %15 = bitcast i8** %next_output_byte3 to \<2 x i64\>*\l  %16 = bitcast i8** %next_output_byte3 to \<2 x i64\>*\l  %17 = bitcast i8** %next_output_byte3 to \<2 x i64\>*\l  br label %for.body\l}"];
	Node0x55caa30 -> Node0x55cb2b0;
	Node0x55cb2b0 [shape=record, style = filled, fillcolor = green, label="{for.body:                                         \l  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]\l  %arrayidx = getelementptr inbounds [64 x i16]*, [64 x i16]** %MCU_data, i64\l... %indvars.iv\l  %18 = load [64 x i16]*, [64 x i16]** %arrayidx, align 8, !tbaa !18\l  %arrayidx10 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 46, i64 %indvars.iv\l  %19 = load i32, i32* %arrayidx10, align 4, !tbaa !19\l  %idxprom11 = sext i32 %19 to i64\l  %arrayidx12 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %idxprom11\l  %20 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx12, align 8, !tbaa !18\l  %arrayidx13 = getelementptr inbounds [64 x i16], [64 x i16]* %18, i64 0, i64\l... 0\l  %21 = load i16, i16* %arrayidx13, align 2, !tbaa !20\l  %conv = sext i16 %21 to i32\l  %shr = ashr i32 %conv, %2\l  %arrayidx15 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 7, i64 %idxprom11\l  %22 = load i32, i32* %arrayidx15, align 4, !tbaa !19\l  %sub = sub nsw i32 %shr, %22\l  store i32 %shr, i32* %arrayidx15, align 4, !tbaa !19\l  %cmp19 = icmp slt i32 %sub, 0\l  %sub22 = sub nsw i32 0, %sub\l  %sub.lobit = ashr i32 %sub, 31\l  %temp2.0 = add nsw i32 %sub.lobit, %sub\l  %temp.0 = select i1 %cmp19, i32 %sub22, i32 %sub\l  %tobool24208 = icmp eq i32 %temp.0, 0\l  br i1 %tobool24208, label %while.end, label %while.body.preheader, !prof !21\l|{<s0>T|<s1>F}}"];
	Node0x55cb2b0:s0 -> Node0x55cc5c0;
	Node0x55cb2b0:s1 -> Node0x55cc6d0;
	Node0x55cc6d0 [shape=record, style = filled, fillcolor = green, label="{while.body.preheader:                             \l  br label %while.body\l}"];
	Node0x55cc6d0 -> Node0x55cc990;
	Node0x55cc990 [shape=record, style = filled, fillcolor = green, label="{while.body:                                       \l  %temp.1210 = phi i32 [ %shr25, %while.body ], [ %temp.0,\l... %while.body.preheader ]\l  %nbits.0209 = phi i32 [ %inc, %while.body ], [ 0, %while.body.preheader ]\l  %inc = add nuw nsw i32 %nbits.0209, 1\l  %shr25 = ashr i32 %temp.1210, 1\l  %tobool24 = icmp eq i32 %shr25, 0\l  br i1 %tobool24, label %while.end.loopexit, label %while.body, !prof !21\l|{<s0>T|<s1>F}}"];
	Node0x55cc990:s0 -> Node0x55cc750;
	Node0x55cc990:s1 -> Node0x55cc990;
	Node0x55cc750 [shape=record, style = filled, fillcolor = green, label="{while.end.loopexit:                               \l  %inc.lcssa = phi i32 [ %inc, %while.body ]\l  br label %while.end\l}"];
	Node0x55cc750 -> Node0x55cc5c0;
	Node0x55cc5c0 [shape=record, style = filled, fillcolor = green, label="{while.end:                                        \l  %nbits.0.lcssa = phi i32 [ 0, %for.body ], [ %inc.lcssa, %while.end.loopexit\l... ]\l  %dc_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %20, i64 0, i32 5\l  %23 = load i32, i32* %dc_tbl_no, align 4, !tbaa !22\l  %24 = load i32, i32* %gather_statistics.i, align 8, !tbaa !24\l  %tobool.i = icmp eq i32 %24, 0\l  br i1 %tobool.i, label %if.else.i, label %if.then.i, !prof !28\l|{<s0>T|<s1>F}}"];
	Node0x55cc5c0:s0 -> Node0x55ce7e0;
	Node0x55cc5c0:s1 -> Node0x55ce8c0;
	Node0x55ce8c0 [shape=record, style = filled, fillcolor = green, label="{if.then.i:                                        \l  %idxprom.i = sext i32 %nbits.0.lcssa to i64\l  %idxprom1.i = sext i32 %23 to i64\l  %arrayidx.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i\l  %25 = load i64*, i64** %arrayidx.i, align 8, !tbaa !18\l  %arrayidx2.i = getelementptr inbounds i64, i64* %25, i64 %idxprom.i\l  %26 = load i64, i64* %arrayidx2.i, align 8, !tbaa !29\l  %inc.i = add nsw i64 %26, 1\l  store i64 %inc.i, i64* %arrayidx2.i, align 8, !tbaa !29\l  br label %emit_symbol.exit\l}"];
	Node0x55ce8c0 -> Node0x55c1cd0;
	Node0x55ce7e0 [shape=record, style = filled, fillcolor = green, label="{if.else.i:                                        \l  %idxprom3.i = sext i32 %23 to i64\l  %arrayidx4.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i\l  %27 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i,\l... align 8, !tbaa !18\l  %idxprom5.i = sext i32 %nbits.0.lcssa to i64\l  %arrayidx6.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %27, i64 0, i32 0, i64 %idxprom5.i\l  %28 = load i32, i32* %arrayidx6.i, align 4, !tbaa !19\l  %arrayidx8.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %27, i64 0, i32 1, i64 %idxprom5.i\l  %29 = load i8, i8* %arrayidx8.i, align 1, !tbaa !13\l  %conv.i = sext i8 %29 to i32\l  %conv.i102 = zext i32 %28 to i64\l  %30 = load i32, i32* %put_bits1.i, align 8, !tbaa !30\l  %cmp.i = icmp eq i8 %29, 0\l  br i1 %cmp.i, label %if.end.i, label %if.end7.i, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x55ce7e0:s0 -> Node0x55bf650;
	Node0x55ce7e0:s1 -> Node0x55bf730;
	Node0x55bf650 [shape=record, style = filled, fillcolor = blue, label="{if.end.i:                                         \l  %31 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i, align 8, !tbaa !32\l  %err.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %31, i64 0, i32 0\l  %32 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align\l... 8, !tbaa !33\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %32, i64 0, i32 5\l  store i32 39, i32* %msg_code.i, align 8, !tbaa !34\l  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %32, i64 0, i32 0\l  %33 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !36\l  %34 = bitcast %struct.jpeg_compress_struct* %31 to\l... %struct.jpeg_common_struct*\l  tail call void %33(%struct.jpeg_common_struct* %34) #3\l  %.pre = load i32, i32* %gather_statistics.i, align 8, !tbaa !24\l  %tobool.i105 = icmp eq i32 %.pre, 0\l  br i1 %tobool.i105, label %if.end7.i, label %emit_symbol.exit, !prof !37\l|{<s0>T|<s1>F}}"];
	Node0x55bf650:s0 -> Node0x55bf730;
	Node0x55bf650:s1 -> Node0x55c1cd0;
	Node0x55bf730 [shape=record, style = filled, fillcolor = green, label="{if.end7.i:                                        \l  %sh_prom.i = zext i32 %conv.i to i64\l  %shl.i = shl i64 1, %sh_prom.i\l  %sub.i = add i64 %shl.i, 4294967295\l  %and.i = and i64 %sub.i, %conv.i102\l  %add.i = add i32 %30, %conv.i\l  %sub8.i = sub nsw i32 24, %add.i\l  %sh_prom9.i = zext i32 %sub8.i to i64\l  %shl10.i = shl i64 %and.i, %sh_prom9.i\l  %35 = load i64, i64* %put_buffer11.i, align 8, !tbaa !38\l  %or.i = or i64 %35, %shl10.i\l  %cmp1267.i = icmp sgt i32 %add.i, 7\l  br i1 %cmp1267.i, label %while.body.i.preheader, label %while.end.i, !prof\l... !39\l|{<s0>T|<s1>F}}"];
	Node0x55bf730:s0 -> Node0x55c09e0;
	Node0x55bf730:s1 -> Node0x55c0ae0;
	Node0x55c09e0 [shape=record, style = filled, fillcolor = turquoise, label="{while.body.i.preheader:                           \l  br label %while.body.i\l}"];
	Node0x55c09e0 -> Node0x55d94f0;
	Node0x55d94f0 [shape=record, style = filled, fillcolor = turquoise, label="{while.body.i:                                     \l  %put_buffer.069.i = phi i64 [ %shl33.i, %if.end32.i ], [ %or.i,\l... %while.body.i.preheader ]\l  %put_bits.068.i = phi i32 [ %sub34.i, %if.end32.i ], [ %add.i,\l... %while.body.i.preheader ]\l  %shr66.i = lshr i64 %put_buffer.069.i, 16\l  %conv16.i = trunc i64 %shr66.i to i8\l  %36 = load i8*, i8** %next_output_byte3, align 8, !tbaa !40\l  %incdec.ptr.i = getelementptr inbounds i8, i8* %36, i64 1\l  store i8* %incdec.ptr.i, i8** %next_output_byte3, align 8, !tbaa !40\l  store i8 %conv16.i, i8* %36, align 1, !tbaa !13\l  %37 = load i64, i64* %free_in_buffer5, align 8, !tbaa !41\l  %dec.i = add i64 %37, -1\l  store i64 %dec.i, i64* %free_in_buffer5, align 8, !tbaa !41\l  %cmp17.i = icmp eq i64 %dec.i, 0\l  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i, !prof !42\l|{<s0>T|<s1>F}}"];
	Node0x55d94f0:s0 -> Node0x55ccfd0;
	Node0x55d94f0:s1 -> Node0x55cd0b0;
	Node0x55ccfd0 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i:                                      \l  %38 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i, align 8, !tbaa !32\l  %dest1.i181 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %38, i64 0, i32 5\l  %39 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i181, align 8, !tbaa !12\l  %empty_output_buffer.i182 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %39, i64 0, i32 3\l  %40 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i182, align 8, !tbaa\l... !43\l  %call.i183 = tail call i32 %40(%struct.jpeg_compress_struct* %38) #3\l  %tobool.i184 = icmp eq i32 %call.i183, 0\l  br i1 %tobool.i184, label %if.then.i188, label %dump_buffer.exit193, !prof\l... !45\l|{<s0>T|<s1>F}}"];
	Node0x55ccfd0:s0 -> Node0x55dc330;
	Node0x55ccfd0:s1 -> Node0x55dc440;
	Node0x55dc330 [shape=record, style = filled, fillcolor = blue, label="{if.then.i188:                                     \l  %41 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i, align 8, !tbaa !32\l  %err.i185 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %41, i64 0, i32 0\l  %42 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i185,\l... align 8, !tbaa !33\l  %msg_code.i186 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %42, i64 0, i32 5\l  store i32 22, i32* %msg_code.i186, align 8, !tbaa !34\l  %error_exit.i187 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %42, i64 0, i32 0\l  %43 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i187, align 8, !tbaa !36\l  %44 = bitcast %struct.jpeg_compress_struct* %41 to\l... %struct.jpeg_common_struct*\l  tail call void %43(%struct.jpeg_common_struct* %44) #3\l  br label %dump_buffer.exit193\l}"];
	Node0x55dc330 -> Node0x55dc440;
	Node0x55dc440 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit193:                              \l  %45 = bitcast %struct.jpeg_destination_mgr* %39 to \<2 x i64\>*\l  %46 = load \<2 x i64\>, \<2 x i64\>* %45, align 8, !tbaa !13\l  store \<2 x i64\> %46, \<2 x i64\>* %14, align 8, !tbaa !13\l  br label %if.end20.i\l}"];
	Node0x55dc440 -> Node0x55cd0b0;
	Node0x55cd0b0 [shape=record, style = filled, fillcolor = turquoise, label="{if.end20.i:                                       \l  %conv15.i = and i64 %shr66.i, 255\l  %cmp21.i = icmp eq i64 %conv15.i, 255\l  br i1 %cmp21.i, label %if.then23.i, label %if.end32.i, !prof !46\l|{<s0>T|<s1>F}}"];
	Node0x55cd0b0:s0 -> Node0x55af860;
	Node0x55cd0b0:s1 -> Node0x55d9610;
	Node0x55af860 [shape=record, style = filled, fillcolor = skyblue, label="{if.then23.i:                                      \l  %47 = load i8*, i8** %next_output_byte3, align 8, !tbaa !40\l  %incdec.ptr25.i = getelementptr inbounds i8, i8* %47, i64 1\l  store i8* %incdec.ptr25.i, i8** %next_output_byte3, align 8, !tbaa !40\l  store i8 0, i8* %47, align 1, !tbaa !13\l  %48 = load i64, i64* %free_in_buffer5, align 8, !tbaa !41\l  %dec27.i = add i64 %48, -1\l  store i64 %dec27.i, i64* %free_in_buffer5, align 8, !tbaa !41\l  %cmp28.i = icmp eq i64 %dec27.i, 0\l  br i1 %cmp28.i, label %if.then30.i, label %if.end32.i, !prof !47\l|{<s0>T|<s1>F}}"];
	Node0x55af860:s0 -> Node0x55ddb50;
	Node0x55af860:s1 -> Node0x55d9610;
	Node0x55ddb50 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i:                                      \l  %49 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i, align 8, !tbaa !32\l  %dest1.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %49, i64 0, i32 5\l  %50 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i, align 8, !tbaa !12\l  %empty_output_buffer.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %50, i64 0, i32 3\l  %51 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i, align 8, !tbaa !43\l  %call.i = tail call i32 %51(%struct.jpeg_compress_struct* %49) #3\l  %tobool.i107 = icmp eq i32 %call.i, 0\l  br i1 %tobool.i107, label %if.then.i111, label %dump_buffer.exit, !prof !45\l|{<s0>T|<s1>F}}"];
	Node0x55ddb50:s0 -> Node0x55de800;
	Node0x55ddb50:s1 -> Node0x55de910;
	Node0x55de800 [shape=record, style = filled, fillcolor = blue, label="{if.then.i111:                                     \l  %52 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i, align 8, !tbaa !32\l  %err.i108 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %52, i64 0, i32 0\l  %53 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i108,\l... align 8, !tbaa !33\l  %msg_code.i109 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %53, i64 0, i32 5\l  store i32 22, i32* %msg_code.i109, align 8, !tbaa !34\l  %error_exit.i110 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %53, i64 0, i32 0\l  %54 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i110, align 8, !tbaa !36\l  %55 = bitcast %struct.jpeg_compress_struct* %52 to\l... %struct.jpeg_common_struct*\l  tail call void %54(%struct.jpeg_common_struct* %55) #3\l  br label %dump_buffer.exit\l}"];
	Node0x55de800 -> Node0x55de910;
	Node0x55de910 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit:                                 \l  %56 = bitcast %struct.jpeg_destination_mgr* %50 to \<2 x i64\>*\l  %57 = load \<2 x i64\>, \<2 x i64\>* %56, align 8, !tbaa !13\l  store \<2 x i64\> %57, \<2 x i64\>* %15, align 8, !tbaa !13\l  br label %if.end32.i\l}"];
	Node0x55de910 -> Node0x55d9610;
	Node0x55d9610 [shape=record, style = filled, fillcolor = turquoise, label="{if.end32.i:                                       \l  %shl33.i = shl i64 %put_buffer.069.i, 8\l  %sub34.i = add nsw i32 %put_bits.068.i, -8\l  %cmp12.i = icmp sgt i32 %sub34.i, 7\l  br i1 %cmp12.i, label %while.body.i, label %while.end.loopexit.i, !prof !39\l|{<s0>T|<s1>F}}"];
	Node0x55d9610:s0 -> Node0x55d94f0;
	Node0x55d9610:s1 -> Node0x55df910;
	Node0x55df910 [shape=record, style = filled, fillcolor = turquoise, label="{while.end.loopexit.i:                             \l  %shl33.i.lcssa = phi i64 [ %shl33.i, %if.end32.i ]\l  %58 = and i32 %add.i, 7\l  br label %while.end.i\l}"];
	Node0x55df910 -> Node0x55c0ae0;
	Node0x55c0ae0 [shape=record, style = filled, fillcolor = green, label="{while.end.i:                                      \l  %put_buffer.0.lcssa.i = phi i64 [ %or.i, %if.end7.i ], [ %shl33.i.lcssa,\l... %while.end.loopexit.i ]\l  %put_bits.0.lcssa.i = phi i32 [ %add.i, %if.end7.i ], [ %58,\l... %while.end.loopexit.i ]\l  store i64 %put_buffer.0.lcssa.i, i64* %put_buffer11.i, align 8, !tbaa !38\l  store i32 %put_bits.0.lcssa.i, i32* %put_bits1.i, align 8, !tbaa !30\l  br label %emit_symbol.exit\l}"];
	Node0x55c0ae0 -> Node0x55c1cd0;
	Node0x55c1cd0 [shape=record, style = filled, fillcolor = green, label="{emit_symbol.exit:                                 \l  %tobool26 = icmp eq i32 %nbits.0.lcssa, 0\l  br i1 %tobool26, label %for.inc, label %if.end.i124, !prof !48\l|{<s0>T|<s1>F}}"];
	Node0x55c1cd0:s0 -> Node0x55cb400;
	Node0x55c1cd0:s1 -> Node0x55e03f0;
	Node0x55e03f0 [shape=record, style = filled, fillcolor = green, label="{if.end.i124:                                      \l  %59 = load i32, i32* %gather_statistics.i, align 8, !tbaa !24\l  %tobool.i123 = icmp eq i32 %59, 0\l  br i1 %tobool.i123, label %if.end7.i136, label %for.inc, !prof !49\l|{<s0>T|<s1>F}}"];
	Node0x55e03f0:s0 -> Node0x55e0690;
	Node0x55e03f0:s1 -> Node0x55cb400;
	Node0x55e0690 [shape=record, style = filled, fillcolor = green, label="{if.end7.i136:                                     \l  %60 = load i32, i32* %put_bits1.i, align 8, !tbaa !30\l  %conv.i114 = zext i32 %temp2.0 to i64\l  %sh_prom.i125 = zext i32 %nbits.0.lcssa to i64\l  %shl.i126 = shl i64 1, %sh_prom.i125\l  %sub.i127 = add i64 %shl.i126, 4294967295\l  %and.i128 = and i64 %sub.i127, %conv.i114\l  %add.i129 = add i32 %60, %nbits.0.lcssa\l  %sub8.i130 = sub nsw i32 24, %add.i129\l  %sh_prom9.i131 = zext i32 %sub8.i130 to i64\l  %shl10.i132 = shl i64 %and.i128, %sh_prom9.i131\l  %61 = load i64, i64* %put_buffer11.i, align 8, !tbaa !38\l  %or.i134 = or i64 %shl10.i132, %61\l  %cmp1267.i135 = icmp sgt i32 %add.i129, 7\l  br i1 %cmp1267.i135, label %while.body.i147.preheader, label\l... %while.end.i164, !prof !39\l|{<s0>T|<s1>F}}"];
	Node0x55e0690:s0 -> Node0x55e10c0;
	Node0x55e0690:s1 -> Node0x55e11e0;
	Node0x55e10c0 [shape=record, style = filled, fillcolor = turquoise, label="{while.body.i147.preheader:                        \l  br label %while.body.i147\l}"];
	Node0x55e10c0 -> Node0x55e1350;
	Node0x55e1350 [shape=record, style = filled, fillcolor = turquoise, label="{while.body.i147:                                  \l  %put_buffer.069.i140 = phi i64 [ %shl33.i157, %if.end32.i160 ], [ %or.i134,\l... %while.body.i147.preheader ]\l  %put_bits.068.i141 = phi i32 [ %sub34.i158, %if.end32.i160 ], [ %add.i129,\l... %while.body.i147.preheader ]\l  %shr66.i142 = lshr i64 %put_buffer.069.i140, 16\l  %conv16.i143 = trunc i64 %shr66.i142 to i8\l  %62 = load i8*, i8** %next_output_byte3, align 8, !tbaa !40\l  %incdec.ptr.i144 = getelementptr inbounds i8, i8* %62, i64 1\l  store i8* %incdec.ptr.i144, i8** %next_output_byte3, align 8, !tbaa !40\l  store i8 %conv16.i143, i8* %62, align 1, !tbaa !13\l  %63 = load i64, i64* %free_in_buffer5, align 8, !tbaa !41\l  %dec.i145 = add i64 %63, -1\l  store i64 %dec.i145, i64* %free_in_buffer5, align 8, !tbaa !41\l  %cmp17.i146 = icmp eq i64 %dec.i145, 0\l  br i1 %cmp17.i146, label %if.then19.i148, label %if.end20.i151, !prof !42\l|{<s0>T|<s1>F}}"];
	Node0x55e1350:s0 -> Node0x55e1d80;
	Node0x55e1350:s1 -> Node0x55e1e60;
	Node0x55e1d80 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i148:                                   \l  %64 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i, align 8, !tbaa !32\l  %dest1.i195 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %64, i64 0, i32 5\l  %65 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i195, align 8, !tbaa !12\l  %empty_output_buffer.i196 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %65, i64 0, i32 3\l  %66 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i196, align 8, !tbaa\l... !43\l  %call.i197 = tail call i32 %66(%struct.jpeg_compress_struct* %64) #3\l  %tobool.i198 = icmp eq i32 %call.i197, 0\l  br i1 %tobool.i198, label %if.then.i202, label %dump_buffer.exit207, !prof\l... !45\l|{<s0>T|<s1>F}}"];
	Node0x55e1d80:s0 -> Node0x55c8980;
	Node0x55e1d80:s1 -> Node0x55c8a90;
	Node0x55c8980 [shape=record, style = filled, fillcolor = blue, label="{if.then.i202:                                     \l  %67 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i, align 8, !tbaa !32\l  %err.i199 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %67, i64 0, i32 0\l  %68 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i199,\l... align 8, !tbaa !33\l  %msg_code.i200 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %68, i64 0, i32 5\l  store i32 22, i32* %msg_code.i200, align 8, !tbaa !34\l  %error_exit.i201 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %68, i64 0, i32 0\l  %69 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i201, align 8, !tbaa !36\l  %70 = bitcast %struct.jpeg_compress_struct* %67 to\l... %struct.jpeg_common_struct*\l  tail call void %69(%struct.jpeg_common_struct* %70) #3\l  br label %dump_buffer.exit207\l}"];
	Node0x55c8980 -> Node0x55c8a90;
	Node0x55c8a90 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit207:                              \l  %71 = bitcast %struct.jpeg_destination_mgr* %65 to \<2 x i64\>*\l  %72 = load \<2 x i64\>, \<2 x i64\>* %71, align 8, !tbaa !13\l  store \<2 x i64\> %72, \<2 x i64\>* %16, align 8, !tbaa !13\l  br label %if.end20.i151\l}"];
	Node0x55c8a90 -> Node0x55e1e60;
	Node0x55e1e60 [shape=record, style = filled, fillcolor = turquoise, label="{if.end20.i151:                                    \l  %conv15.i149 = and i64 %shr66.i142, 255\l  %cmp21.i150 = icmp eq i64 %conv15.i149, 255\l  br i1 %cmp21.i150, label %if.then23.i155, label %if.end32.i160, !prof !46\l|{<s0>T|<s1>F}}"];
	Node0x55e1e60:s0 -> Node0x55e3ab0;
	Node0x55e1e60:s1 -> Node0x55e1470;
	Node0x55e3ab0 [shape=record, style = filled, fillcolor = skyblue, label="{if.then23.i155:                                   \l  %73 = load i8*, i8** %next_output_byte3, align 8, !tbaa !40\l  %incdec.ptr25.i152 = getelementptr inbounds i8, i8* %73, i64 1\l  store i8* %incdec.ptr25.i152, i8** %next_output_byte3, align 8, !tbaa !40\l  store i8 0, i8* %73, align 1, !tbaa !13\l  %74 = load i64, i64* %free_in_buffer5, align 8, !tbaa !41\l  %dec27.i153 = add i64 %74, -1\l  store i64 %dec27.i153, i64* %free_in_buffer5, align 8, !tbaa !41\l  %cmp28.i154 = icmp eq i64 %dec27.i153, 0\l  br i1 %cmp28.i154, label %if.then30.i156, label %if.end32.i160, !prof !47\l|{<s0>T|<s1>F}}"];
	Node0x55e3ab0:s0 -> Node0x55e4600;
	Node0x55e3ab0:s1 -> Node0x55e1470;
	Node0x55e4600 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i156:                                   \l  %75 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i, align 8, !tbaa !32\l  %dest1.i167 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %75, i64 0, i32 5\l  %76 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i167, align 8, !tbaa !12\l  %empty_output_buffer.i168 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %76, i64 0, i32 3\l  %77 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i168, align 8, !tbaa\l... !43\l  %call.i169 = tail call i32 %77(%struct.jpeg_compress_struct* %75) #3\l  %tobool.i170 = icmp eq i32 %call.i169, 0\l  br i1 %tobool.i170, label %if.then.i174, label %dump_buffer.exit179, !prof\l... !45\l|{<s0>T|<s1>F}}"];
	Node0x55e4600:s0 -> Node0x55e51b0;
	Node0x55e4600:s1 -> Node0x55e52c0;
	Node0x55e51b0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i174:                                     \l  %78 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i, align 8, !tbaa !32\l  %err.i171 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %78, i64 0, i32 0\l  %79 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i171,\l... align 8, !tbaa !33\l  %msg_code.i172 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %79, i64 0, i32 5\l  store i32 22, i32* %msg_code.i172, align 8, !tbaa !34\l  %error_exit.i173 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %79, i64 0, i32 0\l  %80 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i173, align 8, !tbaa !36\l  %81 = bitcast %struct.jpeg_compress_struct* %78 to\l... %struct.jpeg_common_struct*\l  tail call void %80(%struct.jpeg_common_struct* %81) #3\l  br label %dump_buffer.exit179\l}"];
	Node0x55e51b0 -> Node0x55e52c0;
	Node0x55e52c0 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit179:                              \l  %82 = bitcast %struct.jpeg_destination_mgr* %76 to \<2 x i64\>*\l  %83 = load \<2 x i64\>, \<2 x i64\>* %82, align 8, !tbaa !13\l  store \<2 x i64\> %83, \<2 x i64\>* %17, align 8, !tbaa !13\l  br label %if.end32.i160\l}"];
	Node0x55e52c0 -> Node0x55e1470;
	Node0x55e1470 [shape=record, style = filled, fillcolor = turquoise, label="{if.end32.i160:                                    \l  %shl33.i157 = shl i64 %put_buffer.069.i140, 8\l  %sub34.i158 = add nsw i32 %put_bits.068.i141, -8\l  %cmp12.i159 = icmp sgt i32 %sub34.i158, 7\l  br i1 %cmp12.i159, label %while.body.i147, label %while.end.loopexit.i161,\l... !prof !39\l|{<s0>T|<s1>F}}"];
	Node0x55e1470:s0 -> Node0x55e1350;
	Node0x55e1470:s1 -> Node0x55e5c80;
	Node0x55e5c80 [shape=record, style = filled, fillcolor = turquoise, label="{while.end.loopexit.i161:                          \l  %shl33.i157.lcssa = phi i64 [ %shl33.i157, %if.end32.i160 ]\l  %84 = and i32 %add.i129, 7\l  br label %while.end.i164\l}"];
	Node0x55e5c80 -> Node0x55e11e0;
	Node0x55e11e0 [shape=record, style = filled, fillcolor = green, label="{while.end.i164:                                   \l  %put_buffer.0.lcssa.i162 = phi i64 [ %or.i134, %if.end7.i136 ], [\l... %shl33.i157.lcssa, %while.end.loopexit.i161 ]\l  %put_bits.0.lcssa.i163 = phi i32 [ %add.i129, %if.end7.i136 ], [ %84,\l... %while.end.loopexit.i161 ]\l  store i64 %put_buffer.0.lcssa.i162, i64* %put_buffer11.i, align 8, !tbaa !38\l  store i32 %put_bits.0.lcssa.i163, i32* %put_bits1.i, align 8, !tbaa !30\l  br label %for.inc\l}"];
	Node0x55e11e0 -> Node0x55cb400;
	Node0x55cb400 [shape=record, style = filled, fillcolor = green, label="{for.inc:                                          \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %85 = load i32, i32* %blocks_in_MCU, align 8, !tbaa !16\l  %86 = sext i32 %85 to i64\l  %cmp8 = icmp slt i64 %indvars.iv.next, %86\l  br i1 %cmp8, label %for.body, label %for.end.loopexit, !prof !17\l|{<s0>T|<s1>F}}"];
	Node0x55cb400:s0 -> Node0x55cb2b0;
	Node0x55cb400:s1 -> Node0x55dad50;
	Node0x55dad50 [shape=record, style = filled, fillcolor = turquoise, label="{for.end.loopexit:                                 \l  br label %for.end\l}"];
	Node0x55dad50 -> Node0x55cab10;
	Node0x55cab10 [shape=record, style = filled, fillcolor = green, label="{for.end:                                          \l  %87 = bitcast %struct.jpeg_destination_mgr** %dest to \<2 x i64\>**\l  %88 = load \<2 x i64\>*, \<2 x i64\>** %87, align 8, !tbaa !12\l  %89 = bitcast i8** %next_output_byte3 to \<2 x i64\>*\l  %90 = load \<2 x i64\>, \<2 x i64\>* %89, align 8, !tbaa !13\l  store \<2 x i64\> %90, \<2 x i64\>* %88, align 8, !tbaa !13\l  %91 = load i32, i32* %restart_interval, align 8, !tbaa !14\l  %tobool37 = icmp eq i32 %91, 0\l  br i1 %tobool37, label %if.end51, label %if.then38, !prof !15\l|{<s0>T|<s1>F}}"];
	Node0x55cab10:s0 -> Node0x55db110;
	Node0x55cab10:s1 -> Node0x55db1f0;
	Node0x55db1f0 [shape=record, style = filled, fillcolor = blue, label="{if.then38:                                        \l  %restarts_to_go39 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 12\l  %92 = bitcast i32* %restarts_to_go39 to i64*\l  %93 = load i64, i64* %92, align 8\l  %94 = trunc i64 %93 to i32\l  %cmp40 = icmp eq i32 %94, 0\l  br i1 %cmp40, label %if.then42, label %if.end48\l|{<s0>T|<s1>F}}"];
	Node0x55db1f0:s0 -> Node0x55ceea0;
	Node0x55db1f0:s1 -> Node0x55cef50;
	Node0x55ceea0 [shape=record, style = filled, fillcolor = blue, label="{if.then42:                                        \l  %95 = lshr i64 %93, 32\l  %96 = trunc i64 %95 to i32\l  store i32 %91, i32* %restarts_to_go39, align 8, !tbaa !50\l  %next_restart_num45 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 13\l  %inc46 = add nsw i32 %96, 1\l  %and = and i32 %inc46, 7\l  store i32 %and, i32* %next_restart_num45, align 4, !tbaa !51\l  br label %if.end48\l}"];
	Node0x55ceea0 -> Node0x55cef50;
	Node0x55cef50 [shape=record, style = filled, fillcolor = blue, label="{if.end48:                                         \l  %97 = phi i32 [ %91, %if.then42 ], [ %94, %if.then38 ]\l  %dec50 = add i32 %97, -1\l  store i32 %dec50, i32* %restarts_to_go39, align 8, !tbaa !50\l  br label %if.end51\l}"];
	Node0x55cef50 -> Node0x55db110;
	Node0x55db110 [shape=record, style = filled, fillcolor = green, label="{if.end51:                                         \l  ret i32 1\l}"];
}
