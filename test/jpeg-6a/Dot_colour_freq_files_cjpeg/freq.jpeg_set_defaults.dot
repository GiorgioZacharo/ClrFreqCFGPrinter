digraph "CFG for 'jpeg_set_defaults' function" {
	label="CFG for 'jpeg_set_defaults' function";

	Node0x6604270 [shape=record, style = filled, fillcolor = skyblue, label="{entry:\l  %global_state = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 4\l  %0 = load i32, i32* %global_state, align 4, !tbaa !3\l  %cmp = icmp eq i32 %0, 100\l  br i1 %cmp, label %if.end, label %if.then, !prof !11\l|{<s0>T|<s1>F}}"];
	Node0x6604270:s0 -> Node0x6604a70;
	Node0x6604270:s1 -> Node0x6604b40;
	Node0x6604b40 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %1 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !12\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 5\l  store i32 18, i32* %msg_code, align 8, !tbaa !13\l  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 6, i32 0, i64 0\l  store i32 %0, i32* %arrayidx, align 4, !tbaa !16\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 0\l  %2 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !17\l  %3 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %2(%struct.jpeg_common_struct* %3) #4\l  br label %if.end\l}"];
	Node0x6604b40 -> Node0x6604a70;
	Node0x6604a70 [shape=record, style = filled, fillcolor = skyblue, label="{if.end:                                           \l  %comp_info = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14\l  %4 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !18\l  %cmp5 = icmp eq %struct.jpeg_component_info* %4, null\l  br i1 %cmp5, label %if.then6, label %if.end8, !prof !11\l|{<s0>T|<s1>F}}"];
	Node0x6604a70:s0 -> Node0x6606970;
	Node0x6604a70:s1 -> Node0x66040c0;
	Node0x6606970 [shape=record, style = filled, fillcolor = blue, label="{if.then6:                                         \l  %mem = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1\l  %5 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !19\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %5, i64 0, i32 0\l  %6 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !20\l  %7 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %6(%struct.jpeg_common_struct* %7, i32 0, i64 960) #4\l  %8 = bitcast %struct.jpeg_component_info** %comp_info to i8**\l  store i8* %call, i8** %8, align 8, !tbaa !18\l  br label %if.end8\l}"];
	Node0x6606970 -> Node0x66040c0;
	Node0x66040c0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end8:                                          \l  %data_precision = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 11\l  store i32 8, i32* %data_precision, align 8, !tbaa !22\l  %arrayidx.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 15, i64 0\l  %9 = load i32, i32* %global_state, align 4, !tbaa !3\l  %cmp.i = icmp eq i32 %9, 100\l  br i1 %cmp.i, label %if.end.i, label %if.then.i, !prof !23\l|{<s0>T|<s1>F}}"];
	Node0x66040c0:s0 -> Node0x66084c0;
	Node0x66040c0:s1 -> Node0x66085a0;
	Node0x66085a0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i:                                        \l  %err.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align\l... 8, !tbaa !12\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %10, i64 0, i32 5\l  store i32 18, i32* %msg_code.i, align 8, !tbaa !13\l  %arrayidx4.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %10, i64 0, i32 6, i32 0, i64 0\l  store i32 %9, i32* %arrayidx4.i, align 4, !tbaa !16\l  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %10, i64 0, i32 0\l  %11 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !17\l  %12 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %11(%struct.jpeg_common_struct* %12) #4\l  br label %if.end.i\l}"];
	Node0x66085a0 -> Node0x66084c0;
	Node0x66084c0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end.i:                                         \l  %13 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %arrayidx.i, align 8,\l... !tbaa !24\l  %cmp6.i = icmp eq %struct.JQUANT_TBL* %13, null\l  br i1 %cmp6.i, label %if.then7.i, label %for.cond.preheader.i, !prof !25\l|{<s0>T|<s1>F}}"];
	Node0x66084c0:s0 -> Node0x66095f0;
	Node0x66084c0:s1 -> Node0x66096d0;
	Node0x66095f0 [shape=record, style = filled, fillcolor = blue, label="{if.then7.i:                                       \l  %14 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call.i = tail call %struct.JQUANT_TBL*\l... @jpeg_alloc_quant_table(%struct.jpeg_common_struct* %14) #4\l  store %struct.JQUANT_TBL* %call.i, %struct.JQUANT_TBL** %arrayidx.i, align\l... 8, !tbaa !24\l  br label %for.cond.preheader.i\l}"];
	Node0x66095f0 -> Node0x66096d0;
	Node0x66096d0 [shape=record, style = filled, fillcolor = skyblue, label="{for.cond.preheader.i:                             \l  %15 = phi %struct.JQUANT_TBL* [ %call.i, %if.then7.i ], [ %13, %if.end.i ]\l  br label %for.body.us.i\l}"];
	Node0x66096d0 -> Node0x660a0c0;
	Node0x660a0c0 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us.i:                                    \l  %indvars.iv49.i = phi i64 [ 0, %for.cond.preheader.i ], [\l... %indvars.iv.next50.i.1, %for.body.us.i ]\l  %arrayidx11.us.i = getelementptr inbounds [64 x i32], [64 x i32]*\l... @jpeg_set_linear_quality.std_luminance_quant_tbl, i64 0, i64 %indvars.iv49.i\l  %16 = load i32, i32* %arrayidx11.us.i, align 8, !tbaa !16\l  %conv.us.i = zext i32 %16 to i64\l  %mul.us.i = mul nuw nsw i64 %conv.us.i, 50\l  %add.us.i = add nuw nsw i64 %mul.us.i, 50\l  %div.us.i = udiv i64 %add.us.i, 100\l  %17 = icmp ult i64 %add.us.i, 100\l  %.div.us.i = select i1 %17, i64 1, i64 %div.us.i\l  %18 = icmp ult i64 %.div.us.i, 255\l  %19 = select i1 %18, i64 %.div.us.i, i64 255\l  %20 = trunc i64 %19 to i16\l  %arrayidx27.us.i = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %15, i64 0, i32 0, i64 %indvars.iv49.i\l  store i16 %20, i16* %arrayidx27.us.i, align 2, !tbaa !26\l  %indvars.iv.next50.i = or i64 %indvars.iv49.i, 1\l  %arrayidx11.us.i.1 = getelementptr inbounds [64 x i32], [64 x i32]*\l... @jpeg_set_linear_quality.std_luminance_quant_tbl, i64 0, i64\l... %indvars.iv.next50.i\l  %21 = load i32, i32* %arrayidx11.us.i.1, align 4, !tbaa !16\l  %conv.us.i.1 = zext i32 %21 to i64\l  %mul.us.i.1 = mul nuw nsw i64 %conv.us.i.1, 50\l  %add.us.i.1 = add nuw nsw i64 %mul.us.i.1, 50\l  %div.us.i.1 = udiv i64 %add.us.i.1, 100\l  %22 = icmp ult i64 %add.us.i.1, 100\l  %.div.us.i.1 = select i1 %22, i64 1, i64 %div.us.i.1\l  %23 = icmp ult i64 %.div.us.i.1, 255\l  %24 = select i1 %23, i64 %.div.us.i.1, i64 255\l  %25 = trunc i64 %24 to i16\l  %arrayidx27.us.i.1 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %15, i64 0, i32 0, i64 %indvars.iv.next50.i\l  store i16 %25, i16* %arrayidx27.us.i.1, align 2, !tbaa !26\l  %indvars.iv.next50.i.1 = add nsw i64 %indvars.iv49.i, 2\l  %exitcond51.i.1 = icmp eq i64 %indvars.iv.next50.i.1, 64\l  br i1 %exitcond51.i.1, label %jpeg_add_quant_table.exit, label\l... %for.body.us.i, !prof !27\l|{<s0>T|<s1>F}}"];
	Node0x660a0c0:s0 -> Node0x660a140;
	Node0x660a0c0:s1 -> Node0x660a0c0;
	Node0x660a140 [shape=record, style = filled, fillcolor = skyblue, label="{jpeg_add_quant_table.exit:                        \l  %sent_table.i = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %15, i64 0, i32 1\l  store i32 0, i32* %sent_table.i, align 4, !tbaa !28\l  %arrayidx.i57 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 15, i64 1\l  %26 = load i32, i32* %global_state, align 4, !tbaa !3\l  %cmp.i59 = icmp eq i32 %26, 100\l  br i1 %cmp.i59, label %if.end.i66, label %if.then.i64, !prof !23\l|{<s0>T|<s1>F}}"];
	Node0x660a140:s0 -> Node0x65f84c0;
	Node0x660a140:s1 -> Node0x65f85a0;
	Node0x65f85a0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i64:                                      \l  %err.i60 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i60, align\l... 8, !tbaa !12\l  %msg_code.i61 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %27, i64 0, i32 5\l  store i32 18, i32* %msg_code.i61, align 8, !tbaa !13\l  %arrayidx4.i62 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %27, i64 0, i32 6, i32 0, i64 0\l  store i32 %26, i32* %arrayidx4.i62, align 4, !tbaa !16\l  %error_exit.i63 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %27, i64 0, i32 0\l  %28 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i63, align 8, !tbaa !17\l  %29 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %28(%struct.jpeg_common_struct* %29) #4\l  br label %if.end.i66\l}"];
	Node0x65f85a0 -> Node0x65f84c0;
	Node0x65f84c0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end.i66:                                       \l  %30 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %arrayidx.i57, align 8,\l... !tbaa !24\l  %cmp6.i65 = icmp eq %struct.JQUANT_TBL* %30, null\l  br i1 %cmp6.i65, label %if.then7.i68, label %for.cond.preheader.i69, !prof\l... !25\l|{<s0>T|<s1>F}}"];
	Node0x65f84c0:s0 -> Node0x660dbe0;
	Node0x65f84c0:s1 -> Node0x660dcf0;
	Node0x660dbe0 [shape=record, style = filled, fillcolor = blue, label="{if.then7.i68:                                     \l  %31 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call.i67 = tail call %struct.JQUANT_TBL*\l... @jpeg_alloc_quant_table(%struct.jpeg_common_struct* %31) #4\l  store %struct.JQUANT_TBL* %call.i67, %struct.JQUANT_TBL** %arrayidx.i57,\l... align 8, !tbaa !24\l  br label %for.cond.preheader.i69\l}"];
	Node0x660dbe0 -> Node0x660dcf0;
	Node0x660dcf0 [shape=record, style = filled, fillcolor = skyblue, label="{for.cond.preheader.i69:                           \l  %32 = phi %struct.JQUANT_TBL* [ %call.i67, %if.then7.i68 ], [ %30,\l... %if.end.i66 ]\l  br label %for.body.us.i81\l}"];
	Node0x660dcf0 -> Node0x660a490;
	Node0x660a490 [shape=record, style = filled, fillcolor = cyan, label="{for.body.us.i81:                                  \l  %indvars.iv49.i70 = phi i64 [ 0, %for.cond.preheader.i69 ], [\l... %indvars.iv.next50.i79.1, %for.body.us.i81 ]\l  %arrayidx11.us.i71 = getelementptr inbounds [64 x i32], [64 x i32]*\l... @jpeg_set_linear_quality.std_chrominance_quant_tbl, i64 0, i64\l... %indvars.iv49.i70\l  %33 = load i32, i32* %arrayidx11.us.i71, align 8, !tbaa !16\l  %conv.us.i72 = zext i32 %33 to i64\l  %mul.us.i73 = mul nuw nsw i64 %conv.us.i72, 50\l  %add.us.i74 = add nuw nsw i64 %mul.us.i73, 50\l  %div.us.i75 = udiv i64 %add.us.i74, 100\l  %34 = icmp ult i64 %add.us.i74, 100\l  %.div.us.i77 = select i1 %34, i64 1, i64 %div.us.i75\l  %35 = icmp ult i64 %.div.us.i77, 255\l  %36 = select i1 %35, i64 %.div.us.i77, i64 255\l  %37 = trunc i64 %36 to i16\l  %arrayidx27.us.i78 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %32, i64 0, i32 0, i64 %indvars.iv49.i70\l  store i16 %37, i16* %arrayidx27.us.i78, align 2, !tbaa !26\l  %indvars.iv.next50.i79 = or i64 %indvars.iv49.i70, 1\l  %arrayidx11.us.i71.1 = getelementptr inbounds [64 x i32], [64 x i32]*\l... @jpeg_set_linear_quality.std_chrominance_quant_tbl, i64 0, i64\l... %indvars.iv.next50.i79\l  %38 = load i32, i32* %arrayidx11.us.i71.1, align 4, !tbaa !16\l  %conv.us.i72.1 = zext i32 %38 to i64\l  %mul.us.i73.1 = mul nuw nsw i64 %conv.us.i72.1, 50\l  %add.us.i74.1 = add nuw nsw i64 %mul.us.i73.1, 50\l  %div.us.i75.1 = udiv i64 %add.us.i74.1, 100\l  %39 = icmp ult i64 %add.us.i74.1, 100\l  %.div.us.i77.1 = select i1 %39, i64 1, i64 %div.us.i75.1\l  %40 = icmp ult i64 %.div.us.i77.1, 255\l  %41 = select i1 %40, i64 %.div.us.i77.1, i64 255\l  %42 = trunc i64 %41 to i16\l  %arrayidx27.us.i78.1 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %32, i64 0, i32 0, i64 %indvars.iv.next50.i79\l  store i16 %42, i16* %arrayidx27.us.i78.1, align 2, !tbaa !26\l  %indvars.iv.next50.i79.1 = add nsw i64 %indvars.iv49.i70, 2\l  %exitcond51.i80.1 = icmp eq i64 %indvars.iv.next50.i79.1, 64\l  br i1 %exitcond51.i80.1, label %jpeg_add_quant_table.exit83, label\l... %for.body.us.i81, !prof !27\l|{<s0>T|<s1>F}}"];
	Node0x660a490:s0 -> Node0x66106b0;
	Node0x660a490:s1 -> Node0x660a490;
	Node0x66106b0 [shape=record, style = filled, fillcolor = skyblue, label="{jpeg_add_quant_table.exit83:                      \l  %sent_table.i82 = getelementptr inbounds %struct.JQUANT_TBL,\l... %struct.JQUANT_TBL* %32, i64 0, i32 1\l  store i32 0, i32* %sent_table.i82, align 4, !tbaa !28\l  %arrayidx.i56 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 0\l  %43 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx.i56, align 8,\l... !tbaa !24\l  %cmp.i.i = icmp eq %struct.JHUFF_TBL* %43, null\l  br i1 %cmp.i.i, label %if.then.i.i, label %add_huff_table.exit.i, !prof !23\l|{<s0>T|<s1>F}}"];
	Node0x66106b0:s0 -> Node0x6610a50;
	Node0x66106b0:s1 -> Node0x6610b60;
	Node0x6610a50 [shape=record, style = filled, fillcolor = blue, label="{if.then.i.i:                                      \l  %44 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call.i.i = tail call %struct.JHUFF_TBL*\l... @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %44) #4\l  store %struct.JHUFF_TBL* %call.i.i, %struct.JHUFF_TBL** %arrayidx.i56, align\l... 8, !tbaa !24\l  br label %add_huff_table.exit.i\l}"];
	Node0x6610a50 -> Node0x6610b60;
	Node0x6610b60 [shape=record, style = filled, fillcolor = skyblue, label="{add_huff_table.exit.i:                            \l  %45 = phi %struct.JHUFF_TBL* [ %call.i.i, %if.then.i.i ], [ %43,\l... %jpeg_add_quant_table.exit83 ]\l  %arraydecay.i.i = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %45, i64 0, i32 0, i64 0\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay.i.i, i8* nonnull\l... getelementptr inbounds ([17 x i8], [17 x i8]*\l... @std_huff_tables.bits_dc_luminance, i64 0, i64 0), i64 17, i32 1, i1 false) #4\l  %46 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx.i56, align 8,\l... !tbaa !24\l  %arraydecay2.i.i = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %46, i64 0, i32 1, i64 0\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay2.i.i, i8* nonnull\l... getelementptr inbounds ([12 x i8], [12 x i8]*\l... @std_huff_tables.val_dc_luminance, i64 0, i64 0), i64 256, i32 1, i1 false) #4\l  %47 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx.i56, align 8,\l... !tbaa !24\l  %sent_table.i.i = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %47, i64 0, i32 2\l  store i32 0, i32* %sent_table.i.i, align 4, !tbaa !30\l  %arrayidx1.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 17, i64 0\l  %48 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx1.i, align 8,\l... !tbaa !24\l  %cmp.i13.i = icmp eq %struct.JHUFF_TBL* %48, null\l  br i1 %cmp.i13.i, label %if.then.i15.i, label %add_huff_table.exit19.i,\l... !prof !23\l|{<s0>T|<s1>F}}"];
	Node0x6610b60:s0 -> Node0x6611fa0;
	Node0x6610b60:s1 -> Node0x66120b0;
	Node0x6611fa0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i15.i:                                    \l  %49 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call.i14.i = tail call %struct.JHUFF_TBL*\l... @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %49) #4\l  store %struct.JHUFF_TBL* %call.i14.i, %struct.JHUFF_TBL** %arrayidx1.i,\l... align 8, !tbaa !24\l  br label %add_huff_table.exit19.i\l}"];
	Node0x6611fa0 -> Node0x66120b0;
	Node0x66120b0 [shape=record, style = filled, fillcolor = skyblue, label="{add_huff_table.exit19.i:                          \l  %50 = phi %struct.JHUFF_TBL* [ %call.i14.i, %if.then.i15.i ], [ %48,\l... %add_huff_table.exit.i ]\l  %arraydecay.i16.i = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %50, i64 0, i32 0, i64 0\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay.i16.i, i8* nonnull\l... getelementptr inbounds ([17 x i8], [17 x i8]*\l... @std_huff_tables.bits_ac_luminance, i64 0, i64 0), i64 17, i32 1, i1 false) #4\l  %51 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx1.i, align 8,\l... !tbaa !24\l  %arraydecay2.i17.i = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %51, i64 0, i32 1, i64 0\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay2.i17.i, i8*\l... nonnull getelementptr inbounds ([162 x i8], [162 x i8]*\l... @std_huff_tables.val_ac_luminance, i64 0, i64 0), i64 256, i32 1, i1 false) #4\l  %52 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx1.i, align 8,\l... !tbaa !24\l  %sent_table.i18.i = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %52, i64 0, i32 2\l  store i32 0, i32* %sent_table.i18.i, align 4, !tbaa !30\l  %arrayidx3.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 1\l  %53 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx3.i, align 8,\l... !tbaa !24\l  %cmp.i20.i = icmp eq %struct.JHUFF_TBL* %53, null\l  br i1 %cmp.i20.i, label %if.then.i22.i, label %add_huff_table.exit26.i,\l... !prof !23\l|{<s0>T|<s1>F}}"];
	Node0x66120b0:s0 -> Node0x6613a80;
	Node0x66120b0:s1 -> Node0x6613b90;
	Node0x6613a80 [shape=record, style = filled, fillcolor = blue, label="{if.then.i22.i:                                    \l  %54 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call.i21.i = tail call %struct.JHUFF_TBL*\l... @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %54) #4\l  store %struct.JHUFF_TBL* %call.i21.i, %struct.JHUFF_TBL** %arrayidx3.i,\l... align 8, !tbaa !24\l  br label %add_huff_table.exit26.i\l}"];
	Node0x6613a80 -> Node0x6613b90;
	Node0x6613b90 [shape=record, style = filled, fillcolor = skyblue, label="{add_huff_table.exit26.i:                          \l  %55 = phi %struct.JHUFF_TBL* [ %call.i21.i, %if.then.i22.i ], [ %53,\l... %add_huff_table.exit19.i ]\l  %arraydecay.i23.i = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %55, i64 0, i32 0, i64 0\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay.i23.i, i8* nonnull\l... getelementptr inbounds ([17 x i8], [17 x i8]*\l... @std_huff_tables.bits_dc_chrominance, i64 0, i64 0), i64 17, i32 1, i1 false)\l... #4\l  %56 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx3.i, align 8,\l... !tbaa !24\l  %arraydecay2.i24.i = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %56, i64 0, i32 1, i64 0\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay2.i24.i, i8*\l... nonnull getelementptr inbounds ([12 x i8], [12 x i8]*\l... @std_huff_tables.val_dc_chrominance, i64 0, i64 0), i64 256, i32 1, i1 false)\l... #4\l  %57 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx3.i, align 8,\l... !tbaa !24\l  %sent_table.i25.i = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %57, i64 0, i32 2\l  store i32 0, i32* %sent_table.i25.i, align 4, !tbaa !30\l  %arrayidx5.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 17, i64 1\l  %58 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx5.i, align 8,\l... !tbaa !24\l  %cmp.i27.i = icmp eq %struct.JHUFF_TBL* %58, null\l  br i1 %cmp.i27.i, label %if.then.i29.i, label %std_huff_tables.exit, !prof\l... !23\l|{<s0>T|<s1>F}}"];
	Node0x6613b90:s0 -> Node0x6614cd0;
	Node0x6613b90:s1 -> Node0x6614de0;
	Node0x6614cd0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i29.i:                                    \l  %59 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call.i28.i = tail call %struct.JHUFF_TBL*\l... @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %59) #4\l  store %struct.JHUFF_TBL* %call.i28.i, %struct.JHUFF_TBL** %arrayidx5.i,\l... align 8, !tbaa !24\l  br label %std_huff_tables.exit\l}"];
	Node0x6614cd0 -> Node0x6614de0;
	Node0x6614de0 [shape=record, style = filled, fillcolor = skyblue, label="{std_huff_tables.exit:                             \l  %60 = phi %struct.JHUFF_TBL* [ %call.i28.i, %if.then.i29.i ], [ %58,\l... %add_huff_table.exit26.i ]\l  %arraydecay.i30.i = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %60, i64 0, i32 0, i64 0\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay.i30.i, i8* nonnull\l... getelementptr inbounds ([17 x i8], [17 x i8]*\l... @std_huff_tables.bits_ac_chrominance, i64 0, i64 0), i64 17, i32 1, i1 false)\l... #4\l  %61 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx5.i, align 8,\l... !tbaa !24\l  %arraydecay2.i31.i = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %61, i64 0, i32 1, i64 0\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay2.i31.i, i8*\l... nonnull getelementptr inbounds ([162 x i8], [162 x i8]*\l... @std_huff_tables.val_ac_chrominance, i64 0, i64 0), i64 256, i32 1, i1 false)\l... #4\l  %62 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx5.i, align 8,\l... !tbaa !24\l  %sent_table.i32.i = getelementptr inbounds %struct.JHUFF_TBL,\l... %struct.JHUFF_TBL* %62, i64 0, i32 2\l  store i32 0, i32* %sent_table.i32.i, align 4, !tbaa !30\l  %arrayidx10 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 0\l  store i8 0, i8* %arrayidx10, align 1, !tbaa !32\l  %arrayidx12 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 0\l  store i8 1, i8* %arrayidx12, align 1, !tbaa !32\l  %arrayidx14 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 0\l  store i8 5, i8* %arrayidx14, align 1, !tbaa !32\l  %arrayidx10.1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 1\l  store i8 0, i8* %arrayidx10.1, align 1, !tbaa !32\l  %arrayidx12.1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 1\l  store i8 1, i8* %arrayidx12.1, align 1, !tbaa !32\l  %arrayidx14.1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 1\l  store i8 5, i8* %arrayidx14.1, align 1, !tbaa !32\l  %arrayidx10.2 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 2\l  store i8 0, i8* %arrayidx10.2, align 1, !tbaa !32\l  %arrayidx12.2 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 2\l  store i8 1, i8* %arrayidx12.2, align 1, !tbaa !32\l  %arrayidx14.2 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 2\l  store i8 5, i8* %arrayidx14.2, align 1, !tbaa !32\l  %arrayidx10.3 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 3\l  store i8 0, i8* %arrayidx10.3, align 1, !tbaa !32\l  %arrayidx12.3 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 3\l  store i8 1, i8* %arrayidx12.3, align 1, !tbaa !32\l  %arrayidx14.3 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 3\l  store i8 5, i8* %arrayidx14.3, align 1, !tbaa !32\l  %arrayidx10.4 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 4\l  store i8 0, i8* %arrayidx10.4, align 1, !tbaa !32\l  %arrayidx12.4 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 4\l  store i8 1, i8* %arrayidx12.4, align 1, !tbaa !32\l  %arrayidx14.4 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 4\l  store i8 5, i8* %arrayidx14.4, align 1, !tbaa !32\l  %arrayidx10.5 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 5\l  store i8 0, i8* %arrayidx10.5, align 1, !tbaa !32\l  %arrayidx12.5 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 5\l  store i8 1, i8* %arrayidx12.5, align 1, !tbaa !32\l  %arrayidx14.5 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 5\l  store i8 5, i8* %arrayidx14.5, align 1, !tbaa !32\l  %arrayidx10.6 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 6\l  store i8 0, i8* %arrayidx10.6, align 1, !tbaa !32\l  %arrayidx12.6 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 6\l  store i8 1, i8* %arrayidx12.6, align 1, !tbaa !32\l  %arrayidx14.6 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 6\l  store i8 5, i8* %arrayidx14.6, align 1, !tbaa !32\l  %arrayidx10.7 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 7\l  store i8 0, i8* %arrayidx10.7, align 1, !tbaa !32\l  %arrayidx12.7 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 7\l  store i8 1, i8* %arrayidx12.7, align 1, !tbaa !32\l  %arrayidx14.7 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 7\l  store i8 5, i8* %arrayidx14.7, align 1, !tbaa !32\l  %arrayidx10.8 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 8\l  store i8 0, i8* %arrayidx10.8, align 1, !tbaa !32\l  %arrayidx12.8 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 8\l  store i8 1, i8* %arrayidx12.8, align 1, !tbaa !32\l  %arrayidx14.8 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 8\l  store i8 5, i8* %arrayidx14.8, align 1, !tbaa !32\l  %arrayidx10.9 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 9\l  store i8 0, i8* %arrayidx10.9, align 1, !tbaa !32\l  %arrayidx12.9 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 9\l  store i8 1, i8* %arrayidx12.9, align 1, !tbaa !32\l  %arrayidx14.9 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 9\l  store i8 5, i8* %arrayidx14.9, align 1, !tbaa !32\l  %arrayidx10.10 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 10\l  store i8 0, i8* %arrayidx10.10, align 1, !tbaa !32\l  %arrayidx12.10 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 10\l  store i8 1, i8* %arrayidx12.10, align 1, !tbaa !32\l  %arrayidx14.10 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 10\l  store i8 5, i8* %arrayidx14.10, align 1, !tbaa !32\l  %arrayidx10.11 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 11\l  store i8 0, i8* %arrayidx10.11, align 1, !tbaa !32\l  %arrayidx12.11 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 11\l  store i8 1, i8* %arrayidx12.11, align 1, !tbaa !32\l  %arrayidx14.11 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 11\l  store i8 5, i8* %arrayidx14.11, align 1, !tbaa !32\l  %arrayidx10.12 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 12\l  store i8 0, i8* %arrayidx10.12, align 1, !tbaa !32\l  %arrayidx12.12 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 12\l  store i8 1, i8* %arrayidx12.12, align 1, !tbaa !32\l  %arrayidx14.12 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 12\l  store i8 5, i8* %arrayidx14.12, align 1, !tbaa !32\l  %arrayidx10.13 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 13\l  store i8 0, i8* %arrayidx10.13, align 1, !tbaa !32\l  %arrayidx12.13 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 13\l  store i8 1, i8* %arrayidx12.13, align 1, !tbaa !32\l  %arrayidx14.13 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 13\l  store i8 5, i8* %arrayidx14.13, align 1, !tbaa !32\l  %arrayidx10.14 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 14\l  store i8 0, i8* %arrayidx10.14, align 1, !tbaa !32\l  %arrayidx12.14 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 14\l  store i8 1, i8* %arrayidx12.14, align 1, !tbaa !32\l  %arrayidx14.14 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 14\l  store i8 5, i8* %arrayidx14.14, align 1, !tbaa !32\l  %arrayidx10.15 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 18, i64 15\l  store i8 0, i8* %arrayidx10.15, align 1, !tbaa !32\l  %arrayidx12.15 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 19, i64 15\l  store i8 1, i8* %arrayidx12.15, align 1, !tbaa !32\l  %arrayidx14.15 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 20, i64 15\l  store i8 5, i8* %arrayidx14.15, align 1, !tbaa !32\l  %scan_info = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 22\l  %num_scans = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 21\l  store i32 0, i32* %num_scans, align 8, !tbaa !33\l  %optimize_coding = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 25\l  %63 = bitcast %struct.jpeg_scan_info** %scan_info to i8*\l  call void @llvm.memset.p0i8.i64(i8* %63, i8 0, i64 16, i32 8, i1 false)\l  %64 = load i32, i32* %data_precision, align 8, !tbaa !22\l  %cmp16 = icmp sgt i32 %64, 8\l  %. = zext i1 %cmp16 to i32\l  store i32 %., i32* %optimize_coding, align 8\l  %CCIR601_sampling = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 26\l  %density_unit = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 32\l  store i8 0, i8* %density_unit, align 4, !tbaa !34\l  %X_density = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 33\l  %65 = bitcast i32* %CCIR601_sampling to i8*\l  call void @llvm.memset.p0i8.i64(i8* %65, i8 0, i64 20, i32 4, i1 false)\l  store i16 1, i16* %X_density, align 2, !tbaa !35\l  %Y_density = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 34\l  store i16 1, i16* %Y_density, align 8, !tbaa !36\l  tail call void @jpeg_default_colorspace(%struct.jpeg_compress_struct*\l... nonnull %cinfo)\l  ret void\l}"];
}
