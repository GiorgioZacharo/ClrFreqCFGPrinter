digraph "CFG for 'rgb_ycc_convert' function" {
	label="CFG for 'rgb_ycc_convert' function";

	Node0x595fde0 [shape=record, style = filled, fillcolor = turquoise, label="{entry:\l  %cconvert1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 56\l  %0 = bitcast %struct.jpeg_color_converter** %cconvert1 to\l... %struct.my_color_converter**\l  %1 = load %struct.my_color_converter*, %struct.my_color_converter** %0,\l... align 8, !tbaa !3\l  %rgb_ycc_tab = getelementptr inbounds %struct.my_color_converter,\l... %struct.my_color_converter* %1, i64 0, i32 1\l  %2 = load i64*, i64** %rgb_ycc_tab, align 8, !tbaa !11\l  %image_width = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 6\l  %3 = load i32, i32* %image_width, align 8, !tbaa !14\l  %cmp112 = icmp sgt i32 %num_rows, 0\l  br i1 %cmp112, label %while.body.lr.ph, label %while.end, !prof !15\l|{<s0>T|<s1>F}}"];
	Node0x595fde0:s0 -> Node0x5954b80;
	Node0x595fde0:s1 -> Node0x5954c60;
	Node0x5954b80 [shape=record, style = filled, fillcolor = cyan, label="{while.body.lr.ph:                                 \l  %arrayidx4 = getelementptr inbounds i8**, i8*** %output_buf, i64 1\l  %arrayidx7 = getelementptr inbounds i8**, i8*** %output_buf, i64 2\l  %cmp9108 = icmp eq i32 %3, 0\l  br i1 %cmp9108, label %while.end, label %while.body.us.preheader, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x5954b80:s0 -> Node0x5954c60;
	Node0x5954b80:s1 -> Node0x5955210;
	Node0x5955210 [shape=record, style = filled, fillcolor = cyan, label="{while.body.us.preheader:                          \l  br label %while.body.us\l}"];
	Node0x5955210 -> Node0x5955450;
	Node0x5955450 [shape=record, style = filled, fillcolor = turquoise, label="{while.body.us:                                    \l  %dec115.us.in = phi i32 [ %dec115.us,\l... %for.cond.while.cond.loopexit_crit_edge.us ], [ %num_rows,\l... %while.body.us.preheader ]\l  %input_buf.addr.0114.us = phi i8** [ %incdec.ptr.us,\l... %for.cond.while.cond.loopexit_crit_edge.us ], [ %input_buf,\l... %while.body.us.preheader ]\l  %output_row.addr.0113.us = phi i32 [ %inc.us,\l... %for.cond.while.cond.loopexit_crit_edge.us ], [ %output_row,\l... %while.body.us.preheader ]\l  %dec115.us = add nsw i32 %dec115.us.in, -1\l  %4 = load i8*, i8** %input_buf.addr.0114.us, align 8, !tbaa !17\l  %idxprom.us = zext i32 %output_row.addr.0113.us to i64\l  %5 = load i8**, i8*** %output_buf, align 8, !tbaa !17\l  %arrayidx2.us = getelementptr inbounds i8*, i8** %5, i64 %idxprom.us\l  %6 = load i8*, i8** %arrayidx2.us, align 8, !tbaa !17\l  %7 = load i8**, i8*** %arrayidx4, align 8, !tbaa !17\l  %arrayidx5.us = getelementptr inbounds i8*, i8** %7, i64 %idxprom.us\l  %8 = load i8*, i8** %arrayidx5.us, align 8, !tbaa !17\l  %9 = load i8**, i8*** %arrayidx7, align 8, !tbaa !17\l  %arrayidx8.us = getelementptr inbounds i8*, i8** %9, i64 %idxprom.us\l  %10 = load i8*, i8** %arrayidx8.us, align 8, !tbaa !17\l  br label %for.body.us\l}"];
	Node0x5955450 -> Node0x5965450;
	Node0x5965450 [shape=record, style = filled, fillcolor = orange, label="{for.body.us:                                      \l  %indvars.iv = phi i64 [ 0, %while.body.us ], [ %indvars.iv.next,\l... %for.body.us ]\l  %inptr.0109.us = phi i8* [ %4, %while.body.us ], [ %add.ptr.us, %for.body.us\l... ]\l  %11 = load i8, i8* %inptr.0109.us, align 1, !tbaa !18\l  %conv.us = zext i8 %11 to i32\l  %arrayidx11.us = getelementptr inbounds i8, i8* %inptr.0109.us, i64 1\l  %12 = load i8, i8* %arrayidx11.us, align 1, !tbaa !18\l  %conv12.us = zext i8 %12 to i32\l  %arrayidx13.us = getelementptr inbounds i8, i8* %inptr.0109.us, i64 2\l  %13 = load i8, i8* %arrayidx13.us, align 1, !tbaa !18\l  %conv14.us = zext i8 %13 to i32\l  %add.ptr.us = getelementptr inbounds i8, i8* %inptr.0109.us, i64 3\l  %idxprom15.us = zext i8 %11 to i64\l  %arrayidx16.us = getelementptr inbounds i64, i64* %2, i64 %idxprom15.us\l  %14 = load i64, i64* %arrayidx16.us, align 8, !tbaa !19\l  %add17.us = or i32 %conv12.us, 256\l  %idxprom1897.us = zext i32 %add17.us to i64\l  %arrayidx19.us = getelementptr inbounds i64, i64* %2, i64 %idxprom1897.us\l  %15 = load i64, i64* %arrayidx19.us, align 8, !tbaa !19\l  %add20.us = add nsw i64 %15, %14\l  %add21.us = or i32 %conv14.us, 512\l  %idxprom2298.us = zext i32 %add21.us to i64\l  %arrayidx23.us = getelementptr inbounds i64, i64* %2, i64 %idxprom2298.us\l  %16 = load i64, i64* %arrayidx23.us, align 8, !tbaa !19\l  %add24.us = add nsw i64 %add20.us, %16\l  %shr99.us = lshr i64 %add24.us, 16\l  %conv25.us = trunc i64 %shr99.us to i8\l  %arrayidx27.us = getelementptr inbounds i8, i8* %6, i64 %indvars.iv\l  store i8 %conv25.us, i8* %arrayidx27.us, align 1, !tbaa !18\l  %add28.us = or i32 %conv.us, 768\l  %idxprom29100.us = zext i32 %add28.us to i64\l  %arrayidx30.us = getelementptr inbounds i64, i64* %2, i64 %idxprom29100.us\l  %17 = load i64, i64* %arrayidx30.us, align 8, !tbaa !19\l  %add31.us = or i32 %conv12.us, 1024\l  %idxprom32101.us = zext i32 %add31.us to i64\l  %arrayidx33.us = getelementptr inbounds i64, i64* %2, i64 %idxprom32101.us\l  %18 = load i64, i64* %arrayidx33.us, align 8, !tbaa !19\l  %add34.us = add nsw i64 %18, %17\l  %add35.us = or i32 %conv14.us, 1280\l  %idxprom36102.us = zext i32 %add35.us to i64\l  %arrayidx37.us = getelementptr inbounds i64, i64* %2, i64 %idxprom36102.us\l  %19 = load i64, i64* %arrayidx37.us, align 8, !tbaa !19\l  %add38.us = add nsw i64 %add34.us, %19\l  %shr39103.us = lshr i64 %add38.us, 16\l  %conv40.us = trunc i64 %shr39103.us to i8\l  %arrayidx42.us = getelementptr inbounds i8, i8* %8, i64 %indvars.iv\l  store i8 %conv40.us, i8* %arrayidx42.us, align 1, !tbaa !18\l  %add43.us = or i32 %conv.us, 1280\l  %idxprom44104.us = zext i32 %add43.us to i64\l  %arrayidx45.us = getelementptr inbounds i64, i64* %2, i64 %idxprom44104.us\l  %20 = load i64, i64* %arrayidx45.us, align 8, !tbaa !19\l  %add46.us = or i32 %conv12.us, 1536\l  %idxprom47105.us = zext i32 %add46.us to i64\l  %arrayidx48.us = getelementptr inbounds i64, i64* %2, i64 %idxprom47105.us\l  %21 = load i64, i64* %arrayidx48.us, align 8, !tbaa !19\l  %add49.us = add nsw i64 %21, %20\l  %add50.us = or i32 %conv14.us, 1792\l  %idxprom51106.us = zext i32 %add50.us to i64\l  %arrayidx52.us = getelementptr inbounds i64, i64* %2, i64 %idxprom51106.us\l  %22 = load i64, i64* %arrayidx52.us, align 8, !tbaa !19\l  %add53.us = add nsw i64 %add49.us, %22\l  %shr54107.us = lshr i64 %add53.us, 16\l  %conv55.us = trunc i64 %shr54107.us to i8\l  %arrayidx57.us = getelementptr inbounds i8, i8* %10, i64 %indvars.iv\l  store i8 %conv55.us, i8* %arrayidx57.us, align 1, !tbaa !18\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %lftr.wideiv = trunc i64 %indvars.iv.next to i32\l  %exitcond = icmp eq i32 %lftr.wideiv, %3\l  br i1 %exitcond, label %for.cond.while.cond.loopexit_crit_edge.us, label\l... %for.body.us, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x5965450:s0 -> Node0x5955580;
	Node0x5965450:s1 -> Node0x5965450;
	Node0x5955580 [shape=record, style = filled, fillcolor = turquoise, label="{for.cond.while.cond.loopexit_crit_edge.us:        \l  %incdec.ptr.us = getelementptr inbounds i8*, i8** %input_buf.addr.0114.us,\l... i64 1\l  %inc.us = add i32 %output_row.addr.0113.us, 1\l  %cmp.us = icmp sgt i32 %dec115.us.in, 1\l  br i1 %cmp.us, label %while.body.us, label %while.end.loopexit, !prof !15\l|{<s0>T|<s1>F}}"];
	Node0x5955580:s0 -> Node0x5955450;
	Node0x5955580:s1 -> Node0x5969860;
	Node0x5969860 [shape=record, style = filled, fillcolor = cyan, label="{while.end.loopexit:                               \l  br label %while.end\l}"];
	Node0x5969860 -> Node0x5954c60;
	Node0x5954c60 [shape=record, style = filled, fillcolor = turquoise, label="{while.end:                                        \l  ret void\l}"];
}
