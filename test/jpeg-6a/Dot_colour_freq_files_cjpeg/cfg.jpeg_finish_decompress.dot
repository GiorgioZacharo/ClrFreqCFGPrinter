digraph "CFG for 'jpeg_finish_decompress' function" {
	label="CFG for 'jpeg_finish_decompress' function";

	Node0x5157270 [shape=record,label="{entry:\l  %global_state = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 4\l  %0 = load i32, i32* %global_state, align 4, !tbaa !2\l  %.off = add i32 %0, -205\l  %switch = icmp ult i32 %.off, 2\l  br i1 %switch, label %land.lhs.true, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5157270:s0 -> Node0x5157540;
	Node0x5157270:s1 -> Node0x5157620;
	Node0x5157540 [shape=record,label="{land.lhs.true:                                    \l  %buffered_image = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 14\l  %1 = load i32, i32* %buffered_image, align 8, !tbaa !10\l  %tobool = icmp eq i32 %1, 0\l  br i1 %tobool, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5157540:s0 -> Node0x51695a0;
	Node0x5157540:s1 -> Node0x5157620;
	Node0x51695a0 [shape=record,label="{if.then:                                          \l  %output_scanline = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 33\l  %2 = load i32, i32* %output_scanline, align 8, !tbaa !11\l  %output_height = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 27\l  %3 = load i32, i32* %output_height, align 4, !tbaa !12\l  %cmp3 = icmp ult i32 %2, %3\l  br i1 %cmp3, label %if.then4, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x51695a0:s0 -> Node0x5157170;
	Node0x51695a0:s1 -> Node0x5169e30;
	Node0x5157170 [shape=record,label="{if.then4:                                         \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %4 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !13\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %4, i64 0, i32 5\l  store i32 66, i32* %msg_code, align 8, !tbaa !14\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %4, i64 0, i32 0\l  %5 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !17\l  %6 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %5(%struct.jpeg_common_struct* %6) #3\l  br label %if.end\l}"];
	Node0x5157170 -> Node0x5169e30;
	Node0x5169e30 [shape=record,label="{if.end:                                           \l  %master = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 73\l  %7 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %master,\l... align 8, !tbaa !18\l  %finish_output_pass = getelementptr inbounds %struct.jpeg_decomp_master,\l... %struct.jpeg_decomp_master* %7, i64 0, i32 1\l  %8 = load void (%struct.jpeg_decompress_struct*)*, void\l... (%struct.jpeg_decompress_struct*)** %finish_output_pass, align 8, !tbaa !19\l  tail call void %8(%struct.jpeg_decompress_struct* nonnull %cinfo) #3\l  store i32 210, i32* %global_state, align 4, !tbaa !2\l  br label %while.cond.preheader\l}"];
	Node0x5169e30 -> Node0x516ab80;
	Node0x5157620 [shape=record,label="{if.else:                                          \l  switch i32 %0, label %if.then14 [\l    i32 207, label %if.then9\l    i32 210, label %while.cond.preheader\l  ]\l|{<s0>def|<s1>207|<s2>210}}"];
	Node0x5157620:s0 -> Node0x516acc0;
	Node0x5157620:s1 -> Node0x516ad70;
	Node0x5157620:s2 -> Node0x516ab80;
	Node0x516ad70 [shape=record,label="{if.then9:                                         \l  store i32 210, i32* %global_state, align 4, !tbaa !2\l  br label %while.cond.preheader\l}"];
	Node0x516ad70 -> Node0x516ab80;
	Node0x516acc0 [shape=record,label="{if.then14:                                        \l  %err15 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err15, align 8,\l... !tbaa !13\l  %msg_code16 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 5\l  store i32 18, i32* %msg_code16, align 8, !tbaa !14\l  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 0\l  store i32 %0, i32* %arrayidx, align 4, !tbaa !21\l  %error_exit20 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 0\l  %10 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit20, align 8, !tbaa !17\l  %11 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %10(%struct.jpeg_common_struct* %11) #3\l  br label %while.cond.preheader\l}"];
	Node0x516acc0 -> Node0x516ab80;
	Node0x516ab80 [shape=record,label="{while.cond.preheader:                             \l  %inputctl = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 77\l  br label %while.cond\l}"];
	Node0x516ab80 -> Node0x516b8c0;
	Node0x516b8c0 [shape=record,label="{while.cond:                                       \l  %12 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller**\l... %inputctl, align 8, !tbaa !22\l  %eoi_reached = getelementptr inbounds %struct.jpeg_input_controller,\l... %struct.jpeg_input_controller* %12, i64 0, i32 5\l  %13 = load i32, i32* %eoi_reached, align 4, !tbaa !23\l  %lnot = icmp eq i32 %13, 0\l  br i1 %lnot, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x516b8c0:s0 -> Node0x5157690;
	Node0x516b8c0:s1 -> Node0x516c1c0;
	Node0x5157690 [shape=record,label="{while.body:                                       \l  %consume_input = getelementptr inbounds %struct.jpeg_input_controller,\l... %struct.jpeg_input_controller* %12, i64 0, i32 0\l  %14 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %consume_input, align 8, !tbaa !25\l  %call = tail call i32 %14(%struct.jpeg_decompress_struct* nonnull %cinfo) #3\l  %cmp26 = icmp eq i32 %call, 0\l  br i1 %cmp26, label %return.loopexit, label %while.cond\l|{<s0>T|<s1>F}}"];
	Node0x5157690:s0 -> Node0x516c580;
	Node0x5157690:s1 -> Node0x516b8c0;
	Node0x516c1c0 [shape=record,label="{while.end:                                        \l  %src = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5\l  %15 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align\l... 8, !tbaa !26\l  %term_source = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %15, i64 0, i32 6\l  %16 = load void (%struct.jpeg_decompress_struct*)*, void\l... (%struct.jpeg_decompress_struct*)** %term_source, align 8, !tbaa !27\l  tail call void %16(%struct.jpeg_decompress_struct* nonnull %cinfo) #3\l  %17 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void @jpeg_abort(%struct.jpeg_common_struct* %17) #3\l  br label %return\l}"];
	Node0x516c1c0 -> Node0x516cd10;
	Node0x516c580 [shape=record,label="{return.loopexit:                                  \l  br label %return\l}"];
	Node0x516c580 -> Node0x516cd10;
	Node0x516cd10 [shape=record,label="{return:                                           \l  %retval.0 = phi i32 [ 1, %while.end ], [ 0, %return.loopexit ]\l  ret i32 %retval.0\l}"];
}
