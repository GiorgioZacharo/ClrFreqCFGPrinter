digraph "CFG for 'preload_image' function" {
	label="CFG for 'preload_image' function";

	Node0x4d9cbe0 [shape=record,label="{entry:\l  %input_file = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 0, i32 3\l  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %input_file, align 8, !tbaa\l... !3\l  %progress1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 2\l  %1 = bitcast %struct.jpeg_progress_mgr** %progress1 to\l... %struct.cdjpeg_progress_mgr**\l  %2 = load %struct.cdjpeg_progress_mgr*, %struct.cdjpeg_progress_mgr** %1,\l... align 8, !tbaa !10\l  %image_height = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 7\l  %3 = load i32, i32* %image_height, align 4, !tbaa !14\l  %cmp79 = icmp eq i32 %3, 0\l  %cmp2 = icmp ne %struct.cdjpeg_progress_mgr* %2, null\l  br i1 %cmp79, label %for.end21, label %for.body.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x4d9cbe0:s0 -> Node0x4d9c0e0;
	Node0x4d9cbe0:s1 -> Node0x4d9c1c0;
	Node0x4d9c1c0 [shape=record,label="{for.body.lr.ph:                                   \l  %4 = bitcast %struct.cjpeg_source_struct* %sinfo to\l... %struct._bmp_source_struct*\l  %pass_counter = getelementptr inbounds %struct.cdjpeg_progress_mgr,\l... %struct.cdjpeg_progress_mgr* %2, i64 0, i32 0, i32 1\l  %pass_limit = getelementptr inbounds %struct.cdjpeg_progress_mgr,\l... %struct.cdjpeg_progress_mgr* %2, i64 0, i32 0, i32 2\l  %progress_monitor8 = bitcast %struct.cdjpeg_progress_mgr* %2 to void\l... (%struct.jpeg_common_struct*)**\l  %5 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %mem = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1\l  %whole_image = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 1, i32 2\l  %6 = bitcast void (%struct.jpeg_compress_struct*,\l... %struct.cjpeg_source_struct*)** %whole_image to %struct.jvirt_sarray_control**\l  %row_width = getelementptr inbounds %struct._bmp_source_struct,\l... %struct._bmp_source_struct* %4, i64 0, i32 5\l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  br i1 %cmp2, label %if.then.us.preheader, label %if.end.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4d9c1c0:s0 -> Node0x4db5790;
	Node0x4d9c1c0:s1 -> Node0x4db5890;
	Node0x4db5890 [shape=record,label="{if.end.preheader:                                 \l  br label %if.end\l}"];
	Node0x4db5890 -> Node0x4db5a20;
	Node0x4db5790 [shape=record,label="{if.then.us.preheader:                             \l  br label %if.then.us\l}"];
	Node0x4db5790 -> Node0x4db5ad0;
	Node0x4db5ad0 [shape=record,label="{if.then.us:                                       \l  %7 = phi i32 [ %16, %for.inc20.us ], [ %3, %if.then.us.preheader ]\l  %row.080.us = phi i32 [ %inc.us, %for.inc20.us ], [ 0, %if.then.us.preheader\l... ]\l  %conv.us = zext i32 %row.080.us to i64\l  store i64 %conv.us, i64* %pass_counter, align 8, !tbaa !15\l  %conv5.us = zext i32 %7 to i64\l  store i64 %conv5.us, i64* %pass_limit, align 8, !tbaa !19\l  %8 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %progress_monitor8, align 8, !tbaa !20\l  tail call void %8(%struct.jpeg_common_struct* %5) #4\l  %9 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !21\l  %access_virt_sarray.us = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %9, i64 0, i32 7\l  %10 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*,\l... i32, i32, i32)*, i8** (%struct.jpeg_common_struct*,\l... %struct.jvirt_sarray_control*, i32, i32, i32)** %access_virt_sarray.us, align\l... 8, !tbaa !22\l  %11 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %6,\l... align 8, !tbaa !24\l  %call.us = tail call i8** %10(%struct.jpeg_common_struct* %5,\l... %struct.jvirt_sarray_control* %11, i32 %row.080.us, i32 1, i32 1) #4\l  %12 = load i32, i32* %row_width, align 4, !tbaa !25\l  %cmp1076.us = icmp eq i32 %12, 0\l  br i1 %cmp1076.us, label %for.inc20.us, label %for.body12.us.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4db5ad0:s0 -> Node0x4db5c00;
	Node0x4db5ad0:s1 -> Node0x4db7970;
	Node0x4db7970 [shape=record,label="{for.body12.us.preheader:                          \l  %13 = load i8*, i8** %call.us, align 8, !tbaa !26\l  br label %for.body12.us\l}"];
	Node0x4db7970 -> Node0x4db7b00;
	Node0x4db7b00 [shape=record,label="{for.body12.us:                                    \l  %out_ptr.078.us = phi i8* [ %incdec.ptr.us, %if.end18.us ], [ %13,\l... %for.body12.us.preheader ]\l  %col.077.us = phi i32 [ %dec.us, %if.end18.us ], [ %12,\l... %for.body12.us.preheader ]\l  %call13.us = tail call i32 @_IO_getc(%struct._IO_FILE* %0)\l  %cmp14.us = icmp eq i32 %call13.us, -1\l  br i1 %cmp14.us, label %if.then16.us, label %if.end18.us\l|{<s0>T|<s1>F}}"];
	Node0x4db7b00:s0 -> Node0x4db8170;
	Node0x4db7b00:s1 -> Node0x4db7c50;
	Node0x4db8170 [shape=record,label="{if.then16.us:                                     \l  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !27\l  %msg_code.us = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %14, i64 0, i32 5\l  store i32 42, i32* %msg_code.us, align 8, !tbaa !28\l  %error_exit.us = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %14, i64 0, i32 0\l  %15 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.us, align 8, !tbaa !30\l  tail call void %15(%struct.jpeg_common_struct* %5) #4\l  br label %if.end18.us\l}"];
	Node0x4db8170 -> Node0x4db7c50;
	Node0x4db7c50 [shape=record,label="{if.end18.us:                                      \l  %conv19.us = trunc i32 %call13.us to i8\l  %incdec.ptr.us = getelementptr inbounds i8, i8* %out_ptr.078.us, i64 1\l  store i8 %conv19.us, i8* %out_ptr.078.us, align 1, !tbaa !31\l  %dec.us = add i32 %col.077.us, -1\l  %cmp10.us = icmp eq i32 %dec.us, 0\l  br i1 %cmp10.us, label %for.inc20.us.loopexit, label %for.body12.us\l|{<s0>T|<s1>F}}"];
	Node0x4db7c50:s0 -> Node0x4db8960;
	Node0x4db7c50:s1 -> Node0x4db7b00;
	Node0x4db8960 [shape=record,label="{for.inc20.us.loopexit:                            \l  br label %for.inc20.us\l}"];
	Node0x4db8960 -> Node0x4db5c00;
	Node0x4db5c00 [shape=record,label="{for.inc20.us:                                     \l  %inc.us = add i32 %row.080.us, 1\l  %16 = load i32, i32* %image_height, align 4, !tbaa !14\l  %cmp.us = icmp ult i32 %inc.us, %16\l  br i1 %cmp.us, label %if.then.us, label %for.end21.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x4db5c00:s0 -> Node0x4db5ad0;
	Node0x4db5c00:s1 -> Node0x4db8c00;
	Node0x4db5a20 [shape=record,label="{if.end:                                           \l  %row.080 = phi i32 [ %inc, %for.inc20 ], [ 0, %if.end.preheader ]\l  %17 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !21\l  %access_virt_sarray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %17, i64 0, i32 7\l  %18 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*,\l... i32, i32, i32)*, i8** (%struct.jpeg_common_struct*,\l... %struct.jvirt_sarray_control*, i32, i32, i32)** %access_virt_sarray, align 8,\l... !tbaa !22\l  %19 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %6,\l... align 8, !tbaa !24\l  %call = tail call i8** %18(%struct.jpeg_common_struct* %5,\l... %struct.jvirt_sarray_control* %19, i32 %row.080, i32 1, i32 1) #4\l  %20 = load i32, i32* %row_width, align 4, !tbaa !25\l  %cmp1076 = icmp eq i32 %20, 0\l  br i1 %cmp1076, label %for.inc20, label %for.body12.preheader\l|{<s0>T|<s1>F}}"];
	Node0x4db5a20:s0 -> Node0x4db8d50;
	Node0x4db5a20:s1 -> Node0x4db9c80;
	Node0x4db9c80 [shape=record,label="{for.body12.preheader:                             \l  %21 = load i8*, i8** %call, align 8, !tbaa !26\l  br label %for.body12\l}"];
	Node0x4db9c80 -> Node0x4db9dc0;
	Node0x4db9dc0 [shape=record,label="{for.body12:                                       \l  %out_ptr.078 = phi i8* [ %incdec.ptr, %if.end18 ], [ %21,\l... %for.body12.preheader ]\l  %col.077 = phi i32 [ %dec, %if.end18 ], [ %20, %for.body12.preheader ]\l  %call13 = tail call i32 @_IO_getc(%struct._IO_FILE* %0)\l  %cmp14 = icmp eq i32 %call13, -1\l  br i1 %cmp14, label %if.then16, label %if.end18\l|{<s0>T|<s1>F}}"];
	Node0x4db9dc0:s0 -> Node0x4dba340;
	Node0x4db9dc0:s1 -> Node0x4db9ed0;
	Node0x4dba340 [shape=record,label="{if.then16:                                        \l  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !27\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %22, i64 0, i32 5\l  store i32 42, i32* %msg_code, align 8, !tbaa !28\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %22, i64 0, i32 0\l  %23 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !30\l  tail call void %23(%struct.jpeg_common_struct* %5) #4\l  br label %if.end18\l}"];
	Node0x4dba340 -> Node0x4db9ed0;
	Node0x4db9ed0 [shape=record,label="{if.end18:                                         \l  %conv19 = trunc i32 %call13 to i8\l  %incdec.ptr = getelementptr inbounds i8, i8* %out_ptr.078, i64 1\l  store i8 %conv19, i8* %out_ptr.078, align 1, !tbaa !31\l  %dec = add i32 %col.077, -1\l  %cmp10 = icmp eq i32 %dec, 0\l  br i1 %cmp10, label %for.inc20.loopexit, label %for.body12\l|{<s0>T|<s1>F}}"];
	Node0x4db9ed0:s0 -> Node0x4dbaae0;
	Node0x4db9ed0:s1 -> Node0x4db9dc0;
	Node0x4dbaae0 [shape=record,label="{for.inc20.loopexit:                               \l  br label %for.inc20\l}"];
	Node0x4dbaae0 -> Node0x4db8d50;
	Node0x4db8d50 [shape=record,label="{for.inc20:                                        \l  %inc = add i32 %row.080, 1\l  %24 = load i32, i32* %image_height, align 4, !tbaa !14\l  %cmp = icmp ult i32 %inc, %24\l  br i1 %cmp, label %if.end, label %for.end21.loopexit88\l|{<s0>T|<s1>F}}"];
	Node0x4db8d50:s0 -> Node0x4db5a20;
	Node0x4db8d50:s1 -> Node0x4dbad10;
	Node0x4db8c00 [shape=record,label="{for.end21.loopexit:                               \l  %.lcssa = phi i32 [ %16, %for.inc20.us ]\l  br label %for.end21\l}"];
	Node0x4db8c00 -> Node0x4d9c0e0;
	Node0x4dbad10 [shape=record,label="{for.end21.loopexit88:                             \l  %.lcssa90 = phi i32 [ %24, %for.inc20 ]\l  br label %for.end21\l}"];
	Node0x4dbad10 -> Node0x4d9c0e0;
	Node0x4d9c0e0 [shape=record,label="{for.end21:                                        \l  %25 = phi i32 [ 0, %entry ], [ %.lcssa, %for.end21.loopexit ], [ %.lcssa90,\l... %for.end21.loopexit88 ]\l  br i1 %cmp2, label %if.then24, label %if.end26\l|{<s0>T|<s1>F}}"];
	Node0x4d9c0e0:s0 -> Node0x4dbafa0;
	Node0x4d9c0e0:s1 -> Node0x4dbb050;
	Node0x4dbafa0 [shape=record,label="{if.then24:                                        \l  %completed_extra_passes = getelementptr inbounds\l... %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %2, i64 0, i32 1\l  %26 = load i32, i32* %completed_extra_passes, align 8, !tbaa !32\l  %inc25 = add nsw i32 %26, 1\l  store i32 %inc25, i32* %completed_extra_passes, align 8, !tbaa !32\l  br label %if.end26\l}"];
	Node0x4dbafa0 -> Node0x4dbb050;
	Node0x4dbb050 [shape=record,label="{if.end26:                                         \l  %bits_per_pixel = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 1, i32 4\l  %27 = bitcast i8*** %bits_per_pixel to i32*\l  %28 = load i32, i32* %27, align 8, !tbaa !33\l  switch i32 %28, label %sw.default [\l    i32 8, label %sw.bb\l    i32 24, label %sw.bb28\l  ]\l|{<s0>def|<s1>8|<s2>24}}"];
	Node0x4dbb050:s0 -> Node0x4d86ed0;
	Node0x4dbb050:s1 -> Node0x4d86f80;
	Node0x4dbb050:s2 -> Node0x4d87050;
	Node0x4d86f80 [shape=record,label="{sw.bb:                                            \l  %get_pixel_rows = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 0, i32 1\l  store i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)*\l... @get_8bit_row, i32 (%struct.jpeg_compress_struct*,\l... %struct.cjpeg_source_struct*)** %get_pixel_rows, align 8, !tbaa !34\l  br label %sw.epilog\l}"];
	Node0x4d86f80 -> Node0x4d87490;
	Node0x4d87050 [shape=record,label="{sw.bb28:                                          \l  %get_pixel_rows30 = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 0, i32 1\l  store i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)*\l... @get_24bit_row, i32 (%struct.jpeg_compress_struct*,\l... %struct.cjpeg_source_struct*)** %get_pixel_rows30, align 8, !tbaa !34\l  br label %sw.epilog\l}"];
	Node0x4d87050 -> Node0x4d87490;
	Node0x4d86ed0 [shape=record,label="{sw.default:                                       \l  %err31 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err31, align\l... 8, !tbaa !27\l  %msg_code32 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %29, i64 0, i32 5\l  store i32 1002, i32* %msg_code32, align 8, !tbaa !28\l  %error_exit34 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %29, i64 0, i32 0\l  %30 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit34, align 8, !tbaa !30\l  %31 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %30(%struct.jpeg_common_struct* %31) #4\l  %.pre = load i32, i32* %image_height, align 4, !tbaa !14\l  %get_pixel_rows37.phi.trans.insert = getelementptr inbounds\l... %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %sinfo, i64 0, i32 1\l  %.pre83 = load i32 (%struct.jpeg_compress_struct*,\l... %struct.cjpeg_source_struct*)*, i32 (%struct.jpeg_compress_struct*,\l... %struct.cjpeg_source_struct*)** %get_pixel_rows37.phi.trans.insert, align 8,\l... !tbaa !34\l  br label %sw.epilog\l}"];
	Node0x4d86ed0 -> Node0x4d87490;
	Node0x4d87490 [shape=record,label="{sw.epilog:                                        \l  %32 = phi i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)*\l... [ %.pre83, %sw.default ], [ @get_24bit_row, %sw.bb28 ], [ @get_8bit_row,\l... %sw.bb ]\l  %33 = phi i32 [ %.pre, %sw.default ], [ %25, %sw.bb28 ], [ %25, %sw.bb ]\l  %source_row = getelementptr inbounds %struct.cjpeg_source_struct,\l... %struct.cjpeg_source_struct* %sinfo, i64 1, i32 3\l  %34 = bitcast %struct._IO_FILE** %source_row to i32*\l  store i32 %33, i32* %34, align 8, !tbaa !35\l  %call38 = tail call i32 %32(%struct.jpeg_compress_struct* nonnull %cinfo,\l... %struct.cjpeg_source_struct* nonnull %sinfo) #4\l  ret i32 %call38\l}"];
}
