digraph "CFG for 'get_sof' function" {
	label="CFG for 'get_sof' function";

	Node0x69a9380 [shape=record,label="{entry:\l  %src = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5\l  %0 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align 8,\l... !tbaa !2\l  %next_input_byte1 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %0, i64 0, i32 0\l  %1 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %bytes_in_buffer2 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %0, i64 0, i32 1\l  %2 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  %progressive_mode = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 44\l  store i32 %is_prog, i32* %progressive_mode, align 8, !tbaa !14\l  %arith_code = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 45\l  store i32 %is_arith, i32* %arith_code, align 4, !tbaa !15\l  %cmp = icmp eq i64 %2, 0\l  br i1 %cmp, label %if.then, label %if.end6\l|{<s0>T|<s1>F}}"];
	Node0x69a9380:s0 -> Node0x69a9d40;
	Node0x69a9380:s1 -> Node0x69a9e10;
	Node0x69a9d40 [shape=record,label="{if.then:                                          \l  %fill_input_buffer = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %0, i64 0, i32 3\l  %3 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer, align 8, !tbaa !16\l  %call = tail call i32 %3(%struct.jpeg_decompress_struct* nonnull %cinfo) #4\l  %tobool = icmp eq i32 %call, 0\l  br i1 %tobool, label %cleanup, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x69a9d40:s0 -> Node0x69aa2f0;
	Node0x69a9d40:s1 -> Node0x69aa3c0;
	Node0x69aa3c0 [shape=record,label="{if.end:                                           \l  %4 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %5 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  br label %if.end6\l}"];
	Node0x69aa3c0 -> Node0x69a9e10;
	Node0x69a9e10 [shape=record,label="{if.end6:                                          \l  %next_input_byte.0 = phi i8* [ %4, %if.end ], [ %1, %entry ]\l  %bytes_in_buffer.0 = phi i64 [ %5, %if.end ], [ %2, %entry ]\l  %dec = add i64 %bytes_in_buffer.0, -1\l  %incdec.ptr = getelementptr inbounds i8, i8* %next_input_byte.0, i64 1\l  %6 = load i8, i8* %next_input_byte.0, align 1, !tbaa !17\l  %conv = zext i8 %6 to i64\l  %shl = shl nuw nsw i64 %conv, 8\l  %cmp8 = icmp eq i64 %dec, 0\l  br i1 %cmp8, label %if.then10, label %if.end18\l|{<s0>T|<s1>F}}"];
	Node0x69a9e10:s0 -> Node0x69aaae0;
	Node0x69a9e10:s1 -> Node0x69aa0a0;
	Node0x69aaae0 [shape=record,label="{if.then10:                                        \l  %fill_input_buffer11 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %0, i64 0, i32 3\l  %7 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer11, align 8, !tbaa !16\l  %call12 = tail call i32 %7(%struct.jpeg_decompress_struct* nonnull %cinfo) #4\l  %tobool13 = icmp eq i32 %call12, 0\l  br i1 %tobool13, label %cleanup, label %if.end15\l|{<s0>T|<s1>F}}"];
	Node0x69aaae0:s0 -> Node0x69aa2f0;
	Node0x69aaae0:s1 -> Node0x69ab120;
	Node0x69ab120 [shape=record,label="{if.end15:                                         \l  %8 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %9 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  br label %if.end18\l}"];
	Node0x69ab120 -> Node0x69aa0a0;
	Node0x69aa0a0 [shape=record,label="{if.end18:                                         \l  %next_input_byte.1 = phi i8* [ %8, %if.end15 ], [ %incdec.ptr, %if.end6 ]\l  %bytes_in_buffer.1 = phi i64 [ %9, %if.end15 ], [ %dec, %if.end6 ]\l  %dec19 = add i64 %bytes_in_buffer.1, -1\l  %incdec.ptr20 = getelementptr inbounds i8, i8* %next_input_byte.1, i64 1\l  %10 = load i8, i8* %next_input_byte.1, align 1, !tbaa !17\l  %conv21 = zext i8 %10 to i64\l  %add = or i64 %conv21, %shl\l  %cmp23 = icmp eq i64 %dec19, 0\l  br i1 %cmp23, label %if.then25, label %if.end33\l|{<s0>T|<s1>F}}"];
	Node0x69aa0a0:s0 -> Node0x69ab8a0;
	Node0x69aa0a0:s1 -> Node0x69ab950;
	Node0x69ab8a0 [shape=record,label="{if.then25:                                        \l  %fill_input_buffer26 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %0, i64 0, i32 3\l  %11 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer26, align 8, !tbaa !16\l  %call27 = tail call i32 %11(%struct.jpeg_decompress_struct* nonnull %cinfo)\l... #4\l  %tobool28 = icmp eq i32 %call27, 0\l  br i1 %tobool28, label %cleanup, label %if.end30\l|{<s0>T|<s1>F}}"];
	Node0x69ab8a0:s0 -> Node0x69aa2f0;
	Node0x69ab8a0:s1 -> Node0x6917f40;
	Node0x6917f40 [shape=record,label="{if.end30:                                         \l  %12 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %13 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  br label %if.end33\l}"];
	Node0x6917f40 -> Node0x69ab950;
	Node0x69ab950 [shape=record,label="{if.end33:                                         \l  %next_input_byte.2 = phi i8* [ %12, %if.end30 ], [ %incdec.ptr20, %if.end18 ]\l  %bytes_in_buffer.2 = phi i64 [ %13, %if.end30 ], [ %dec19, %if.end18 ]\l  %dec34 = add i64 %bytes_in_buffer.2, -1\l  %incdec.ptr35 = getelementptr inbounds i8, i8* %next_input_byte.2, i64 1\l  %14 = load i8, i8* %next_input_byte.2, align 1, !tbaa !17\l  %conv36 = zext i8 %14 to i32\l  %data_precision = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 42\l  store i32 %conv36, i32* %data_precision, align 8, !tbaa !18\l  %cmp40 = icmp eq i64 %dec34, 0\l  br i1 %cmp40, label %if.then42, label %if.end50\l|{<s0>T|<s1>F}}"];
	Node0x69ab950:s0 -> Node0x69aad80;
	Node0x69ab950:s1 -> Node0x69aae00;
	Node0x69aad80 [shape=record,label="{if.then42:                                        \l  %fill_input_buffer43 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %0, i64 0, i32 3\l  %15 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer43, align 8, !tbaa !16\l  %call44 = tail call i32 %15(%struct.jpeg_decompress_struct* nonnull %cinfo)\l... #4\l  %tobool45 = icmp eq i32 %call44, 0\l  br i1 %tobool45, label %cleanup, label %if.end47\l|{<s0>T|<s1>F}}"];
	Node0x69aad80:s0 -> Node0x69aa2f0;
	Node0x69aad80:s1 -> Node0x69ace80;
	Node0x69ace80 [shape=record,label="{if.end47:                                         \l  %16 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %17 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  br label %if.end50\l}"];
	Node0x69ace80 -> Node0x69aae00;
	Node0x69aae00 [shape=record,label="{if.end50:                                         \l  %next_input_byte.3 = phi i8* [ %16, %if.end47 ], [ %incdec.ptr35, %if.end33 ]\l  %bytes_in_buffer.3 = phi i64 [ %17, %if.end47 ], [ %dec34, %if.end33 ]\l  %dec51 = add i64 %bytes_in_buffer.3, -1\l  %incdec.ptr52 = getelementptr inbounds i8, i8* %next_input_byte.3, i64 1\l  %18 = load i8, i8* %next_input_byte.3, align 1, !tbaa !17\l  %conv53 = zext i8 %18 to i32\l  %shl54 = shl nuw nsw i32 %conv53, 8\l  %image_height = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 7\l  store i32 %shl54, i32* %image_height, align 4, !tbaa !19\l  %cmp55 = icmp eq i64 %dec51, 0\l  br i1 %cmp55, label %if.then57, label %if.end65\l|{<s0>T|<s1>F}}"];
	Node0x69aae00:s0 -> Node0x69ad890;
	Node0x69aae00:s1 -> Node0x69ad970;
	Node0x69ad890 [shape=record,label="{if.then57:                                        \l  %fill_input_buffer58 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %0, i64 0, i32 3\l  %19 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer58, align 8, !tbaa !16\l  %call59 = tail call i32 %19(%struct.jpeg_decompress_struct* nonnull %cinfo)\l... #4\l  %tobool60 = icmp eq i32 %call59, 0\l  br i1 %tobool60, label %cleanup, label %if.end62\l|{<s0>T|<s1>F}}"];
	Node0x69ad890:s0 -> Node0x69aa2f0;
	Node0x69ad890:s1 -> Node0x69abd60;
	Node0x69abd60 [shape=record,label="{if.end62:                                         \l  %20 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %21 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  %.pre = load i32, i32* %image_height, align 4, !tbaa !19\l  br label %if.end65\l}"];
	Node0x69abd60 -> Node0x69ad970;
	Node0x69ad970 [shape=record,label="{if.end65:                                         \l  %22 = phi i32 [ %.pre, %if.end62 ], [ %shl54, %if.end50 ]\l  %next_input_byte.4 = phi i8* [ %20, %if.end62 ], [ %incdec.ptr52, %if.end50 ]\l  %bytes_in_buffer.4 = phi i64 [ %21, %if.end62 ], [ %dec51, %if.end50 ]\l  %dec66 = add i64 %bytes_in_buffer.4, -1\l  %incdec.ptr67 = getelementptr inbounds i8, i8* %next_input_byte.4, i64 1\l  %23 = load i8, i8* %next_input_byte.4, align 1, !tbaa !17\l  %conv68 = zext i8 %23 to i32\l  %add70 = add i32 %22, %conv68\l  store i32 %add70, i32* %image_height, align 4, !tbaa !19\l  %cmp74 = icmp eq i64 %dec66, 0\l  br i1 %cmp74, label %if.then76, label %if.end84\l|{<s0>T|<s1>F}}"];
	Node0x69ad970:s0 -> Node0x69af290;
	Node0x69ad970:s1 -> Node0x69af340;
	Node0x69af290 [shape=record,label="{if.then76:                                        \l  %fill_input_buffer77 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %0, i64 0, i32 3\l  %24 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer77, align 8, !tbaa !16\l  %call78 = tail call i32 %24(%struct.jpeg_decompress_struct* nonnull %cinfo)\l... #4\l  %tobool79 = icmp eq i32 %call78, 0\l  br i1 %tobool79, label %cleanup, label %if.end81\l|{<s0>T|<s1>F}}"];
	Node0x69af290:s0 -> Node0x69aa2f0;
	Node0x69af290:s1 -> Node0x69af750;
	Node0x69af750 [shape=record,label="{if.end81:                                         \l  %25 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %26 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  br label %if.end84\l}"];
	Node0x69af750 -> Node0x69af340;
	Node0x69af340 [shape=record,label="{if.end84:                                         \l  %next_input_byte.5 = phi i8* [ %25, %if.end81 ], [ %incdec.ptr67, %if.end65 ]\l  %bytes_in_buffer.5 = phi i64 [ %26, %if.end81 ], [ %dec66, %if.end65 ]\l  %dec85 = add i64 %bytes_in_buffer.5, -1\l  %incdec.ptr86 = getelementptr inbounds i8, i8* %next_input_byte.5, i64 1\l  %27 = load i8, i8* %next_input_byte.5, align 1, !tbaa !17\l  %conv87 = zext i8 %27 to i32\l  %shl88 = shl nuw nsw i32 %conv87, 8\l  %image_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 6\l  store i32 %shl88, i32* %image_width, align 8, !tbaa !20\l  %cmp89 = icmp eq i64 %dec85, 0\l  br i1 %cmp89, label %if.then91, label %if.end99\l|{<s0>T|<s1>F}}"];
	Node0x69af340:s0 -> Node0x6938da0;
	Node0x69af340:s1 -> Node0x6938e80;
	Node0x6938da0 [shape=record,label="{if.then91:                                        \l  %fill_input_buffer92 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %0, i64 0, i32 3\l  %28 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer92, align 8, !tbaa !16\l  %call93 = tail call i32 %28(%struct.jpeg_decompress_struct* nonnull %cinfo)\l... #4\l  %tobool94 = icmp eq i32 %call93, 0\l  br i1 %tobool94, label %cleanup, label %if.end96\l|{<s0>T|<s1>F}}"];
	Node0x6938da0:s0 -> Node0x69aa2f0;
	Node0x6938da0:s1 -> Node0x69ac440;
	Node0x69ac440 [shape=record,label="{if.end96:                                         \l  %29 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %30 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  %.pre427 = load i32, i32* %image_width, align 8, !tbaa !20\l  br label %if.end99\l}"];
	Node0x69ac440 -> Node0x6938e80;
	Node0x6938e80 [shape=record,label="{if.end99:                                         \l  %31 = phi i32 [ %.pre427, %if.end96 ], [ %shl88, %if.end84 ]\l  %next_input_byte.6 = phi i8* [ %29, %if.end96 ], [ %incdec.ptr86, %if.end84 ]\l  %bytes_in_buffer.6 = phi i64 [ %30, %if.end96 ], [ %dec85, %if.end84 ]\l  %dec100 = add i64 %bytes_in_buffer.6, -1\l  %incdec.ptr101 = getelementptr inbounds i8, i8* %next_input_byte.6, i64 1\l  %32 = load i8, i8* %next_input_byte.6, align 1, !tbaa !17\l  %conv102 = zext i8 %32 to i32\l  %add104 = add i32 %31, %conv102\l  store i32 %add104, i32* %image_width, align 8, !tbaa !20\l  %cmp108 = icmp eq i64 %dec100, 0\l  br i1 %cmp108, label %if.then110, label %if.end118\l|{<s0>T|<s1>F}}"];
	Node0x6938e80:s0 -> Node0x693a910;
	Node0x6938e80:s1 -> Node0x693a9c0;
	Node0x693a910 [shape=record,label="{if.then110:                                       \l  %fill_input_buffer111 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %0, i64 0, i32 3\l  %33 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer111, align 8, !tbaa !16\l  %call112 = tail call i32 %33(%struct.jpeg_decompress_struct* nonnull %cinfo)\l... #4\l  %tobool113 = icmp eq i32 %call112, 0\l  br i1 %tobool113, label %cleanup, label %if.end115\l|{<s0>T|<s1>F}}"];
	Node0x693a910:s0 -> Node0x69aa2f0;
	Node0x693a910:s1 -> Node0x693add0;
	Node0x693add0 [shape=record,label="{if.end115:                                        \l  %34 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %35 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  br label %if.end118\l}"];
	Node0x693add0 -> Node0x693a9c0;
	Node0x693a9c0 [shape=record,label="{if.end118:                                        \l  %next_input_byte.7 = phi i8* [ %34, %if.end115 ], [ %incdec.ptr101,\l... %if.end99 ]\l  %bytes_in_buffer.7 = phi i64 [ %35, %if.end115 ], [ %dec100, %if.end99 ]\l  %36 = load i8, i8* %next_input_byte.7, align 1, !tbaa !17\l  %conv121 = zext i8 %36 to i32\l  %num_components = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 8\l  store i32 %conv121, i32* %num_components, align 8, !tbaa !21\l  %sub = add nsw i64 %add, -8\l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !22\l  %arraydecay = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %37, i64 0, i32 6, i32 0, i64 0\l  %unread_marker = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 72\l  %38 = load i32, i32* %unread_marker, align 4, !tbaa !23\l  store i32 %38, i32* %arraydecay, align 4, !tbaa !24\l  %39 = load i32, i32* %image_width, align 8, !tbaa !20\l  %arrayidx126 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %37, i64 0, i32 6, i32 0, i64 1\l  store i32 %39, i32* %arrayidx126, align 4, !tbaa !24\l  %40 = load i32, i32* %image_height, align 4, !tbaa !19\l  %arrayidx128 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %37, i64 0, i32 6, i32 0, i64 2\l  store i32 %40, i32* %arrayidx128, align 4, !tbaa !24\l  %41 = load i32, i32* %num_components, align 8, !tbaa !21\l  %arrayidx130 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %37, i64 0, i32 6, i32 0, i64 3\l  store i32 %41, i32* %arrayidx130, align 4, !tbaa !24\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %37, i64 0, i32 5\l  store i32 99, i32* %msg_code, align 8, !tbaa !25\l  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %37, i64 0, i32 1\l  %42 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !27\l  %43 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %42(%struct.jpeg_common_struct* %43, i32 1) #4\l  %marker = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 78\l  %44 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader**\l... %marker, align 8, !tbaa !28\l  %saw_SOF = getelementptr inbounds %struct.jpeg_marker_reader,\l... %struct.jpeg_marker_reader* %44, i64 0, i32 6\l  %45 = load i32, i32* %saw_SOF, align 4, !tbaa !29\l  %tobool135 = icmp eq i32 %45, 0\l  br i1 %tobool135, label %if.end140, label %if.then136\l|{<s0>T|<s1>F}}"];
	Node0x693a9c0:s0 -> Node0x693caa0;
	Node0x693a9c0:s1 -> Node0x693cb80;
	Node0x693cb80 [shape=record,label="{if.then136:                                       \l  %46 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !22\l  %msg_code138 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %46, i64 0, i32 5\l  store i32 57, i32* %msg_code138, align 8, !tbaa !25\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %46, i64 0, i32 0\l  %47 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !31\l  tail call void %47(%struct.jpeg_common_struct* %43) #4\l  br label %if.end140\l}"];
	Node0x693cb80 -> Node0x693caa0;
	Node0x693caa0 [shape=record,label="{if.end140:                                        \l  %48 = load i32, i32* %image_height, align 4, !tbaa !19\l  %cmp142 = icmp eq i32 %48, 0\l  br i1 %cmp142, label %if.then151, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x693caa0:s0 -> Node0x699e690;
	Node0x693caa0:s1 -> Node0x699e770;
	Node0x699e770 [shape=record,label="{lor.lhs.false:                                    \l  %49 = load i32, i32* %image_width, align 8, !tbaa !20\l  %cmp145 = icmp eq i32 %49, 0\l  br i1 %cmp145, label %if.then151, label %lor.lhs.false147\l|{<s0>T|<s1>F}}"];
	Node0x699e770:s0 -> Node0x699e690;
	Node0x699e770:s1 -> Node0x693daa0;
	Node0x693daa0 [shape=record,label="{lor.lhs.false147:                                 \l  %50 = load i32, i32* %num_components, align 8, !tbaa !21\l  %cmp149 = icmp slt i32 %50, 1\l  br i1 %cmp149, label %if.then151, label %if.end156\l|{<s0>T|<s1>F}}"];
	Node0x693daa0:s0 -> Node0x699e690;
	Node0x693daa0:s1 -> Node0x693dcb0;
	Node0x699e690 [shape=record,label="{if.then151:                                       \l  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !22\l  %msg_code153 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %51, i64 0, i32 5\l  store i32 31, i32* %msg_code153, align 8, !tbaa !25\l  %error_exit155 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %51, i64 0, i32 0\l  %52 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit155, align 8, !tbaa !31\l  tail call void %52(%struct.jpeg_common_struct* nonnull %43) #4\l  %.pre428 = load i32, i32* %num_components, align 8, !tbaa !21\l  br label %if.end156\l}"];
	Node0x699e690 -> Node0x693dcb0;
	Node0x693dcb0 [shape=record,label="{if.end156:                                        \l  %53 = phi i32 [ %.pre428, %if.then151 ], [ %50, %lor.lhs.false147 ]\l  %mul = mul nsw i32 %53, 3\l  %conv158 = sext i32 %mul to i64\l  %cmp159 = icmp eq i64 %sub, %conv158\l  br i1 %cmp159, label %if.end166, label %if.then161\l|{<s0>T|<s1>F}}"];
	Node0x693dcb0:s0 -> Node0x69a6a80;
	Node0x693dcb0:s1 -> Node0x693eb90;
	Node0x693eb90 [shape=record,label="{if.then161:                                       \l  %54 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !22\l  %msg_code163 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %54, i64 0, i32 5\l  store i32 9, i32* %msg_code163, align 8, !tbaa !25\l  %error_exit165 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %54, i64 0, i32 0\l  %55 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit165, align 8, !tbaa !31\l  tail call void %55(%struct.jpeg_common_struct* nonnull %43) #4\l  br label %if.end166\l}"];
	Node0x693eb90 -> Node0x69a6a80;
	Node0x69a6a80 [shape=record,label="{if.end166:                                        \l  %comp_info = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 43\l  %56 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %comp_info, align 8, !tbaa !32\l  %cmp167 = icmp eq %struct.jpeg_component_info* %56, null\l  br i1 %cmp167, label %if.then169, label %if.end175\l|{<s0>T|<s1>F}}"];
	Node0x69a6a80:s0 -> Node0x693f2b0;
	Node0x69a6a80:s1 -> Node0x693f390;
	Node0x693f2b0 [shape=record,label="{if.then169:                                       \l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %57 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !33\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %57, i64 0, i32 0\l  %58 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !34\l  %59 = load i32, i32* %num_components, align 8, !tbaa !21\l  %conv171 = sext i32 %59 to i64\l  %mul172 = mul nsw i64 %conv171, 96\l  %call173 = tail call i8* %58(%struct.jpeg_common_struct* nonnull %43, i32 1,\l... i64 %mul172) #4\l  %60 = bitcast %struct.jpeg_component_info** %comp_info to i8**\l  store i8* %call173, i8** %60, align 8, !tbaa !32\l  %61 = bitcast i8* %call173 to %struct.jpeg_component_info*\l  br label %if.end175\l}"];
	Node0x693f2b0 -> Node0x693f390;
	Node0x693f390 [shape=record,label="{if.end175:                                        \l  %62 = phi %struct.jpeg_component_info* [ %61, %if.then169 ], [ %56,\l... %if.end166 ]\l  %next_input_byte.8417 = getelementptr inbounds i8, i8* %next_input_byte.7,\l... i64 1\l  %bytes_in_buffer.8418 = add i64 %bytes_in_buffer.7, -1\l  %63 = load i32, i32* %num_components, align 8, !tbaa !21\l  %cmp178419 = icmp sgt i32 %63, 0\l  br i1 %cmp178419, label %for.body.lr.ph, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x693f390:s0 -> Node0x693fec0;
	Node0x693f390:s1 -> Node0x693ffa0;
	Node0x693fec0 [shape=record,label="{for.body.lr.ph:                                   \l  %fill_input_buffer184 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %0, i64 0, i32 3\l  br label %for.body\l}"];
	Node0x693fec0 -> Node0x69401b0;
	Node0x69401b0 [shape=record,label="{for.body:                                         \l  %bytes_in_buffer.8423 = phi i64 [ %bytes_in_buffer.8418, %for.body.lr.ph ],\l... [ %bytes_in_buffer.8, %if.end226 ]\l  %next_input_byte.8422 = phi i8* [ %next_input_byte.8417, %for.body.lr.ph ],\l... [ %next_input_byte.8, %if.end226 ]\l  %ci.0421 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end226 ]\l  %compptr.0420 = phi %struct.jpeg_component_info* [ %62, %for.body.lr.ph ], [\l... %incdec.ptr252, %if.end226 ]\l  %component_index = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0420, i64 0, i32 1\l  store i32 %ci.0421, i32* %component_index, align 4, !tbaa !36\l  %cmp181 = icmp eq i64 %bytes_in_buffer.8423, 0\l  br i1 %cmp181, label %if.then183, label %if.end191\l|{<s0>T|<s1>F}}"];
	Node0x69401b0:s0 -> Node0x69c0080;
	Node0x69401b0:s1 -> Node0x69c0130;
	Node0x69c0080 [shape=record,label="{if.then183:                                       \l  %64 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer184, align 8, !tbaa !16\l  %call185 = tail call i32 %64(%struct.jpeg_decompress_struct* nonnull %cinfo)\l... #4\l  %tobool186 = icmp eq i32 %call185, 0\l  br i1 %tobool186, label %cleanup.loopexit, label %if.end188\l|{<s0>T|<s1>F}}"];
	Node0x69c0080:s0 -> Node0x693a740;
	Node0x69c0080:s1 -> Node0x69c0710;
	Node0x69c0710 [shape=record,label="{if.end188:                                        \l  %65 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %66 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  br label %if.end191\l}"];
	Node0x69c0710 -> Node0x69c0130;
	Node0x69c0130 [shape=record,label="{if.end191:                                        \l  %next_input_byte.9 = phi i8* [ %65, %if.end188 ], [ %next_input_byte.8422,\l... %for.body ]\l  %bytes_in_buffer.9 = phi i64 [ %66, %if.end188 ], [ %bytes_in_buffer.8423,\l... %for.body ]\l  %dec192 = add i64 %bytes_in_buffer.9, -1\l  %incdec.ptr193 = getelementptr inbounds i8, i8* %next_input_byte.9, i64 1\l  %67 = load i8, i8* %next_input_byte.9, align 1, !tbaa !17\l  %conv194 = zext i8 %67 to i32\l  %component_id = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0420, i64 0, i32 0\l  store i32 %conv194, i32* %component_id, align 8, !tbaa !38\l  %cmp198 = icmp eq i64 %dec192, 0\l  br i1 %cmp198, label %if.then200, label %if.end208\l|{<s0>T|<s1>F}}"];
	Node0x69c0130:s0 -> Node0x69c14e0;
	Node0x69c0130:s1 -> Node0x69c15c0;
	Node0x69c14e0 [shape=record,label="{if.then200:                                       \l  %68 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer184, align 8, !tbaa !16\l  %call202 = tail call i32 %68(%struct.jpeg_decompress_struct* nonnull %cinfo)\l... #4\l  %tobool203 = icmp eq i32 %call202, 0\l  br i1 %tobool203, label %cleanup.loopexit, label %if.end205\l|{<s0>T|<s1>F}}"];
	Node0x69c14e0:s0 -> Node0x693a740;
	Node0x69c14e0:s1 -> Node0x69c1900;
	Node0x69c1900 [shape=record,label="{if.end205:                                        \l  %69 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %70 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  br label %if.end208\l}"];
	Node0x69c1900 -> Node0x69c15c0;
	Node0x69c15c0 [shape=record,label="{if.end208:                                        \l  %next_input_byte.10 = phi i8* [ %69, %if.end205 ], [ %incdec.ptr193,\l... %if.end191 ]\l  %bytes_in_buffer.10 = phi i64 [ %70, %if.end205 ], [ %dec192, %if.end191 ]\l  %dec209 = add i64 %bytes_in_buffer.10, -1\l  %incdec.ptr210 = getelementptr inbounds i8, i8* %next_input_byte.10, i64 1\l  %71 = load i8, i8* %next_input_byte.10, align 1, !tbaa !17\l  %conv211 = zext i8 %71 to i32\l  %shr414 = lshr i32 %conv211, 4\l  %h_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0420, i64 0, i32 2\l  store i32 %shr414, i32* %h_samp_factor, align 8, !tbaa !39\l  %and214 = and i32 %conv211, 15\l  %v_samp_factor = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0420, i64 0, i32 3\l  store i32 %and214, i32* %v_samp_factor, align 4, !tbaa !40\l  %cmp216 = icmp eq i64 %dec209, 0\l  br i1 %cmp216, label %if.then218, label %if.end226\l|{<s0>T|<s1>F}}"];
	Node0x69c15c0:s0 -> Node0x6939ae0;
	Node0x69c15c0:s1 -> Node0x6940350;
	Node0x6939ae0 [shape=record,label="{if.then218:                                       \l  %72 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer184, align 8, !tbaa !16\l  %call220 = tail call i32 %72(%struct.jpeg_decompress_struct* %cinfo) #4\l  %tobool221 = icmp eq i32 %call220, 0\l  br i1 %tobool221, label %cleanup.loopexit, label %if.end223\l|{<s0>T|<s1>F}}"];
	Node0x6939ae0:s0 -> Node0x693a740;
	Node0x6939ae0:s1 -> Node0x6939e20;
	Node0x6939e20 [shape=record,label="{if.end223:                                        \l  %73 = load i8*, i8** %next_input_byte1, align 8, !tbaa !10\l  %74 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !13\l  br label %if.end226\l}"];
	Node0x6939e20 -> Node0x6940350;
	Node0x6940350 [shape=record,label="{if.end226:                                        \l  %next_input_byte.11 = phi i8* [ %73, %if.end223 ], [ %incdec.ptr210,\l... %if.end208 ]\l  %bytes_in_buffer.11 = phi i64 [ %74, %if.end223 ], [ %dec209, %if.end208 ]\l  %75 = load i8, i8* %next_input_byte.11, align 1, !tbaa !17\l  %conv229 = zext i8 %75 to i32\l  %quant_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0420, i64 0, i32 4\l  store i32 %conv229, i32* %quant_tbl_no, align 8, !tbaa !41\l  %76 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !22\l  %arraydecay237 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %76, i64 0, i32 6, i32 0, i64 0\l  %77 = load i32, i32* %component_id, align 8, !tbaa !38\l  store i32 %77, i32* %arraydecay237, align 4, !tbaa !24\l  %78 = load i32, i32* %h_samp_factor, align 8, !tbaa !39\l  %arrayidx241 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %76, i64 0, i32 6, i32 0, i64 1\l  store i32 %78, i32* %arrayidx241, align 4, !tbaa !24\l  %79 = load i32, i32* %v_samp_factor, align 4, !tbaa !40\l  %arrayidx243 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %76, i64 0, i32 6, i32 0, i64 2\l  store i32 %79, i32* %arrayidx243, align 4, !tbaa !24\l  %80 = load i32, i32* %quant_tbl_no, align 8, !tbaa !41\l  %arrayidx245 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %76, i64 0, i32 6, i32 0, i64 3\l  store i32 %80, i32* %arrayidx245, align 4, !tbaa !24\l  %msg_code247 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %76, i64 0, i32 5\l  store i32 100, i32* %msg_code247, align 8, !tbaa !25\l  %emit_message249 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %76, i64 0, i32 1\l  %81 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message249, align 8, !tbaa !27\l  tail call void %81(%struct.jpeg_common_struct* nonnull %43, i32 1) #4\l  %inc = add nuw nsw i32 %ci.0421, 1\l  %incdec.ptr252 = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr.0420, i64 1\l  %next_input_byte.8 = getelementptr inbounds i8, i8* %next_input_byte.11, i64\l... 1\l  %bytes_in_buffer.8 = add i64 %bytes_in_buffer.11, -1\l  %82 = load i32, i32* %num_components, align 8, !tbaa !21\l  %cmp178 = icmp slt i32 %inc, %82\l  br i1 %cmp178, label %for.body, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6940350:s0 -> Node0x69401b0;
	Node0x6940350:s1 -> Node0x6985d90;
	Node0x6985d90 [shape=record,label="{for.end.loopexit:                                 \l  %bytes_in_buffer.8.lcssa436 = phi i64 [ %bytes_in_buffer.8, %if.end226 ]\l  %next_input_byte.8.lcssa435 = phi i8* [ %next_input_byte.8, %if.end226 ]\l  br label %for.end\l}"];
	Node0x6985d90 -> Node0x693ffa0;
	Node0x693ffa0 [shape=record,label="{for.end:                                          \l  %bytes_in_buffer.8.lcssa = phi i64 [ %bytes_in_buffer.8418, %if.end175 ], [\l... %bytes_in_buffer.8.lcssa436, %for.end.loopexit ]\l  %next_input_byte.8.lcssa = phi i8* [ %next_input_byte.8417, %if.end175 ], [\l... %next_input_byte.8.lcssa435, %for.end.loopexit ]\l  %83 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader**\l... %marker, align 8, !tbaa !28\l  %saw_SOF254 = getelementptr inbounds %struct.jpeg_marker_reader,\l... %struct.jpeg_marker_reader* %83, i64 0, i32 6\l  store i32 1, i32* %saw_SOF254, align 4, !tbaa !29\l  store i8* %next_input_byte.8.lcssa, i8** %next_input_byte1, align 8, !tbaa\l... !10\l  store i64 %bytes_in_buffer.8.lcssa, i64* %bytes_in_buffer2, align 8, !tbaa\l... !13\l  br label %cleanup\l}"];
	Node0x693ffa0 -> Node0x69aa2f0;
	Node0x693a740 [shape=record,label="{cleanup.loopexit:                                 \l  br label %cleanup\l}"];
	Node0x693a740 -> Node0x69aa2f0;
	Node0x69aa2f0 [shape=record,label="{cleanup:                                          \l  %retval.0 = phi i32 [ 1, %for.end ], [ 0, %if.then ], [ 0, %if.then10 ], [\l... 0, %if.then25 ], [ 0, %if.then42 ], [ 0, %if.then57 ], [ 0, %if.then76 ], [\l... 0, %if.then91 ], [ 0, %if.then110 ], [ 0, %cleanup.loopexit ]\l  ret i32 %retval.0\l}"];
}
