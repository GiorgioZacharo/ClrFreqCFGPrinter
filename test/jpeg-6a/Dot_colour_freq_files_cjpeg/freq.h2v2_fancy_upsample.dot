digraph "CFG for 'h2v2_fancy_upsample' function" {
	label="CFG for 'h2v2_fancy_upsample' function";

	Node0x5cd2430 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %0 = load i8**, i8*** %output_data_ptr, align 8, !tbaa !2\l  %max_v_samp_factor = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 58\l  %1 = load i32, i32* %max_v_samp_factor, align 8, !tbaa !6\l  %cmp123 = icmp sgt i32 %1, 0\l  br i1 %cmp123, label %for.cond.preheader.lr.ph, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x5cd2430:s0 -> Node0x5cd2610;
	Node0x5cd2430:s1 -> Node0x5cd2730;
	Node0x5cd2610 [shape=record, style = filled, fillcolor = blue, label="{for.cond.preheader.lr.ph:                         \l  %downsampled_width = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %compptr, i64 0, i32 10\l  br label %for.cond.preheader\l}"];
	Node0x5cd2610 -> Node0x5cd2970;
	Node0x5cd2970 [shape=record, style = filled, fillcolor = blue, label="{for.cond.preheader:                               \l  %indvars.iv130 = phi i64 [ 0, %for.cond.preheader.lr.ph ], [\l... %indvars.iv.next131, %for.end.1 ]\l  %outrow.0125 = phi i64 [ 0, %for.cond.preheader.lr.ph ], [ %27, %for.end.1 ]\l  %arrayidx = getelementptr inbounds i8*, i8** %input_data, i64 %indvars.iv130\l  %sext = shl i64 %outrow.0125, 32\l  %2 = ashr exact i64 %sext, 32\l  %3 = load i8*, i8** %arrayidx, align 8, !tbaa !2\l  %idxprom3.pn.in = shl i64 %indvars.iv130, 32\l  %sext132 = add i64 %idxprom3.pn.in, -4294967296\l  %idxprom3.pn = ashr exact i64 %sext132, 32\l  %inptr1.0.in = getelementptr inbounds i8*, i8** %input_data, i64 %idxprom3.pn\l  %inptr1.0 = load i8*, i8** %inptr1.0.in, align 8, !tbaa !2\l  %indvars.iv.next = add nsw i64 %2, 1\l  %arrayidx8 = getelementptr inbounds i8*, i8** %0, i64 %2\l  %4 = load i8*, i8** %arrayidx8, align 8, !tbaa !2\l  %incdec.ptr = getelementptr inbounds i8, i8* %3, i64 1\l  %5 = load i8, i8* %3, align 1, !tbaa !11\l  %conv = zext i8 %5 to i32\l  %mul = mul nuw nsw i32 %conv, 3\l  %incdec.ptr9 = getelementptr inbounds i8, i8* %inptr1.0, i64 1\l  %6 = load i8, i8* %inptr1.0, align 1, !tbaa !11\l  %conv10 = zext i8 %6 to i32\l  %add11 = add nuw nsw i32 %mul, %conv10\l  %7 = load i8, i8* %incdec.ptr, align 1, !tbaa !11\l  %conv13 = zext i8 %7 to i32\l  %mul14 = mul nuw nsw i32 %conv13, 3\l  %8 = load i8, i8* %incdec.ptr9, align 1, !tbaa !11\l  %conv16 = zext i8 %8 to i32\l  %add17 = add nuw nsw i32 %mul14, %conv16\l  %mul18 = shl nuw nsw i32 %add11, 2\l  %add19 = add nuw nsw i32 %mul18, 8\l  %shr104 = lshr i32 %add19, 4\l  %conv20 = trunc i32 %shr104 to i8\l  %incdec.ptr21 = getelementptr inbounds i8, i8* %4, i64 1\l  store i8 %conv20, i8* %4, align 1, !tbaa !11\l  %mul22 = mul nuw nsw i32 %add11, 3\l  %add23 = add nuw nsw i32 %mul22, 7\l  %add24 = add nuw nsw i32 %add23, %add17\l  %shr25 = lshr i32 %add24, 4\l  %conv26 = trunc i32 %shr25 to i8\l  store i8 %conv26, i8* %incdec.ptr21, align 1, !tbaa !11\l  %9 = load i32, i32* %downsampled_width, align 8, !tbaa !12\l  %sub28 = add i32 %9, -2\l  %outptr.0109 = getelementptr inbounds i8, i8* %4, i64 2\l  %cmp30110 = icmp eq i32 %sub28, 0\l  br i1 %cmp30110, label %for.end, label %for.body32.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5cd2970:s0 -> Node0x5cd4760;
	Node0x5cd2970:s1 -> Node0x5cc15b0;
	Node0x5cc15b0 [shape=record, style = filled, fillcolor = blue, label="{for.body32.preheader:                             \l  %incdec.ptr15 = getelementptr inbounds i8, i8* %inptr1.0, i64 2\l  %incdec.ptr12 = getelementptr inbounds i8, i8* %3, i64 2\l  %10 = add i32 %9, -3\l  %11 = zext i32 %10 to i64\l  %12 = shl nuw nsw i64 %11, 1\l  br label %for.body32\l}"];
	Node0x5cc15b0 -> Node0x5cd3fd0;
	Node0x5cd3fd0 [shape=record, style = filled, fillcolor = blue, label="{for.body32:                                       \l  %outptr.0117 = phi i8* [ %outptr.0, %for.body32 ], [ %outptr.0109,\l... %for.body32.preheader ]\l  %colctr.0116 = phi i32 [ %dec, %for.body32 ], [ %sub28,\l... %for.body32.preheader ]\l  %lastcolsum.0115 = phi i32 [ %thiscolsum.0114, %for.body32 ], [ %add11,\l... %for.body32.preheader ]\l  %thiscolsum.0114 = phi i32 [ %add38, %for.body32 ], [ %add17,\l... %for.body32.preheader ]\l  %.pn113 = phi i8* [ %outptr.0117, %for.body32 ], [ %4, %for.body32.preheader\l... ]\l  %inptr1.1112 = phi i8* [ %incdec.ptr36, %for.body32 ], [ %incdec.ptr15,\l... %for.body32.preheader ]\l  %inptr0.0111 = phi i8* [ %incdec.ptr33, %for.body32 ], [ %incdec.ptr12,\l... %for.body32.preheader ]\l  %incdec.ptr33 = getelementptr inbounds i8, i8* %inptr0.0111, i64 1\l  %13 = load i8, i8* %inptr0.0111, align 1, !tbaa !11\l  %conv34 = zext i8 %13 to i32\l  %mul35 = mul nuw nsw i32 %conv34, 3\l  %incdec.ptr36 = getelementptr inbounds i8, i8* %inptr1.1112, i64 1\l  %14 = load i8, i8* %inptr1.1112, align 1, !tbaa !11\l  %conv37 = zext i8 %14 to i32\l  %add38 = add nuw nsw i32 %mul35, %conv37\l  %mul39 = mul nsw i32 %thiscolsum.0114, 3\l  %add40 = add nsw i32 %lastcolsum.0115, 8\l  %add41 = add i32 %add40, %mul39\l  %shr42107 = lshr i32 %add41, 4\l  %conv43 = trunc i32 %shr42107 to i8\l  %incdec.ptr44 = getelementptr inbounds i8, i8* %.pn113, i64 3\l  store i8 %conv43, i8* %outptr.0117, align 1, !tbaa !11\l  %add46 = add i32 %mul39, 7\l  %add47 = add i32 %add46, %add38\l  %shr48108 = lshr i32 %add47, 4\l  %conv49 = trunc i32 %shr48108 to i8\l  store i8 %conv49, i8* %incdec.ptr44, align 1, !tbaa !11\l  %dec = add i32 %colctr.0116, -1\l  %outptr.0 = getelementptr inbounds i8, i8* %outptr.0117, i64 2\l  %cmp30 = icmp eq i32 %dec, 0\l  br i1 %cmp30, label %for.end.loopexit, label %for.body32\l|{<s0>T|<s1>F}}"];
	Node0x5cd3fd0:s0 -> Node0x5cd91f0;
	Node0x5cd3fd0:s1 -> Node0x5cd3fd0;
	Node0x5cd91f0 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  %add38.lcssa = phi i32 [ %add38, %for.body32 ]\l  %thiscolsum.0114.lcssa = phi i32 [ %thiscolsum.0114, %for.body32 ]\l  %scevgep = getelementptr i8, i8* %4, i64 4\l  %scevgep127 = getelementptr i8, i8* %scevgep, i64 %12\l  %scevgep129 = getelementptr i8, i8* %outptr.0109, i64 %12\l  br label %for.end\l}"];
	Node0x5cd91f0 -> Node0x5cd4760;
	Node0x5cd4760 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %outptr.0.lcssa = phi i8* [ %outptr.0109, %for.cond.preheader ], [\l... %scevgep127, %for.end.loopexit ]\l  %lastcolsum.0.lcssa = phi i32 [ %add11, %for.cond.preheader ], [\l... %thiscolsum.0114.lcssa, %for.end.loopexit ]\l  %thiscolsum.0.lcssa = phi i32 [ %add17, %for.cond.preheader ], [\l... %add38.lcssa, %for.end.loopexit ]\l  %.pn.lcssa = phi i8* [ %4, %for.cond.preheader ], [ %scevgep129,\l... %for.end.loopexit ]\l  %mul51 = mul nsw i32 %thiscolsum.0.lcssa, 3\l  %add52 = add nsw i32 %lastcolsum.0.lcssa, 8\l  %add53 = add i32 %add52, %mul51\l  %shr54105 = lshr i32 %add53, 4\l  %conv55 = trunc i32 %shr54105 to i8\l  %incdec.ptr56 = getelementptr inbounds i8, i8* %.pn.lcssa, i64 3\l  store i8 %conv55, i8* %outptr.0.lcssa, align 1, !tbaa !11\l  %mul57 = shl nsw i32 %thiscolsum.0.lcssa, 2\l  %add58 = add nsw i32 %mul57, 7\l  %shr59106 = lshr i32 %add58, 4\l  %conv60 = trunc i32 %shr59106 to i8\l  store i8 %conv60, i8* %incdec.ptr56, align 1, !tbaa !11\l  %15 = load i8*, i8** %arrayidx, align 8, !tbaa !2\l  %idxprom3.pn.in.1 = shl i64 %indvars.iv130, 32\l  %sext133 = add i64 %idxprom3.pn.in.1, 4294967296\l  %idxprom3.pn.1 = ashr exact i64 %sext133, 32\l  %inptr1.0.in.1 = getelementptr inbounds i8*, i8** %input_data, i64\l... %idxprom3.pn.1\l  %inptr1.0.1 = load i8*, i8** %inptr1.0.in.1, align 8, !tbaa !2\l  %arrayidx8.1 = getelementptr inbounds i8*, i8** %0, i64 %indvars.iv.next\l  %16 = load i8*, i8** %arrayidx8.1, align 8, !tbaa !2\l  %incdec.ptr.1 = getelementptr inbounds i8, i8* %15, i64 1\l  %17 = load i8, i8* %15, align 1, !tbaa !11\l  %conv.1 = zext i8 %17 to i32\l  %mul.1 = mul nuw nsw i32 %conv.1, 3\l  %incdec.ptr9.1 = getelementptr inbounds i8, i8* %inptr1.0.1, i64 1\l  %18 = load i8, i8* %inptr1.0.1, align 1, !tbaa !11\l  %conv10.1 = zext i8 %18 to i32\l  %add11.1 = add nuw nsw i32 %mul.1, %conv10.1\l  %19 = load i8, i8* %incdec.ptr.1, align 1, !tbaa !11\l  %conv13.1 = zext i8 %19 to i32\l  %mul14.1 = mul nuw nsw i32 %conv13.1, 3\l  %20 = load i8, i8* %incdec.ptr9.1, align 1, !tbaa !11\l  %conv16.1 = zext i8 %20 to i32\l  %add17.1 = add nuw nsw i32 %mul14.1, %conv16.1\l  %mul18.1 = shl nuw nsw i32 %add11.1, 2\l  %add19.1 = add nuw nsw i32 %mul18.1, 8\l  %shr104.1 = lshr i32 %add19.1, 4\l  %conv20.1 = trunc i32 %shr104.1 to i8\l  %incdec.ptr21.1 = getelementptr inbounds i8, i8* %16, i64 1\l  store i8 %conv20.1, i8* %16, align 1, !tbaa !11\l  %mul22.1 = mul nuw nsw i32 %add11.1, 3\l  %add23.1 = add nuw nsw i32 %mul22.1, 7\l  %add24.1 = add nuw nsw i32 %add23.1, %add17.1\l  %shr25.1 = lshr i32 %add24.1, 4\l  %conv26.1 = trunc i32 %shr25.1 to i8\l  store i8 %conv26.1, i8* %incdec.ptr21.1, align 1, !tbaa !11\l  %21 = load i32, i32* %downsampled_width, align 8, !tbaa !12\l  %sub28.1 = add i32 %21, -2\l  %outptr.0109.1 = getelementptr inbounds i8, i8* %16, i64 2\l  %cmp30110.1 = icmp eq i32 %sub28.1, 0\l  br i1 %cmp30110.1, label %for.end.1, label %for.body32.preheader.1\l|{<s0>T|<s1>F}}"];
	Node0x5cd4760:s0 -> Node0x5cd2ab0;
	Node0x5cd4760:s1 -> Node0x5cdbcd0;
	Node0x5cdbe60 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit:                               \l  br label %while.end\l}"];
	Node0x5cdbe60 -> Node0x5cd2730;
	Node0x5cd2730 [shape=record, style = filled, fillcolor = blue, label="{while.end:                                        \l  ret void\l}"];
	Node0x5cdbcd0 [shape=record, style = filled, fillcolor = blue, label="{for.body32.preheader.1:                           \l  %incdec.ptr15.1 = getelementptr inbounds i8, i8* %inptr1.0.1, i64 2\l  %incdec.ptr12.1 = getelementptr inbounds i8, i8* %15, i64 2\l  %22 = add i32 %21, -3\l  %23 = zext i32 %22 to i64\l  %24 = shl nuw nsw i64 %23, 1\l  br label %for.body32.1\l}"];
	Node0x5cdbcd0 -> Node0x5cdc200;
	Node0x5cdc200 [shape=record, style = filled, fillcolor = blue, label="{for.body32.1:                                     \l  %outptr.0117.1 = phi i8* [ %outptr.0.1, %for.body32.1 ], [ %outptr.0109.1,\l... %for.body32.preheader.1 ]\l  %colctr.0116.1 = phi i32 [ %dec.1, %for.body32.1 ], [ %sub28.1,\l... %for.body32.preheader.1 ]\l  %lastcolsum.0115.1 = phi i32 [ %thiscolsum.0114.1, %for.body32.1 ], [\l... %add11.1, %for.body32.preheader.1 ]\l  %thiscolsum.0114.1 = phi i32 [ %add38.1, %for.body32.1 ], [ %add17.1,\l... %for.body32.preheader.1 ]\l  %.pn113.1 = phi i8* [ %outptr.0117.1, %for.body32.1 ], [ %16,\l... %for.body32.preheader.1 ]\l  %inptr1.1112.1 = phi i8* [ %incdec.ptr36.1, %for.body32.1 ], [\l... %incdec.ptr15.1, %for.body32.preheader.1 ]\l  %inptr0.0111.1 = phi i8* [ %incdec.ptr33.1, %for.body32.1 ], [\l... %incdec.ptr12.1, %for.body32.preheader.1 ]\l  %incdec.ptr33.1 = getelementptr inbounds i8, i8* %inptr0.0111.1, i64 1\l  %25 = load i8, i8* %inptr0.0111.1, align 1, !tbaa !11\l  %conv34.1 = zext i8 %25 to i32\l  %mul35.1 = mul nuw nsw i32 %conv34.1, 3\l  %incdec.ptr36.1 = getelementptr inbounds i8, i8* %inptr1.1112.1, i64 1\l  %26 = load i8, i8* %inptr1.1112.1, align 1, !tbaa !11\l  %conv37.1 = zext i8 %26 to i32\l  %add38.1 = add nuw nsw i32 %mul35.1, %conv37.1\l  %mul39.1 = mul nsw i32 %thiscolsum.0114.1, 3\l  %add40.1 = add nsw i32 %lastcolsum.0115.1, 8\l  %add41.1 = add i32 %add40.1, %mul39.1\l  %shr42107.1 = lshr i32 %add41.1, 4\l  %conv43.1 = trunc i32 %shr42107.1 to i8\l  %incdec.ptr44.1 = getelementptr inbounds i8, i8* %.pn113.1, i64 3\l  store i8 %conv43.1, i8* %outptr.0117.1, align 1, !tbaa !11\l  %add46.1 = add i32 %mul39.1, 7\l  %add47.1 = add i32 %add46.1, %add38.1\l  %shr48108.1 = lshr i32 %add47.1, 4\l  %conv49.1 = trunc i32 %shr48108.1 to i8\l  store i8 %conv49.1, i8* %incdec.ptr44.1, align 1, !tbaa !11\l  %dec.1 = add i32 %colctr.0116.1, -1\l  %outptr.0.1 = getelementptr inbounds i8, i8* %outptr.0117.1, i64 2\l  %cmp30.1 = icmp eq i32 %dec.1, 0\l  br i1 %cmp30.1, label %for.end.loopexit.1, label %for.body32.1\l|{<s0>T|<s1>F}}"];
	Node0x5cdc200:s0 -> Node0x5cdd890;
	Node0x5cdc200:s1 -> Node0x5cdc200;
	Node0x5cdd890 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit.1:                               \l  %add38.1.lcssa = phi i32 [ %add38.1, %for.body32.1 ]\l  %thiscolsum.0114.1.lcssa = phi i32 [ %thiscolsum.0114.1, %for.body32.1 ]\l  %scevgep.1 = getelementptr i8, i8* %16, i64 4\l  %scevgep127.1 = getelementptr i8, i8* %scevgep.1, i64 %24\l  %scevgep129.1 = getelementptr i8, i8* %outptr.0109.1, i64 %24\l  br label %for.end.1\l}"];
	Node0x5cdd890 -> Node0x5cd2ab0;
	Node0x5cd2ab0 [shape=record, style = filled, fillcolor = blue, label="{for.end.1:                                        \l  %outptr.0.lcssa.1 = phi i8* [ %outptr.0109.1, %for.end ], [ %scevgep127.1,\l... %for.end.loopexit.1 ]\l  %lastcolsum.0.lcssa.1 = phi i32 [ %add11.1, %for.end ], [\l... %thiscolsum.0114.1.lcssa, %for.end.loopexit.1 ]\l  %thiscolsum.0.lcssa.1 = phi i32 [ %add17.1, %for.end ], [ %add38.1.lcssa,\l... %for.end.loopexit.1 ]\l  %.pn.lcssa.1 = phi i8* [ %16, %for.end ], [ %scevgep129.1,\l... %for.end.loopexit.1 ]\l  %mul51.1 = mul nsw i32 %thiscolsum.0.lcssa.1, 3\l  %add52.1 = add nsw i32 %lastcolsum.0.lcssa.1, 8\l  %add53.1 = add i32 %add52.1, %mul51.1\l  %shr54105.1 = lshr i32 %add53.1, 4\l  %conv55.1 = trunc i32 %shr54105.1 to i8\l  %incdec.ptr56.1 = getelementptr inbounds i8, i8* %.pn.lcssa.1, i64 3\l  store i8 %conv55.1, i8* %outptr.0.lcssa.1, align 1, !tbaa !11\l  %mul57.1 = shl nsw i32 %thiscolsum.0.lcssa.1, 2\l  %add58.1 = add nsw i32 %mul57.1, 7\l  %shr59106.1 = lshr i32 %add58.1, 4\l  %conv60.1 = trunc i32 %shr59106.1 to i8\l  store i8 %conv60.1, i8* %incdec.ptr56.1, align 1, !tbaa !11\l  %27 = add nsw i64 %2, 2\l  %28 = trunc i64 %27 to i32\l  %indvars.iv.next131 = add nuw nsw i64 %indvars.iv130, 1\l  %29 = load i32, i32* %max_v_samp_factor, align 8, !tbaa !6\l  %cmp = icmp slt i32 %28, %29\l  br i1 %cmp, label %for.cond.preheader, label %while.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5cd2ab0:s0 -> Node0x5cd2970;
	Node0x5cd2ab0:s1 -> Node0x5cdbe60;
}
