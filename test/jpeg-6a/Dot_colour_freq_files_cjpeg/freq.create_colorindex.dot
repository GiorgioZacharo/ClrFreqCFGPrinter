digraph "CFG for 'create_colorindex' function" {
	label="CFG for 'create_colorindex' function";

	Node0x6a48280 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %cquantize1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %0 = bitcast %struct.jpeg_color_quantizer** %cquantize1 to\l... %struct.my_cquantizer**\l  %1 = load %struct.my_cquantizer*, %struct.my_cquantizer** %0, align 8, !tbaa\l... !2\l  %dither_mode = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 20\l  %2 = load i32, i32* %dither_mode, align 8, !tbaa !10\l  %cmp = icmp eq i32 %2, 1\l  %is_padded = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 4\l  %. = zext i1 %cmp to i32\l  store i32 %., i32* %is_padded, align 8, !tbaa !11\l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %3 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !14\l  %alloc_sarray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %3, i64 0, i32 2\l  %4 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8**\l... (%struct.jpeg_common_struct*, i32, i32, i32)** %alloc_sarray, align 8, !tbaa\l... !15\l  %5 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %add = select i1 %cmp, i32 766, i32 256\l  %out_color_components = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  %6 = load i32, i32* %out_color_components, align 8, !tbaa !18\l  %call = tail call i8** %4(%struct.jpeg_common_struct* %5, i32 1, i32 %add,\l... i32 %6) #5\l  %colorindex = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 3\l  store i8** %call, i8*** %colorindex, align 8, !tbaa !19\l  %sv_actual = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 2\l  %7 = load i32, i32* %sv_actual, align 8, !tbaa !20\l  %8 = load i32, i32* %out_color_components, align 8, !tbaa !18\l  %cmp4103 = icmp sgt i32 %8, 0\l  br i1 %cmp4103, label %for.body.lr.ph, label %for.end43\l|{<s0>T|<s1>F}}"];
	Node0x6a48280:s0 -> Node0x6a495f0;
	Node0x6a48280:s1 -> Node0x6a31400;
	Node0x6a495f0 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph:                                   \l  br i1 %cmp, label %for.body.us.preheader, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x6a495f0:s0 -> Node0x6a31570;
	Node0x6a495f0:s1 -> Node0x6a31610;
	Node0x6a31610 [shape=record, style = filled, fillcolor = blue, label="{for.body.preheader:                               \l  br label %for.body\l}"];
	Node0x6a31610 -> Node0x6a4ae70;
	Node0x6a31570 [shape=record, style = filled, fillcolor = blue, label="{for.body.us.preheader:                            \l  br label %for.body.us\l}"];
	Node0x6a31570 -> Node0x6a4af50;
	Node0x6a4af50 [shape=record, style = filled, fillcolor = blue, label="{for.body.us:                                      \l  %9 = phi i8** [ %.pre121, %for.inc41.loopexit.us.for.body.us_crit_edge ], [\l... %call, %for.body.us.preheader ]\l  %indvars.iv112 = phi i64 [ %indvars.iv.next113,\l... %for.inc41.loopexit.us.for.body.us_crit_edge ], [ 0, %for.body.us.preheader ]\l  %blksize.0105.us = phi i32 [ %div.us,\l... %for.inc41.loopexit.us.for.body.us_crit_edge ], [ %7, %for.body.us.preheader ]\l  %arrayidx.us = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 5, i64 %indvars.iv112\l  %10 = load i32, i32* %arrayidx.us, align 4, !tbaa !21\l  %div.us = sdiv i32 %blksize.0105.us, %10\l  %arrayidx8.us = getelementptr inbounds i8*, i8** %9, i64 %indvars.iv112\l  %11 = load i8*, i8** %arrayidx8.us, align 8, !tbaa !22\l  %add.ptr.us = getelementptr inbounds i8, i8* %11, i64 255\l  store i8* %add.ptr.us, i8** %arrayidx8.us, align 8, !tbaa !22\l  %12 = load i8**, i8*** %colorindex, align 8, !tbaa !19\l  %arrayidx12.us = getelementptr inbounds i8*, i8** %12, i64 %indvars.iv112\l  %13 = load i8*, i8** %arrayidx12.us, align 8, !tbaa !22\l  %sub.us = add nsw i32 %10, -1\l  %conv2.i.us = sext i32 %sub.us to i64\l  %add3.i.us = add nsw i64 %conv2.i.us, 255\l  %mul4.i.us = shl nsw i32 %sub.us, 1\l  %conv5.i.us = sext i32 %mul4.i.us to i64\l  %div.i.us = sdiv i64 %add3.i.us, %conv5.i.us\l  %conv6.i.us = trunc i64 %div.i.us to i32\l  br label %while.cond.preheader.us\l}"];
	Node0x6a4af50 -> Node0x6a4c6e0;
	Node0x6a4c820 [shape=record, style = filled, fillcolor = blue, label="{for.body28.us:                                    \l  %indvars.iv107 = phi i64 [ 1, %for.cond25.preheader.us ], [\l... %indvars.iv.next108.2, %for.body28.us ]\l  %14 = load i8, i8* %13, align 1, !tbaa !23\l  %15 = sub nsw i64 0, %indvars.iv107\l  %arrayidx32.us = getelementptr inbounds i8, i8* %13, i64 %15\l  store i8 %14, i8* %arrayidx32.us, align 1, !tbaa !23\l  %16 = load i8, i8* %arrayidx33.us, align 1, !tbaa !23\l  %17 = add nuw nsw i64 %indvars.iv107, 255\l  %arrayidx36.us = getelementptr inbounds i8, i8* %13, i64 %17\l  store i8 %16, i8* %arrayidx36.us, align 1, !tbaa !23\l  %18 = load i8, i8* %13, align 1, !tbaa !23\l  %19 = xor i64 %indvars.iv107, -1\l  %arrayidx32.us.1 = getelementptr inbounds i8, i8* %13, i64 %19\l  store i8 %18, i8* %arrayidx32.us.1, align 1, !tbaa !23\l  %20 = load i8, i8* %arrayidx33.us, align 1, !tbaa !23\l  %21 = add nsw i64 %indvars.iv107, 256\l  %arrayidx36.us.1 = getelementptr inbounds i8, i8* %13, i64 %21\l  store i8 %20, i8* %arrayidx36.us.1, align 1, !tbaa !23\l  %22 = load i8, i8* %13, align 1, !tbaa !23\l  %23 = sub i64 -2, %indvars.iv107\l  %arrayidx32.us.2 = getelementptr inbounds i8, i8* %13, i64 %23\l  store i8 %22, i8* %arrayidx32.us.2, align 1, !tbaa !23\l  %24 = load i8, i8* %arrayidx33.us, align 1, !tbaa !23\l  %25 = add nsw i64 %indvars.iv107, 257\l  %arrayidx36.us.2 = getelementptr inbounds i8, i8* %13, i64 %25\l  store i8 %24, i8* %arrayidx36.us.2, align 1, !tbaa !23\l  %indvars.iv.next108.2 = add nsw i64 %indvars.iv107, 3\l  %exitcond111.2 = icmp eq i64 %indvars.iv.next108.2, 256\l  br i1 %exitcond111.2, label %for.inc41.loopexit.us, label %for.body28.us\l|{<s0>T|<s1>F}}"];
	Node0x6a4c820:s0 -> Node0x6a4dbb0;
	Node0x6a4c820:s1 -> Node0x6a4c820;
	Node0x6a4b740 [shape=record, style = filled, fillcolor = blue, label="{while.end.us.loopexit:                            \l  %div.i93.us.lcssa = phi i64 [ %div.i93.us, %while.body.us ]\l  %inc.us.lcssa = phi i32 [ %inc.us, %while.body.us ]\l  %conv6.i94.us = trunc i64 %div.i93.us.lcssa to i32\l  br label %while.end.us\l}"];
	Node0x6a4b740 -> Node0x6a4e4a0;
	Node0x6a4e4a0 [shape=record, style = filled, fillcolor = blue, label="{while.end.us:                                     \l  %val.1.lcssa.us = phi i32 [ %val.0101.us, %while.cond.preheader.us ], [\l... %inc.us.lcssa, %while.end.us.loopexit ]\l  %k.1.lcssa.us = phi i32 [ %k.0100.us, %while.cond.preheader.us ], [\l... %conv6.i94.us, %while.end.us.loopexit ]\l  %mul.us = mul nsw i32 %val.1.lcssa.us, %div.us\l  %conv.us = trunc i32 %mul.us to i8\l  %arrayidx21.us = getelementptr inbounds i8, i8* %13, i64 %indvars.iv\l  store i8 %conv.us, i8* %arrayidx21.us, align 1, !tbaa !23\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond = icmp eq i64 %indvars.iv.next, 256\l  br i1 %exitcond, label %for.cond25.preheader.us, label\l... %while.cond.preheader.us\l|{<s0>T|<s1>F}}"];
	Node0x6a4e4a0:s0 -> Node0x6a4c900;
	Node0x6a4e4a0:s1 -> Node0x6a4c6e0;
	Node0x6a4b870 [shape=record, style = filled, fillcolor = blue, label="{while.body.us:                                    \l  %val.197.us = phi i32 [ %inc.us, %while.body.us ], [ %val.0101.us,\l... %while.body.us.preheader ]\l  %inc.us = add nsw i32 %val.197.us, 1\l  %mul.i.us = shl nsw i32 %inc.us, 1\l  %add.i.us = or i32 %mul.i.us, 1\l  %conv.i.us = sext i32 %add.i.us to i64\l  %mul1.i.us = mul nsw i64 %conv.i.us, 255\l  %add3.i90.us = add nsw i64 %mul1.i.us, %conv2.i.us\l  %div.i93.us = sdiv i64 %add3.i90.us, %conv5.i.us\l  %sext122 = shl i64 %div.i93.us, 32\l  %26 = ashr exact i64 %sext122, 32\l  %cmp17.us = icmp sgt i64 %indvars.iv, %26\l  br i1 %cmp17.us, label %while.body.us, label %while.end.us.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6a4b870:s0 -> Node0x6a4b870;
	Node0x6a4b870:s1 -> Node0x6a4b740;
	Node0x6a4c6e0 [shape=record, style = filled, fillcolor = blue, label="{while.cond.preheader.us:                          \l  %indvars.iv = phi i64 [ %indvars.iv.next, %while.end.us ], [ 0, %for.body.us\l... ]\l  %val.0101.us = phi i32 [ %val.1.lcssa.us, %while.end.us ], [ 0, %for.body.us\l... ]\l  %k.0100.us = phi i32 [ %k.1.lcssa.us, %while.end.us ], [ %conv6.i.us,\l... %for.body.us ]\l  %27 = sext i32 %k.0100.us to i64\l  %cmp1796.us = icmp sgt i64 %indvars.iv, %27\l  br i1 %cmp1796.us, label %while.body.us.preheader, label %while.end.us\l|{<s0>T|<s1>F}}"];
	Node0x6a4c6e0:s0 -> Node0x6a4edb0;
	Node0x6a4c6e0:s1 -> Node0x6a4e4a0;
	Node0x6a4edb0 [shape=record, style = filled, fillcolor = blue, label="{while.body.us.preheader:                          \l  br label %while.body.us\l}"];
	Node0x6a4edb0 -> Node0x6a4b870;
	Node0x6a4c900 [shape=record, style = filled, fillcolor = blue, label="{for.cond25.preheader.us:                          \l  %arrayidx33.us = getelementptr inbounds i8, i8* %13, i64 255\l  br label %for.body28.us\l}"];
	Node0x6a4c900 -> Node0x6a4c820;
	Node0x6a4dbb0 [shape=record, style = filled, fillcolor = blue, label="{for.inc41.loopexit.us:                            \l  %indvars.iv.next113 = add nuw nsw i64 %indvars.iv112, 1\l  %28 = load i32, i32* %out_color_components, align 8, !tbaa !18\l  %29 = sext i32 %28 to i64\l  %cmp4.us = icmp slt i64 %indvars.iv.next113, %29\l  br i1 %cmp4.us, label %for.inc41.loopexit.us.for.body.us_crit_edge, label\l... %for.end43.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6a4dbb0:s0 -> Node0x6a4b0b0;
	Node0x6a4dbb0:s1 -> Node0x6a4f9a0;
	Node0x6a4b0b0 [shape=record, style = filled, fillcolor = blue, label="{for.inc41.loopexit.us.for.body.us_crit_edge:      \l  %.pre121 = load i8**, i8*** %colorindex, align 8, !tbaa !19\l  br label %for.body.us\l}"];
	Node0x6a4b0b0 -> Node0x6a4af50;
	Node0x6a4ae70 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %30 = phi i8** [ %.pre, %for.inc41.for.body_crit_edge ], [ %call,\l... %for.body.preheader ]\l  %indvars.iv119 = phi i64 [ %indvars.iv.next120,\l... %for.inc41.for.body_crit_edge ], [ 0, %for.body.preheader ]\l  %blksize.0105 = phi i32 [ %div, %for.inc41.for.body_crit_edge ], [ %7,\l... %for.body.preheader ]\l  %arrayidx = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 5, i64 %indvars.iv119\l  %31 = load i32, i32* %arrayidx, align 4, !tbaa !21\l  %div = sdiv i32 %blksize.0105, %31\l  %arrayidx12 = getelementptr inbounds i8*, i8** %30, i64 %indvars.iv119\l  %32 = load i8*, i8** %arrayidx12, align 8, !tbaa !22\l  %sub = add nsw i32 %31, -1\l  %conv2.i = sext i32 %sub to i64\l  %add3.i = add nsw i64 %conv2.i, 255\l  %mul4.i = shl nsw i32 %sub, 1\l  %conv5.i = sext i32 %mul4.i to i64\l  %div.i = sdiv i64 %add3.i, %conv5.i\l  %conv6.i = trunc i64 %div.i to i32\l  br label %while.cond.preheader\l}"];
	Node0x6a4ae70 -> Node0x6a505d0;
	Node0x6a505d0 [shape=record, style = filled, fillcolor = blue, label="{while.cond.preheader:                             \l  %indvars.iv116 = phi i64 [ 0, %for.body ], [ %indvars.iv.next117, %while.end\l... ]\l  %val.0101 = phi i32 [ 0, %for.body ], [ %val.1.lcssa, %while.end ]\l  %k.0100 = phi i32 [ %conv6.i, %for.body ], [ %k.1.lcssa, %while.end ]\l  %33 = sext i32 %k.0100 to i64\l  %cmp1796 = icmp sgt i64 %indvars.iv116, %33\l  br i1 %cmp1796, label %while.body.preheader, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x6a505d0:s0 -> Node0x6a4e170;
	Node0x6a505d0:s1 -> Node0x6a50790;
	Node0x6a4e170 [shape=record, style = filled, fillcolor = blue, label="{while.body.preheader:                             \l  br label %while.body\l}"];
	Node0x6a4e170 -> Node0x6a51490;
	Node0x6a51490 [shape=record, style = filled, fillcolor = blue, label="{while.body:                                       \l  %val.197 = phi i32 [ %inc, %while.body ], [ %val.0101, %while.body.preheader\l... ]\l  %inc = add nsw i32 %val.197, 1\l  %mul.i = shl nsw i32 %inc, 1\l  %add.i = or i32 %mul.i, 1\l  %conv.i = sext i32 %add.i to i64\l  %mul1.i = mul nsw i64 %conv.i, 255\l  %add3.i90 = add nsw i64 %mul1.i, %conv2.i\l  %div.i93 = sdiv i64 %add3.i90, %conv5.i\l  %sext = shl i64 %div.i93, 32\l  %34 = ashr exact i64 %sext, 32\l  %cmp17 = icmp sgt i64 %indvars.iv116, %34\l  br i1 %cmp17, label %while.body, label %while.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x6a51490:s0 -> Node0x6a51490;
	Node0x6a51490:s1 -> Node0x6a51b40;
	Node0x6a51b40 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit:                               \l  %div.i93.lcssa = phi i64 [ %div.i93, %while.body ]\l  %inc.lcssa = phi i32 [ %inc, %while.body ]\l  %conv6.i94 = trunc i64 %div.i93.lcssa to i32\l  br label %while.end\l}"];
	Node0x6a51b40 -> Node0x6a50790;
	Node0x6a50790 [shape=record, style = filled, fillcolor = blue, label="{while.end:                                        \l  %val.1.lcssa = phi i32 [ %val.0101, %while.cond.preheader ], [ %inc.lcssa,\l... %while.end.loopexit ]\l  %k.1.lcssa = phi i32 [ %k.0100, %while.cond.preheader ], [ %conv6.i94,\l... %while.end.loopexit ]\l  %mul = mul nsw i32 %val.1.lcssa, %div\l  %conv = trunc i32 %mul to i8\l  %arrayidx21 = getelementptr inbounds i8, i8* %32, i64 %indvars.iv116\l  store i8 %conv, i8* %arrayidx21, align 1, !tbaa !23\l  %indvars.iv.next117 = add nuw nsw i64 %indvars.iv116, 1\l  %exitcond118 = icmp eq i64 %indvars.iv.next117, 256\l  br i1 %exitcond118, label %for.inc41, label %while.cond.preheader\l|{<s0>T|<s1>F}}"];
	Node0x6a50790:s0 -> Node0x6a52290;
	Node0x6a50790:s1 -> Node0x6a505d0;
	Node0x6a52290 [shape=record, style = filled, fillcolor = blue, label="{for.inc41:                                        \l  %indvars.iv.next120 = add nuw nsw i64 %indvars.iv119, 1\l  %35 = load i32, i32* %out_color_components, align 8, !tbaa !18\l  %36 = sext i32 %35 to i64\l  %cmp4 = icmp slt i64 %indvars.iv.next120, %36\l  br i1 %cmp4, label %for.inc41.for.body_crit_edge, label\l... %for.end43.loopexit125\l|{<s0>T|<s1>F}}"];
	Node0x6a52290:s0 -> Node0x6a4fab0;
	Node0x6a52290:s1 -> Node0x6a524d0;
	Node0x6a4fab0 [shape=record, style = filled, fillcolor = blue, label="{for.inc41.for.body_crit_edge:                     \l  %.pre = load i8**, i8*** %colorindex, align 8, !tbaa !19\l  br label %for.body\l}"];
	Node0x6a4fab0 -> Node0x6a4ae70;
	Node0x6a4f9a0 [shape=record, style = filled, fillcolor = blue, label="{for.end43.loopexit:                               \l  br label %for.end43\l}"];
	Node0x6a4f9a0 -> Node0x6a31400;
	Node0x6a524d0 [shape=record, style = filled, fillcolor = blue, label="{for.end43.loopexit125:                            \l  br label %for.end43\l}"];
	Node0x6a524d0 -> Node0x6a31400;
	Node0x6a31400 [shape=record, style = filled, fillcolor = blue, label="{for.end43:                                        \l  ret void\l}"];
}
