digraph "CFG for 'jpeg_start_output' function" {
	label="CFG for 'jpeg_start_output' function";

	Node0x52ee7b0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %global_state = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 4\l  %0 = load i32, i32* %global_state, align 4, !tbaa !2\l  switch i32 %0, label %if.then [\l    i32 207, label %if.end\l    i32 204, label %if.end\l  ]\l|{<s0>def|<s1>207|<s2>204}}"];
	Node0x52ee7b0:s0 -> Node0x52ee900;
	Node0x52ee7b0:s1 -> Node0x52ee9d0;
	Node0x52ee7b0:s2 -> Node0x52ee9d0;
	Node0x52ee900 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %1 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !10\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 5\l  store i32 18, i32* %msg_code, align 8, !tbaa !11\l  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 6, i32 0, i64 0\l  store i32 %0, i32* %arrayidx, align 4, !tbaa !14\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %1, i64 0, i32 0\l  %2 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !15\l  %3 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %2(%struct.jpeg_common_struct* %3) #3\l  br label %if.end\l}"];
	Node0x52ee900 -> Node0x52ee9d0;
	Node0x52ee9d0 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %cmp6 = icmp slt i32 %scan_number, 1\l  %.scan_number = select i1 %cmp6, i32 1, i32 %scan_number\l  %inputctl = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 77\l  %4 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller**\l... %inputctl, align 8, !tbaa !16\l  %eoi_reached = getelementptr inbounds %struct.jpeg_input_controller,\l... %struct.jpeg_input_controller* %4, i64 0, i32 5\l  %5 = load i32, i32* %eoi_reached, align 4, !tbaa !17\l  %tobool = icmp eq i32 %5, 0\l  br i1 %tobool, label %if.end13, label %land.lhs.true9\l|{<s0>T|<s1>F}}"];
	Node0x52ee9d0:s0 -> Node0x52e26e0;
	Node0x52ee9d0:s1 -> Node0x52e27c0;
	Node0x52e27c0 [shape=record, style = filled, fillcolor = blue, label="{land.lhs.true9:                                   \l  %input_scan_number = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 34\l  %6 = load i32, i32* %input_scan_number, align 4, !tbaa !19\l  %cmp10 = icmp sgt i32 %.scan_number, %6\l  %..scan_number = select i1 %cmp10, i32 %6, i32 %.scan_number\l  br label %if.end13\l}"];
	Node0x52e27c0 -> Node0x52e26e0;
	Node0x52e26e0 [shape=record, style = filled, fillcolor = blue, label="{if.end13:                                         \l  %scan_number.addr.1 = phi i32 [ %.scan_number, %if.end ], [ %..scan_number,\l... %land.lhs.true9 ]\l  %output_scan_number = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 36\l  store i32 %scan_number.addr.1, i32* %output_scan_number, align 4, !tbaa !20\l  %7 = load i32, i32* %global_state, align 4, !tbaa !2\l  %cmp.i = icmp eq i32 %7, 204\l  %.pre62.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 73\l  br i1 %cmp.i, label %while.cond.preheader.i, label %if.then.i\l|{<s0>T|<s1>F}}"];
	Node0x52e26e0:s0 -> Node0x52e35d0;
	Node0x52e26e0:s1 -> Node0x52ef4e0;
	Node0x52ef4e0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i:                                        \l  %8 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master**\l... %.pre62.i, align 8, !tbaa !21\l  %prepare_for_output_pass.i = getelementptr inbounds\l... %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %8, i64 0, i32 0\l  %9 = load void (%struct.jpeg_decompress_struct*)*, void\l... (%struct.jpeg_decompress_struct*)** %prepare_for_output_pass.i, align 8,\l... !tbaa !22\l  tail call void %9(%struct.jpeg_decompress_struct* nonnull %cinfo) #3\l  %output_scanline.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 33\l  store i32 0, i32* %output_scanline.i, align 8, !tbaa !24\l  store i32 204, i32* %global_state, align 4, !tbaa !2\l  br label %while.cond.preheader.i\l}"];
	Node0x52ef4e0 -> Node0x52e35d0;
	Node0x52e35d0 [shape=record, style = filled, fillcolor = blue, label="{while.cond.preheader.i:                           \l  %10 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master**\l... %.pre62.i, align 8, !tbaa !21\l  %is_dummy_pass59.i = getelementptr inbounds %struct.jpeg_decomp_master,\l... %struct.jpeg_decomp_master* %10, i64 0, i32 2\l  %11 = load i32, i32* %is_dummy_pass59.i, align 8, !tbaa !25\l  %tobool60.i = icmp eq i32 %11, 0\l  br i1 %tobool60.i, label %while.end28.i, label %while.cond3.preheader.lr.ph.i\l|{<s0>T|<s1>F}}"];
	Node0x52e35d0:s0 -> Node0x52e40e0;
	Node0x52e35d0:s1 -> Node0x52e41f0;
	Node0x52e41f0 [shape=record, style = filled, fillcolor = blue, label="{while.cond3.preheader.lr.ph.i:                    \l  %output_scanline4.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 33\l  %output_height.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 27\l  %progress.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 2\l  %main.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 74\l  %12 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %.pre.i = load i32, i32* %output_scanline4.i, align 8, !tbaa !24\l  br label %while.cond3.i\l}"];
	Node0x52e41f0 -> Node0x52e46e0;
	Node0x52e46e0 [shape=record, style = filled, fillcolor = blue, label="{while.cond3.i:                                    \l  %13 = phi i32 [ %.pre.i, %while.cond3.preheader.lr.ph.i ], [ %.be,\l... %while.cond3.i.backedge ]\l  %14 = load i32, i32* %output_height.i, align 4, !tbaa !26\l  %cmp5.i = icmp ult i32 %13, %14\l  br i1 %cmp5.i, label %while.body6.i, label %while.end.i\l|{<s0>T|<s1>F}}"];
	Node0x52e46e0:s0 -> Node0x52e4ad0;
	Node0x52e46e0:s1 -> Node0x52e4b80;
	Node0x52e4ad0 [shape=record, style = filled, fillcolor = blue, label="{while.body6.i:                                    \l  %15 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr**\l... %progress.i, align 8, !tbaa !27\l  %cmp7.i = icmp eq %struct.jpeg_progress_mgr* %15, null\l  br i1 %cmp7.i, label %if.end16.i, label %if.then8.i\l|{<s0>T|<s1>F}}"];
	Node0x52e4ad0:s0 -> Node0x52e4d90;
	Node0x52e4ad0:s1 -> Node0x52e4e70;
	Node0x52e4e70 [shape=record, style = filled, fillcolor = blue, label="{if.then8.i:                                       \l  %16 = bitcast %struct.jpeg_progress_mgr* %15 to void\l... (%struct.jpeg_common_struct*)**\l  %conv.i = zext i32 %13 to i64\l  %pass_counter.i = getelementptr inbounds %struct.jpeg_progress_mgr,\l... %struct.jpeg_progress_mgr* %15, i64 0, i32 1\l  store i64 %conv.i, i64* %pass_counter.i, align 8, !tbaa !28\l  %conv12.i = zext i32 %14 to i64\l  %pass_limit.i = getelementptr inbounds %struct.jpeg_progress_mgr,\l... %struct.jpeg_progress_mgr* %15, i64 0, i32 2\l  store i64 %conv12.i, i64* %pass_limit.i, align 8, !tbaa !30\l  %17 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %16, align 8, !tbaa !31\l  tail call void %17(%struct.jpeg_common_struct* nonnull %12) #3\l  %.pre61.i = load i32, i32* %output_scanline4.i, align 8, !tbaa !24\l  br label %if.end16.i\l}"];
	Node0x52e4e70 -> Node0x52e4d90;
	Node0x52e4d90 [shape=record, style = filled, fillcolor = blue, label="{if.end16.i:                                       \l  %18 = phi i32 [ %13, %while.body6.i ], [ %.pre61.i, %if.then8.i ]\l  %19 = load %struct.jpeg_d_main_controller*, %struct.jpeg_d_main_controller**\l... %main.i, align 8, !tbaa !32\l  %process_data.i = getelementptr inbounds %struct.jpeg_d_main_controller,\l... %struct.jpeg_d_main_controller* %19, i64 0, i32 1\l  %20 = load void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)*, void\l... (%struct.jpeg_decompress_struct*, i8**, i32*, i32)** %process_data.i, align\l... 8, !tbaa !33\l  tail call void %20(%struct.jpeg_decompress_struct* nonnull %cinfo, i8**\l... null, i32* nonnull %output_scanline4.i, i32 0) #3\l  %21 = load i32, i32* %output_scanline4.i, align 8, !tbaa !24\l  %not.cmp20.i = icmp eq i32 %21, %18\l  br i1 %not.cmp20.i, label %output_pass_setup.exit.loopexit, label\l... %while.cond3.i.backedge\l|{<s0>T|<s1>F}}"];
	Node0x52e4d90:s0 -> Node0x52f7760;
	Node0x52e4d90:s1 -> Node0x52e4850;
	Node0x52e4850 [shape=record, style = filled, fillcolor = blue, label="{while.cond3.i.backedge:                           \l  %.be = phi i32 [ %21, %if.end16.i ], [ 0, %while.end.i ]\l  br label %while.cond3.i\l}"];
	Node0x52e4850 -> Node0x52e46e0;
	Node0x52e4b80 [shape=record, style = filled, fillcolor = blue, label="{while.end.i:                                      \l  %22 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master**\l... %.pre62.i, align 8, !tbaa !21\l  %finish_output_pass.i = getelementptr inbounds %struct.jpeg_decomp_master,\l... %struct.jpeg_decomp_master* %22, i64 0, i32 1\l  %23 = load void (%struct.jpeg_decompress_struct*)*, void\l... (%struct.jpeg_decompress_struct*)** %finish_output_pass.i, align 8, !tbaa !35\l  tail call void %23(%struct.jpeg_decompress_struct* nonnull %cinfo) #3\l  %24 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master**\l... %.pre62.i, align 8, !tbaa !21\l  %prepare_for_output_pass26.i = getelementptr inbounds\l... %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %24, i64 0, i32 0\l  %25 = load void (%struct.jpeg_decompress_struct*)*, void\l... (%struct.jpeg_decompress_struct*)** %prepare_for_output_pass26.i, align 8,\l... !tbaa !22\l  tail call void %25(%struct.jpeg_decompress_struct* nonnull %cinfo) #3\l  store i32 0, i32* %output_scanline4.i, align 8, !tbaa !24\l  %26 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master**\l... %.pre62.i, align 8, !tbaa !21\l  %is_dummy_pass.i = getelementptr inbounds %struct.jpeg_decomp_master,\l... %struct.jpeg_decomp_master* %26, i64 0, i32 2\l  %27 = load i32, i32* %is_dummy_pass.i, align 8, !tbaa !25\l  %tobool.i = icmp eq i32 %27, 0\l  br i1 %tobool.i, label %while.end28.i.loopexit, label %while.cond3.i.backedge\l|{<s0>T|<s1>F}}"];
	Node0x52e4b80:s0 -> Node0x52f86b0;
	Node0x52e4b80:s1 -> Node0x52e4850;
	Node0x52f86b0 [shape=record, style = filled, fillcolor = blue, label="{while.end28.i.loopexit:                           \l  br label %while.end28.i\l}"];
	Node0x52f86b0 -> Node0x52e40e0;
	Node0x52e40e0 [shape=record, style = filled, fillcolor = blue, label="{while.end28.i:                                    \l  %raw_data_out.i = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 15\l  %28 = load i32, i32* %raw_data_out.i, align 4, !tbaa !36\l  %tobool29.i = icmp ne i32 %28, 0\l  %cond.i = select i1 %tobool29.i, i32 206, i32 205\l  store i32 %cond.i, i32* %global_state, align 4, !tbaa !2\l  br label %output_pass_setup.exit\l}"];
	Node0x52e40e0 -> Node0x52f8a80;
	Node0x52f7760 [shape=record, style = filled, fillcolor = blue, label="{output_pass_setup.exit.loopexit:                  \l  br label %output_pass_setup.exit\l}"];
	Node0x52f7760 -> Node0x52f8a80;
	Node0x52f8a80 [shape=record, style = filled, fillcolor = blue, label="{output_pass_setup.exit:                           \l  %retval.3.i = phi i32 [ 1, %while.end28.i ], [ 0,\l... %output_pass_setup.exit.loopexit ]\l  ret i32 %retval.3.i\l}"];
}
