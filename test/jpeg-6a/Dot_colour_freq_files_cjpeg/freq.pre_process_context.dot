digraph "CFG for 'pre_process_context' function" {
	label="CFG for 'pre_process_context' function";

	Node0x5d2c4a0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %prep1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 53\l  %0 = bitcast %struct.jpeg_c_prep_controller** %prep1 to\l... %struct.my_prep_controller**\l  %1 = load %struct.my_prep_controller*, %struct.my_prep_controller** %0,\l... align 8, !tbaa !3\l  %max_v_samp_factor = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 39\l  %2 = load i32, i32* %max_v_samp_factor, align 4, !tbaa !11\l  %mul = mul nsw i32 %2, 3\l  %rows_to_go25 = getelementptr inbounds %struct.my_prep_controller,\l... %struct.my_prep_controller* %1, i64 0, i32 2\l  %3 = load i32, i32* %out_row_group_ctr, align 4, !tbaa !12\l  %cmp149 = icmp ult i32 %3, %out_row_groups_avail\l  br i1 %cmp149, label %while.body.lr.ph, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x5d2c4a0:s0 -> Node0x5d2dea0;
	Node0x5d2c4a0:s1 -> Node0x5d2e950;
	Node0x5d2dea0 [shape=record, style = filled, fillcolor = blue, label="{while.body.lr.ph:                                 \l  %next_buf_stop = getelementptr inbounds %struct.my_prep_controller,\l... %struct.my_prep_controller* %1, i64 0, i32 5\l  %next_buf_row = getelementptr inbounds %struct.my_prep_controller,\l... %struct.my_prep_controller* %1, i64 0, i32 3\l  %cconvert = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 56\l  %arraydecay = getelementptr inbounds %struct.my_prep_controller,\l... %struct.my_prep_controller* %1, i64 0, i32 1, i64 0\l  %image_height = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 7\l  %num_components = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12\l  %image_width = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 6\l  %downsample = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 57\l  %this_row_group = getelementptr inbounds %struct.my_prep_controller,\l... %struct.my_prep_controller* %1, i64 0, i32 4\l  %4 = bitcast i32* %rows_to_go25 to i64*\l  %5 = bitcast i32* %rows_to_go25 to i64*\l  br label %while.body\l}"];
	Node0x5d2dea0 -> Node0x5d2f330;
	Node0x5d2f330 [shape=record, style = filled, fillcolor = blue, label="{while.body:                                       \l  %6 = load i32, i32* %in_row_ctr, align 4, !tbaa !12\l  %cmp2 = icmp ult i32 %6, %in_rows_avail\l  br i1 %cmp2, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5d2f330:s0 -> Node0x5d2e8f0;
	Node0x5d2f330:s1 -> Node0x5d1ef50;
	Node0x5d2e8f0 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %sub = sub i32 %in_rows_avail, %6\l  %7 = load i32, i32* %next_buf_stop, align 4, !tbaa !13\l  %8 = load i32, i32* %next_buf_row, align 4, !tbaa !16\l  %sub3 = sub nsw i32 %7, %8\l  %cmp4 = icmp ult i32 %sub3, %sub\l  %cond = select i1 %cmp4, i32 %sub3, i32 %sub\l  %9 = load %struct.jpeg_color_converter*, %struct.jpeg_color_converter**\l... %cconvert, align 8, !tbaa !17\l  %color_convert = getelementptr inbounds %struct.jpeg_color_converter,\l... %struct.jpeg_color_converter* %9, i64 0, i32 1\l  %10 = load void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)*,\l... void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)** %color_convert,\l... align 8, !tbaa !18\l  %idx.ext = zext i32 %6 to i64\l  %add.ptr = getelementptr inbounds i8*, i8** %input_buf, i64 %idx.ext\l  tail call void %10(%struct.jpeg_compress_struct* %cinfo, i8** %add.ptr,\l... i8*** %arraydecay, i32 %8, i32 %cond) #3\l  %11 = load i32, i32* %rows_to_go25, align 8, !tbaa !20\l  %12 = load i32, i32* %image_height, align 4, !tbaa !21\l  %cmp6 = icmp eq i32 %11, %12\l  br i1 %cmp6, label %for.cond.preheader, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5d2e8f0:s0 -> Node0x5d20850;
	Node0x5d2e8f0:s1 -> Node0x5d35560;
	Node0x5d20850 [shape=record, style = filled, fillcolor = blue, label="{for.cond.preheader:                               \l  %13 = load i32, i32* %num_components, align 4, !tbaa !22\l  %cmp8147 = icmp sgt i32 %13, 0\l  br i1 %cmp8147, label %for.cond9.preheader.preheader, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5d20850:s0 -> Node0x5d35750;
	Node0x5d20850:s1 -> Node0x5d35560;
	Node0x5d35750 [shape=record, style = filled, fillcolor = blue, label="{for.cond9.preheader.preheader:                    \l  %.pre155 = load i32, i32* %max_v_samp_factor, align 4, !tbaa !11\l  br label %for.cond9.preheader\l}"];
	Node0x5d35750 -> Node0x5d35920;
	Node0x5d35920 [shape=record, style = filled, fillcolor = blue, label="{for.cond9.preheader:                              \l  %14 = phi i32 [ %13, %for.cond9.preheader.preheader ], [ %19, %for.end ]\l  %15 = phi i32 [ %.pre155, %for.cond9.preheader.preheader ], [ %20, %for.end ]\l  %indvars.iv150 = phi i64 [ 0, %for.cond9.preheader.preheader ], [\l... %indvars.iv.next151, %for.end ]\l  %cmp11145 = icmp slt i32 %15, 1\l  br i1 %cmp11145, label %for.end, label %for.body12.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x5d35920:s0 -> Node0x5d35ad0;
	Node0x5d35920:s1 -> Node0x5d35f80;
	Node0x5d35f80 [shape=record, style = filled, fillcolor = blue, label="{for.body12.lr.ph:                                 \l  %arrayidx = getelementptr inbounds %struct.my_prep_controller,\l... %struct.my_prep_controller* %1, i64 0, i32 1, i64 %indvars.iv150\l  br label %for.body12\l}"];
	Node0x5d35f80 -> Node0x5d361d0;
	Node0x5d361d0 [shape=record, style = filled, fillcolor = blue, label="{for.body12:                                       \l  %row.0146 = phi i32 [ 1, %for.body12.lr.ph ], [ %inc, %for.body12 ]\l  %16 = load i8**, i8*** %arrayidx, align 8, !tbaa !23\l  %sub17 = sub nsw i32 0, %row.0146\l  %17 = load i32, i32* %image_width, align 8, !tbaa !24\l  tail call void @jcopy_sample_rows(i8** %16, i32 0, i8** %16, i32 %sub17, i32\l... 1, i32 %17) #3\l  %inc = add nuw nsw i32 %row.0146, 1\l  %18 = load i32, i32* %max_v_samp_factor, align 4, !tbaa !11\l  %cmp11 = icmp slt i32 %row.0146, %18\l  br i1 %cmp11, label %for.body12, label %for.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5d361d0:s0 -> Node0x5d361d0;
	Node0x5d361d0:s1 -> Node0x5d36e20;
	Node0x5d36e20 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  %.lcssa = phi i32 [ %18, %for.body12 ]\l  %.pre156 = load i32, i32* %num_components, align 4, !tbaa !22\l  br label %for.end\l}"];
	Node0x5d36e20 -> Node0x5d35ad0;
	Node0x5d35ad0 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %19 = phi i32 [ %.pre156, %for.end.loopexit ], [ %14, %for.cond9.preheader ]\l  %20 = phi i32 [ %.lcssa, %for.end.loopexit ], [ %15, %for.cond9.preheader ]\l  %indvars.iv.next151 = add nuw nsw i64 %indvars.iv150, 1\l  %21 = sext i32 %19 to i64\l  %cmp8 = icmp slt i64 %indvars.iv.next151, %21\l  br i1 %cmp8, label %for.cond9.preheader, label %if.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5d35ad0:s0 -> Node0x5d35920;
	Node0x5d35ad0:s1 -> Node0x5d372f0;
	Node0x5d372f0 [shape=record, style = filled, fillcolor = blue, label="{if.end.loopexit:                                  \l  br label %if.end\l}"];
	Node0x5d372f0 -> Node0x5d35560;
	Node0x5d35560 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %22 = load i32, i32* %in_row_ctr, align 4, !tbaa !12\l  %add = add i32 %22, %cond\l  store i32 %add, i32* %in_row_ctr, align 4, !tbaa !12\l  %23 = load i32, i32* %next_buf_row, align 4, !tbaa !16\l  %add22 = add nsw i32 %23, %cond\l  store i32 %add22, i32* %next_buf_row, align 4, !tbaa !16\l  %24 = load i64, i64* %5, align 8\l  %25 = trunc i64 %24 to i32\l  %sub24 = sub i32 %25, %cond\l  store i32 %sub24, i32* %rows_to_go25, align 8, !tbaa !20\l  %26 = lshr i64 %24, 32\l  %27 = trunc i64 %26 to i32\l  %.pre157 = load i32, i32* %next_buf_stop, align 4, !tbaa !13\l  br label %if.end49\l}"];
	Node0x5d35560 -> Node0x5d37a10;
	Node0x5d1ef50 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %28 = load i64, i64* %4, align 8\l  %29 = trunc i64 %28 to i32\l  %cmp26 = icmp eq i32 %29, 0\l  %30 = lshr i64 %28, 32\l  %31 = trunc i64 %30 to i32\l  br i1 %cmp26, label %if.end28, label %while.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5d1ef50:s0 -> Node0x5d37d00;
	Node0x5d1ef50:s1 -> Node0x5d37e10;
	Node0x5d37d00 [shape=record, style = filled, fillcolor = blue, label="{if.end28:                                         \l  %32 = load i32, i32* %next_buf_stop, align 4, !tbaa !13\l  %cmp31 = icmp slt i32 %31, %32\l  br i1 %cmp31, label %for.cond33.preheader, label %if.end49\l|{<s0>T|<s1>F}}"];
	Node0x5d37d00:s0 -> Node0x5d2f480;
	Node0x5d37d00:s1 -> Node0x5d37a10;
	Node0x5d2f480 [shape=record, style = filled, fillcolor = blue, label="{for.cond33.preheader:                             \l  %33 = load i32, i32* %num_components, align 4, !tbaa !22\l  %cmp35143 = icmp sgt i32 %33, 0\l  br i1 %cmp35143, label %for.body36.preheader, label %if.end49.thread\l|{<s0>T|<s1>F}}"];
	Node0x5d2f480:s0 -> Node0x5d383b0;
	Node0x5d2f480:s1 -> Node0x5d38490;
	Node0x5d383b0 [shape=record, style = filled, fillcolor = blue, label="{for.body36.preheader:                             \l  br label %for.body36\l}"];
	Node0x5d383b0 -> Node0x5d385d0;
	Node0x5d385d0 [shape=record, style = filled, fillcolor = blue, label="{for.body36:                                       \l  %34 = phi i32 [ %39, %expand_bottom_edge.exit.for.body36_crit_edge ], [ %33,\l... %for.body36.preheader ]\l  %35 = phi i32 [ %.pre152, %expand_bottom_edge.exit.for.body36_crit_edge ], [\l... %32, %for.body36.preheader ]\l  %36 = phi i32 [ %.pre, %expand_bottom_edge.exit.for.body36_crit_edge ], [\l... %31, %for.body36.preheader ]\l  %indvars.iv = phi i64 [ %indvars.iv.next,\l... %expand_bottom_edge.exit.for.body36_crit_edge ], [ 0, %for.body36.preheader ]\l  %arrayidx39 = getelementptr inbounds %struct.my_prep_controller,\l... %struct.my_prep_controller* %1, i64 0, i32 1, i64 %indvars.iv\l  %37 = load i8**, i8*** %arrayidx39, align 8, !tbaa !23\l  %38 = load i32, i32* %image_width, align 8, !tbaa !24\l  %cmp6.i = icmp slt i32 %36, %35\l  br i1 %cmp6.i, label %for.body.lr.ph.i, label %expand_bottom_edge.exit\l|{<s0>T|<s1>F}}"];
	Node0x5d385d0:s0 -> Node0x5d39430;
	Node0x5d385d0:s1 -> Node0x5d39510;
	Node0x5d39430 [shape=record, style = filled, fillcolor = blue, label="{for.body.lr.ph.i:                                 \l  %sub.i = add nsw i32 %36, -1\l  br label %for.body.i\l}"];
	Node0x5d39430 -> Node0x5d39720;
	Node0x5d39720 [shape=record, style = filled, fillcolor = blue, label="{for.body.i:                                       \l  %row.07.i = phi i32 [ %36, %for.body.lr.ph.i ], [ %inc.i, %for.body.i ]\l  tail call void @jcopy_sample_rows(i8** %37, i32 %sub.i, i8** %37, i32\l... %row.07.i, i32 1, i32 %38) #3\l  %inc.i = add nsw i32 %row.07.i, 1\l  %exitcond.i = icmp eq i32 %inc.i, %35\l  br i1 %exitcond.i, label %expand_bottom_edge.exit.loopexit, label %for.body.i\l|{<s0>T|<s1>F}}"];
	Node0x5d39720:s0 -> Node0x5d39c20;
	Node0x5d39720:s1 -> Node0x5d39720;
	Node0x5d39c20 [shape=record, style = filled, fillcolor = blue, label="{expand_bottom_edge.exit.loopexit:                 \l  %.pre153 = load i32, i32* %num_components, align 4, !tbaa !22\l  br label %expand_bottom_edge.exit\l}"];
	Node0x5d39c20 -> Node0x5d39510;
	Node0x5d39510 [shape=record, style = filled, fillcolor = blue, label="{expand_bottom_edge.exit:                          \l  %39 = phi i32 [ %.pre153, %expand_bottom_edge.exit.loopexit ], [ %34,\l... %for.body36 ]\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %40 = sext i32 %39 to i64\l  %cmp35 = icmp slt i64 %indvars.iv.next, %40\l  br i1 %cmp35, label %expand_bottom_edge.exit.for.body36_crit_edge, label\l... %for.end45.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5d39510:s0 -> Node0x5d386b0;
	Node0x5d39510:s1 -> Node0x5d39ee0;
	Node0x5d386b0 [shape=record, style = filled, fillcolor = blue, label="{expand_bottom_edge.exit.for.body36_crit_edge:     \l  %.pre = load i32, i32* %next_buf_row, align 4, !tbaa !16\l  %.pre152 = load i32, i32* %next_buf_stop, align 4, !tbaa !13\l  br label %for.body36\l}"];
	Node0x5d386b0 -> Node0x5d385d0;
	Node0x5d39ee0 [shape=record, style = filled, fillcolor = blue, label="{for.end45.loopexit:                               \l  %.pre154 = load i32, i32* %next_buf_stop, align 4, !tbaa !13\l  br label %if.end49.thread\l}"];
	Node0x5d39ee0 -> Node0x5d38490;
	Node0x5d38490 [shape=record, style = filled, fillcolor = blue, label="{if.end49.thread:                                  \l  %41 = phi i32 [ %.pre154, %for.end45.loopexit ], [ %32,\l... %for.cond33.preheader ]\l  store i32 %41, i32* %next_buf_row, align 4, !tbaa !16\l  br label %if.then53\l}"];
	Node0x5d38490 -> Node0x5d3a180;
	Node0x5d37a10 [shape=record, style = filled, fillcolor = blue, label="{if.end49:                                         \l  %42 = phi i32 [ %32, %if.end28 ], [ %.pre157, %if.end ]\l  %43 = phi i32 [ %31, %if.end28 ], [ %27, %if.end ]\l  %cmp52 = icmp eq i32 %43, %42\l  br i1 %cmp52, label %if.then53, label %while.cond.backedge, !prof !25\l|{<s0>T|<s1>F}}"];
	Node0x5d37a10:s0 -> Node0x5d3a180;
	Node0x5d37a10:s1 -> Node0x5d3a430;
	Node0x5d3a180 [shape=record, style = filled, fillcolor = blue, label="{if.then53:                                        \l  %44 = load %struct.jpeg_downsampler*, %struct.jpeg_downsampler**\l... %downsample, align 8, !tbaa !26\l  %downsample54 = getelementptr inbounds %struct.jpeg_downsampler,\l... %struct.jpeg_downsampler* %44, i64 0, i32 1\l  %45 = load void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32)*,\l... void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32)** %downsample54,\l... align 8, !tbaa !27\l  %46 = load i32, i32* %this_row_group, align 8, !tbaa !29\l  %47 = load i32, i32* %out_row_group_ctr, align 4, !tbaa !12\l  tail call void %45(%struct.jpeg_compress_struct* %cinfo, i8*** nonnull\l... %arraydecay, i32 %46, i8*** %output_buf, i32 %47) #3\l  %48 = load i32, i32* %out_row_group_ctr, align 4, !tbaa !12\l  %inc57 = add i32 %48, 1\l  store i32 %inc57, i32* %out_row_group_ctr, align 4, !tbaa !12\l  %49 = load i32, i32* %max_v_samp_factor, align 4, !tbaa !11\l  %50 = load i32, i32* %this_row_group, align 8, !tbaa !29\l  %add60 = add nsw i32 %50, %49\l  %cmp62 = icmp slt i32 %add60, %mul\l  %add60. = select i1 %cmp62, i32 %add60, i32 0\l  store i32 %add60., i32* %this_row_group, align 8, !tbaa !29\l  %51 = load i32, i32* %next_buf_row, align 4, !tbaa !16\l  %cmp67 = icmp slt i32 %51, %mul\l  br i1 %cmp67, label %if.end70, label %if.then68\l|{<s0>T|<s1>F}}"];
	Node0x5d3a180:s0 -> Node0x5d36670;
	Node0x5d3a180:s1 -> Node0x5d36720;
	Node0x5d36720 [shape=record, style = filled, fillcolor = blue, label="{if.then68:                                        \l  store i32 0, i32* %next_buf_row, align 4, !tbaa !16\l  br label %if.end70\l}"];
	Node0x5d36720 -> Node0x5d36670;
	Node0x5d36670 [shape=record, style = filled, fillcolor = blue, label="{if.end70:                                         \l  %52 = phi i32 [ %51, %if.then53 ], [ 0, %if.then68 ]\l  %add73 = add nsw i32 %49, %52\l  store i32 %add73, i32* %next_buf_stop, align 4, !tbaa !13\l  br label %while.cond.backedge\l}"];
	Node0x5d36670 -> Node0x5d3a430;
	Node0x5d3a430 [shape=record, style = filled, fillcolor = blue, label="{while.cond.backedge:                              \l  %53 = load i32, i32* %out_row_group_ctr, align 4, !tbaa !12\l  %cmp = icmp ult i32 %53, %out_row_groups_avail\l  br i1 %cmp, label %while.body, label %while.end.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5d3a430:s0 -> Node0x5d2f330;
	Node0x5d3a430:s1 -> Node0x5d37e10;
	Node0x5d37e10 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit:                               \l  br label %while.end\l}"];
	Node0x5d37e10 -> Node0x5d2e950;
	Node0x5d2e950 [shape=record, style = filled, fillcolor = blue, label="{while.end:                                        \l  ret void\l}"];
}
