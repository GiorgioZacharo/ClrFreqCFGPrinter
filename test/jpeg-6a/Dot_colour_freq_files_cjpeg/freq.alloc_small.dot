digraph "CFG for 'alloc_small' function" {
	label="CFG for 'alloc_small' function";

	Node0x57680e0 [shape=record, style = filled, fillcolor = cyan, label="{entry:\l  %mem1 = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 1\l  %0 = bitcast %struct.jpeg_memory_mgr** %mem1 to %struct.my_memory_mgr**\l  %1 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %0, align 8, !tbaa\l... !3\l  %cmp = icmp ugt i64 %sizeofobject, 999999976\l  br i1 %cmp, label %if.then, label %if.end, !prof !9\l|{<s0>T|<s1>F}}"];
	Node0x57680e0:s0 -> Node0x5768310;
	Node0x57680e0:s1 -> Node0x5768380;
	Node0x5768310 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %err.i = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %2 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align 8,\l... !tbaa !10\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %2, i64 0, i32 5\l  store i32 53, i32* %msg_code.i, align 8, !tbaa !11\l  %arrayidx.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %2, i64 0, i32 6, i32 0, i64 0\l  store i32 1, i32* %arrayidx.i, align 4, !tbaa !14\l  %3 = bitcast %struct.jpeg_error_mgr* %2 to void\l... (%struct.jpeg_common_struct*)**\l  %4 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %3, align 8, !tbaa !15\l  tail call void %4(%struct.jpeg_common_struct* nonnull %cinfo) #5\l  br label %if.end\l}"];
	Node0x5768310 -> Node0x5768380;
	Node0x5768380 [shape=record, style = filled, fillcolor = cyan, label="{if.end:                                           \l  %rem = and i64 %sizeofobject, 7\l  %cmp2 = icmp eq i64 %rem, 0\l  %sub = sub nsw i64 8, %rem\l  %add = select i1 %cmp2, i64 0, i64 %sub\l  %sizeofobject.addr.0 = add i64 %add, %sizeofobject\l  %5 = icmp ugt i32 %pool_id, 1\l  br i1 %5, label %if.then7, label %if.end11, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x5768380:s0 -> Node0x576a7f0;
	Node0x5768380:s1 -> Node0x576a870;
	Node0x576a7f0 [shape=record, style = filled, fillcolor = skyblue, label="{if.then7:                                         \l  %err = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  %6 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !10\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %6, i64 0, i32 5\l  store i32 12, i32* %msg_code, align 8, !tbaa !11\l  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %6, i64 0, i32 6, i32 0, i64 0\l  store i32 %pool_id, i32* %arrayidx, align 4, !tbaa !14\l  %7 = bitcast %struct.jpeg_error_mgr* %6 to void\l... (%struct.jpeg_common_struct*)**\l  %8 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %7, align 8, !tbaa !15\l  tail call void %8(%struct.jpeg_common_struct* nonnull %cinfo) #5\l  br label %if.end11\l}"];
	Node0x576a7f0 -> Node0x576a870;
	Node0x576a870 [shape=record, style = filled, fillcolor = cyan, label="{if.end11:                                         \l  %idxprom = sext i32 %pool_id to i64\l  %arrayidx12 = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %1, i64 0, i32 1, i64 %idxprom\l  %hdr_ptr.0132 = load %union.small_pool_struct*, %union.small_pool_struct**\l... %arrayidx12, align 8, !tbaa !17\l  %cond133 = icmp eq %union.small_pool_struct* %hdr_ptr.0132, null\l  br i1 %cond133, label %if.then19, label %while.body.preheader, !prof !18\l|{<s0>T|<s1>F}}"];
	Node0x576a870:s0 -> Node0x576a490;
	Node0x576a870:s1 -> Node0x576a5a0;
	Node0x576a5a0 [shape=record, style = filled, fillcolor = cyan, label="{while.body.preheader:                             \l  br label %while.body\l}"];
	Node0x576a5a0 -> Node0x576b8c0;
	Node0x576b8c0 [shape=record, style = filled, fillcolor = cyan, label="{while.body:                                       \l  %hdr_ptr.0134 = phi %union.small_pool_struct* [ %hdr_ptr.0, %if.end16 ], [\l... %hdr_ptr.0132, %while.body.preheader ]\l  %bytes_left = getelementptr inbounds %union.small_pool_struct,\l... %union.small_pool_struct* %hdr_ptr.0134, i64 0, i32 0, i32 2\l  %9 = load i64, i64* %bytes_left, align 8, !tbaa !19\l  %cmp14 = icmp ult i64 %9, %sizeofobject.addr.0\l  br i1 %cmp14, label %if.end16, label %if.end57.loopexit, !prof !21\l|{<s0>T|<s1>F}}"];
	Node0x576b8c0:s0 -> Node0x57635d0;
	Node0x576b8c0:s1 -> Node0x5763b00;
	Node0x57635d0 [shape=record, style = filled, fillcolor = skyblue, label="{if.end16:                                         \l  %next = getelementptr inbounds %union.small_pool_struct,\l... %union.small_pool_struct* %hdr_ptr.0134, i64 0, i32 0, i32 0\l  %hdr_ptr.0 = load %union.small_pool_struct*, %union.small_pool_struct**\l... %next, align 8, !tbaa !17\l  %cond = icmp eq %union.small_pool_struct* %hdr_ptr.0, null\l  br i1 %cond, label %if.then19.loopexit, label %while.body, !prof !18\l|{<s0>T|<s1>F}}"];
	Node0x57635d0:s0 -> Node0x576cb50;
	Node0x57635d0:s1 -> Node0x576b8c0;
	Node0x576cb50 [shape=record, style = filled, fillcolor = blue, label="{if.then19.loopexit:                               \l  %hdr_ptr.0134.lcssa148 = phi %union.small_pool_struct* [ %hdr_ptr.0134,\l... %if.end16 ]\l  br label %if.then19\l}"];
	Node0x576cb50 -> Node0x576a490;
	Node0x576a490 [shape=record, style = filled, fillcolor = skyblue, label="{if.then19:                                        \l  %prev_hdr_ptr.0.lcssa = phi %union.small_pool_struct* [ null, %if.end11 ], [\l... %hdr_ptr.0134.lcssa148, %if.then19.loopexit ]\l  %add20 = add i64 %sizeofobject.addr.0, 24\l  %cmp21 = icmp eq %union.small_pool_struct* %prev_hdr_ptr.0.lcssa, null\l  %first_pool_slop.extra_pool_slop = select i1 %cmp21, [2 x i64]*\l... @first_pool_slop, [2 x i64]* @extra_pool_slop\l  %slop.0.in = getelementptr inbounds [2 x i64], [2 x i64]*\l... %first_pool_slop.extra_pool_slop, i64 0, i64 %idxprom\l  %slop.0 = load i64, i64* %slop.0.in, align 8, !tbaa !22\l  %sub28 = sub i64 999999976, %sizeofobject.addr.0\l  %cmp29 = icmp ugt i64 %slop.0, %sub28\l  %sub28.slop.0 = select i1 %cmp29, i64 %sub28, i64 %slop.0\l  %add33125 = add i64 %add20, %sub28.slop.0\l  %call126 = tail call i8* @jpeg_get_small(%struct.jpeg_common_struct* %cinfo,\l... i64 %add33125) #5\l  %cmp34127 = icmp eq i8* %call126, null\l  br i1 %cmp34127, label %if.end36.lr.ph, label %for.end, !prof !23\l|{<s0>T|<s1>F}}"];
	Node0x576a490:s0 -> Node0x576b410;
	Node0x576a490:s1 -> Node0x576b4f0;
	Node0x576b410 [shape=record, style = filled, fillcolor = blue, label="{if.end36.lr.ph:                                   \l  %err.i120 = getelementptr inbounds %struct.jpeg_common_struct,\l... %struct.jpeg_common_struct* %cinfo, i64 0, i32 0\l  br label %if.end36\l}"];
	Node0x576b410 -> Node0x576d520;
	Node0x576d520 [shape=record, style = filled, fillcolor = blue, label="{if.end36:                                         \l  %slop.1128 = phi i64 [ %sub28.slop.0, %if.end36.lr.ph ], [ %div,\l... %for.cond.backedge ]\l  %div = lshr i64 %slop.1128, 1\l  %cmp37 = icmp ult i64 %slop.1128, 100\l  br i1 %cmp37, label %if.then38, label %for.cond.backedge\l|{<s0>T|<s1>F}}"];
	Node0x576d520:s0 -> Node0x575ac10;
	Node0x576d520:s1 -> Node0x575a940;
	Node0x575ac10 [shape=record, style = filled, fillcolor = blue, label="{if.then38:                                        \l  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i120,\l... align 8, !tbaa !10\l  %msg_code.i121 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %10, i64 0, i32 5\l  store i32 53, i32* %msg_code.i121, align 8, !tbaa !11\l  %arrayidx.i122 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %10, i64 0, i32 6, i32 0, i64 0\l  store i32 2, i32* %arrayidx.i122, align 4, !tbaa !14\l  %11 = bitcast %struct.jpeg_error_mgr* %10 to void\l... (%struct.jpeg_common_struct*)**\l  %12 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %11, align 8, !tbaa !15\l  tail call void %12(%struct.jpeg_common_struct* %cinfo) #5\l  br label %for.cond.backedge\l}"];
	Node0x575ac10 -> Node0x575a940;
	Node0x575a940 [shape=record, style = filled, fillcolor = blue, label="{for.cond.backedge:                                \l  %add33 = add i64 %add20, %div\l  %call = tail call i8* @jpeg_get_small(%struct.jpeg_common_struct* %cinfo,\l... i64 %add33) #5\l  %cmp34 = icmp eq i8* %call, null\l  br i1 %cmp34, label %if.end36, label %for.end.loopexit, !prof !23\l|{<s0>T|<s1>F}}"];
	Node0x575a940:s0 -> Node0x576d520;
	Node0x575a940:s1 -> Node0x575b4c0;
	Node0x575b4c0 [shape=record, style = filled, fillcolor = blue, label="{for.end.loopexit:                                 \l  %call.lcssa = phi i8* [ %call, %for.cond.backedge ]\l  %add33.lcssa147 = phi i64 [ %add33, %for.cond.backedge ]\l  %div.lcssa = phi i64 [ %div, %for.cond.backedge ]\l  br label %for.end\l}"];
	Node0x575b4c0 -> Node0x576b4f0;
	Node0x576b4f0 [shape=record, style = filled, fillcolor = skyblue, label="{for.end:                                          \l  %.lcssa.in = phi i8* [ %call126, %if.then19 ], [ %call.lcssa,\l... %for.end.loopexit ]\l  %add33.lcssa = phi i64 [ %add33125, %if.then19 ], [ %add33.lcssa147,\l... %for.end.loopexit ]\l  %slop.1.lcssa = phi i64 [ %sub28.slop.0, %if.then19 ], [ %div.lcssa,\l... %for.end.loopexit ]\l  %.lcssa = bitcast i8* %.lcssa.in to %union.small_pool_struct*\l  %total_space_allocated = getelementptr inbounds %struct.my_memory_mgr,\l... %struct.my_memory_mgr* %1, i64 0, i32 5\l  %13 = load i64, i64* %total_space_allocated, align 8, !tbaa !24\l  %add41 = add i64 %13, %add33.lcssa\l  store i64 %add41, i64* %total_space_allocated, align 8, !tbaa !24\l  %add45 = add i64 %slop.1.lcssa, %sizeofobject.addr.0\l  %bytes_left47 = getelementptr inbounds i8, i8* %.lcssa.in, i64 16\l  %14 = bitcast i8* %bytes_left47 to i64*\l  call void @llvm.memset.p0i8.i64(i8* nonnull %.lcssa.in, i8 0, i64 16, i32 8,\l... i1 false)\l  store i64 %add45, i64* %14, align 8, !tbaa !19\l  br i1 %cmp21, label %if.then49, label %if.else53, !prof !27\l|{<s0>T|<s1>F}}"];
	Node0x576b4f0:s0 -> Node0x5771580;
	Node0x576b4f0:s1 -> Node0x5771e50;
	Node0x5771580 [shape=record, style = filled, fillcolor = skyblue, label="{if.then49:                                        \l  %15 = bitcast %union.small_pool_struct** %arrayidx12 to i8**\l  store i8* %.lcssa.in, i8** %15, align 8, !tbaa !17\l  br label %if.end57\l}"];
	Node0x5771580 -> Node0x5772150;
	Node0x5771e50 [shape=record, style = filled, fillcolor = skyblue, label="{if.else53:                                        \l  %16 = bitcast %union.small_pool_struct* %prev_hdr_ptr.0.lcssa to i8**\l  store i8* %.lcssa.in, i8** %16, align 8, !tbaa !28\l  br label %if.end57\l}"];
	Node0x5771e50 -> Node0x5772150;
	Node0x5763b00 [shape=record, style = filled, fillcolor = cyan, label="{if.end57.loopexit:                                \l  %hdr_ptr.0134.lcssa = phi %union.small_pool_struct* [ %hdr_ptr.0134,\l... %while.body ]\l  br label %if.end57\l}"];
	Node0x5763b00 -> Node0x5772150;
	Node0x5772150 [shape=record, style = filled, fillcolor = cyan, label="{if.end57:                                         \l  %hdr_ptr.1 = phi %union.small_pool_struct* [ %.lcssa, %if.then49 ], [\l... %.lcssa, %if.else53 ], [ %hdr_ptr.0134.lcssa, %if.end57.loopexit ]\l  %add.ptr = getelementptr inbounds %union.small_pool_struct,\l... %union.small_pool_struct* %hdr_ptr.1, i64 1\l  %17 = bitcast %union.small_pool_struct* %add.ptr to i8*\l  %bytes_used59 = getelementptr inbounds %union.small_pool_struct,\l... %union.small_pool_struct* %hdr_ptr.1, i64 0, i32 0, i32 1\l  %18 = load i64, i64* %bytes_used59, align 8, !tbaa !29\l  %add.ptr60 = getelementptr inbounds i8, i8* %17, i64 %18\l  %add63 = add i64 %18, %sizeofobject.addr.0\l  store i64 %add63, i64* %bytes_used59, align 8, !tbaa !29\l  %bytes_left65 = getelementptr inbounds %union.small_pool_struct,\l... %union.small_pool_struct* %hdr_ptr.1, i64 0, i32 0, i32 2\l  %19 = load i64, i64* %bytes_left65, align 8, !tbaa !19\l  %sub66 = sub i64 %19, %sizeofobject.addr.0\l  store i64 %sub66, i64* %bytes_left65, align 8, !tbaa !19\l  ret i8* %add.ptr60\l}"];
}
