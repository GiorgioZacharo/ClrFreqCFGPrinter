digraph "CFG for 'fill_input_buffer' function" {
	label="CFG for 'fill_input_buffer' function";

	Node0x4e29410 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %src1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5\l  %0 = bitcast %struct.jpeg_source_mgr** %src1 to %struct.my_source_mgr**\l  %1 = load %struct.my_source_mgr*, %struct.my_source_mgr** %0, align 8, !tbaa\l... !2\l  %buffer = getelementptr inbounds %struct.my_source_mgr,\l... %struct.my_source_mgr* %1, i64 0, i32 2\l  %2 = load i8*, i8** %buffer, align 8, !tbaa !10\l  %infile = getelementptr inbounds %struct.my_source_mgr,\l... %struct.my_source_mgr* %1, i64 0, i32 1\l  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %infile, align 8, !tbaa !14\l  %call = tail call i64 @fread(i8* %2, i64 1, i64 4096, %struct._IO_FILE* %3)\l  %cmp = icmp eq i64 %call, 0\l  %start_of_file = getelementptr inbounds %struct.my_source_mgr,\l... %struct.my_source_mgr* %1, i64 0, i32 3\l  br i1 %cmp, label %if.then, label %if.end10\l|{<s0>T|<s1>F}}"];
	Node0x4e29410:s0 -> Node0x4e2a820;
	Node0x4e29410:s1 -> Node0x4e2a8f0;
	Node0x4e2a820 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %4 = load i32, i32* %start_of_file, align 8, !tbaa !15\l  %tobool = icmp eq i32 %4, 0\l  %.pre = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  br i1 %tobool, label %if.then.if.end_crit_edge, label %if.then2\l|{<s0>T|<s1>F}}"];
	Node0x4e2a820:s0 -> Node0x4e2b220;
	Node0x4e2a820:s1 -> Node0x4e293a0;
	Node0x4e2b220 [shape=record, style = filled, fillcolor = blue, label="{if.then.if.end_crit_edge:                         \l  %.pre31 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  br label %if.end\l}"];
	Node0x4e2b220 -> Node0x4e221a0;
	Node0x4e293a0 [shape=record, style = filled, fillcolor = blue, label="{if.then2:                                         \l  %5 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %.pre, align 8,\l... !tbaa !16\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %5, i64 0, i32 5\l  store i32 41, i32* %msg_code, align 8, !tbaa !17\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %5, i64 0, i32 0\l  %6 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !19\l  %7 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %6(%struct.jpeg_common_struct* %7) #6\l  br label %if.end\l}"];
	Node0x4e293a0 -> Node0x4e221a0;
	Node0x4e221a0 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %.pre-phi = phi %struct.jpeg_common_struct* [ %.pre31,\l... %if.then.if.end_crit_edge ], [ %7, %if.then2 ]\l  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %.pre, align 8,\l... !tbaa !16\l  %msg_code5 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 5\l  store i32 116, i32* %msg_code5, align 8, !tbaa !17\l  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 1\l  %9 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !20\l  tail call void %9(%struct.jpeg_common_struct* %.pre-phi, i32 -1) #6\l  %10 = load i8*, i8** %buffer, align 8, !tbaa !10\l  store i8 -1, i8* %10, align 1, !tbaa !21\l  %11 = load i8*, i8** %buffer, align 8, !tbaa !10\l  %arrayidx9 = getelementptr inbounds i8, i8* %11, i64 1\l  store i8 -39, i8* %arrayidx9, align 1, !tbaa !21\l  br label %if.end10\l}"];
	Node0x4e221a0 -> Node0x4e2a8f0;
	Node0x4e2a8f0 [shape=record, style = filled, fillcolor = blue, label="{if.end10:                                         \l  %nbytes.0 = phi i64 [ 2, %if.end ], [ %call, %entry ]\l  %12 = bitcast i8** %buffer to i64*\l  %13 = load i64, i64* %12, align 8, !tbaa !10\l  %14 = bitcast %struct.my_source_mgr* %1 to i64*\l  store i64 %13, i64* %14, align 8, !tbaa !22\l  %bytes_in_buffer = getelementptr inbounds %struct.my_source_mgr,\l... %struct.my_source_mgr* %1, i64 0, i32 0, i32 1\l  store i64 %nbytes.0, i64* %bytes_in_buffer, align 8, !tbaa !23\l  store i32 0, i32* %start_of_file, align 8, !tbaa !15\l  ret i32 1\l}"];
}
