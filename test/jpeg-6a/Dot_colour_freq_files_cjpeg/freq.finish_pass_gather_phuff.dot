digraph "CFG for 'finish_pass_gather_phuff' function" {
	label="CFG for 'finish_pass_gather_phuff' function";

	Node0x566f3f0 [shape=record, style = filled, fillcolor = skyblue, label="{entry:\l  %did = alloca [4 x i32], align 16\l  %entropy1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59\l  %0 = bitcast %struct.jpeg_entropy_encoder** %entropy1 to\l... %struct.phuff_entropy_encoder**\l  %1 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder**\l... %0, align 8, !tbaa !3\l  %2 = bitcast [4 x i32]* %did to i8*\l  call void @llvm.lifetime.start(i64 16, i8* %2) #3\l  %EOBRUN.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 9\l  %3 = load i32, i32* %EOBRUN.i, align 4, !tbaa !11\l  %cmp.i = icmp eq i32 %3, 0\l  br i1 %cmp.i, label %emit_eobrun.exit, label %while.cond.i.preheader, !prof\l... !15\l|{<s0>T|<s1>F}}"];
	Node0x566f3f0:s0 -> Node0x566f930;
	Node0x566f3f0:s1 -> Node0x566fa10;
	Node0x566fa10 [shape=record, style = filled, fillcolor = skyblue, label="{while.cond.i.preheader:                           \l  br label %while.cond.i\l}"];
	Node0x566fa10 -> Node0x566fba0;
	Node0x566fba0 [shape=record, style = filled, fillcolor = skyblue, label="{while.cond.i:                                     \l  %temp.0.i = phi i32 [ %shr.i, %while.cond.i ], [ %3, %while.cond.i.preheader\l... ]\l  %nbits.0.i = phi i32 [ %inc.i, %while.cond.i ], [ 0, %while.cond.i.preheader\l... ]\l  %shr.i = ashr i32 %temp.0.i, 1\l  %tobool.i = icmp eq i32 %shr.i, 0\l  %inc.i = add nuw nsw i32 %nbits.0.i, 1\l  br i1 %tobool.i, label %while.end.i, label %while.cond.i, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x566fba0:s0 -> Node0x56701a0;
	Node0x566fba0:s1 -> Node0x566fba0;
	Node0x56701a0 [shape=record, style = filled, fillcolor = skyblue, label="{while.end.i:                                      \l  %nbits.0.i.lcssa = phi i32 [ %nbits.0.i, %while.cond.i ]\l  %ac_tbl_no.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 8\l  %4 = load i32, i32* %ac_tbl_no.i, align 8, !tbaa !17\l  %shl.i = shl i32 %nbits.0.i.lcssa, 4\l  %gather_statistics.i.i = getelementptr inbounds\l... %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 1\l  %5 = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !18\l  %tobool.i.i = icmp eq i32 %5, 0\l  br i1 %tobool.i.i, label %if.else.i.i, label %if.then.i.i, !prof !19\l|{<s0>T|<s1>F}}"];
	Node0x56701a0:s0 -> Node0x56a0bc0;
	Node0x56701a0:s1 -> Node0x56a0ca0;
	Node0x56a0ca0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i.i:                                      \l  %idxprom.i.i = sext i32 %shl.i to i64\l  %idxprom1.i.i = sext i32 %4 to i64\l  %arrayidx.i.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom1.i.i\l  %6 = load i64*, i64** %arrayidx.i.i, align 8, !tbaa !20\l  %arrayidx2.i.i = getelementptr inbounds i64, i64* %6, i64 %idxprom.i.i\l  %7 = load i64, i64* %arrayidx2.i.i, align 8, !tbaa !21\l  %inc.i.i = add nsw i64 %7, 1\l  store i64 %inc.i.i, i64* %arrayidx2.i.i, align 8, !tbaa !21\l  br label %emit_symbol.exit.i\l}"];
	Node0x56a0ca0 -> Node0x56a13e0;
	Node0x56a0bc0 [shape=record, style = filled, fillcolor = blue, label="{if.else.i.i:                                      \l  %idxprom3.i.i = sext i32 %4 to i64\l  %arrayidx4.i.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 14, i64 %idxprom3.i.i\l  %8 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %arrayidx4.i.i,\l... align 8, !tbaa !20\l  %idxprom5.i.i = sext i32 %shl.i to i64\l  %arrayidx6.i.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %8, i64 0, i32 0, i64 %idxprom5.i.i\l  %9 = load i32, i32* %arrayidx6.i.i, align 4, !tbaa !22\l  %arrayidx8.i.i = getelementptr inbounds %struct.c_derived_tbl,\l... %struct.c_derived_tbl* %8, i64 0, i32 1, i64 %idxprom5.i.i\l  %10 = load i8, i8* %arrayidx8.i.i, align 1, !tbaa !23\l  %conv.i.i = sext i8 %10 to i32\l  %conv.i = zext i32 %9 to i64\l  %put_bits1.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 5\l  %11 = load i32, i32* %put_bits1.i, align 8, !tbaa !24\l  %cmp.i58 = icmp eq i8 %10, 0\l  br i1 %cmp.i58, label %if.end.i66, label %if.end7.i, !prof !25\l|{<s0>T|<s1>F}}"];
	Node0x56a0bc0:s0 -> Node0x56a08f0;
	Node0x56a0bc0:s1 -> Node0x560e2b0;
	Node0x56a08f0 [shape=record, style = filled, fillcolor = blue, label="{if.end.i66:                                       \l  %cinfo.i59 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 6\l  %12 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i59, align 8, !tbaa !26\l  %err.i60 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %12, i64 0, i32 0\l  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i60, align\l... 8, !tbaa !27\l  %msg_code.i61 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %13, i64 0, i32 5\l  store i32 39, i32* %msg_code.i61, align 8, !tbaa !28\l  %error_exit.i62 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %13, i64 0, i32 0\l  %14 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i62, align 8, !tbaa !30\l  %15 = bitcast %struct.jpeg_compress_struct* %12 to\l... %struct.jpeg_common_struct*\l  tail call void %14(%struct.jpeg_common_struct* %15) #3\l  %.pre = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !18\l  %tobool.i65 = icmp eq i32 %.pre, 0\l  br i1 %tobool.i65, label %if.end7.i, label %emit_symbol.exit.i, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x56a08f0:s0 -> Node0x560e2b0;
	Node0x56a08f0:s1 -> Node0x56a13e0;
	Node0x560e2b0 [shape=record, style = filled, fillcolor = blue, label="{if.end7.i:                                        \l  %sh_prom.i = zext i32 %conv.i.i to i64\l  %shl.i67 = shl i64 1, %sh_prom.i\l  %sub.i = add i64 %shl.i67, 4294967295\l  %and.i = and i64 %sub.i, %conv.i\l  %add.i = add i32 %11, %conv.i.i\l  %sub8.i = sub nsw i32 24, %add.i\l  %sh_prom9.i = zext i32 %sub8.i to i64\l  %shl10.i = shl i64 %and.i, %sh_prom9.i\l  %put_buffer11.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 4\l  %16 = load i64, i64* %put_buffer11.i, align 8, !tbaa !32\l  %or.i = or i64 %16, %shl10.i\l  %cmp1267.i = icmp sgt i32 %add.i, 7\l  br i1 %cmp1267.i, label %while.body.lr.ph.i, label %while.end.i72, !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x560e2b0:s0 -> Node0x560f630;
	Node0x560e2b0:s1 -> Node0x56a4a60;
	Node0x560f630 [shape=record, style = filled, fillcolor = blue, label="{while.body.lr.ph.i:                               \l  %next_output_byte.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 2\l  %free_in_buffer.i68 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 3\l  %cinfo.i167 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 6\l  %17 = bitcast i8** %next_output_byte.i to \<2 x i64\>*\l  %18 = bitcast i8** %next_output_byte.i to \<2 x i64\>*\l  br label %while.body.i71\l}"];
	Node0x560f630 -> Node0x56a4ed0;
	Node0x56a4ed0 [shape=record, style = filled, fillcolor = blue, label="{while.body.i71:                                   \l  %put_buffer.069.i = phi i64 [ %or.i, %while.body.lr.ph.i ], [ %shl33.i,\l... %if.end32.i ]\l  %put_bits.068.i = phi i32 [ %add.i, %while.body.lr.ph.i ], [ %sub34.i,\l... %if.end32.i ]\l  %shr66.i = lshr i64 %put_buffer.069.i, 16\l  %conv16.i = trunc i64 %shr66.i to i8\l  %19 = load i8*, i8** %next_output_byte.i, align 8, !tbaa !34\l  %incdec.ptr.i69 = getelementptr inbounds i8, i8* %19, i64 1\l  store i8* %incdec.ptr.i69, i8** %next_output_byte.i, align 8, !tbaa !34\l  store i8 %conv16.i, i8* %19, align 1, !tbaa !23\l  %20 = load i64, i64* %free_in_buffer.i68, align 8, !tbaa !35\l  %dec.i70 = add i64 %20, -1\l  store i64 %dec.i70, i64* %free_in_buffer.i68, align 8, !tbaa !35\l  %cmp17.i = icmp eq i64 %dec.i70, 0\l  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i, !prof !36\l|{<s0>T|<s1>F}}"];
	Node0x56a4ed0:s0 -> Node0x56a58e0;
	Node0x56a4ed0:s1 -> Node0x56a5990;
	Node0x56a58e0 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i:                                      \l  %21 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i167, align 8, !tbaa !26\l  %dest1.i168 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %21, i64 0, i32 5\l  %22 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i168, align 8, !tbaa !37\l  %empty_output_buffer.i169 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %22, i64 0, i32 3\l  %23 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i169, align 8, !tbaa\l... !38\l  %call.i170 = tail call i32 %23(%struct.jpeg_compress_struct* %21) #3\l  %tobool.i171 = icmp eq i32 %call.i170, 0\l  br i1 %tobool.i171, label %if.then.i175, label %dump_buffer.exit180, !prof\l... !40\l|{<s0>T|<s1>F}}"];
	Node0x56a58e0:s0 -> Node0x56a5f70;
	Node0x56a58e0:s1 -> Node0x56a6080;
	Node0x56a5f70 [shape=record, style = filled, fillcolor = blue, label="{if.then.i175:                                     \l  %24 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i167, align 8, !tbaa !26\l  %err.i172 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %24, i64 0, i32 0\l  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i172,\l... align 8, !tbaa !27\l  %msg_code.i173 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %25, i64 0, i32 5\l  store i32 22, i32* %msg_code.i173, align 8, !tbaa !28\l  %error_exit.i174 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %25, i64 0, i32 0\l  %26 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i174, align 8, !tbaa !30\l  %27 = bitcast %struct.jpeg_compress_struct* %24 to\l... %struct.jpeg_common_struct*\l  tail call void %26(%struct.jpeg_common_struct* %27) #3\l  br label %dump_buffer.exit180\l}"];
	Node0x56a5f70 -> Node0x56a6080;
	Node0x56a6080 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit180:                              \l  %28 = bitcast %struct.jpeg_destination_mgr* %22 to \<2 x i64\>*\l  %29 = load \<2 x i64\>, \<2 x i64\>* %28, align 8, !tbaa !23\l  store \<2 x i64\> %29, \<2 x i64\>* %17, align 8, !tbaa !23\l  br label %if.end20.i\l}"];
	Node0x56a6080 -> Node0x56a5990;
	Node0x56a5990 [shape=record, style = filled, fillcolor = blue, label="{if.end20.i:                                       \l  %conv15.i = and i64 %shr66.i, 255\l  %cmp21.i = icmp eq i64 %conv15.i, 255\l  br i1 %cmp21.i, label %if.then23.i, label %if.end32.i, !prof !41\l|{<s0>T|<s1>F}}"];
	Node0x56a5990:s0 -> Node0x56a6990;
	Node0x56a5990:s1 -> Node0x56a5010;
	Node0x56a6990 [shape=record, style = filled, fillcolor = blue, label="{if.then23.i:                                      \l  %30 = load i8*, i8** %next_output_byte.i, align 8, !tbaa !34\l  %incdec.ptr25.i = getelementptr inbounds i8, i8* %30, i64 1\l  store i8* %incdec.ptr25.i, i8** %next_output_byte.i, align 8, !tbaa !34\l  store i8 0, i8* %30, align 1, !tbaa !23\l  %31 = load i64, i64* %free_in_buffer.i68, align 8, !tbaa !35\l  %dec27.i = add i64 %31, -1\l  store i64 %dec27.i, i64* %free_in_buffer.i68, align 8, !tbaa !35\l  %cmp28.i = icmp eq i64 %dec27.i, 0\l  br i1 %cmp28.i, label %if.then30.i, label %if.end32.i, !prof !42\l|{<s0>T|<s1>F}}"];
	Node0x56a6990:s0 -> Node0x56a6e90;
	Node0x56a6990:s1 -> Node0x56a5010;
	Node0x56a6e90 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i:                                      \l  %32 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i167, align 8, !tbaa !26\l  %dest1.i74 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %32, i64 0, i32 5\l  %33 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i74, align 8, !tbaa !37\l  %empty_output_buffer.i75 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %33, i64 0, i32 3\l  %34 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i75, align 8, !tbaa !38\l  %call.i76 = tail call i32 %34(%struct.jpeg_compress_struct* %32) #3\l  %tobool.i77 = icmp eq i32 %call.i76, 0\l  br i1 %tobool.i77, label %if.then.i81, label %dump_buffer.exit86, !prof !40\l|{<s0>T|<s1>F}}"];
	Node0x56a6e90:s0 -> Node0x56a7570;
	Node0x56a6e90:s1 -> Node0x56a7680;
	Node0x56a7570 [shape=record, style = filled, fillcolor = blue, label="{if.then.i81:                                      \l  %35 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i167, align 8, !tbaa !26\l  %err.i78 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %35, i64 0, i32 0\l  %36 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i78, align\l... 8, !tbaa !27\l  %msg_code.i79 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %36, i64 0, i32 5\l  store i32 22, i32* %msg_code.i79, align 8, !tbaa !28\l  %error_exit.i80 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %36, i64 0, i32 0\l  %37 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i80, align 8, !tbaa !30\l  %38 = bitcast %struct.jpeg_compress_struct* %35 to\l... %struct.jpeg_common_struct*\l  tail call void %37(%struct.jpeg_common_struct* %38) #3\l  br label %dump_buffer.exit86\l}"];
	Node0x56a7570 -> Node0x56a7680;
	Node0x56a7680 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit86:                               \l  %39 = bitcast %struct.jpeg_destination_mgr* %33 to \<2 x i64\>*\l  %40 = load \<2 x i64\>, \<2 x i64\>* %39, align 8, !tbaa !23\l  store \<2 x i64\> %40, \<2 x i64\>* %18, align 8, !tbaa !23\l  br label %if.end32.i\l}"];
	Node0x56a7680 -> Node0x56a5010;
	Node0x56a5010 [shape=record, style = filled, fillcolor = blue, label="{if.end32.i:                                       \l  %shl33.i = shl i64 %put_buffer.069.i, 8\l  %sub34.i = add nsw i32 %put_bits.068.i, -8\l  %cmp12.i = icmp sgt i32 %sub34.i, 7\l  br i1 %cmp12.i, label %while.body.i71, label %while.end.loopexit.i, !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x56a5010:s0 -> Node0x56a4ed0;
	Node0x56a5010:s1 -> Node0x560f2f0;
	Node0x560f2f0 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit.i:                             \l  %shl33.i.lcssa = phi i64 [ %shl33.i, %if.end32.i ]\l  %41 = and i32 %add.i, 7\l  br label %while.end.i72\l}"];
	Node0x560f2f0 -> Node0x56a4a60;
	Node0x56a4a60 [shape=record, style = filled, fillcolor = blue, label="{while.end.i72:                                    \l  %put_buffer.0.lcssa.i = phi i64 [ %or.i, %if.end7.i ], [ %shl33.i.lcssa,\l... %while.end.loopexit.i ]\l  %put_bits.0.lcssa.i = phi i32 [ %add.i, %if.end7.i ], [ %41,\l... %while.end.loopexit.i ]\l  store i64 %put_buffer.0.lcssa.i, i64* %put_buffer11.i, align 8, !tbaa !32\l  store i32 %put_bits.0.lcssa.i, i32* %put_bits1.i, align 8, !tbaa !24\l  br label %emit_symbol.exit.i\l}"];
	Node0x56a4a60 -> Node0x56a13e0;
	Node0x56a13e0 [shape=record, style = filled, fillcolor = skyblue, label="{emit_symbol.exit.i:                               \l  %tobool2.i = icmp eq i32 %nbits.0.i.lcssa, 0\l  br i1 %tobool2.i, label %if.end.i, label %if.end.i97, !prof !43\l|{<s0>T|<s1>F}}"];
	Node0x56a13e0:s0 -> Node0x55e4b00;
	Node0x56a13e0:s1 -> Node0x55e4b80;
	Node0x55e4b80 [shape=record, style = filled, fillcolor = blue, label="{if.end.i97:                                       \l  %put_bits1.i88 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 5\l  %42 = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !18\l  %tobool.i96 = icmp eq i32 %42, 0\l  br i1 %tobool.i96, label %if.end7.i109, label %if.end.i, !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x55e4b80:s0 -> Node0x560f370;
	Node0x55e4b80:s1 -> Node0x55e4b00;
	Node0x560f370 [shape=record, style = filled, fillcolor = blue, label="{if.end7.i109:                                     \l  %43 = load i32, i32* %put_bits1.i88, align 8, !tbaa !24\l  %44 = load i32, i32* %EOBRUN.i, align 4, !tbaa !11\l  %conv.i87 = zext i32 %44 to i64\l  %sh_prom.i98 = zext i32 %nbits.0.i.lcssa to i64\l  %shl.i99 = shl i64 1, %sh_prom.i98\l  %sub.i100 = add i64 %shl.i99, 4294967295\l  %and.i101 = and i64 %conv.i87, %sub.i100\l  %add.i102 = add i32 %43, %nbits.0.i.lcssa\l  %sub8.i103 = sub nsw i32 24, %add.i102\l  %sh_prom9.i104 = zext i32 %sub8.i103 to i64\l  %shl10.i105 = shl i64 %and.i101, %sh_prom9.i104\l  %put_buffer11.i106 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 4\l  %45 = load i64, i64* %put_buffer11.i106, align 8, !tbaa !32\l  %or.i107 = or i64 %shl10.i105, %45\l  %cmp1267.i108 = icmp sgt i32 %add.i102, 7\l  br i1 %cmp1267.i108, label %while.body.lr.ph.i112, label %while.end.i137,\l... !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x560f370:s0 -> Node0x56ac8b0;
	Node0x560f370:s1 -> Node0x56ac990;
	Node0x56ac8b0 [shape=record, style = filled, fillcolor = blue, label="{while.body.lr.ph.i112:                            \l  %next_output_byte.i110 = getelementptr inbounds\l... %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 2\l  %free_in_buffer.i111 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 3\l  %cinfo.i181 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 6\l  %46 = bitcast i8** %next_output_byte.i110 to \<2 x i64\>*\l  %47 = bitcast i8** %next_output_byte.i110 to \<2 x i64\>*\l  br label %while.body.i120\l}"];
	Node0x56ac8b0 -> Node0x56ace00;
	Node0x56ace00 [shape=record, style = filled, fillcolor = blue, label="{while.body.i120:                                  \l  %put_buffer.069.i113 = phi i64 [ %or.i107, %while.body.lr.ph.i112 ], [\l... %shl33.i130, %if.end32.i133 ]\l  %put_bits.068.i114 = phi i32 [ %add.i102, %while.body.lr.ph.i112 ], [\l... %sub34.i131, %if.end32.i133 ]\l  %shr66.i115 = lshr i64 %put_buffer.069.i113, 16\l  %conv16.i116 = trunc i64 %shr66.i115 to i8\l  %48 = load i8*, i8** %next_output_byte.i110, align 8, !tbaa !34\l  %incdec.ptr.i117 = getelementptr inbounds i8, i8* %48, i64 1\l  store i8* %incdec.ptr.i117, i8** %next_output_byte.i110, align 8, !tbaa !34\l  store i8 %conv16.i116, i8* %48, align 1, !tbaa !23\l  %49 = load i64, i64* %free_in_buffer.i111, align 8, !tbaa !35\l  %dec.i118 = add i64 %49, -1\l  store i64 %dec.i118, i64* %free_in_buffer.i111, align 8, !tbaa !35\l  %cmp17.i119 = icmp eq i64 %dec.i118, 0\l  br i1 %cmp17.i119, label %if.then19.i121, label %if.end20.i124, !prof !36\l|{<s0>T|<s1>F}}"];
	Node0x56ace00:s0 -> Node0x56ad860;
	Node0x56ace00:s1 -> Node0x56ad940;
	Node0x56ad860 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i121:                                   \l  %50 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i181, align 8, !tbaa !26\l  %dest1.i182 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %50, i64 0, i32 5\l  %51 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i182, align 8, !tbaa !37\l  %empty_output_buffer.i183 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %51, i64 0, i32 3\l  %52 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i183, align 8, !tbaa\l... !38\l  %call.i184 = tail call i32 %52(%struct.jpeg_compress_struct* %50) #3\l  %tobool.i185 = icmp eq i32 %call.i184, 0\l  br i1 %tobool.i185, label %if.then.i189, label %dump_buffer.exit194, !prof\l... !40\l|{<s0>T|<s1>F}}"];
	Node0x56ad860:s0 -> Node0x56adf00;
	Node0x56ad860:s1 -> Node0x56ae010;
	Node0x56adf00 [shape=record, style = filled, fillcolor = blue, label="{if.then.i189:                                     \l  %53 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i181, align 8, !tbaa !26\l  %err.i186 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %53, i64 0, i32 0\l  %54 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i186,\l... align 8, !tbaa !27\l  %msg_code.i187 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %54, i64 0, i32 5\l  store i32 22, i32* %msg_code.i187, align 8, !tbaa !28\l  %error_exit.i188 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %54, i64 0, i32 0\l  %55 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i188, align 8, !tbaa !30\l  %56 = bitcast %struct.jpeg_compress_struct* %53 to\l... %struct.jpeg_common_struct*\l  tail call void %55(%struct.jpeg_common_struct* %56) #3\l  br label %dump_buffer.exit194\l}"];
	Node0x56adf00 -> Node0x56ae010;
	Node0x56ae010 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit194:                              \l  %57 = bitcast %struct.jpeg_destination_mgr* %51 to \<2 x i64\>*\l  %58 = load \<2 x i64\>, \<2 x i64\>* %57, align 8, !tbaa !23\l  store \<2 x i64\> %58, \<2 x i64\>* %46, align 8, !tbaa !23\l  br label %if.end20.i124\l}"];
	Node0x56ae010 -> Node0x56ad940;
	Node0x56ad940 [shape=record, style = filled, fillcolor = blue, label="{if.end20.i124:                                    \l  %conv15.i122 = and i64 %shr66.i115, 255\l  %cmp21.i123 = icmp eq i64 %conv15.i122, 255\l  br i1 %cmp21.i123, label %if.then23.i128, label %if.end32.i133, !prof !41\l|{<s0>T|<s1>F}}"];
	Node0x56ad940:s0 -> Node0x56ae950;
	Node0x56ad940:s1 -> Node0x56acf50;
	Node0x56ae950 [shape=record, style = filled, fillcolor = blue, label="{if.then23.i128:                                   \l  %59 = load i8*, i8** %next_output_byte.i110, align 8, !tbaa !34\l  %incdec.ptr25.i125 = getelementptr inbounds i8, i8* %59, i64 1\l  store i8* %incdec.ptr25.i125, i8** %next_output_byte.i110, align 8, !tbaa !34\l  store i8 0, i8* %59, align 1, !tbaa !23\l  %60 = load i64, i64* %free_in_buffer.i111, align 8, !tbaa !35\l  %dec27.i126 = add i64 %60, -1\l  store i64 %dec27.i126, i64* %free_in_buffer.i111, align 8, !tbaa !35\l  %cmp28.i127 = icmp eq i64 %dec27.i126, 0\l  br i1 %cmp28.i127, label %if.then30.i129, label %if.end32.i133, !prof !42\l|{<s0>T|<s1>F}}"];
	Node0x56ae950:s0 -> Node0x56aee90;
	Node0x56ae950:s1 -> Node0x56acf50;
	Node0x56aee90 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i129:                                   \l  %61 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i181, align 8, !tbaa !26\l  %dest1.i140 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %61, i64 0, i32 5\l  %62 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i140, align 8, !tbaa !37\l  %empty_output_buffer.i141 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %62, i64 0, i32 3\l  %63 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i141, align 8, !tbaa\l... !38\l  %call.i142 = tail call i32 %63(%struct.jpeg_compress_struct* %61) #3\l  %tobool.i143 = icmp eq i32 %call.i142, 0\l  br i1 %tobool.i143, label %if.then.i147, label %dump_buffer.exit152, !prof\l... !40\l|{<s0>T|<s1>F}}"];
	Node0x56aee90:s0 -> Node0x56af430;
	Node0x56aee90:s1 -> Node0x56af540;
	Node0x56af430 [shape=record, style = filled, fillcolor = blue, label="{if.then.i147:                                     \l  %64 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i181, align 8, !tbaa !26\l  %err.i144 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %64, i64 0, i32 0\l  %65 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i144,\l... align 8, !tbaa !27\l  %msg_code.i145 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %65, i64 0, i32 5\l  store i32 22, i32* %msg_code.i145, align 8, !tbaa !28\l  %error_exit.i146 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %65, i64 0, i32 0\l  %66 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i146, align 8, !tbaa !30\l  %67 = bitcast %struct.jpeg_compress_struct* %64 to\l... %struct.jpeg_common_struct*\l  tail call void %66(%struct.jpeg_common_struct* %67) #3\l  br label %dump_buffer.exit152\l}"];
	Node0x56af430 -> Node0x56af540;
	Node0x56af540 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit152:                              \l  %68 = bitcast %struct.jpeg_destination_mgr* %62 to \<2 x i64\>*\l  %69 = load \<2 x i64\>, \<2 x i64\>* %68, align 8, !tbaa !23\l  store \<2 x i64\> %69, \<2 x i64\>* %47, align 8, !tbaa !23\l  br label %if.end32.i133\l}"];
	Node0x56af540 -> Node0x56acf50;
	Node0x56acf50 [shape=record, style = filled, fillcolor = blue, label="{if.end32.i133:                                    \l  %shl33.i130 = shl i64 %put_buffer.069.i113, 8\l  %sub34.i131 = add nsw i32 %put_bits.068.i114, -8\l  %cmp12.i132 = icmp sgt i32 %sub34.i131, 7\l  br i1 %cmp12.i132, label %while.body.i120, label %while.end.loopexit.i134,\l... !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x56acf50:s0 -> Node0x56ace00;
	Node0x56acf50:s1 -> Node0x566d470;
	Node0x566d470 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit.i134:                          \l  %shl33.i130.lcssa = phi i64 [ %shl33.i130, %if.end32.i133 ]\l  %70 = and i32 %add.i102, 7\l  br label %while.end.i137\l}"];
	Node0x566d470 -> Node0x56ac990;
	Node0x56ac990 [shape=record, style = filled, fillcolor = blue, label="{while.end.i137:                                   \l  %put_buffer.0.lcssa.i135 = phi i64 [ %or.i107, %if.end7.i109 ], [\l... %shl33.i130.lcssa, %while.end.loopexit.i134 ]\l  %put_bits.0.lcssa.i136 = phi i32 [ %add.i102, %if.end7.i109 ], [ %70,\l... %while.end.loopexit.i134 ]\l  store i64 %put_buffer.0.lcssa.i135, i64* %put_buffer11.i106, align 8, !tbaa\l... !32\l  store i32 %put_bits.0.lcssa.i136, i32* %put_bits1.i88, align 8, !tbaa !24\l  br label %if.end.i\l}"];
	Node0x56ac990 -> Node0x55e4b00;
	Node0x55e4b00 [shape=record, style = filled, fillcolor = skyblue, label="{if.end.i:                                         \l  store i32 0, i32* %EOBRUN.i, align 4, !tbaa !11\l  %BE.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 10\l  %71 = load i32, i32* %BE.i, align 8, !tbaa !45\l  %72 = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !18\l  %tobool.i52 = icmp eq i32 %72, 0\l  %cmp.i53 = icmp ne i32 %71, 0\l  %or.cond.i = and i1 %cmp.i53, %tobool.i52\l  br i1 %or.cond.i, label %while.body.preheader.i, label\l... %emit_buffered_bits.exit, !prof !46\l|{<s0>T|<s1>F}}"];
	Node0x55e4b00:s0 -> Node0x56b08f0;
	Node0x55e4b00:s1 -> Node0x56b09c0;
	Node0x56b08f0 [shape=record, style = filled, fillcolor = blue, label="{while.body.preheader.i:                           \l  %bit_buffer.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 11\l  %73 = load i8*, i8** %bit_buffer.i, align 8, !tbaa !47\l  %put_bits1.i.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 5\l  %put_buffer11.i.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 4\l  %next_output_byte.i.i = getelementptr inbounds\l... %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %1, i64 0, i32 2\l  %free_in_buffer.i.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 3\l  %cinfo.i = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 6\l  %74 = bitcast i8** %next_output_byte.i.i to \<2 x i64\>*\l  %75 = bitcast i8** %next_output_byte.i.i to \<2 x i64\>*\l  br label %while.body.i\l}"];
	Node0x56b08f0 -> Node0x56b1120;
	Node0x56b1120 [shape=record, style = filled, fillcolor = blue, label="{while.body.i:                                     \l  %76 = phi i32 [ %.pre.i, %emit_bits.exit.while.body_crit_edge.i ], [ 0,\l... %while.body.preheader.i ]\l  %bufstart.addr.0.i = phi i8* [ %incdec.ptr.i,\l... %emit_bits.exit.while.body_crit_edge.i ], [ %73, %while.body.preheader.i ]\l  %nbits.addr.0.i = phi i32 [ %dec.i, %emit_bits.exit.while.body_crit_edge.i\l... ], [ %71, %while.body.preheader.i ]\l  %tobool.i.i54 = icmp eq i32 %76, 0\l  br i1 %tobool.i.i54, label %if.end7.i.i, label %emit_bits.exit.i, !prof !44\l|{<s0>T|<s1>F}}"];
	Node0x56b1120:s0 -> Node0x56b17b0;
	Node0x56b1120:s1 -> Node0x56b18c0;
	Node0x56b17b0 [shape=record, style = filled, fillcolor = blue, label="{if.end7.i.i:                                      \l  %77 = load i32, i32* %put_bits1.i.i, align 8, !tbaa !24\l  %78 = load i8, i8* %bufstart.addr.0.i, align 1, !tbaa !23\l  %conv5.i = zext i8 %78 to i64\l  %and.i.i = and i64 %conv5.i, 1\l  %add.i.i = add i32 %77, 1\l  %sub8.i.i = sub i32 23, %77\l  %sh_prom9.i.i = zext i32 %sub8.i.i to i64\l  %shl10.i.i = shl i64 %and.i.i, %sh_prom9.i.i\l  %79 = load i64, i64* %put_buffer11.i.i, align 8, !tbaa !32\l  %or.i.i = or i64 %shl10.i.i, %79\l  %cmp1267.i.i = icmp sgt i32 %add.i.i, 7\l  br i1 %cmp1267.i.i, label %while.body.i.i.preheader, label %while.end.i.i,\l... !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x56b17b0:s0 -> Node0x56a7df0;
	Node0x56b17b0:s1 -> Node0x56a7f10;
	Node0x56a7df0 [shape=record, style = filled, fillcolor = blue, label="{while.body.i.i.preheader:                         \l  br label %while.body.i.i\l}"];
	Node0x56a7df0 -> Node0x56a8080;
	Node0x56a8080 [shape=record, style = filled, fillcolor = blue, label="{while.body.i.i:                                   \l  %put_buffer.069.i.i = phi i64 [ %shl33.i.i, %if.end32.i.i ], [ %or.i.i,\l... %while.body.i.i.preheader ]\l  %put_bits.068.i.i = phi i32 [ %sub34.i.i, %if.end32.i.i ], [ %add.i.i,\l... %while.body.i.i.preheader ]\l  %shr66.i.i = lshr i64 %put_buffer.069.i.i, 16\l  %conv16.i.i = trunc i64 %shr66.i.i to i8\l  %80 = load i8*, i8** %next_output_byte.i.i, align 8, !tbaa !34\l  %incdec.ptr.i.i = getelementptr inbounds i8, i8* %80, i64 1\l  store i8* %incdec.ptr.i.i, i8** %next_output_byte.i.i, align 8, !tbaa !34\l  store i8 %conv16.i.i, i8* %80, align 1, !tbaa !23\l  %81 = load i64, i64* %free_in_buffer.i.i, align 8, !tbaa !35\l  %dec.i.i = add i64 %81, -1\l  store i64 %dec.i.i, i64* %free_in_buffer.i.i, align 8, !tbaa !35\l  %cmp17.i.i = icmp eq i64 %dec.i.i, 0\l  br i1 %cmp17.i.i, label %if.then19.i.i, label %if.end20.i.i, !prof !36\l|{<s0>T|<s1>F}}"];
	Node0x56a8080:s0 -> Node0x56b38d0;
	Node0x56a8080:s1 -> Node0x56b39b0;
	Node0x56b38d0 [shape=record, style = filled, fillcolor = blue, label="{if.then19.i.i:                                    \l  %82 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i, align 8, !tbaa !26\l  %dest1.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %82, i64 0, i32 5\l  %83 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i, align 8, !tbaa !37\l  %empty_output_buffer.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %83, i64 0, i32 3\l  %84 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i, align 8, !tbaa !38\l  %call.i = tail call i32 %84(%struct.jpeg_compress_struct* %82) #3\l  %tobool.i56 = icmp eq i32 %call.i, 0\l  br i1 %tobool.i56, label %if.then.i, label %dump_buffer.exit, !prof !40\l|{<s0>T|<s1>F}}"];
	Node0x56b38d0:s0 -> Node0x56b3f40;
	Node0x56b38d0:s1 -> Node0x56b4050;
	Node0x56b3f40 [shape=record, style = filled, fillcolor = blue, label="{if.then.i:                                        \l  %85 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i, align 8, !tbaa !26\l  %err.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %85, i64 0, i32 0\l  %86 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i, align\l... 8, !tbaa !27\l  %msg_code.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %86, i64 0, i32 5\l  store i32 22, i32* %msg_code.i, align 8, !tbaa !28\l  %error_exit.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %86, i64 0, i32 0\l  %87 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i, align 8, !tbaa !30\l  %88 = bitcast %struct.jpeg_compress_struct* %85 to\l... %struct.jpeg_common_struct*\l  tail call void %87(%struct.jpeg_common_struct* %88) #3\l  br label %dump_buffer.exit\l}"];
	Node0x56b3f40 -> Node0x56b4050;
	Node0x56b4050 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit:                                 \l  %89 = bitcast %struct.jpeg_destination_mgr* %83 to \<2 x i64\>*\l  %90 = load \<2 x i64\>, \<2 x i64\>* %89, align 8, !tbaa !23\l  store \<2 x i64\> %90, \<2 x i64\>* %74, align 8, !tbaa !23\l  br label %if.end20.i.i\l}"];
	Node0x56b4050 -> Node0x56b39b0;
	Node0x56b39b0 [shape=record, style = filled, fillcolor = blue, label="{if.end20.i.i:                                     \l  %conv15.i.i = and i64 %shr66.i.i, 255\l  %cmp21.i.i = icmp eq i64 %conv15.i.i, 255\l  br i1 %cmp21.i.i, label %if.then23.i.i, label %if.end32.i.i, !prof !41\l|{<s0>T|<s1>F}}"];
	Node0x56b39b0:s0 -> Node0x56b49a0;
	Node0x56b39b0:s1 -> Node0x56a81a0;
	Node0x56b49a0 [shape=record, style = filled, fillcolor = blue, label="{if.then23.i.i:                                    \l  %91 = load i8*, i8** %next_output_byte.i.i, align 8, !tbaa !34\l  %incdec.ptr25.i.i = getelementptr inbounds i8, i8* %91, i64 1\l  store i8* %incdec.ptr25.i.i, i8** %next_output_byte.i.i, align 8, !tbaa !34\l  store i8 0, i8* %91, align 1, !tbaa !23\l  %92 = load i64, i64* %free_in_buffer.i.i, align 8, !tbaa !35\l  %dec27.i.i = add i64 %92, -1\l  store i64 %dec27.i.i, i64* %free_in_buffer.i.i, align 8, !tbaa !35\l  %cmp28.i.i = icmp eq i64 %dec27.i.i, 0\l  br i1 %cmp28.i.i, label %if.then30.i.i, label %if.end32.i.i, !prof !42\l|{<s0>T|<s1>F}}"];
	Node0x56b49a0:s0 -> Node0x56b4ee0;
	Node0x56b49a0:s1 -> Node0x56a81a0;
	Node0x56b4ee0 [shape=record, style = filled, fillcolor = blue, label="{if.then30.i.i:                                    \l  %93 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i, align 8, !tbaa !26\l  %dest1.i154 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %93, i64 0, i32 5\l  %94 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i154, align 8, !tbaa !37\l  %empty_output_buffer.i155 = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %94, i64 0, i32 3\l  %95 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i155, align 8, !tbaa\l... !38\l  %call.i156 = tail call i32 %95(%struct.jpeg_compress_struct* %93) #3\l  %tobool.i157 = icmp eq i32 %call.i156, 0\l  br i1 %tobool.i157, label %if.then.i161, label %dump_buffer.exit166, !prof\l... !40\l|{<s0>T|<s1>F}}"];
	Node0x56b4ee0:s0 -> Node0x56b5440;
	Node0x56b4ee0:s1 -> Node0x56b5550;
	Node0x56b5440 [shape=record, style = filled, fillcolor = blue, label="{if.then.i161:                                     \l  %96 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct**\l... %cinfo.i, align 8, !tbaa !26\l  %err.i158 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %96, i64 0, i32 0\l  %97 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i158,\l... align 8, !tbaa !27\l  %msg_code.i159 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %97, i64 0, i32 5\l  store i32 22, i32* %msg_code.i159, align 8, !tbaa !28\l  %error_exit.i160 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %97, i64 0, i32 0\l  %98 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i160, align 8, !tbaa !30\l  %99 = bitcast %struct.jpeg_compress_struct* %96 to\l... %struct.jpeg_common_struct*\l  tail call void %98(%struct.jpeg_common_struct* %99) #3\l  br label %dump_buffer.exit166\l}"];
	Node0x56b5440 -> Node0x56b5550;
	Node0x56b5550 [shape=record, style = filled, fillcolor = blue, label="{dump_buffer.exit166:                              \l  %100 = bitcast %struct.jpeg_destination_mgr* %94 to \<2 x i64\>*\l  %101 = load \<2 x i64\>, \<2 x i64\>* %100, align 8, !tbaa !23\l  store \<2 x i64\> %101, \<2 x i64\>* %75, align 8, !tbaa !23\l  br label %if.end32.i.i\l}"];
	Node0x56b5550 -> Node0x56a81a0;
	Node0x56a81a0 [shape=record, style = filled, fillcolor = blue, label="{if.end32.i.i:                                     \l  %shl33.i.i = shl i64 %put_buffer.069.i.i, 8\l  %sub34.i.i = add nsw i32 %put_bits.068.i.i, -8\l  %cmp12.i.i = icmp sgt i32 %sub34.i.i, 7\l  br i1 %cmp12.i.i, label %while.body.i.i, label %while.end.loopexit.i.i,\l... !prof !33\l|{<s0>T|<s1>F}}"];
	Node0x56a81a0:s0 -> Node0x56a8080;
	Node0x56a81a0:s1 -> Node0x56b5f10;
	Node0x56b5f10 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit.i.i:                           \l  %shl33.i.i.lcssa = phi i64 [ %shl33.i.i, %if.end32.i.i ]\l  %102 = and i32 %add.i.i, 7\l  br label %while.end.i.i\l}"];
	Node0x56b5f10 -> Node0x56a7f10;
	Node0x56a7f10 [shape=record, style = filled, fillcolor = blue, label="{while.end.i.i:                                    \l  %put_buffer.0.lcssa.i.i = phi i64 [ %or.i.i, %if.end7.i.i ], [\l... %shl33.i.i.lcssa, %while.end.loopexit.i.i ]\l  %put_bits.0.lcssa.i.i = phi i32 [ %add.i.i, %if.end7.i.i ], [ %102,\l... %while.end.loopexit.i.i ]\l  store i64 %put_buffer.0.lcssa.i.i, i64* %put_buffer11.i.i, align 8, !tbaa !32\l  store i32 %put_bits.0.lcssa.i.i, i32* %put_bits1.i.i, align 8, !tbaa !24\l  br label %emit_bits.exit.i\l}"];
	Node0x56a7f10 -> Node0x56b18c0;
	Node0x56b18c0 [shape=record, style = filled, fillcolor = blue, label="{emit_bits.exit.i:                                 \l  %dec.i = add i32 %nbits.addr.0.i, -1\l  %cmp.old.i = icmp eq i32 %dec.i, 0\l  br i1 %cmp.old.i, label %emit_buffered_bits.exit.loopexit, label\l... %emit_bits.exit.while.body_crit_edge.i, !prof !48\l|{<s0>T|<s1>F}}"];
	Node0x56b18c0:s0 -> Node0x56b64c0;
	Node0x56b18c0:s1 -> Node0x56b1250;
	Node0x56b1250 [shape=record, style = filled, fillcolor = blue, label="{emit_bits.exit.while.body_crit_edge.i:            \l  %incdec.ptr.i = getelementptr inbounds i8, i8* %bufstart.addr.0.i, i64 1\l  %.pre.i = load i32, i32* %gather_statistics.i.i, align 8, !tbaa !18\l  br label %while.body.i\l}"];
	Node0x56b1250 -> Node0x56b1120;
	Node0x56b64c0 [shape=record, style = filled, fillcolor = blue, label="{emit_buffered_bits.exit.loopexit:                 \l  br label %emit_buffered_bits.exit\l}"];
	Node0x56b64c0 -> Node0x56b09c0;
	Node0x56b09c0 [shape=record, style = filled, fillcolor = skyblue, label="{emit_buffered_bits.exit:                          \l  store i32 0, i32* %BE.i, align 8, !tbaa !45\l  br label %emit_eobrun.exit\l}"];
	Node0x56b09c0 -> Node0x566f930;
	Node0x566f930 [shape=record, style = filled, fillcolor = skyblue, label="{emit_eobrun.exit:                                 \l  %Ss = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 47\l  %103 = load i32, i32* %Ss, align 4, !tbaa !49\l  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 16, i32 16, i1 false)\l  %comps_in_scan = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 41\l  %104 = load i32, i32* %comps_in_scan, align 4, !tbaa !50\l  %cmp2195 = icmp sgt i32 %104, 0\l  br i1 %cmp2195, label %for.body.lr.ph, label %for.end, !prof !51\l|{<s0>T|<s1>F}}"];
	Node0x566f930:s0 -> Node0x56b69e0;
	Node0x566f930:s1 -> Node0x56b6a30;
	Node0x56b69e0 [shape=record, style = filled, fillcolor = skyblue, label="{for.body.lr.ph:                                   \l  %cmp = icmp eq i32 %103, 0\l  %Ah = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 49\l  %105 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  br i1 %cmp, label %for.body.us.preheader, label %for.body.preheader, !prof\l... !52\l|{<s0>T|<s1>F}}"];
	Node0x56b69e0:s0 -> Node0x56b6d40;
	Node0x56b69e0:s1 -> Node0x56b6e10;
	Node0x56b6e10 [shape=record, style = filled, fillcolor = skyblue, label="{for.body.preheader:                               \l  br label %for.body\l}"];
	Node0x56b6e10 -> Node0x56b7050;
	Node0x56b6d40 [shape=record, style = filled, fillcolor = skyblue, label="{for.body.us.preheader:                            \l  br label %for.body.us\l}"];
	Node0x56b6d40 -> Node0x56b7130;
	Node0x56b7130 [shape=record, style = filled, fillcolor = skyblue, label="{for.body.us:                                      \l  %106 = phi i32 [ %113, %for.inc.us ], [ %104, %for.body.us.preheader ]\l  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.us ], [ 0,\l... %for.body.us.preheader ]\l  %107 = load i32, i32* %Ah, align 4, !tbaa !53\l  %cmp4.us = icmp eq i32 %107, 0\l  br i1 %cmp4.us, label %if.end.us, label %for.inc.us, !prof !54\l|{<s0>T|<s1>F}}"];
	Node0x56b7130:s0 -> Node0x56b7620;
	Node0x56b7130:s1 -> Node0x56b7290;
	Node0x56b7620 [shape=record, style = filled, fillcolor = skyblue, label="{if.end.us:                                        \l  %arrayidx.us = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv\l  %108 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx.us, align 8, !tbaa !20\l  %dc_tbl_no.us = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %108, i64 0, i32 5\l  %tbl.0.us = load i32, i32* %dc_tbl_no.us, align 4, !tbaa !22\l  %idxprom8.us = sext i32 %tbl.0.us to i64\l  %arrayidx9.us = getelementptr inbounds [4 x i32], [4 x i32]* %did, i64 0,\l... i64 %idxprom8.us\l  %109 = load i32, i32* %arrayidx9.us, align 4, !tbaa !22\l  %tobool10.us = icmp eq i32 %109, 0\l  br i1 %tobool10.us, label %if.then11.us, label %for.inc.us, !prof !55\l|{<s0>T|<s1>F}}"];
	Node0x56b7620:s0 -> Node0x56b7d60;
	Node0x56b7620:s1 -> Node0x56b7290;
	Node0x56b7d60 [shape=record, style = filled, fillcolor = skyblue, label="{if.then11.us:                                     \l  %arrayidx15.us = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 16, i64 %idxprom8.us\l  %110 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx15.us, align 8,\l... !tbaa !20\l  %cmp20.us = icmp eq %struct.JHUFF_TBL* %110, null\l  br i1 %cmp20.us, label %if.then22.us, label %if.end23.us, !prof !56\l|{<s0>T|<s1>F}}"];
	Node0x56b7d60:s0 -> Node0x568f2b0;
	Node0x56b7d60:s1 -> Node0x568f390;
	Node0x568f2b0 [shape=record, style = filled, fillcolor = blue, label="{if.then22.us:                                     \l  %call.us = tail call %struct.JHUFF_TBL*\l... @jpeg_alloc_huff_table(%struct.jpeg_common_struct* nonnull %105) #3\l  store %struct.JHUFF_TBL* %call.us, %struct.JHUFF_TBL** %arrayidx15.us, align\l... 8, !tbaa !20\l  br label %if.end23.us\l}"];
	Node0x568f2b0 -> Node0x568f390;
	Node0x568f390 [shape=record, style = filled, fillcolor = skyblue, label="{if.end23.us:                                      \l  %111 = phi %struct.JHUFF_TBL* [ %call.us, %if.then22.us ], [ %110,\l... %if.then11.us ]\l  %arrayidx25.us = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom8.us\l  %112 = load i64*, i64** %arrayidx25.us, align 8, !tbaa !20\l  tail call void @jpeg_gen_optimal_table(%struct.jpeg_compress_struct* nonnull\l... %cinfo, %struct.JHUFF_TBL* %111, i64* %112) #3\l  store i32 1, i32* %arrayidx9.us, align 4, !tbaa !22\l  %.pre201 = load i32, i32* %comps_in_scan, align 4, !tbaa !50\l  br label %for.inc.us\l}"];
	Node0x568f390 -> Node0x56b7290;
	Node0x56b7290 [shape=record, style = filled, fillcolor = skyblue, label="{for.inc.us:                                       \l  %113 = phi i32 [ %.pre201, %if.end23.us ], [ %106, %if.end.us ], [ %106,\l... %for.body.us ]\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %114 = sext i32 %113 to i64\l  %cmp2.us = icmp slt i64 %indvars.iv.next, %114\l  br i1 %cmp2.us, label %for.body.us, label %for.end.loopexit, !prof !51\l|{<s0>T|<s1>F}}"];
	Node0x56b7290:s0 -> Node0x56b7130;
	Node0x56b7290:s1 -> Node0x56b8ff0;
	Node0x56b7050 [shape=record, style = filled, fillcolor = skyblue, label="{for.body:                                         \l  %115 = phi i32 [ %121, %for.inc ], [ %104, %for.body.preheader ]\l  %indvars.iv198 = phi i64 [ %indvars.iv.next199, %for.inc ], [ 0,\l... %for.body.preheader ]\l  %arrayidx = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv198\l  %116 = load %struct.jpeg_component_info*, %struct.jpeg_component_info**\l... %arrayidx, align 8, !tbaa !20\l  %ac_tbl_no = getelementptr inbounds %struct.jpeg_component_info,\l... %struct.jpeg_component_info* %116, i64 0, i32 6\l  %tbl.0 = load i32, i32* %ac_tbl_no, align 4, !tbaa !22\l  %idxprom8 = sext i32 %tbl.0 to i64\l  %arrayidx9 = getelementptr inbounds [4 x i32], [4 x i32]* %did, i64 0, i64\l... %idxprom8\l  %117 = load i32, i32* %arrayidx9, align 4, !tbaa !22\l  %tobool10 = icmp eq i32 %117, 0\l  br i1 %tobool10, label %if.then11, label %for.inc, !prof !55\l|{<s0>T|<s1>F}}"];
	Node0x56b7050:s0 -> Node0x56b9f30;
	Node0x56b7050:s1 -> Node0x56b9790;
	Node0x56b9f30 [shape=record, style = filled, fillcolor = skyblue, label="{if.then11:                                        \l  %arrayidx18 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 17, i64 %idxprom8\l  %118 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %arrayidx18, align 8,\l... !tbaa !20\l  %cmp20 = icmp eq %struct.JHUFF_TBL* %118, null\l  br i1 %cmp20, label %if.then22, label %if.end23, !prof !56\l|{<s0>T|<s1>F}}"];
	Node0x56b9f30:s0 -> Node0x56b8190;
	Node0x56b9f30:s1 -> Node0x56b8270;
	Node0x56b8190 [shape=record, style = filled, fillcolor = blue, label="{if.then22:                                        \l  %call = tail call %struct.JHUFF_TBL*\l... @jpeg_alloc_huff_table(%struct.jpeg_common_struct* nonnull %105) #3\l  store %struct.JHUFF_TBL* %call, %struct.JHUFF_TBL** %arrayidx18, align 8,\l... !tbaa !20\l  br label %if.end23\l}"];
	Node0x56b8190 -> Node0x56b8270;
	Node0x56b8270 [shape=record, style = filled, fillcolor = skyblue, label="{if.end23:                                         \l  %119 = phi %struct.JHUFF_TBL* [ %call, %if.then22 ], [ %118, %if.then11 ]\l  %arrayidx25 = getelementptr inbounds %struct.phuff_entropy_encoder,\l... %struct.phuff_entropy_encoder* %1, i64 0, i32 15, i64 %idxprom8\l  %120 = load i64*, i64** %arrayidx25, align 8, !tbaa !20\l  tail call void @jpeg_gen_optimal_table(%struct.jpeg_compress_struct* nonnull\l... %cinfo, %struct.JHUFF_TBL* %119, i64* %120) #3\l  store i32 1, i32* %arrayidx9, align 4, !tbaa !22\l  %.pre200 = load i32, i32* %comps_in_scan, align 4, !tbaa !50\l  br label %for.inc\l}"];
	Node0x56b8270 -> Node0x56b9790;
	Node0x56b9790 [shape=record, style = filled, fillcolor = skyblue, label="{for.inc:                                          \l  %121 = phi i32 [ %115, %for.body ], [ %.pre200, %if.end23 ]\l  %indvars.iv.next199 = add nuw nsw i64 %indvars.iv198, 1\l  %122 = sext i32 %121 to i64\l  %cmp2 = icmp slt i64 %indvars.iv.next199, %122\l  br i1 %cmp2, label %for.body, label %for.end.loopexit208, !prof !51\l|{<s0>T|<s1>F}}"];
	Node0x56b9790:s0 -> Node0x56b7050;
	Node0x56b9790:s1 -> Node0x56bbe80;
	Node0x56b8ff0 [shape=record, style = filled, fillcolor = skyblue, label="{for.end.loopexit:                                 \l  br label %for.end\l}"];
	Node0x56b8ff0 -> Node0x56b6a30;
	Node0x56bbe80 [shape=record, style = filled, fillcolor = skyblue, label="{for.end.loopexit208:                              \l  br label %for.end\l}"];
	Node0x56bbe80 -> Node0x56b6a30;
	Node0x56b6a30 [shape=record, style = filled, fillcolor = skyblue, label="{for.end:                                          \l  call void @llvm.lifetime.end(i64 16, i8* %2) #3\l  ret void\l}"];
}
