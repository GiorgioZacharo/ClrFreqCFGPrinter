; ModuleID = 'jccoefct.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_compress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_destination_mgr*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master*, %struct.jpeg_c_main_controller*, %struct.jpeg_c_prep_controller*, %struct.jpeg_c_coef_controller*, %struct.jpeg_marker_writer*, %struct.jpeg_color_converter*, %struct.jpeg_downsampler*, %struct.jpeg_forward_dct*, %struct.jpeg_entropy_encoder* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_destination_mgr = type { i8*, i64, void (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_scan_info = type { i32, [4 x i32], i32, i32, i32, i32 }
%struct.jpeg_comp_master = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, i32, i32 }
%struct.jpeg_c_main_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller = type { void (%struct.jpeg_compress_struct*, i32)*, i32 (%struct.jpeg_compress_struct*, i8***)* }
%struct.jpeg_marker_writer = type { void (%struct.jpeg_compress_struct*, i32, i8*, i32)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_color_converter = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder = type { {}*, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)*, void (%struct.jpeg_compress_struct*)* }
%struct.my_coef_controller = type { %struct.jpeg_c_coef_controller, i32, i32, i32, i32, [10 x [64 x i16]*], [10 x %struct.jvirt_barray_control*] }

; Function Attrs: nounwind uwtable
define void @jinit_c_coef_controller(%struct.jpeg_compress_struct* %cinfo, i32 %need_full_buffer) #0 !prof !2 {
entry:
  %mem = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1
  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !3
  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %0, i64 0, i32 0
  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !11
  %2 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %call = tail call i8* %1(%struct.jpeg_common_struct* %2, i32 1, i64 192) #3
  %coef1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 54
  %3 = bitcast %struct.jpeg_c_coef_controller** %coef1 to i8**
  store i8* %call, i8** %3, align 8, !tbaa !14
  %start_pass = bitcast i8* %call to void (%struct.jpeg_compress_struct*, i32)**
  store void (%struct.jpeg_compress_struct*, i32)* @start_pass_coef, void (%struct.jpeg_compress_struct*, i32)** %start_pass, align 8, !tbaa !15
  %tobool = icmp eq i32 %need_full_buffer, 0
  br i1 %tobool, label %if.else, label %if.then, !prof !18

if.then:                                          ; preds = %entry
  %num_components = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  %4 = load i32, i32* %num_components, align 4, !tbaa !19
  %cmp53 = icmp sgt i32 %4, 0
  br i1 %cmp53, label %for.body.lr.ph, label %if.end, !prof !20

for.body.lr.ph:                                   ; preds = %if.then
  %comp_info = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %5 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info, align 8, !tbaa !21
  %whole_image = getelementptr inbounds i8, i8* %call, i64 112
  %6 = bitcast i8* %whole_image to [10 x %struct.jvirt_barray_control*]*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv56 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next57, %for.body ]
  %compptr.054 = phi %struct.jpeg_component_info* [ %5, %for.body.lr.ph ], [ %incdec.ptr, %for.body ]
  %7 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !3
  %request_virt_barray = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %7, i64 0, i32 5
  %8 = load %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)** %request_virt_barray, align 8, !tbaa !22
  %width_in_blocks = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.054, i64 0, i32 7
  %9 = load i32, i32* %width_in_blocks, align 4, !tbaa !23
  %conv = zext i32 %9 to i64
  %h_samp_factor = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.054, i64 0, i32 2
  %10 = load i32, i32* %h_samp_factor, align 8, !tbaa !25
  %conv3 = sext i32 %10 to i64
  %call4 = tail call i64 @jround_up(i64 %conv, i64 %conv3) #3
  %conv5 = trunc i64 %call4 to i32
  %height_in_blocks = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.054, i64 0, i32 8
  %11 = load i32, i32* %height_in_blocks, align 8, !tbaa !26
  %conv6 = zext i32 %11 to i64
  %v_samp_factor = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.054, i64 0, i32 3
  %12 = load i32, i32* %v_samp_factor, align 4, !tbaa !27
  %conv7 = sext i32 %12 to i64
  %call8 = tail call i64 @jround_up(i64 %conv6, i64 %conv7) #3
  %conv9 = trunc i64 %call8 to i32
  %13 = load i32, i32* %v_samp_factor, align 4, !tbaa !27
  %call11 = tail call %struct.jvirt_barray_control* %8(%struct.jpeg_common_struct* nonnull %2, i32 1, i32 0, i32 %conv5, i32 %conv9, i32 %13) #3
  %arrayidx = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %6, i64 0, i64 %indvars.iv56
  store %struct.jvirt_barray_control* %call11, %struct.jvirt_barray_control** %arrayidx, align 8, !tbaa !28
  %indvars.iv.next57 = add nuw nsw i64 %indvars.iv56, 1
  %incdec.ptr = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.054, i64 1
  %14 = load i32, i32* %num_components, align 4, !tbaa !19
  %15 = sext i32 %14 to i64
  %cmp = icmp slt i64 %indvars.iv.next57, %15
  br i1 %cmp, label %for.body, label %if.end.loopexit, !prof !20

if.else:                                          ; preds = %entry
  %16 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !3
  %alloc_large = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %16, i64 0, i32 1
  %17 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %alloc_large, align 8, !tbaa !29
  %call13 = tail call i8* %17(%struct.jpeg_common_struct* %2, i32 1, i64 1280) #3
  %MCU_buffer = getelementptr inbounds i8, i8* %call, i64 32
  %18 = bitcast i8* %MCU_buffer to i8**
  store i8* %call13, i8** %18, align 8, !tbaa !28
  %arrayidx19.1 = getelementptr inbounds i8, i8* %call, i64 40
  %19 = insertelement <2 x i8*> undef, i8* %call13, i32 0
  %20 = insertelement <2 x i8*> %19, i8* %call13, i32 1
  %21 = getelementptr i8, <2 x i8*> %20, <2 x i64> <i64 128, i64 256>
  %22 = bitcast i8* %arrayidx19.1 to <2 x i8*>*
  store <2 x i8*> %21, <2 x i8*>* %22, align 8, !tbaa !28
  %arrayidx19.3 = getelementptr inbounds i8, i8* %call, i64 56
  %23 = getelementptr i8, <2 x i8*> %20, <2 x i64> <i64 384, i64 512>
  %24 = bitcast i8* %arrayidx19.3 to <2 x i8*>*
  store <2 x i8*> %23, <2 x i8*>* %24, align 8, !tbaa !28
  %arrayidx19.5 = getelementptr inbounds i8, i8* %call, i64 72
  %25 = getelementptr i8, <2 x i8*> %20, <2 x i64> <i64 640, i64 768>
  %26 = bitcast i8* %arrayidx19.5 to <2 x i8*>*
  store <2 x i8*> %25, <2 x i8*>* %26, align 8, !tbaa !28
  %arrayidx19.7 = getelementptr inbounds i8, i8* %call, i64 88
  %27 = getelementptr i8, <2 x i8*> %20, <2 x i64> <i64 896, i64 1024>
  %28 = bitcast i8* %arrayidx19.7 to <2 x i8*>*
  store <2 x i8*> %27, <2 x i8*>* %28, align 8, !tbaa !28
  %add.ptr.9 = getelementptr inbounds i8, i8* %call13, i64 1152
  %arrayidx19.9 = getelementptr inbounds i8, i8* %call, i64 104
  %29 = bitcast i8* %arrayidx19.9 to i8**
  store i8* %add.ptr.9, i8** %29, align 8, !tbaa !28
  %whole_image23 = getelementptr inbounds i8, i8* %call, i64 112
  %arrayidx24 = bitcast i8* %whole_image23 to %struct.jvirt_barray_control**
  store %struct.jvirt_barray_control* null, %struct.jvirt_barray_control** %arrayidx24, align 8, !tbaa !28
  br label %if.end

if.end.loopexit:                                  ; preds = %for.body
  br label %if.end

if.end:                                           ; preds = %if.end.loopexit, %if.then, %if.else
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal void @start_pass_coef(%struct.jpeg_compress_struct* %cinfo, i32 %pass_mode) #0 !prof !30 {
entry:
  %coef1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 54
  %0 = bitcast %struct.jpeg_c_coef_controller** %coef1 to %struct.my_coef_controller**
  %1 = load %struct.my_coef_controller*, %struct.my_coef_controller** %0, align 8, !tbaa !14
  %iMCU_row_num = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 1
  store i32 0, i32* %iMCU_row_num, align 8, !tbaa !31
  %comps_in_scan.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 41
  %2 = load i32, i32* %comps_in_scan.i, align 4, !tbaa !32
  %cmp.i = icmp sgt i32 %2, 1
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !prof !33

if.then.i:                                        ; preds = %entry
  %MCU_rows_per_iMCU_row.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 4
  store i32 1, i32* %MCU_rows_per_iMCU_row.i, align 4, !tbaa !34
  br label %start_iMCU_row.exit

if.else.i:                                        ; preds = %entry
  %total_iMCU_rows.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 40
  %3 = load i32, i32* %total_iMCU_rows.i, align 8, !tbaa !35
  %cmp2.i = icmp eq i32 %3, 1
  %arrayidx.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 0
  %4 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %arrayidx.i, align 8, !tbaa !28
  br i1 %cmp2.i, label %if.else5.i, label %if.then3.i, !prof !36

if.then3.i:                                       ; preds = %if.else.i
  %v_samp_factor.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %4, i64 0, i32 3
  %5 = load i32, i32* %v_samp_factor.i, align 4, !tbaa !27
  %MCU_rows_per_iMCU_row4.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 4
  store i32 %5, i32* %MCU_rows_per_iMCU_row4.i, align 4, !tbaa !34
  br label %start_iMCU_row.exit

if.else5.i:                                       ; preds = %if.else.i
  %last_row_height.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %4, i64 0, i32 18
  %6 = load i32, i32* %last_row_height.i, align 8, !tbaa !37
  %MCU_rows_per_iMCU_row8.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 4
  store i32 %6, i32* %MCU_rows_per_iMCU_row8.i, align 4, !tbaa !34
  br label %start_iMCU_row.exit

start_iMCU_row.exit:                              ; preds = %if.then.i, %if.then3.i, %if.else5.i
  %mcu_ctr.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 2
  store i32 0, i32* %mcu_ctr.i, align 4, !tbaa !38
  %MCU_vert_offset.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 3
  store i32 0, i32* %MCU_vert_offset.i, align 8, !tbaa !39
  switch i32 %pass_mode, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb3
    i32 2, label %sw.bb15
  ], !prof !40

sw.bb:                                            ; preds = %start_iMCU_row.exit
  %arrayidx = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 6, i64 0
  %7 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %arrayidx, align 8, !tbaa !28
  %cmp = icmp eq %struct.jvirt_barray_control* %7, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %sw.bb
  %err = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8, !tbaa !41
  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 5
  store i32 4, i32* %msg_code, align 8, !tbaa !42
  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 0
  %9 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !44
  %10 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %9(%struct.jpeg_common_struct* %10) #3
  br label %if.end

if.end:                                           ; preds = %sw.bb, %if.then
  %compress_data = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 0, i32 1
  store i32 (%struct.jpeg_compress_struct*, i8***)* @compress_data, i32 (%struct.jpeg_compress_struct*, i8***)** %compress_data, align 8, !tbaa !45
  br label %sw.epilog

sw.bb3:                                           ; preds = %start_iMCU_row.exit
  %arrayidx5 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 6, i64 0
  %11 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %arrayidx5, align 8, !tbaa !28
  %cmp6 = icmp eq %struct.jvirt_barray_control* %11, null
  br i1 %cmp6, label %if.then7, label %if.end12, !prof !18

if.then7:                                         ; preds = %sw.bb3
  %err8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err8, align 8, !tbaa !41
  %msg_code9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 5
  store i32 4, i32* %msg_code9, align 8, !tbaa !42
  %error_exit11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 0
  %13 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit11, align 8, !tbaa !44
  %14 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %13(%struct.jpeg_common_struct* %14) #3
  br label %if.end12

if.end12:                                         ; preds = %if.then7, %sw.bb3
  %compress_data14 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 0, i32 1
  store i32 (%struct.jpeg_compress_struct*, i8***)* @compress_first_pass, i32 (%struct.jpeg_compress_struct*, i8***)** %compress_data14, align 8, !tbaa !45
  br label %sw.epilog

sw.bb15:                                          ; preds = %start_iMCU_row.exit
  %arrayidx17 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 6, i64 0
  %15 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %arrayidx17, align 8, !tbaa !28
  %cmp18 = icmp eq %struct.jvirt_barray_control* %15, null
  br i1 %cmp18, label %if.then19, label %if.end24, !prof !46

if.then19:                                        ; preds = %sw.bb15
  %err20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err20, align 8, !tbaa !41
  %msg_code21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i64 0, i32 5
  store i32 4, i32* %msg_code21, align 8, !tbaa !42
  %error_exit23 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i64 0, i32 0
  %17 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit23, align 8, !tbaa !44
  %18 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %17(%struct.jpeg_common_struct* %18) #3
  br label %if.end24

if.end24:                                         ; preds = %if.then19, %sw.bb15
  %compress_data26 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 0, i32 1
  store i32 (%struct.jpeg_compress_struct*, i8***)* @compress_output, i32 (%struct.jpeg_compress_struct*, i8***)** %compress_data26, align 8, !tbaa !45
  br label %sw.epilog

sw.default:                                       ; preds = %start_iMCU_row.exit
  %err27 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err27, align 8, !tbaa !41
  %msg_code28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 5
  store i32 4, i32* %msg_code28, align 8, !tbaa !42
  %error_exit30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 0
  %20 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %error_exit30, align 8, !tbaa !44
  %21 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  tail call void %20(%struct.jpeg_common_struct* %21) #3
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end24, %if.end12, %if.end
  ret void
}

declare i64 @jround_up(i64, i64) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal i32 @compress_data(%struct.jpeg_compress_struct* %cinfo, i8*** nocapture readonly %input_buf) #0 !prof !47 {
entry:
  %coef1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 54
  %0 = bitcast %struct.jpeg_c_coef_controller** %coef1 to %struct.my_coef_controller**
  %1 = load %struct.my_coef_controller*, %struct.my_coef_controller** %0, align 8, !tbaa !14
  %MCUs_per_row = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 43
  %2 = load i32, i32* %MCUs_per_row, align 8, !tbaa !48
  %sub = add i32 %2, -1
  %total_iMCU_rows = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 40
  %3 = bitcast i32* %total_iMCU_rows to i64*
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  %sub2 = add i32 %5, -1
  %MCU_vert_offset = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 3
  %6 = bitcast i32* %MCU_vert_offset to i64*
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %MCU_rows_per_iMCU_row = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 4
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %cmp204 = icmp slt i32 %8, %10
  br i1 %cmp204, label %for.body.lr.ph, label %entry.for.end95_crit_edge

entry.for.end95_crit_edge:                        ; preds = %entry
  %11 = lshr i64 %4, 32
  %12 = trunc i64 %11 to i32
  %.pre229 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 1
  br label %for.end95

for.body.lr.ph:                                   ; preds = %entry
  %mcu_ctr = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 2
  %comps_in_scan = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 41
  %entropy = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59
  %arraydecay = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 0
  %iMCU_row_num = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 1
  %fdct = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 58
  %.pre = load i32, i32* %mcu_ctr, align 4, !tbaa !38
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.end91
  %13 = phi i32 [ %10, %for.body.lr.ph ], [ %134, %for.end91 ]
  %14 = phi i32 [ %.pre, %for.body.lr.ph ], [ 0, %for.end91 ]
  %yoffset.0205 = phi i32 [ %8, %for.body.lr.ph ], [ %inc94, %for.end91 ]
  %cmp4202 = icmp ugt i32 %14, %sub
  br i1 %cmp4202, label %for.end91, label %for.cond6.preheader.lr.ph

for.cond6.preheader.lr.ph:                        ; preds = %for.body
  %mul10 = shl nsw i32 %yoffset.0205, 3
  br label %for.cond6.preheader

for.cond6.preheader:                              ; preds = %for.cond6.preheader.lr.ph, %for.inc89
  %MCU_col_num.0203 = phi i32 [ %14, %for.cond6.preheader.lr.ph ], [ %inc90, %for.inc89 ]
  %15 = load i32, i32* %comps_in_scan, align 4, !tbaa !32
  %cmp7199 = icmp sgt i32 %15, 0
  br i1 %cmp7199, label %for.body8.lr.ph, label %for.end83

for.body8.lr.ph:                                  ; preds = %for.cond6.preheader
  %cmp9 = icmp ult i32 %MCU_col_num.0203, %sub
  br i1 %cmp9, label %for.body8.us.preheader, label %for.body8.preheader

for.body8.preheader:                              ; preds = %for.body8.lr.ph
  br label %for.body8

for.body8.us.preheader:                           ; preds = %for.body8.lr.ph
  br label %for.body8.us

for.body8.us:                                     ; preds = %for.body8.us.preheader, %for.inc81.us
  %16 = phi i32 [ %20, %for.inc81.us ], [ %15, %for.body8.us.preheader ]
  %indvars.iv222 = phi i64 [ %indvars.iv.next223, %for.inc81.us ], [ 0, %for.body8.us.preheader ]
  %blkn.0201.us = phi i32 [ %blkn.1.lcssa.us, %for.inc81.us ], [ 0, %for.body8.us.preheader ]
  %arrayidx.us = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv222
  %17 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %arrayidx.us, align 8, !tbaa !28
  %MCU_width.us = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %17, i64 0, i32 13
  %cond.us = load i32, i32* %MCU_width.us, align 4, !tbaa !49
  %MCU_sample_width.us = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %17, i64 0, i32 16
  %18 = load i32, i32* %MCU_sample_width.us, align 8, !tbaa !50
  %mul.us = mul i32 %18, %MCU_col_num.0203
  %MCU_height.us = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %17, i64 0, i32 14
  %19 = load i32, i32* %MCU_height.us, align 8, !tbaa !51
  %cmp12195.us = icmp sgt i32 %19, 0
  br i1 %cmp12195.us, label %for.body13.lr.ph.us, label %for.inc81.us

for.inc81.us.loopexit:                            ; preds = %if.end74.us
  %add76.us.lcssa = phi i32 [ %add76.us, %if.end74.us ]
  %.pre225 = load i32, i32* %comps_in_scan, align 4, !tbaa !32
  br label %for.inc81.us

for.inc81.us:                                     ; preds = %for.inc81.us.loopexit, %for.body8.us
  %20 = phi i32 [ %16, %for.body8.us ], [ %.pre225, %for.inc81.us.loopexit ]
  %blkn.1.lcssa.us = phi i32 [ %blkn.0201.us, %for.body8.us ], [ %add76.us.lcssa, %for.inc81.us.loopexit ]
  %indvars.iv.next223 = add nuw nsw i64 %indvars.iv222, 1
  %21 = sext i32 %20 to i64
  %cmp7.us = icmp slt i64 %indvars.iv.next223, %21
  br i1 %cmp7.us, label %for.body8.us, label %for.end83.loopexit

for.body13.us:                                    ; preds = %for.body13.lr.ph.us, %if.end74.us
  %22 = phi i32 [ %cond.us, %for.body13.lr.ph.us ], [ %48, %if.end74.us ]
  %ypos.0198.us = phi i32 [ %mul10, %for.body13.lr.ph.us ], [ %add77.us, %if.end74.us ]
  %blkn.1197.us = phi i32 [ %blkn.0201.us, %for.body13.lr.ph.us ], [ %add76.us, %if.end74.us ]
  %yindex.0196.us = phi i32 [ 0, %for.body13.lr.ph.us ], [ %inc79.us, %if.end74.us ]
  %23 = load i32, i32* %iMCU_row_num, align 8, !tbaa !31
  %cmp14.us = icmp ult i32 %23, %sub2
  br i1 %cmp14.us, label %if.then.us, label %lor.lhs.false.us

lor.lhs.false.us:                                 ; preds = %for.body13.us
  %add.us = add nsw i32 %yindex.0196.us, %yoffset.0205
  %24 = load i32, i32* %last_row_height.us, align 8, !tbaa !37
  %cmp15.us = icmp slt i32 %add.us, %24
  br i1 %cmp15.us, label %if.then.us, label %if.else.us

if.else.us:                                       ; preds = %lor.lhs.false.us
  %idxprom48.us = sext i32 %blkn.1197.us to i64
  %arrayidx50.us = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom48.us
  %25 = bitcast [64 x i16]** %arrayidx50.us to i8**
  %26 = load i8*, i8** %25, align 8, !tbaa !28
  %conv52.us = sext i32 %22 to i64
  %mul53.us = shl nsw i64 %conv52.us, 7
  tail call void @jzero_far(i8* %26, i64 %mul53.us) #3
  %27 = load i32, i32* %MCU_width.us, align 4, !tbaa !52
  %cmp56191.us = icmp sgt i32 %27, 0
  br i1 %cmp56191.us, label %for.body58.lr.ph.us, label %if.end74.us

for.body58.us:                                    ; preds = %for.body58.us, %for.body58.lr.ph.us.split.split
  %indvars.iv217 = phi i64 [ %indvars.iv217.unr, %for.body58.lr.ph.us.split.split ], [ %indvars.iv.next218.3, %for.body58.us ]
  %28 = load i16, i16* %arrayidx64.us, align 2, !tbaa !53
  %29 = add nsw i64 %indvars.iv217, %idxprom48.us
  %arrayidx68.us = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %29
  %30 = load [64 x i16]*, [64 x i16]** %arrayidx68.us, align 8, !tbaa !28
  %arrayidx70.us = getelementptr inbounds [64 x i16], [64 x i16]* %30, i64 0, i64 0
  store i16 %28, i16* %arrayidx70.us, align 2, !tbaa !53
  %indvars.iv.next218 = add nuw nsw i64 %indvars.iv217, 1
  %31 = load i16, i16* %arrayidx64.us, align 2, !tbaa !53
  %32 = add nsw i64 %indvars.iv.next218, %idxprom48.us
  %arrayidx68.us.1 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %32
  %33 = load [64 x i16]*, [64 x i16]** %arrayidx68.us.1, align 8, !tbaa !28
  %arrayidx70.us.1 = getelementptr inbounds [64 x i16], [64 x i16]* %33, i64 0, i64 0
  store i16 %31, i16* %arrayidx70.us.1, align 2, !tbaa !53
  %indvars.iv.next218.1 = add nsw i64 %indvars.iv217, 2
  %34 = load i16, i16* %arrayidx64.us, align 2, !tbaa !53
  %35 = add nsw i64 %indvars.iv.next218.1, %idxprom48.us
  %arrayidx68.us.2 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %35
  %36 = load [64 x i16]*, [64 x i16]** %arrayidx68.us.2, align 8, !tbaa !28
  %arrayidx70.us.2 = getelementptr inbounds [64 x i16], [64 x i16]* %36, i64 0, i64 0
  store i16 %34, i16* %arrayidx70.us.2, align 2, !tbaa !53
  %indvars.iv.next218.2 = add nsw i64 %indvars.iv217, 3
  %37 = load i16, i16* %arrayidx64.us, align 2, !tbaa !53
  %38 = add nsw i64 %indvars.iv.next218.2, %idxprom48.us
  %arrayidx68.us.3 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %38
  %39 = load [64 x i16]*, [64 x i16]** %arrayidx68.us.3, align 8, !tbaa !28
  %arrayidx70.us.3 = getelementptr inbounds [64 x i16], [64 x i16]* %39, i64 0, i64 0
  store i16 %37, i16* %arrayidx70.us.3, align 2, !tbaa !53
  %indvars.iv.next218.3 = add nsw i64 %indvars.iv217, 4
  %cmp56.us.3 = icmp slt i64 %indvars.iv.next218.3, %57
  br i1 %cmp56.us.3, label %for.body58.us, label %if.end74.us.loopexit241.unr-lcssa

if.then.us:                                       ; preds = %lor.lhs.false.us, %for.body13.us
  %40 = load %struct.jpeg_forward_dct*, %struct.jpeg_forward_dct** %fdct, align 8, !tbaa !54
  %forward_DCT.us = getelementptr inbounds %struct.jpeg_forward_dct, %struct.jpeg_forward_dct* %40, i64 0, i32 1
  %41 = load void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)** %forward_DCT.us, align 8, !tbaa !55
  %42 = load i8**, i8*** %arrayidx17.us, align 8, !tbaa !28
  %idxprom18.us = sext i32 %blkn.1197.us to i64
  %arrayidx19.us = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom18.us
  %43 = load [64 x i16]*, [64 x i16]** %arrayidx19.us, align 8, !tbaa !28
  tail call void %41(%struct.jpeg_compress_struct* %cinfo, %struct.jpeg_component_info* nonnull %17, i8** %42, [64 x i16]* %43, i32 %ypos.0198.us, i32 %mul.us, i32 %cond.us) #3
  %44 = load i32, i32* %MCU_width.us, align 4, !tbaa !52
  %cmp21.us = icmp sgt i32 %44, %cond.us
  br i1 %cmp21.us, label %if.then22.us, label %if.end74.us

if.then22.us:                                     ; preds = %if.then.us
  %add23.us = add nsw i32 %blkn.1197.us, %cond.us
  %idxprom24.us = sext i32 %add23.us to i64
  %arrayidx26.us = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom24.us
  %45 = bitcast [64 x i16]** %arrayidx26.us to i8**
  %46 = load i8*, i8** %45, align 8, !tbaa !28
  %sub28.us = sub nsw i32 %44, %cond.us
  %conv.us = sext i32 %sub28.us to i64
  %mul29.us = shl nsw i64 %conv.us, 7
  tail call void @jzero_far(i8* %46, i64 %mul29.us) #3
  %47 = load i32, i32* %MCU_width.us, align 4, !tbaa !52
  %cmp32193.us = icmp slt i32 %cond.us, %47
  br i1 %cmp32193.us, label %for.body34.lr.ph.us, label %if.end74.us

if.end74.us.loopexit.unr-lcssa:                   ; preds = %for.body34.us
  br label %if.end74.us.loopexit

if.end74.us.loopexit:                             ; preds = %for.body34.lr.ph.us.split, %if.end74.us.loopexit.unr-lcssa
  br label %if.end74.us

if.end74.us.loopexit241.unr-lcssa:                ; preds = %for.body58.us
  br label %if.end74.us.loopexit241

if.end74.us.loopexit241:                          ; preds = %for.body58.lr.ph.us.split, %if.end74.us.loopexit241.unr-lcssa
  br label %if.end74.us

if.end74.us:                                      ; preds = %if.end74.us.loopexit241, %if.end74.us.loopexit, %if.else.us, %if.then22.us, %if.then.us
  %48 = load i32, i32* %MCU_width.us, align 4, !tbaa !52
  %add76.us = add nsw i32 %48, %blkn.1197.us
  %add77.us = add i32 %ypos.0198.us, 8
  %inc79.us = add nuw nsw i32 %yindex.0196.us, 1
  %49 = load i32, i32* %MCU_height.us, align 8, !tbaa !51
  %cmp12.us = icmp slt i32 %inc79.us, %49
  br i1 %cmp12.us, label %for.body13.us, label %for.inc81.us.loopexit

for.body34.us:                                    ; preds = %for.body34.us, %for.body34.lr.ph.us.split.split
  %indvars.iv220 = phi i64 [ %indvars.iv220.unr, %for.body34.lr.ph.us.split.split ], [ %indvars.iv.next221.1, %for.body34.us ]
  %bi.0194.us = phi i32 [ %bi.0194.us.unr, %for.body34.lr.ph.us.split.split ], [ %inc.us.1, %for.body34.us ]
  %add35.us = add nsw i32 %bi.0194.us, %blkn.1197.us
  %sub36.us = add nsw i32 %add35.us, -1
  %idxprom37.us = sext i32 %sub36.us to i64
  %arrayidx39.us = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom37.us
  %50 = load [64 x i16]*, [64 x i16]** %arrayidx39.us, align 8, !tbaa !28
  %arrayidx41.us = getelementptr inbounds [64 x i16], [64 x i16]* %50, i64 0, i64 0
  %51 = load i16, i16* %arrayidx41.us, align 2, !tbaa !53
  %idxprom43.us = sext i32 %add35.us to i64
  %arrayidx45.us = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom43.us
  %52 = load [64 x i16]*, [64 x i16]** %arrayidx45.us, align 8, !tbaa !28
  %arrayidx47.us = getelementptr inbounds [64 x i16], [64 x i16]* %52, i64 0, i64 0
  store i16 %51, i16* %arrayidx47.us, align 2, !tbaa !53
  %inc.us = add nsw i32 %bi.0194.us, 1
  %add35.us.1 = add nsw i32 %inc.us, %blkn.1197.us
  %sub36.us.1 = add i32 %bi.0194.us, %blkn.1197.us
  %idxprom37.us.1 = sext i32 %sub36.us.1 to i64
  %arrayidx39.us.1 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom37.us.1
  %53 = load [64 x i16]*, [64 x i16]** %arrayidx39.us.1, align 8, !tbaa !28
  %arrayidx41.us.1 = getelementptr inbounds [64 x i16], [64 x i16]* %53, i64 0, i64 0
  %54 = load i16, i16* %arrayidx41.us.1, align 2, !tbaa !53
  %idxprom43.us.1 = sext i32 %add35.us.1 to i64
  %arrayidx45.us.1 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom43.us.1
  %55 = load [64 x i16]*, [64 x i16]** %arrayidx45.us.1, align 8, !tbaa !28
  %arrayidx47.us.1 = getelementptr inbounds [64 x i16], [64 x i16]* %55, i64 0, i64 0
  store i16 %54, i16* %arrayidx47.us.1, align 2, !tbaa !53
  %indvars.iv.next221.1 = add nsw i64 %indvars.iv220, 2
  %inc.us.1 = add nsw i32 %bi.0194.us, 2
  %cmp32.us.1 = icmp slt i64 %indvars.iv.next221.1, %64
  br i1 %cmp32.us.1, label %for.body34.us, label %if.end74.us.loopexit.unr-lcssa

for.body58.lr.ph.us:                              ; preds = %if.else.us
  %sub59.us = add nsw i32 %blkn.1197.us, -1
  %idxprom60.us = sext i32 %sub59.us to i64
  %arrayidx62.us = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom60.us
  %56 = load [64 x i16]*, [64 x i16]** %arrayidx62.us, align 8
  %arrayidx64.us = getelementptr inbounds [64 x i16], [64 x i16]* %56, i64 0, i64 0
  %57 = sext i32 %27 to i64
  %58 = sext i32 %27 to i64
  %59 = add nsw i64 %58, -1
  %xtraiter248 = and i64 %58, 3
  %lcmp.mod249 = icmp eq i64 %xtraiter248, 0
  br i1 %lcmp.mod249, label %for.body58.lr.ph.us.split, label %for.body58.us.prol.preheader

for.body58.us.prol.preheader:                     ; preds = %for.body58.lr.ph.us
  br label %for.body58.us.prol

for.body58.us.prol:                               ; preds = %for.body58.us.prol, %for.body58.us.prol.preheader
  %indvars.iv217.prol = phi i64 [ %indvars.iv.next218.prol, %for.body58.us.prol ], [ 0, %for.body58.us.prol.preheader ]
  %prol.iter250 = phi i64 [ %prol.iter250.sub, %for.body58.us.prol ], [ %xtraiter248, %for.body58.us.prol.preheader ]
  %60 = load i16, i16* %arrayidx64.us, align 2, !tbaa !53
  %61 = add nsw i64 %indvars.iv217.prol, %idxprom48.us
  %arrayidx68.us.prol = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %61
  %62 = load [64 x i16]*, [64 x i16]** %arrayidx68.us.prol, align 8, !tbaa !28
  %arrayidx70.us.prol = getelementptr inbounds [64 x i16], [64 x i16]* %62, i64 0, i64 0
  store i16 %60, i16* %arrayidx70.us.prol, align 2, !tbaa !53
  %indvars.iv.next218.prol = add nuw nsw i64 %indvars.iv217.prol, 1
  %prol.iter250.sub = add i64 %prol.iter250, -1
  %prol.iter250.cmp = icmp eq i64 %prol.iter250.sub, 0
  br i1 %prol.iter250.cmp, label %for.body58.lr.ph.us.split.loopexit, label %for.body58.us.prol, !llvm.loop !57

for.body58.lr.ph.us.split.loopexit:               ; preds = %for.body58.us.prol
  %indvars.iv.next218.prol.lcssa = phi i64 [ %indvars.iv.next218.prol, %for.body58.us.prol ]
  br label %for.body58.lr.ph.us.split

for.body58.lr.ph.us.split:                        ; preds = %for.body58.lr.ph.us, %for.body58.lr.ph.us.split.loopexit
  %indvars.iv217.unr = phi i64 [ 0, %for.body58.lr.ph.us ], [ %indvars.iv.next218.prol.lcssa, %for.body58.lr.ph.us.split.loopexit ]
  %63 = icmp ult i64 %59, 3
  br i1 %63, label %if.end74.us.loopexit241, label %for.body58.lr.ph.us.split.split

for.body58.lr.ph.us.split.split:                  ; preds = %for.body58.lr.ph.us.split
  br label %for.body58.us

for.body34.lr.ph.us:                              ; preds = %if.then22.us
  %64 = sext i32 %47 to i64
  %65 = sext i32 %47 to i64
  %66 = sub nsw i64 %65, %72
  %xtraiter251 = and i64 %66, 1
  %lcmp.mod252 = icmp eq i64 %xtraiter251, 0
  br i1 %lcmp.mod252, label %for.body34.lr.ph.us.split, label %for.body34.us.prol

for.body34.us.prol:                               ; preds = %for.body34.lr.ph.us
  %add35.us.prol = add nsw i32 %cond.us, %blkn.1197.us
  %sub36.us.prol = add nsw i32 %add35.us.prol, -1
  %idxprom37.us.prol = sext i32 %sub36.us.prol to i64
  %arrayidx39.us.prol = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom37.us.prol
  %67 = load [64 x i16]*, [64 x i16]** %arrayidx39.us.prol, align 8, !tbaa !28
  %arrayidx41.us.prol = getelementptr inbounds [64 x i16], [64 x i16]* %67, i64 0, i64 0
  %68 = load i16, i16* %arrayidx41.us.prol, align 2, !tbaa !53
  %idxprom43.us.prol = sext i32 %add35.us.prol to i64
  %arrayidx45.us.prol = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom43.us.prol
  %69 = load [64 x i16]*, [64 x i16]** %arrayidx45.us.prol, align 8, !tbaa !28
  %arrayidx47.us.prol = getelementptr inbounds [64 x i16], [64 x i16]* %69, i64 0, i64 0
  store i16 %68, i16* %arrayidx47.us.prol, align 2, !tbaa !53
  br label %for.body34.lr.ph.us.split

for.body34.lr.ph.us.split:                        ; preds = %for.body34.lr.ph.us, %for.body34.us.prol
  %indvars.iv220.unr = phi i64 [ %71, %for.body34.lr.ph.us ], [ %indvars.iv.next221.prol, %for.body34.us.prol ]
  %bi.0194.us.unr = phi i32 [ %cond.us, %for.body34.lr.ph.us ], [ %inc.us.prol, %for.body34.us.prol ]
  %70 = icmp eq i64 %65, %73
  br i1 %70, label %if.end74.us.loopexit, label %for.body34.lr.ph.us.split.split

for.body34.lr.ph.us.split.split:                  ; preds = %for.body34.lr.ph.us.split
  br label %for.body34.us

for.body13.lr.ph.us:                              ; preds = %for.body8.us
  %arrayidx17.us = getelementptr inbounds i8**, i8*** %input_buf, i64 %indvars.iv222
  %last_row_height.us = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %17, i64 0, i32 18
  %71 = sext i32 %cond.us to i64
  %72 = sext i32 %cond.us to i64
  %indvars.iv.next221.prol = add nsw i64 %71, 1
  %inc.us.prol = add nsw i32 %cond.us, 1
  %73 = add nsw i64 %72, 1
  br label %for.body13.us

for.body8:                                        ; preds = %for.body8.preheader, %for.inc81
  %74 = phi i32 [ %130, %for.inc81 ], [ %15, %for.body8.preheader ]
  %indvars.iv215 = phi i64 [ %indvars.iv.next216, %for.inc81 ], [ 0, %for.body8.preheader ]
  %blkn.0201 = phi i32 [ %blkn.1.lcssa, %for.inc81 ], [ 0, %for.body8.preheader ]
  %arrayidx = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv215
  %75 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %arrayidx, align 8, !tbaa !28
  %MCU_width = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %75, i64 0, i32 13
  %last_col_width = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %75, i64 0, i32 17
  %cond = load i32, i32* %last_col_width, align 4, !tbaa !49
  %MCU_sample_width = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %75, i64 0, i32 16
  %76 = load i32, i32* %MCU_sample_width, align 8, !tbaa !50
  %mul = mul i32 %76, %MCU_col_num.0203
  %MCU_height = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %75, i64 0, i32 14
  %77 = load i32, i32* %MCU_height, align 8, !tbaa !51
  %cmp12195 = icmp sgt i32 %77, 0
  br i1 %cmp12195, label %for.body13.lr.ph, label %for.inc81

for.body13.lr.ph:                                 ; preds = %for.body8
  %arrayidx17 = getelementptr inbounds i8**, i8*** %input_buf, i64 %indvars.iv215
  %last_row_height = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %75, i64 0, i32 18
  %78 = sext i32 %cond to i64
  %79 = sext i32 %cond to i64
  %indvars.iv.next214.prol = add nsw i64 %78, 1
  %inc.prol = add nsw i32 %cond, 1
  %80 = add nsw i64 %79, 1
  br label %for.body13

for.body13:                                       ; preds = %for.body13.lr.ph, %if.end74
  %ypos.0198 = phi i32 [ %mul10, %for.body13.lr.ph ], [ %add77, %if.end74 ]
  %blkn.1197 = phi i32 [ %blkn.0201, %for.body13.lr.ph ], [ %add76, %if.end74 ]
  %yindex.0196 = phi i32 [ 0, %for.body13.lr.ph ], [ %inc79, %if.end74 ]
  %81 = load i32, i32* %iMCU_row_num, align 8, !tbaa !31
  %cmp14 = icmp ult i32 %81, %sub2
  br i1 %cmp14, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body13
  %add = add nsw i32 %yindex.0196, %yoffset.0205
  %82 = load i32, i32* %last_row_height, align 8, !tbaa !37
  %cmp15 = icmp slt i32 %add, %82
  br i1 %cmp15, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %for.body13
  %83 = load %struct.jpeg_forward_dct*, %struct.jpeg_forward_dct** %fdct, align 8, !tbaa !54
  %forward_DCT = getelementptr inbounds %struct.jpeg_forward_dct, %struct.jpeg_forward_dct* %83, i64 0, i32 1
  %84 = load void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)** %forward_DCT, align 8, !tbaa !55
  %85 = load i8**, i8*** %arrayidx17, align 8, !tbaa !28
  %idxprom18 = sext i32 %blkn.1197 to i64
  %arrayidx19 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom18
  %86 = load [64 x i16]*, [64 x i16]** %arrayidx19, align 8, !tbaa !28
  tail call void %84(%struct.jpeg_compress_struct* %cinfo, %struct.jpeg_component_info* nonnull %75, i8** %85, [64 x i16]* %86, i32 %ypos.0198, i32 %mul, i32 %cond) #3
  %87 = load i32, i32* %MCU_width, align 4, !tbaa !52
  %cmp21 = icmp sgt i32 %87, %cond
  br i1 %cmp21, label %if.then22, label %if.end74

if.then22:                                        ; preds = %if.then
  %add23 = add nsw i32 %blkn.1197, %cond
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx26 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom24
  %88 = bitcast [64 x i16]** %arrayidx26 to i8**
  %89 = load i8*, i8** %88, align 8, !tbaa !28
  %sub28 = sub nsw i32 %87, %cond
  %conv = sext i32 %sub28 to i64
  %mul29 = shl nsw i64 %conv, 7
  tail call void @jzero_far(i8* %89, i64 %mul29) #3
  %90 = load i32, i32* %MCU_width, align 4, !tbaa !52
  %cmp32193 = icmp slt i32 %cond, %90
  br i1 %cmp32193, label %for.body34.lr.ph, label %if.end74

for.body34.lr.ph:                                 ; preds = %if.then22
  %91 = sext i32 %90 to i64
  %92 = sext i32 %90 to i64
  %93 = sub nsw i64 %92, %79
  %xtraiter246 = and i64 %93, 1
  %lcmp.mod247 = icmp eq i64 %xtraiter246, 0
  br i1 %lcmp.mod247, label %for.body34.lr.ph.split, label %for.body34.prol

for.body34.prol:                                  ; preds = %for.body34.lr.ph
  %add35.prol = add nsw i32 %cond, %blkn.1197
  %sub36.prol = add nsw i32 %add35.prol, -1
  %idxprom37.prol = sext i32 %sub36.prol to i64
  %arrayidx39.prol = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom37.prol
  %94 = load [64 x i16]*, [64 x i16]** %arrayidx39.prol, align 8, !tbaa !28
  %arrayidx41.prol = getelementptr inbounds [64 x i16], [64 x i16]* %94, i64 0, i64 0
  %95 = load i16, i16* %arrayidx41.prol, align 2, !tbaa !53
  %idxprom43.prol = sext i32 %add35.prol to i64
  %arrayidx45.prol = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom43.prol
  %96 = load [64 x i16]*, [64 x i16]** %arrayidx45.prol, align 8, !tbaa !28
  %arrayidx47.prol = getelementptr inbounds [64 x i16], [64 x i16]* %96, i64 0, i64 0
  store i16 %95, i16* %arrayidx47.prol, align 2, !tbaa !53
  br label %for.body34.lr.ph.split

for.body34.lr.ph.split:                           ; preds = %for.body34.lr.ph, %for.body34.prol
  %indvars.iv213.unr = phi i64 [ %78, %for.body34.lr.ph ], [ %indvars.iv.next214.prol, %for.body34.prol ]
  %bi.0194.unr = phi i32 [ %cond, %for.body34.lr.ph ], [ %inc.prol, %for.body34.prol ]
  %97 = icmp eq i64 %92, %80
  br i1 %97, label %if.end74.loopexit, label %for.body34.lr.ph.split.split

for.body34.lr.ph.split.split:                     ; preds = %for.body34.lr.ph.split
  br label %for.body34

for.body34:                                       ; preds = %for.body34, %for.body34.lr.ph.split.split
  %indvars.iv213 = phi i64 [ %indvars.iv213.unr, %for.body34.lr.ph.split.split ], [ %indvars.iv.next214.1, %for.body34 ]
  %bi.0194 = phi i32 [ %bi.0194.unr, %for.body34.lr.ph.split.split ], [ %inc.1, %for.body34 ]
  %add35 = add nsw i32 %bi.0194, %blkn.1197
  %sub36 = add nsw i32 %add35, -1
  %idxprom37 = sext i32 %sub36 to i64
  %arrayidx39 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom37
  %98 = load [64 x i16]*, [64 x i16]** %arrayidx39, align 8, !tbaa !28
  %arrayidx41 = getelementptr inbounds [64 x i16], [64 x i16]* %98, i64 0, i64 0
  %99 = load i16, i16* %arrayidx41, align 2, !tbaa !53
  %idxprom43 = sext i32 %add35 to i64
  %arrayidx45 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom43
  %100 = load [64 x i16]*, [64 x i16]** %arrayidx45, align 8, !tbaa !28
  %arrayidx47 = getelementptr inbounds [64 x i16], [64 x i16]* %100, i64 0, i64 0
  store i16 %99, i16* %arrayidx47, align 2, !tbaa !53
  %inc = add nsw i32 %bi.0194, 1
  %add35.1 = add nsw i32 %inc, %blkn.1197
  %sub36.1 = add i32 %bi.0194, %blkn.1197
  %idxprom37.1 = sext i32 %sub36.1 to i64
  %arrayidx39.1 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom37.1
  %101 = load [64 x i16]*, [64 x i16]** %arrayidx39.1, align 8, !tbaa !28
  %arrayidx41.1 = getelementptr inbounds [64 x i16], [64 x i16]* %101, i64 0, i64 0
  %102 = load i16, i16* %arrayidx41.1, align 2, !tbaa !53
  %idxprom43.1 = sext i32 %add35.1 to i64
  %arrayidx45.1 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom43.1
  %103 = load [64 x i16]*, [64 x i16]** %arrayidx45.1, align 8, !tbaa !28
  %arrayidx47.1 = getelementptr inbounds [64 x i16], [64 x i16]* %103, i64 0, i64 0
  store i16 %102, i16* %arrayidx47.1, align 2, !tbaa !53
  %indvars.iv.next214.1 = add nsw i64 %indvars.iv213, 2
  %inc.1 = add nsw i32 %bi.0194, 2
  %cmp32.1 = icmp slt i64 %indvars.iv.next214.1, %91
  br i1 %cmp32.1, label %for.body34, label %if.end74.loopexit.unr-lcssa

if.else:                                          ; preds = %lor.lhs.false
  %idxprom48 = sext i32 %blkn.1197 to i64
  %arrayidx50 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom48
  %104 = bitcast [64 x i16]** %arrayidx50 to i8**
  %105 = load i8*, i8** %104, align 8, !tbaa !28
  %106 = load i32, i32* %MCU_width, align 4, !tbaa !52
  %conv52 = sext i32 %106 to i64
  %mul53 = shl nsw i64 %conv52, 7
  tail call void @jzero_far(i8* %105, i64 %mul53) #3
  %107 = load i32, i32* %MCU_width, align 4, !tbaa !52
  %cmp56191 = icmp sgt i32 %107, 0
  br i1 %cmp56191, label %for.body58.lr.ph, label %if.end74

for.body58.lr.ph:                                 ; preds = %if.else
  %sub59 = add nsw i32 %blkn.1197, -1
  %idxprom60 = sext i32 %sub59 to i64
  %arrayidx62 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %idxprom60
  %108 = load [64 x i16]*, [64 x i16]** %arrayidx62, align 8
  %arrayidx64 = getelementptr inbounds [64 x i16], [64 x i16]* %108, i64 0, i64 0
  %109 = sext i32 %107 to i64
  %110 = sext i32 %107 to i64
  %111 = add nsw i64 %110, -1
  %xtraiter = and i64 %110, 3
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body58.lr.ph.split, label %for.body58.prol.preheader

for.body58.prol.preheader:                        ; preds = %for.body58.lr.ph
  br label %for.body58.prol

for.body58.prol:                                  ; preds = %for.body58.prol, %for.body58.prol.preheader
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body58.prol ], [ 0, %for.body58.prol.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body58.prol ], [ %xtraiter, %for.body58.prol.preheader ]
  %112 = load i16, i16* %arrayidx64, align 2, !tbaa !53
  %113 = add nsw i64 %indvars.iv.prol, %idxprom48
  %arrayidx68.prol = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %113
  %114 = load [64 x i16]*, [64 x i16]** %arrayidx68.prol, align 8, !tbaa !28
  %arrayidx70.prol = getelementptr inbounds [64 x i16], [64 x i16]* %114, i64 0, i64 0
  store i16 %112, i16* %arrayidx70.prol, align 2, !tbaa !53
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body58.lr.ph.split.loopexit, label %for.body58.prol, !llvm.loop !59

for.body58.lr.ph.split.loopexit:                  ; preds = %for.body58.prol
  %indvars.iv.next.prol.lcssa = phi i64 [ %indvars.iv.next.prol, %for.body58.prol ]
  br label %for.body58.lr.ph.split

for.body58.lr.ph.split:                           ; preds = %for.body58.lr.ph, %for.body58.lr.ph.split.loopexit
  %indvars.iv.unr = phi i64 [ 0, %for.body58.lr.ph ], [ %indvars.iv.next.prol.lcssa, %for.body58.lr.ph.split.loopexit ]
  %115 = icmp ult i64 %111, 3
  br i1 %115, label %if.end74.loopexit242, label %for.body58.lr.ph.split.split

for.body58.lr.ph.split.split:                     ; preds = %for.body58.lr.ph.split
  br label %for.body58

for.body58:                                       ; preds = %for.body58, %for.body58.lr.ph.split.split
  %indvars.iv = phi i64 [ %indvars.iv.unr, %for.body58.lr.ph.split.split ], [ %indvars.iv.next.3, %for.body58 ]
  %116 = load i16, i16* %arrayidx64, align 2, !tbaa !53
  %117 = add nsw i64 %indvars.iv, %idxprom48
  %arrayidx68 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %117
  %118 = load [64 x i16]*, [64 x i16]** %arrayidx68, align 8, !tbaa !28
  %arrayidx70 = getelementptr inbounds [64 x i16], [64 x i16]* %118, i64 0, i64 0
  store i16 %116, i16* %arrayidx70, align 2, !tbaa !53
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %119 = load i16, i16* %arrayidx64, align 2, !tbaa !53
  %120 = add nsw i64 %indvars.iv.next, %idxprom48
  %arrayidx68.1 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %120
  %121 = load [64 x i16]*, [64 x i16]** %arrayidx68.1, align 8, !tbaa !28
  %arrayidx70.1 = getelementptr inbounds [64 x i16], [64 x i16]* %121, i64 0, i64 0
  store i16 %119, i16* %arrayidx70.1, align 2, !tbaa !53
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2
  %122 = load i16, i16* %arrayidx64, align 2, !tbaa !53
  %123 = add nsw i64 %indvars.iv.next.1, %idxprom48
  %arrayidx68.2 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %123
  %124 = load [64 x i16]*, [64 x i16]** %arrayidx68.2, align 8, !tbaa !28
  %arrayidx70.2 = getelementptr inbounds [64 x i16], [64 x i16]* %124, i64 0, i64 0
  store i16 %122, i16* %arrayidx70.2, align 2, !tbaa !53
  %indvars.iv.next.2 = add nsw i64 %indvars.iv, 3
  %125 = load i16, i16* %arrayidx64, align 2, !tbaa !53
  %126 = add nsw i64 %indvars.iv.next.2, %idxprom48
  %arrayidx68.3 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %126
  %127 = load [64 x i16]*, [64 x i16]** %arrayidx68.3, align 8, !tbaa !28
  %arrayidx70.3 = getelementptr inbounds [64 x i16], [64 x i16]* %127, i64 0, i64 0
  store i16 %125, i16* %arrayidx70.3, align 2, !tbaa !53
  %indvars.iv.next.3 = add nsw i64 %indvars.iv, 4
  %cmp56.3 = icmp slt i64 %indvars.iv.next.3, %109
  br i1 %cmp56.3, label %for.body58, label %if.end74.loopexit242.unr-lcssa

if.end74.loopexit.unr-lcssa:                      ; preds = %for.body34
  br label %if.end74.loopexit

if.end74.loopexit:                                ; preds = %for.body34.lr.ph.split, %if.end74.loopexit.unr-lcssa
  br label %if.end74

if.end74.loopexit242.unr-lcssa:                   ; preds = %for.body58
  br label %if.end74.loopexit242

if.end74.loopexit242:                             ; preds = %for.body58.lr.ph.split, %if.end74.loopexit242.unr-lcssa
  br label %if.end74

if.end74:                                         ; preds = %if.end74.loopexit242, %if.end74.loopexit, %if.else, %if.then22, %if.then
  %128 = load i32, i32* %MCU_width, align 4, !tbaa !52
  %add76 = add nsw i32 %128, %blkn.1197
  %add77 = add i32 %ypos.0198, 8
  %inc79 = add nuw nsw i32 %yindex.0196, 1
  %129 = load i32, i32* %MCU_height, align 8, !tbaa !51
  %cmp12 = icmp slt i32 %inc79, %129
  br i1 %cmp12, label %for.body13, label %for.inc81.loopexit

for.inc81.loopexit:                               ; preds = %if.end74
  %add76.lcssa = phi i32 [ %add76, %if.end74 ]
  %.pre224 = load i32, i32* %comps_in_scan, align 4, !tbaa !32
  br label %for.inc81

for.inc81:                                        ; preds = %for.inc81.loopexit, %for.body8
  %130 = phi i32 [ %74, %for.body8 ], [ %.pre224, %for.inc81.loopexit ]
  %blkn.1.lcssa = phi i32 [ %blkn.0201, %for.body8 ], [ %add76.lcssa, %for.inc81.loopexit ]
  %indvars.iv.next216 = add nuw nsw i64 %indvars.iv215, 1
  %131 = sext i32 %130 to i64
  %cmp7 = icmp slt i64 %indvars.iv.next216, %131
  br i1 %cmp7, label %for.body8, label %for.end83.loopexit243

for.end83.loopexit:                               ; preds = %for.inc81.us
  br label %for.end83

for.end83.loopexit243:                            ; preds = %for.inc81
  br label %for.end83

for.end83:                                        ; preds = %for.end83.loopexit243, %for.end83.loopexit, %for.cond6.preheader
  %132 = load %struct.jpeg_entropy_encoder*, %struct.jpeg_entropy_encoder** %entropy, align 8, !tbaa !60
  %encode_mcu = getelementptr inbounds %struct.jpeg_entropy_encoder, %struct.jpeg_entropy_encoder* %132, i64 0, i32 1
  %133 = load i32 (%struct.jpeg_compress_struct*, [64 x i16]**)*, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)** %encode_mcu, align 8, !tbaa !61
  %call = tail call i32 %133(%struct.jpeg_compress_struct* nonnull %cinfo, [64 x i16]** %arraydecay) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then85, label %for.inc89

if.then85:                                        ; preds = %for.end83
  %yoffset.0205.lcssa = phi i32 [ %yoffset.0205, %for.end83 ]
  %MCU_col_num.0203.lcssa = phi i32 [ %MCU_col_num.0203, %for.end83 ]
  store i32 %yoffset.0205.lcssa, i32* %MCU_vert_offset, align 8, !tbaa !39
  store i32 %MCU_col_num.0203.lcssa, i32* %mcu_ctr, align 4, !tbaa !38
  br label %cleanup

for.inc89:                                        ; preds = %for.end83
  %inc90 = add i32 %MCU_col_num.0203, 1
  %cmp4 = icmp ugt i32 %inc90, %sub
  br i1 %cmp4, label %for.end91.loopexit, label %for.cond6.preheader

for.end91.loopexit:                               ; preds = %for.inc89
  %.pre226 = load i32, i32* %MCU_rows_per_iMCU_row, align 4, !tbaa !34
  br label %for.end91

for.end91:                                        ; preds = %for.end91.loopexit, %for.body
  %134 = phi i32 [ %.pre226, %for.end91.loopexit ], [ %13, %for.body ]
  store i32 0, i32* %mcu_ctr, align 4, !tbaa !38
  %inc94 = add nsw i32 %yoffset.0205, 1
  %cmp = icmp slt i32 %inc94, %134
  br i1 %cmp, label %for.body, label %for.end95.loopexit

for.end95.loopexit:                               ; preds = %for.end91
  %.pre227 = load %struct.my_coef_controller*, %struct.my_coef_controller** %0, align 8, !tbaa !14
  %.pre228 = load i32, i32* %comps_in_scan, align 4, !tbaa !32
  br label %for.end95

for.end95:                                        ; preds = %entry.for.end95_crit_edge, %for.end95.loopexit
  %iMCU_row_num96.pre-phi = phi i32* [ %.pre229, %entry.for.end95_crit_edge ], [ %iMCU_row_num, %for.end95.loopexit ]
  %135 = phi i32 [ %12, %entry.for.end95_crit_edge ], [ %.pre228, %for.end95.loopexit ]
  %136 = phi %struct.my_coef_controller* [ %1, %entry.for.end95_crit_edge ], [ %.pre227, %for.end95.loopexit ]
  %137 = load i32, i32* %iMCU_row_num96.pre-phi, align 8, !tbaa !31
  %inc97 = add i32 %137, 1
  store i32 %inc97, i32* %iMCU_row_num96.pre-phi, align 8, !tbaa !31
  %cmp.i = icmp sgt i32 %135, 1
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !prof !33

if.then.i:                                        ; preds = %for.end95
  %MCU_rows_per_iMCU_row.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %136, i64 0, i32 4
  store i32 1, i32* %MCU_rows_per_iMCU_row.i, align 4, !tbaa !34
  br label %start_iMCU_row.exit

if.else.i:                                        ; preds = %for.end95
  %iMCU_row_num.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %136, i64 0, i32 1
  %138 = load i32, i32* %iMCU_row_num.i, align 8, !tbaa !31
  %139 = load i32, i32* %total_iMCU_rows, align 8, !tbaa !35
  %sub.i = add i32 %139, -1
  %cmp2.i = icmp ult i32 %138, %sub.i
  %arrayidx.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 0
  %140 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %arrayidx.i, align 8, !tbaa !28
  br i1 %cmp2.i, label %if.then3.i, label %if.else5.i, !prof !63

if.then3.i:                                       ; preds = %if.else.i
  %v_samp_factor.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %140, i64 0, i32 3
  %141 = load i32, i32* %v_samp_factor.i, align 4, !tbaa !27
  %MCU_rows_per_iMCU_row4.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %136, i64 0, i32 4
  store i32 %141, i32* %MCU_rows_per_iMCU_row4.i, align 4, !tbaa !34
  br label %start_iMCU_row.exit

if.else5.i:                                       ; preds = %if.else.i
  %last_row_height.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %140, i64 0, i32 18
  %142 = load i32, i32* %last_row_height.i, align 8, !tbaa !37
  %MCU_rows_per_iMCU_row8.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %136, i64 0, i32 4
  store i32 %142, i32* %MCU_rows_per_iMCU_row8.i, align 4, !tbaa !34
  br label %start_iMCU_row.exit

start_iMCU_row.exit:                              ; preds = %if.then.i, %if.then3.i, %if.else5.i
  %mcu_ctr.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %136, i64 0, i32 2
  store i32 0, i32* %mcu_ctr.i, align 4, !tbaa !38
  %MCU_vert_offset.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %136, i64 0, i32 3
  store i32 0, i32* %MCU_vert_offset.i, align 8, !tbaa !39
  br label %cleanup

cleanup:                                          ; preds = %start_iMCU_row.exit, %if.then85
  %retval.0 = phi i32 [ 0, %if.then85 ], [ 1, %start_iMCU_row.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @compress_first_pass(%struct.jpeg_compress_struct* %cinfo, i8*** nocapture readonly %input_buf) #0 !prof !64 {
entry:
  %coef1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 54
  %0 = bitcast %struct.jpeg_c_coef_controller** %coef1 to %struct.my_coef_controller**
  %1 = load %struct.my_coef_controller*, %struct.my_coef_controller** %0, align 8, !tbaa !14
  %total_iMCU_rows = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 40
  %2 = load i32, i32* %total_iMCU_rows, align 8, !tbaa !35
  %sub = add i32 %2, -1
  %num_components = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 12
  %3 = load i32, i32* %num_components, align 4, !tbaa !19
  %cmp185 = icmp sgt i32 %3, 0
  br i1 %cmp185, label %for.body.lr.ph, label %for.end88, !prof !65

for.body.lr.ph:                                   ; preds = %entry
  %comp_info = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 14
  %4 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %comp_info, align 8, !tbaa !21
  %mem = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1
  %5 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %iMCU_row_num = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 1
  %fdct = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 58
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc86
  %indvars.iv261 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next262, %for.inc86 ]
  %compptr.0187 = phi %struct.jpeg_component_info* [ %4, %for.body.lr.ph ], [ %incdec.ptr, %for.inc86 ]
  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !3
  %access_virt_barray = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %6, i64 0, i32 8
  %7 = load [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)** %access_virt_barray, align 8, !tbaa !66
  %arrayidx = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 6, i64 %indvars.iv261
  %8 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %arrayidx, align 8, !tbaa !28
  %9 = load i32, i32* %iMCU_row_num, align 8, !tbaa !31
  %v_samp_factor = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0187, i64 0, i32 3
  %10 = load i32, i32* %v_samp_factor, align 4, !tbaa !27
  %mul = mul i32 %10, %9
  %call = tail call [64 x i16]** %7(%struct.jpeg_common_struct* %5, %struct.jvirt_barray_control* %8, i32 %mul, i32 %10, i32 1) #3
  %11 = load i32, i32* %iMCU_row_num, align 8, !tbaa !31
  %cmp4 = icmp ult i32 %11, %sub
  br i1 %cmp4, label %if.then, label %if.else, !prof !67

if.then:                                          ; preds = %for.body
  %12 = load i32, i32* %v_samp_factor, align 4, !tbaa !27
  br label %if.end10

if.else:                                          ; preds = %for.body
  %height_in_blocks = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0187, i64 0, i32 8
  %13 = load i32, i32* %height_in_blocks, align 8, !tbaa !26
  %14 = load i32, i32* %v_samp_factor, align 4, !tbaa !27
  %rem = urem i32 %13, %14
  %cmp7 = icmp eq i32 %rem, 0
  %.rem = select i1 %cmp7, i32 %14, i32 %rem
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then
  %block_rows.0 = phi i32 [ %12, %if.then ], [ %.rem, %if.else ]
  %width_in_blocks = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0187, i64 0, i32 7
  %15 = load i32, i32* %width_in_blocks, align 4, !tbaa !23
  %h_samp_factor11 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0187, i64 0, i32 2
  %16 = load i32, i32* %h_samp_factor11, align 8, !tbaa !25
  %rem12 = urem i32 %15, %16
  %cmp13 = icmp sgt i32 %rem12, 0
  %sub15 = sub nsw i32 %16, %rem12
  %sub15.rem12 = select i1 %cmp13, i32 %sub15, i32 %rem12
  %cmp18174 = icmp sgt i32 %block_rows.0, 0
  br i1 %cmp18174, label %for.body19.lr.ph, label %for.end40, !prof !68

for.body19.lr.ph:                                 ; preds = %if.end10
  %arrayidx23 = getelementptr inbounds i8**, i8*** %input_buf, i64 %indvars.iv261
  %cmp25 = icmp sgt i32 %sub15.rem12, 0
  %idx.ext = zext i32 %15 to i64
  %conv = sext i32 %sub15.rem12 to i64
  %mul27 = shl nsw i64 %conv, 7
  br i1 %cmp25, label %for.body19.us.us.preheader, label %for.body19.preheader, !prof !69

for.body19.preheader:                             ; preds = %for.body19.lr.ph
  br label %for.body19

for.body19.us.us.preheader:                       ; preds = %for.body19.lr.ph
  %17 = add i32 %sub15.rem12, -1
  %xtraiter = and i32 %sub15.rem12, 7
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  %18 = icmp ult i32 %17, 7
  br label %for.body19.us.us

for.body19.us.us:                                 ; preds = %for.body19.us.us.preheader, %for.cond30.for.inc38.loopexit_crit_edge.us.us
  %indvars.iv249 = phi i64 [ %indvars.iv.next250, %for.cond30.for.inc38.loopexit_crit_edge.us.us ], [ 0, %for.body19.us.us.preheader ]
  %arrayidx21.us.us = getelementptr inbounds [64 x i16]*, [64 x i16]** %call, i64 %indvars.iv249
  %19 = load [64 x i16]*, [64 x i16]** %arrayidx21.us.us, align 8, !tbaa !28
  %20 = load %struct.jpeg_forward_dct*, %struct.jpeg_forward_dct** %fdct, align 8, !tbaa !54
  %forward_DCT.us.us = getelementptr inbounds %struct.jpeg_forward_dct, %struct.jpeg_forward_dct* %20, i64 0, i32 1
  %21 = load void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)** %forward_DCT.us.us, align 8, !tbaa !55
  %22 = load i8**, i8*** %arrayidx23, align 8, !tbaa !28
  %23 = trunc i64 %indvars.iv249 to i32
  %mul24.us.us = shl nsw i32 %23, 3
  tail call void %21(%struct.jpeg_compress_struct* %cinfo, %struct.jpeg_component_info* %compptr.0187, i8** %22, [64 x i16]* %19, i32 %mul24.us.us, i32 0, i32 %15) #3
  %add.ptr.us.us = getelementptr inbounds [64 x i16], [64 x i16]* %19, i64 %idx.ext
  %24 = bitcast [64 x i16]* %add.ptr.us.us to i8*
  tail call void @jzero_far(i8* %24, i64 %mul27) #3
  %arrayidx28.us.us = getelementptr inbounds [64 x i16], [64 x i16]* %add.ptr.us.us, i64 -1
  %arrayidx29.us.us = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx28.us.us, i64 0, i64 0
  %25 = load i16, i16* %arrayidx29.us.us, align 2, !tbaa !53
  br i1 %lcmp.mod, label %for.body19.us.us.split, label %for.body33.us.us.prol.preheader

for.body33.us.us.prol.preheader:                  ; preds = %for.body19.us.us
  br label %for.body33.us.us.prol

for.body33.us.us.prol:                            ; preds = %for.body33.us.us.prol, %for.body33.us.us.prol.preheader
  %indvars.iv245.prol = phi i64 [ %indvars.iv.next246.prol, %for.body33.us.us.prol ], [ 0, %for.body33.us.us.prol.preheader ]
  %prol.iter = phi i32 [ %prol.iter.sub, %for.body33.us.us.prol ], [ %xtraiter, %for.body33.us.us.prol.preheader ]
  %arrayidx35.us.us.prol = getelementptr inbounds [64 x i16], [64 x i16]* %add.ptr.us.us, i64 %indvars.iv245.prol
  %arrayidx36.us.us.prol = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx35.us.us.prol, i64 0, i64 0
  store i16 %25, i16* %arrayidx36.us.us.prol, align 2, !tbaa !53
  %indvars.iv.next246.prol = add nuw nsw i64 %indvars.iv245.prol, 1
  %prol.iter.sub = add i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body19.us.us.split.loopexit, label %for.body33.us.us.prol, !llvm.loop !70

for.body19.us.us.split.loopexit:                  ; preds = %for.body33.us.us.prol
  %indvars.iv.next246.prol.lcssa = phi i64 [ %indvars.iv.next246.prol, %for.body33.us.us.prol ]
  br label %for.body19.us.us.split

for.body19.us.us.split:                           ; preds = %for.body19.us.us, %for.body19.us.us.split.loopexit
  %indvars.iv245.unr = phi i64 [ 0, %for.body19.us.us ], [ %indvars.iv.next246.prol.lcssa, %for.body19.us.us.split.loopexit ]
  br i1 %18, label %for.cond30.for.inc38.loopexit_crit_edge.us.us, label %for.body19.us.us.split.split

for.body19.us.us.split.split:                     ; preds = %for.body19.us.us.split
  br label %for.body33.us.us

for.cond30.for.inc38.loopexit_crit_edge.us.us.unr-lcssa: ; preds = %for.body33.us.us
  br label %for.cond30.for.inc38.loopexit_crit_edge.us.us

for.cond30.for.inc38.loopexit_crit_edge.us.us:    ; preds = %for.body19.us.us.split, %for.cond30.for.inc38.loopexit_crit_edge.us.us.unr-lcssa
  %indvars.iv.next250 = add nuw nsw i64 %indvars.iv249, 1
  %lftr.wideiv251 = trunc i64 %indvars.iv.next250 to i32
  %exitcond252 = icmp eq i32 %lftr.wideiv251, %block_rows.0
  br i1 %exitcond252, label %for.end40.loopexit, label %for.body19.us.us, !prof !71

for.body33.us.us:                                 ; preds = %for.body33.us.us, %for.body19.us.us.split.split
  %indvars.iv245 = phi i64 [ %indvars.iv245.unr, %for.body19.us.us.split.split ], [ %indvars.iv.next246.7, %for.body33.us.us ]
  %arrayidx35.us.us = getelementptr inbounds [64 x i16], [64 x i16]* %add.ptr.us.us, i64 %indvars.iv245
  %arrayidx36.us.us = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx35.us.us, i64 0, i64 0
  store i16 %25, i16* %arrayidx36.us.us, align 2, !tbaa !53
  %indvars.iv.next246 = add nuw nsw i64 %indvars.iv245, 1
  %arrayidx35.us.us.1 = getelementptr inbounds [64 x i16], [64 x i16]* %add.ptr.us.us, i64 %indvars.iv.next246
  %arrayidx36.us.us.1 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx35.us.us.1, i64 0, i64 0
  store i16 %25, i16* %arrayidx36.us.us.1, align 2, !tbaa !53
  %indvars.iv.next246.1 = add nsw i64 %indvars.iv245, 2
  %arrayidx35.us.us.2 = getelementptr inbounds [64 x i16], [64 x i16]* %add.ptr.us.us, i64 %indvars.iv.next246.1
  %arrayidx36.us.us.2 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx35.us.us.2, i64 0, i64 0
  store i16 %25, i16* %arrayidx36.us.us.2, align 2, !tbaa !53
  %indvars.iv.next246.2 = add nsw i64 %indvars.iv245, 3
  %arrayidx35.us.us.3 = getelementptr inbounds [64 x i16], [64 x i16]* %add.ptr.us.us, i64 %indvars.iv.next246.2
  %arrayidx36.us.us.3 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx35.us.us.3, i64 0, i64 0
  store i16 %25, i16* %arrayidx36.us.us.3, align 2, !tbaa !53
  %indvars.iv.next246.3 = add nsw i64 %indvars.iv245, 4
  %arrayidx35.us.us.4 = getelementptr inbounds [64 x i16], [64 x i16]* %add.ptr.us.us, i64 %indvars.iv.next246.3
  %arrayidx36.us.us.4 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx35.us.us.4, i64 0, i64 0
  store i16 %25, i16* %arrayidx36.us.us.4, align 2, !tbaa !53
  %indvars.iv.next246.4 = add nsw i64 %indvars.iv245, 5
  %arrayidx35.us.us.5 = getelementptr inbounds [64 x i16], [64 x i16]* %add.ptr.us.us, i64 %indvars.iv.next246.4
  %arrayidx36.us.us.5 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx35.us.us.5, i64 0, i64 0
  store i16 %25, i16* %arrayidx36.us.us.5, align 2, !tbaa !53
  %indvars.iv.next246.5 = add nsw i64 %indvars.iv245, 6
  %arrayidx35.us.us.6 = getelementptr inbounds [64 x i16], [64 x i16]* %add.ptr.us.us, i64 %indvars.iv.next246.5
  %arrayidx36.us.us.6 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx35.us.us.6, i64 0, i64 0
  store i16 %25, i16* %arrayidx36.us.us.6, align 2, !tbaa !53
  %indvars.iv.next246.6 = add nsw i64 %indvars.iv245, 7
  %arrayidx35.us.us.7 = getelementptr inbounds [64 x i16], [64 x i16]* %add.ptr.us.us, i64 %indvars.iv.next246.6
  %arrayidx36.us.us.7 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx35.us.us.7, i64 0, i64 0
  store i16 %25, i16* %arrayidx36.us.us.7, align 2, !tbaa !53
  %indvars.iv.next246.7 = add nsw i64 %indvars.iv245, 8
  %lftr.wideiv247.7 = trunc i64 %indvars.iv.next246.7 to i32
  %exitcond248.7 = icmp eq i32 %lftr.wideiv247.7, %sub15.rem12
  br i1 %exitcond248.7, label %for.cond30.for.inc38.loopexit_crit_edge.us.us.unr-lcssa, label %for.body33.us.us

for.body19:                                       ; preds = %for.body19.preheader, %for.body19
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body19 ], [ 0, %for.body19.preheader ]
  %arrayidx21 = getelementptr inbounds [64 x i16]*, [64 x i16]** %call, i64 %indvars.iv
  %26 = load [64 x i16]*, [64 x i16]** %arrayidx21, align 8, !tbaa !28
  %27 = load %struct.jpeg_forward_dct*, %struct.jpeg_forward_dct** %fdct, align 8, !tbaa !54
  %forward_DCT = getelementptr inbounds %struct.jpeg_forward_dct, %struct.jpeg_forward_dct* %27, i64 0, i32 1
  %28 = load void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)** %forward_DCT, align 8, !tbaa !55
  %29 = load i8**, i8*** %arrayidx23, align 8, !tbaa !28
  %30 = trunc i64 %indvars.iv to i32
  %mul24 = shl nsw i32 %30, 3
  tail call void %28(%struct.jpeg_compress_struct* nonnull %cinfo, %struct.jpeg_component_info* %compptr.0187, i8** %29, [64 x i16]* %26, i32 %mul24, i32 0, i32 %15) #3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %block_rows.0
  br i1 %exitcond, label %for.end40.loopexit268, label %for.body19, !prof !71

for.end40.loopexit:                               ; preds = %for.cond30.for.inc38.loopexit_crit_edge.us.us
  br label %for.end40

for.end40.loopexit268:                            ; preds = %for.body19
  br label %for.end40

for.end40:                                        ; preds = %for.end40.loopexit268, %for.end40.loopexit, %if.end10
  %31 = load i32, i32* %iMCU_row_num, align 8, !tbaa !31
  %cmp42 = icmp eq i32 %31, %sub
  br i1 %cmp42, label %if.then44, label %for.inc86, !prof !72

if.then44:                                        ; preds = %for.end40
  %add = add i32 %sub15.rem12, %15
  %div = udiv i32 %add, %16
  %32 = load i32, i32* %v_samp_factor, align 4, !tbaa !27
  %cmp47183 = icmp slt i32 %block_rows.0, %32
  br i1 %cmp47183, label %for.body49.lr.ph, label %for.inc86, !prof !73

for.body49.lr.ph:                                 ; preds = %if.then44
  %conv55 = zext i32 %add to i64
  %mul56 = shl nuw nsw i64 %conv55, 7
  %cmp58178 = icmp eq i32 %div, 0
  %sub61 = add nsw i32 %16, -1
  %idxprom62 = sext i32 %sub61 to i64
  %cmp66176 = icmp sgt i32 %16, 0
  %idx.ext75 = sext i32 %16 to i64
  %33 = sext i32 %block_rows.0 to i64
  br i1 %cmp58178, label %for.body49.preheader, label %for.body49.us.preheader

for.body49.us.preheader:                          ; preds = %for.body49.lr.ph
  %34 = add i32 %16, -1
  %xtraiter269 = and i32 %16, 7
  %lcmp.mod270 = icmp eq i32 %xtraiter269, 0
  %35 = icmp ult i32 %34, 7
  br label %for.body49.us

for.body49.preheader:                             ; preds = %for.body49.lr.ph
  br label %for.body49

for.body49.us:                                    ; preds = %for.body49.us.preheader, %for.cond57.for.inc82_crit_edge.us
  %indvars.iv257 = phi i64 [ %indvars.iv.next258, %for.cond57.for.inc82_crit_edge.us ], [ %33, %for.body49.us.preheader ]
  %block_row.1184.us = phi i32 [ %inc83.us, %for.cond57.for.inc82_crit_edge.us ], [ %block_rows.0, %for.body49.us.preheader ]
  %arrayidx51.us = getelementptr inbounds [64 x i16]*, [64 x i16]** %call, i64 %indvars.iv257
  %36 = load [64 x i16]*, [64 x i16]** %arrayidx51.us, align 8, !tbaa !28
  %sub52.us = add nsw i32 %block_row.1184.us, -1
  %idxprom53.us = sext i32 %sub52.us to i64
  %arrayidx54.us = getelementptr inbounds [64 x i16]*, [64 x i16]** %call, i64 %idxprom53.us
  %37 = load [64 x i16]*, [64 x i16]** %arrayidx54.us, align 8, !tbaa !28
  %38 = bitcast [64 x i16]* %36 to i8*
  tail call void @jzero_far(i8* %38, i64 %mul56) #3
  br i1 %cmp66176, label %for.body60.us.us.preheader, label %for.cond57.for.inc82_crit_edge.us

for.body60.us.us.preheader:                       ; preds = %for.body49.us
  br label %for.body60.us.us

for.cond57.for.inc82_crit_edge.us.loopexit:       ; preds = %for.cond65.for.end74_crit_edge.us.us
  br label %for.cond57.for.inc82_crit_edge.us

for.cond57.for.inc82_crit_edge.us:                ; preds = %for.cond57.for.inc82_crit_edge.us.loopexit, %for.body49.us
  %indvars.iv.next258 = add i64 %indvars.iv257, 1
  %inc83.us = add nsw i32 %block_row.1184.us, 1
  %39 = load i32, i32* %v_samp_factor, align 4, !tbaa !27
  %40 = sext i32 %39 to i64
  %cmp47.us = icmp slt i64 %indvars.iv.next258, %40
  br i1 %cmp47.us, label %for.body49.us, label %for.inc86.loopexit267, !prof !73

for.body60.us.us:                                 ; preds = %for.body60.us.us.preheader, %for.cond65.for.end74_crit_edge.us.us
  %lastblockrow.0182.us.us = phi [64 x i16]* [ %add.ptr78.us.us, %for.cond65.for.end74_crit_edge.us.us ], [ %37, %for.body60.us.us.preheader ]
  %thisblockrow.0180.us.us = phi [64 x i16]* [ %add.ptr76.us.us, %for.cond65.for.end74_crit_edge.us.us ], [ %36, %for.body60.us.us.preheader ]
  %MCUindex.0179.us.us = phi i32 [ %inc80.us.us, %for.cond65.for.end74_crit_edge.us.us ], [ 0, %for.body60.us.us.preheader ]
  %arrayidx64.us.us = getelementptr inbounds [64 x i16], [64 x i16]* %lastblockrow.0182.us.us, i64 %idxprom62, i64 0
  %41 = load i16, i16* %arrayidx64.us.us, align 2, !tbaa !53
  br i1 %lcmp.mod270, label %for.body60.us.us.split, label %for.body68.us.us.prol.preheader

for.body68.us.us.prol.preheader:                  ; preds = %for.body60.us.us
  br label %for.body68.us.us.prol

for.body68.us.us.prol:                            ; preds = %for.body68.us.us.prol, %for.body68.us.us.prol.preheader
  %indvars.iv253.prol = phi i64 [ %indvars.iv.next254.prol, %for.body68.us.us.prol ], [ 0, %for.body68.us.us.prol.preheader ]
  %prol.iter271 = phi i32 [ %prol.iter271.sub, %for.body68.us.us.prol ], [ %xtraiter269, %for.body68.us.us.prol.preheader ]
  %arrayidx71.us.us.prol = getelementptr inbounds [64 x i16], [64 x i16]* %thisblockrow.0180.us.us, i64 %indvars.iv253.prol, i64 0
  store i16 %41, i16* %arrayidx71.us.us.prol, align 2, !tbaa !53
  %indvars.iv.next254.prol = add nuw nsw i64 %indvars.iv253.prol, 1
  %prol.iter271.sub = add i32 %prol.iter271, -1
  %prol.iter271.cmp = icmp eq i32 %prol.iter271.sub, 0
  br i1 %prol.iter271.cmp, label %for.body60.us.us.split.loopexit, label %for.body68.us.us.prol, !llvm.loop !74

for.body60.us.us.split.loopexit:                  ; preds = %for.body68.us.us.prol
  %indvars.iv.next254.prol.lcssa = phi i64 [ %indvars.iv.next254.prol, %for.body68.us.us.prol ]
  br label %for.body60.us.us.split

for.body60.us.us.split:                           ; preds = %for.body60.us.us, %for.body60.us.us.split.loopexit
  %indvars.iv253.unr = phi i64 [ 0, %for.body60.us.us ], [ %indvars.iv.next254.prol.lcssa, %for.body60.us.us.split.loopexit ]
  br i1 %35, label %for.cond65.for.end74_crit_edge.us.us, label %for.body60.us.us.split.split

for.body60.us.us.split.split:                     ; preds = %for.body60.us.us.split
  br label %for.body68.us.us

for.cond65.for.end74_crit_edge.us.us.unr-lcssa:   ; preds = %for.body68.us.us
  br label %for.cond65.for.end74_crit_edge.us.us

for.cond65.for.end74_crit_edge.us.us:             ; preds = %for.body60.us.us.split, %for.cond65.for.end74_crit_edge.us.us.unr-lcssa
  %add.ptr76.us.us = getelementptr inbounds [64 x i16], [64 x i16]* %thisblockrow.0180.us.us, i64 %idx.ext75
  %add.ptr78.us.us = getelementptr inbounds [64 x i16], [64 x i16]* %lastblockrow.0182.us.us, i64 %idx.ext75
  %inc80.us.us = add nuw i32 %MCUindex.0179.us.us, 1
  %cmp58.us.us = icmp ult i32 %inc80.us.us, %div
  br i1 %cmp58.us.us, label %for.body60.us.us, label %for.cond57.for.inc82_crit_edge.us.loopexit

for.body68.us.us:                                 ; preds = %for.body68.us.us, %for.body60.us.us.split.split
  %indvars.iv253 = phi i64 [ %indvars.iv253.unr, %for.body60.us.us.split.split ], [ %indvars.iv.next254.7, %for.body68.us.us ]
  %arrayidx71.us.us = getelementptr inbounds [64 x i16], [64 x i16]* %thisblockrow.0180.us.us, i64 %indvars.iv253, i64 0
  store i16 %41, i16* %arrayidx71.us.us, align 2, !tbaa !53
  %indvars.iv.next254 = add nuw nsw i64 %indvars.iv253, 1
  %arrayidx71.us.us.1 = getelementptr inbounds [64 x i16], [64 x i16]* %thisblockrow.0180.us.us, i64 %indvars.iv.next254, i64 0
  store i16 %41, i16* %arrayidx71.us.us.1, align 2, !tbaa !53
  %indvars.iv.next254.1 = add nsw i64 %indvars.iv253, 2
  %arrayidx71.us.us.2 = getelementptr inbounds [64 x i16], [64 x i16]* %thisblockrow.0180.us.us, i64 %indvars.iv.next254.1, i64 0
  store i16 %41, i16* %arrayidx71.us.us.2, align 2, !tbaa !53
  %indvars.iv.next254.2 = add nsw i64 %indvars.iv253, 3
  %arrayidx71.us.us.3 = getelementptr inbounds [64 x i16], [64 x i16]* %thisblockrow.0180.us.us, i64 %indvars.iv.next254.2, i64 0
  store i16 %41, i16* %arrayidx71.us.us.3, align 2, !tbaa !53
  %indvars.iv.next254.3 = add nsw i64 %indvars.iv253, 4
  %arrayidx71.us.us.4 = getelementptr inbounds [64 x i16], [64 x i16]* %thisblockrow.0180.us.us, i64 %indvars.iv.next254.3, i64 0
  store i16 %41, i16* %arrayidx71.us.us.4, align 2, !tbaa !53
  %indvars.iv.next254.4 = add nsw i64 %indvars.iv253, 5
  %arrayidx71.us.us.5 = getelementptr inbounds [64 x i16], [64 x i16]* %thisblockrow.0180.us.us, i64 %indvars.iv.next254.4, i64 0
  store i16 %41, i16* %arrayidx71.us.us.5, align 2, !tbaa !53
  %indvars.iv.next254.5 = add nsw i64 %indvars.iv253, 6
  %arrayidx71.us.us.6 = getelementptr inbounds [64 x i16], [64 x i16]* %thisblockrow.0180.us.us, i64 %indvars.iv.next254.5, i64 0
  store i16 %41, i16* %arrayidx71.us.us.6, align 2, !tbaa !53
  %indvars.iv.next254.6 = add nsw i64 %indvars.iv253, 7
  %arrayidx71.us.us.7 = getelementptr inbounds [64 x i16], [64 x i16]* %thisblockrow.0180.us.us, i64 %indvars.iv.next254.6, i64 0
  store i16 %41, i16* %arrayidx71.us.us.7, align 2, !tbaa !53
  %indvars.iv.next254.7 = add nsw i64 %indvars.iv253, 8
  %lftr.wideiv255.7 = trunc i64 %indvars.iv.next254.7 to i32
  %exitcond256.7 = icmp eq i32 %lftr.wideiv255.7, %16
  br i1 %exitcond256.7, label %for.cond65.for.end74_crit_edge.us.us.unr-lcssa, label %for.body68.us.us

for.body49:                                       ; preds = %for.body49.preheader, %for.body49
  %indvars.iv259 = phi i64 [ %indvars.iv.next260, %for.body49 ], [ %33, %for.body49.preheader ]
  %arrayidx51 = getelementptr inbounds [64 x i16]*, [64 x i16]** %call, i64 %indvars.iv259
  %42 = bitcast [64 x i16]** %arrayidx51 to i8**
  %43 = load i8*, i8** %42, align 8, !tbaa !28
  tail call void @jzero_far(i8* %43, i64 %mul56) #3
  %indvars.iv.next260 = add i64 %indvars.iv259, 1
  %44 = load i32, i32* %v_samp_factor, align 4, !tbaa !27
  %45 = sext i32 %44 to i64
  %cmp47 = icmp slt i64 %indvars.iv.next260, %45
  br i1 %cmp47, label %for.body49, label %for.inc86.loopexit, !prof !73

for.inc86.loopexit:                               ; preds = %for.body49
  br label %for.inc86

for.inc86.loopexit267:                            ; preds = %for.cond57.for.inc82_crit_edge.us
  br label %for.inc86

for.inc86:                                        ; preds = %for.inc86.loopexit267, %for.inc86.loopexit, %if.then44, %for.end40
  %indvars.iv.next262 = add nuw nsw i64 %indvars.iv261, 1
  %incdec.ptr = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %compptr.0187, i64 1
  %46 = load i32, i32* %num_components, align 4, !tbaa !19
  %47 = sext i32 %46 to i64
  %cmp = icmp slt i64 %indvars.iv.next262, %47
  br i1 %cmp, label %for.body, label %for.end88.loopexit, !prof !65

for.end88.loopexit:                               ; preds = %for.inc86
  br label %for.end88

for.end88:                                        ; preds = %for.end88.loopexit, %entry
  %call89 = tail call i32 @compress_output(%struct.jpeg_compress_struct* nonnull %cinfo, i8*** %input_buf)
  ret i32 %call89
}

; Function Attrs: nounwind uwtable
define internal i32 @compress_output(%struct.jpeg_compress_struct* %cinfo, i8*** nocapture readnone %input_buf) #0 !prof !75 {
entry:
  %buffer = alloca [4 x [64 x i16]**], align 16
  %coef1 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 54
  %0 = bitcast %struct.jpeg_c_coef_controller** %coef1 to %struct.my_coef_controller**
  %1 = load %struct.my_coef_controller*, %struct.my_coef_controller** %0, align 8, !tbaa !14
  %2 = bitcast [4 x [64 x i16]**]* %buffer to i8*
  call void @llvm.lifetime.start(i64 32, i8* %2) #3
  %comps_in_scan = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 41
  %3 = load i32, i32* %comps_in_scan, align 4, !tbaa !32
  %cmp135 = icmp sgt i32 %3, 0
  br i1 %cmp135, label %for.body.lr.ph, label %for.end, !prof !76

for.body.lr.ph:                                   ; preds = %entry
  %mem = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1
  %4 = bitcast %struct.jpeg_compress_struct* %cinfo to %struct.jpeg_common_struct*
  %iMCU_row_num = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv148 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next149, %for.body ]
  %arrayidx = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv148
  %5 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %arrayidx, align 8, !tbaa !28
  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8, !tbaa !3
  %access_virt_barray = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %6, i64 0, i32 8
  %7 = load [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)** %access_virt_barray, align 8, !tbaa !66
  %component_index = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %5, i64 0, i32 1
  %8 = load i32, i32* %component_index, align 4, !tbaa !77
  %idxprom2 = sext i32 %8 to i64
  %arrayidx3 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 6, i64 %idxprom2
  %9 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %arrayidx3, align 8, !tbaa !28
  %10 = load i32, i32* %iMCU_row_num, align 8, !tbaa !31
  %v_samp_factor = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %5, i64 0, i32 3
  %11 = load i32, i32* %v_samp_factor, align 4, !tbaa !27
  %mul = mul i32 %11, %10
  %call = tail call [64 x i16]** %7(%struct.jpeg_common_struct* %4, %struct.jvirt_barray_control* %9, i32 %mul, i32 %11, i32 0) #3
  %arrayidx6 = getelementptr inbounds [4 x [64 x i16]**], [4 x [64 x i16]**]* %buffer, i64 0, i64 %indvars.iv148
  store [64 x i16]** %call, [64 x i16]*** %arrayidx6, align 8, !tbaa !28
  %indvars.iv.next149 = add nuw nsw i64 %indvars.iv148, 1
  %12 = load i32, i32* %comps_in_scan, align 4, !tbaa !32
  %13 = sext i32 %12 to i64
  %cmp = icmp slt i64 %indvars.iv.next149, %13
  br i1 %cmp, label %for.body, label %for.end.loopexit, !prof !76

for.end.loopexit:                                 ; preds = %for.body
  %.lcssa165 = phi i32 [ %12, %for.body ]
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %entry
  %14 = phi i32 [ %3, %entry ], [ %.lcssa165, %for.end.loopexit ]
  %MCU_vert_offset = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 3
  %15 = bitcast i32* %MCU_vert_offset to i64*
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %16 to i32
  %MCU_rows_per_iMCU_row = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 4
  %18 = lshr i64 %16, 32
  %19 = trunc i64 %18 to i32
  %cmp8132 = icmp slt i32 %17, %19
  br i1 %cmp8132, label %for.body9.lr.ph, label %for.end54, !prof !78

for.body9.lr.ph:                                  ; preds = %for.end
  %mcu_ctr = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 2
  %MCUs_per_row = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 43
  %entropy = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 59
  %arraydecay = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 0
  %sext = shl i64 %16, 32
  %20 = ashr exact i64 %sext, 32
  %.pre = load i32, i32* %mcu_ctr, align 4, !tbaa !38
  %.pre150 = load i32, i32* %MCUs_per_row, align 8, !tbaa !48
  br label %for.body9

for.body9:                                        ; preds = %for.body9.lr.ph, %for.end50
  %21 = phi i32 [ %19, %for.body9.lr.ph ], [ %39, %for.end50 ]
  %22 = phi i32 [ %.pre150, %for.body9.lr.ph ], [ %40, %for.end50 ]
  %23 = phi i32 [ %.pre, %for.body9.lr.ph ], [ 0, %for.end50 ]
  %indvars.iv146 = phi i64 [ %20, %for.body9.lr.ph ], [ %indvars.iv.next147, %for.end50 ]
  %cmp11130 = icmp ult i32 %23, %22
  br i1 %cmp11130, label %for.cond13.preheader.preheader, label %for.end50, !prof !79

for.cond13.preheader.preheader:                   ; preds = %for.body9
  br label %for.cond13.preheader

for.cond13.preheader:                             ; preds = %for.cond13.preheader.preheader, %for.inc48
  %MCU_col_num.0131 = phi i32 [ %inc49, %for.inc48 ], [ %23, %for.cond13.preheader.preheader ]
  %24 = load i32, i32* %comps_in_scan, align 4, !tbaa !32
  %cmp15127 = icmp sgt i32 %24, 0
  br i1 %cmp15127, label %for.body16.preheader, label %for.end43, !prof !80

for.body16.preheader:                             ; preds = %for.cond13.preheader
  %25 = sext i32 %24 to i64
  br label %for.body16

for.body16:                                       ; preds = %for.body16.preheader, %for.inc41
  %indvars.iv144 = phi i64 [ %indvars.iv.next145, %for.inc41 ], [ 0, %for.body16.preheader ]
  %blkn.0128 = phi i32 [ %blkn.1.lcssa, %for.inc41 ], [ 0, %for.body16.preheader ]
  %arrayidx19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 %indvars.iv144
  %26 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %arrayidx19, align 8, !tbaa !28
  %MCU_width = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i64 0, i32 13
  %MCU_height = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i64 0, i32 14
  %27 = load i32, i32* %MCU_height, align 8, !tbaa !51
  %cmp22123 = icmp sgt i32 %27, 0
  br i1 %cmp22123, label %for.body23.lr.ph, label %for.inc41, !prof !81

for.body23.lr.ph:                                 ; preds = %for.body16
  %28 = load i32, i32* %MCU_width, align 4
  %mul20 = mul i32 %28, %MCU_col_num.0131
  %arrayidx26 = getelementptr inbounds [4 x [64 x i16]**], [4 x [64 x i16]**]* %buffer, i64 0, i64 %indvars.iv144
  %29 = load [64 x i16]**, [64 x i16]*** %arrayidx26, align 8
  %idx.ext = zext i32 %mul20 to i64
  %cmp30119 = icmp sgt i32 %28, 0
  br i1 %cmp30119, label %for.body23.us.preheader, label %for.inc41, !prof !82

for.body23.us.preheader:                          ; preds = %for.body23.lr.ph
  %30 = sext i32 %27 to i64
  br label %for.body23.us

for.body23.us:                                    ; preds = %for.cond28.for.inc38_crit_edge.us.for.body23.us_crit_edge, %for.body23.us.preheader
  %31 = phi i32 [ %28, %for.body23.us.preheader ], [ %.pre151, %for.cond28.for.inc38_crit_edge.us.for.body23.us_crit_edge ]
  %indvars.iv141 = phi i64 [ 0, %for.body23.us.preheader ], [ %indvars.iv.next142, %for.cond28.for.inc38_crit_edge.us.for.body23.us_crit_edge ]
  %blkn.1124.us = phi i32 [ %blkn.0128, %for.body23.us.preheader ], [ %inc32.us.lcssa, %for.cond28.for.inc38_crit_edge.us.for.body23.us_crit_edge ]
  %32 = add nsw i64 %indvars.iv141, %indvars.iv146
  %arrayidx27.us = getelementptr inbounds [64 x i16]*, [64 x i16]** %29, i64 %32
  %33 = load [64 x i16]*, [64 x i16]** %arrayidx27.us, align 8, !tbaa !28
  %add.ptr.us = getelementptr inbounds [64 x i16], [64 x i16]* %33, i64 %idx.ext
  %34 = sext i32 %blkn.1124.us to i64
  br label %for.body31.us

for.body31.us:                                    ; preds = %for.body23.us, %for.body31.us
  %indvars.iv = phi i64 [ %34, %for.body23.us ], [ %indvars.iv.next, %for.body31.us ]
  %buffer_ptr.0122.us = phi [64 x i16]* [ %add.ptr.us, %for.body23.us ], [ %incdec.ptr.us, %for.body31.us ]
  %xindex.0121.us = phi i32 [ 0, %for.body23.us ], [ %inc36.us, %for.body31.us ]
  %blkn.2120.us = phi i32 [ %blkn.1124.us, %for.body23.us ], [ %inc32.us, %for.body31.us ]
  %incdec.ptr.us = getelementptr inbounds [64 x i16], [64 x i16]* %buffer_ptr.0122.us, i64 1
  %inc32.us = add nsw i32 %blkn.2120.us, 1
  %arrayidx34.us = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 5, i64 %indvars.iv
  store [64 x i16]* %buffer_ptr.0122.us, [64 x i16]** %arrayidx34.us, align 8, !tbaa !28
  %inc36.us = add nuw nsw i32 %xindex.0121.us, 1
  %cmp30.us = icmp slt i32 %inc36.us, %31
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  br i1 %cmp30.us, label %for.body31.us, label %for.cond28.for.inc38_crit_edge.us, !prof !82

for.cond28.for.inc38_crit_edge.us:                ; preds = %for.body31.us
  %inc32.us.lcssa = phi i32 [ %inc32.us, %for.body31.us ]
  %indvars.iv.next142 = add nuw nsw i64 %indvars.iv141, 1
  %cmp22.us = icmp slt i64 %indvars.iv.next142, %30
  br i1 %cmp22.us, label %for.cond28.for.inc38_crit_edge.us.for.body23.us_crit_edge, label %for.inc41.loopexit, !prof !81

for.cond28.for.inc38_crit_edge.us.for.body23.us_crit_edge: ; preds = %for.cond28.for.inc38_crit_edge.us
  %.pre151 = load i32, i32* %MCU_width, align 4
  br label %for.body23.us

for.inc41.loopexit:                               ; preds = %for.cond28.for.inc38_crit_edge.us
  %inc32.us.lcssa.lcssa = phi i32 [ %inc32.us.lcssa, %for.cond28.for.inc38_crit_edge.us ]
  br label %for.inc41

for.inc41:                                        ; preds = %for.inc41.loopexit, %for.body23.lr.ph, %for.body16
  %blkn.1.lcssa = phi i32 [ %blkn.0128, %for.body16 ], [ %blkn.0128, %for.body23.lr.ph ], [ %inc32.us.lcssa.lcssa, %for.inc41.loopexit ]
  %indvars.iv.next145 = add nuw nsw i64 %indvars.iv144, 1
  %cmp15 = icmp slt i64 %indvars.iv.next145, %25
  br i1 %cmp15, label %for.body16, label %for.end43.loopexit, !prof !80

for.end43.loopexit:                               ; preds = %for.inc41
  br label %for.end43

for.end43:                                        ; preds = %for.end43.loopexit, %for.cond13.preheader
  %35 = load %struct.jpeg_entropy_encoder*, %struct.jpeg_entropy_encoder** %entropy, align 8, !tbaa !60
  %encode_mcu = getelementptr inbounds %struct.jpeg_entropy_encoder, %struct.jpeg_entropy_encoder* %35, i64 0, i32 1
  %36 = load i32 (%struct.jpeg_compress_struct*, [64 x i16]**)*, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)** %encode_mcu, align 8, !tbaa !61
  %call45 = tail call i32 %36(%struct.jpeg_compress_struct* nonnull %cinfo, [64 x i16]** %arraydecay) #3
  %tobool = icmp eq i32 %call45, 0
  br i1 %tobool, label %if.then, label %for.inc48, !prof !83

if.then:                                          ; preds = %for.end43
  %indvars.iv146.lcssa = phi i64 [ %indvars.iv146, %for.end43 ]
  %MCU_col_num.0131.lcssa = phi i32 [ %MCU_col_num.0131, %for.end43 ]
  %37 = trunc i64 %indvars.iv146.lcssa to i32
  store i32 %37, i32* %MCU_vert_offset, align 8, !tbaa !39
  store i32 %MCU_col_num.0131.lcssa, i32* %mcu_ctr, align 4, !tbaa !38
  br label %cleanup

for.inc48:                                        ; preds = %for.end43
  %inc49 = add i32 %MCU_col_num.0131, 1
  %38 = load i32, i32* %MCUs_per_row, align 8, !tbaa !48
  %cmp11 = icmp ult i32 %inc49, %38
  br i1 %cmp11, label %for.cond13.preheader, label %for.end50.loopexit, !prof !79

for.end50.loopexit:                               ; preds = %for.inc48
  %.lcssa = phi i32 [ %38, %for.inc48 ]
  %.pre152 = load i32, i32* %MCU_rows_per_iMCU_row, align 4, !tbaa !34
  br label %for.end50

for.end50:                                        ; preds = %for.end50.loopexit, %for.body9
  %39 = phi i32 [ %.pre152, %for.end50.loopexit ], [ %21, %for.body9 ]
  %40 = phi i32 [ %.lcssa, %for.end50.loopexit ], [ %22, %for.body9 ]
  store i32 0, i32* %mcu_ctr, align 4, !tbaa !38
  %indvars.iv.next147 = add i64 %indvars.iv146, 1
  %41 = sext i32 %39 to i64
  %cmp8 = icmp slt i64 %indvars.iv.next147, %41
  br i1 %cmp8, label %for.body9, label %for.end54.loopexit, !prof !78

for.end54.loopexit:                               ; preds = %for.end50
  %.pre153 = load i32, i32* %comps_in_scan, align 4, !tbaa !32
  br label %for.end54

for.end54:                                        ; preds = %for.end54.loopexit, %for.end
  %42 = phi i32 [ %.pre153, %for.end54.loopexit ], [ %14, %for.end ]
  %iMCU_row_num55 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1, i64 0, i32 1
  %43 = load i32, i32* %iMCU_row_num55, align 8, !tbaa !31
  %inc56 = add i32 %43, 1
  store i32 %inc56, i32* %iMCU_row_num55, align 8, !tbaa !31
  %44 = load %struct.my_coef_controller*, %struct.my_coef_controller** %0, align 8, !tbaa !14
  %cmp.i = icmp sgt i32 %42, 1
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !prof !33

if.then.i:                                        ; preds = %for.end54
  %MCU_rows_per_iMCU_row.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %44, i64 0, i32 4
  store i32 1, i32* %MCU_rows_per_iMCU_row.i, align 4, !tbaa !34
  br label %start_iMCU_row.exit

if.else.i:                                        ; preds = %for.end54
  %iMCU_row_num.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %44, i64 0, i32 1
  %45 = load i32, i32* %iMCU_row_num.i, align 8, !tbaa !31
  %total_iMCU_rows.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 40
  %46 = load i32, i32* %total_iMCU_rows.i, align 8, !tbaa !35
  %sub.i = add i32 %46, -1
  %cmp2.i = icmp ult i32 %45, %sub.i
  %arrayidx.i = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %cinfo, i64 0, i32 42, i64 0
  %47 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %arrayidx.i, align 8, !tbaa !28
  br i1 %cmp2.i, label %if.then3.i, label %if.else5.i, !prof !63

if.then3.i:                                       ; preds = %if.else.i
  %v_samp_factor.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 3
  %48 = load i32, i32* %v_samp_factor.i, align 4, !tbaa !27
  %MCU_rows_per_iMCU_row4.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %44, i64 0, i32 4
  store i32 %48, i32* %MCU_rows_per_iMCU_row4.i, align 4, !tbaa !34
  br label %start_iMCU_row.exit

if.else5.i:                                       ; preds = %if.else.i
  %last_row_height.i = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 18
  %49 = load i32, i32* %last_row_height.i, align 8, !tbaa !37
  %MCU_rows_per_iMCU_row8.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %44, i64 0, i32 4
  store i32 %49, i32* %MCU_rows_per_iMCU_row8.i, align 4, !tbaa !34
  br label %start_iMCU_row.exit

start_iMCU_row.exit:                              ; preds = %if.then.i, %if.then3.i, %if.else5.i
  %mcu_ctr.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %44, i64 0, i32 2
  store i32 0, i32* %mcu_ctr.i, align 4, !tbaa !38
  %MCU_vert_offset.i = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %44, i64 0, i32 3
  store i32 0, i32* %MCU_vert_offset.i, align 8, !tbaa !39
  br label %cleanup

cleanup:                                          ; preds = %start_iMCU_row.exit, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %start_iMCU_row.exit ]
  call void @llvm.lifetime.end(i64 32, i8* %2) #3
  ret i32 %retval.0
}

declare void @jzero_far(i8*, i64) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"MaxFunctionCount", i32 150581}
!1 = !{!"clang version 3.8.0 (trunk 257473)"}
!2 = !{!"function_entry_count", i64 1}
!3 = !{!4, !5, i64 8}
!4 = !{!"jpeg_compress_struct", !5, i64 0, !5, i64 8, !5, i64 16, !8, i64 24, !8, i64 28, !5, i64 32, !8, i64 40, !8, i64 44, !8, i64 48, !6, i64 52, !9, i64 56, !8, i64 64, !8, i64 68, !6, i64 72, !5, i64 80, !6, i64 88, !6, i64 120, !6, i64 152, !6, i64 184, !6, i64 200, !6, i64 216, !8, i64 232, !5, i64 240, !8, i64 248, !8, i64 252, !8, i64 256, !8, i64 260, !8, i64 264, !6, i64 268, !8, i64 272, !8, i64 276, !8, i64 280, !6, i64 284, !10, i64 286, !10, i64 288, !8, i64 292, !8, i64 296, !8, i64 300, !8, i64 304, !8, i64 308, !8, i64 312, !8, i64 316, !6, i64 320, !8, i64 352, !8, i64 356, !8, i64 360, !6, i64 364, !8, i64 404, !8, i64 408, !8, i64 412, !8, i64 416, !5, i64 424, !5, i64 432, !5, i64 440, !5, i64 448, !5, i64 456, !5, i64 464, !5, i64 472, !5, i64 480, !5, i64 488}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = !{!"int", !6, i64 0}
!9 = !{!"double", !6, i64 0}
!10 = !{!"short", !6, i64 0}
!11 = !{!12, !5, i64 0}
!12 = !{!"jpeg_memory_mgr", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !5, i64 32, !5, i64 40, !5, i64 48, !5, i64 56, !5, i64 64, !5, i64 72, !5, i64 80, !13, i64 88}
!13 = !{!"long", !6, i64 0}
!14 = !{!4, !5, i64 448}
!15 = !{!16, !5, i64 0}
!16 = !{!"", !17, i64 0, !8, i64 16, !8, i64 20, !8, i64 24, !8, i64 28, !6, i64 32, !6, i64 112}
!17 = !{!"jpeg_c_coef_controller", !5, i64 0, !5, i64 8}
!18 = !{!"branch_weights", i32 1, i32 2}
!19 = !{!4, !8, i64 68}
!20 = !{!"branch_weights", i32 4, i32 2}
!21 = !{!4, !5, i64 80}
!22 = !{!12, !5, i64 40}
!23 = !{!24, !8, i64 28}
!24 = !{!"", !8, i64 0, !8, i64 4, !8, i64 8, !8, i64 12, !8, i64 16, !8, i64 20, !8, i64 24, !8, i64 28, !8, i64 32, !8, i64 36, !8, i64 40, !8, i64 44, !8, i64 48, !8, i64 52, !8, i64 56, !8, i64 60, !8, i64 64, !8, i64 68, !8, i64 72, !5, i64 80, !5, i64 88}
!25 = !{!24, !8, i64 8}
!26 = !{!24, !8, i64 32}
!27 = !{!24, !8, i64 12}
!28 = !{!5, !5, i64 0}
!29 = !{!12, !5, i64 8}
!30 = !{!"function_entry_count", i64 19}
!31 = !{!16, !8, i64 16}
!32 = !{!4, !8, i64 316}
!33 = !{!"branch_weights", i32 100, i32 529}
!34 = !{!16, !8, i64 28}
!35 = !{!4, !8, i64 312}
!36 = !{!"branch_weights", i32 33, i32 497}
!37 = !{!24, !8, i64 72}
!38 = !{!16, !8, i64 20}
!39 = !{!16, !8, i64 24}
!40 = !{!"branch_weights", i32 1, i32 1, i32 2, i32 19}
!41 = !{!4, !5, i64 0}
!42 = !{!43, !8, i64 40}
!43 = !{!"jpeg_error_mgr", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !5, i64 32, !8, i64 40, !6, i64 44, !8, i64 124, !13, i64 128, !5, i64 136, !8, i64 144, !5, i64 152, !8, i64 160, !8, i64 164}
!44 = !{!43, !5, i64 0}
!45 = !{!16, !5, i64 8}
!46 = !{!"branch_weights", i32 1, i32 19}
!47 = !{!"function_entry_count", i64 0}
!48 = !{!4, !8, i64 352}
!49 = !{!8, !8, i64 0}
!50 = !{!24, !8, i64 64}
!51 = !{!24, !8, i64 56}
!52 = !{!24, !8, i64 52}
!53 = !{!10, !10, i64 0}
!54 = !{!4, !5, i64 480}
!55 = !{!56, !5, i64 8}
!56 = !{!"jpeg_forward_dct", !5, i64 0, !5, i64 8}
!57 = distinct !{!57, !58}
!58 = !{!"llvm.loop.unroll.disable"}
!59 = distinct !{!59, !58}
!60 = !{!4, !5, i64 488}
!61 = !{!62, !5, i64 8}
!62 = !{!"jpeg_entropy_encoder", !5, i64 0, !5, i64 8, !5, i64 16}
!63 = !{!"branch_weights", i32 497, i32 33}
!64 = !{!"function_entry_count", i64 32}
!65 = !{!"branch_weights", i32 97, i32 33}
!66 = !{!12, !5, i64 64}
!67 = !{!"branch_weights", i32 94, i32 4}
!68 = !{!"branch_weights", i32 129, i32 97}
!69 = !{!"branch_weights", i32 1, i32 129}
!70 = distinct !{!70, !58}
!71 = !{!"branch_weights", i32 97, i32 129}
!72 = !{!"branch_weights", i32 4, i32 94}
!73 = !{!"branch_weights", i32 1, i32 4}
!74 = distinct !{!74, !58}
!75 = !{!"function_entry_count", i64 608}
!76 = !{!"branch_weights", i32 801, i32 609}
!77 = !{!24, !8, i64 4}
!78 = !{!"branch_weights", i32 865, i32 609}
!79 = !{!"branch_weights", i32 44033, i32 865}
!80 = !{!"branch_weights", i32 50177, i32 44033}
!81 = !{!"branch_weights", i32 53249, i32 50177}
!82 = !{!"branch_weights", i32 59393, i32 53249}
!83 = !{!"branch_weights", i32 1, i32 44033}
