digraph "CFG for 'jpeg_finish_compress' function" {
	label="CFG for 'jpeg_finish_compress' function";

	Node0x6729070 [shape=record, style = filled, fillcolor = skyblue, label="{entry:\l  %global_state = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 4\l  %0 = load i32, i32* %global_state, align 4, !tbaa !3\l  switch i32 %0, label %if.then8 [\l    i32 101, label %if.then\l    i32 102, label %if.then\l    i32 103, label %while.cond.preheader\l  ], !prof !11\l|{<s0>def|<s1>101|<s2>102|<s3>103}}"];
	Node0x6729070:s0 -> Node0x6735d70;
	Node0x6729070:s1 -> Node0x6729220;
	Node0x6729070:s2 -> Node0x6729220;
	Node0x6729070:s3 -> Node0x6739d20;
	Node0x6729220 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %next_scanline = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 36\l  %1 = load i32, i32* %next_scanline, align 8, !tbaa !12\l  %image_height = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 7\l  %2 = load i32, i32* %image_height, align 4, !tbaa !13\l  %cmp3 = icmp ult i32 %1, %2\l  br i1 %cmp3, label %if.then4, label %if.end, !prof !14\l|{<s0>T|<s1>F}}"];
	Node0x6729220:s0 -> Node0x673a5d0;
	Node0x6729220:s1 -> Node0x673a6b0;
	Node0x673a5d0 [shape=record, style = filled, fillcolor = blue, label="{if.then4:                                         \l  %err = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %3 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !15\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %3, i64 0, i32 5\l  store i32 66, i32* %msg_code, align 8, !tbaa !16\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %3, i64 0, i32 0\l  %4 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !19\l  %5 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %4(%struct.jpeg_common_struct* %5) #4\l  br label %if.end\l}"];
	Node0x673a5d0 -> Node0x673a6b0;
	Node0x673a6b0 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %master = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 51\l  %6 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %master,\l... align 8, !tbaa !20\l  %finish_pass = getelementptr inbounds %struct.jpeg_comp_master,\l... %struct.jpeg_comp_master* %6, i64 0, i32 2\l  %7 = load void (%struct.jpeg_compress_struct*)*, void\l... (%struct.jpeg_compress_struct*)** %finish_pass, align 8, !tbaa !21\l  tail call void %7(%struct.jpeg_compress_struct* nonnull %cinfo) #4\l  br label %while.cond.preheader\l}"];
	Node0x673a6b0 -> Node0x6739d20;
	Node0x6735d70 [shape=record, style = filled, fillcolor = blue, label="{if.then8:                                         \l  %err9 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err9, align 8,\l... !tbaa !15\l  %msg_code10 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 5\l  store i32 18, i32* %msg_code10, align 8, !tbaa !16\l  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 6, i32 0, i64 0\l  store i32 %0, i32* %arrayidx, align 4, !tbaa !23\l  %error_exit14 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %8, i64 0, i32 0\l  %9 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit14, align 8, !tbaa !19\l  %10 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %9(%struct.jpeg_common_struct* %10) #4\l  br label %while.cond.preheader\l}"];
	Node0x6735d70 -> Node0x6739d20;
	Node0x6739d20 [shape=record, style = filled, fillcolor = skyblue, label="{while.cond.preheader:                             \l  %master17 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 51\l  %11 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %master17,\l... align 8, !tbaa !20\l  %is_last_pass77 = getelementptr inbounds %struct.jpeg_comp_master,\l... %struct.jpeg_comp_master* %11, i64 0, i32 4\l  %12 = load i32, i32* %is_last_pass77, align 4, !tbaa !24\l  %lnot78 = icmp eq i32 %12, 0\l  br i1 %lnot78, label %while.body.lr.ph, label\l... %while.cond.preheader.while.end_crit_edge, !prof !25\l|{<s0>T|<s1>F}}"];
	Node0x6739d20:s0 -> Node0x673c6e0;
	Node0x6739d20:s1 -> Node0x673c880;
	Node0x673c880 [shape=record, style = filled, fillcolor = blue, label="{while.cond.preheader.while.end_crit_edge:         \l  %.pre = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  br label %while.end\l}"];
	Node0x673c880 -> Node0x673cd30;
	Node0x673c6e0 [shape=record, style = filled, fillcolor = blue, label="{while.body.lr.ph:                                 \l  %total_iMCU_rows = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 40\l  %progress = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 2\l  %coef = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 54\l  %err31 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %13 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  br label %while.body\l}"];
	Node0x673c6e0 -> Node0x673d110;
	Node0x673d110 [shape=record, style = filled, fillcolor = skyblue, label="{while.body:                                       \l  %14 = phi %struct.jpeg_comp_master* [ %11, %while.body.lr.ph ], [ %28,\l... %for.end ]\l  %prepare_for_pass = getelementptr inbounds %struct.jpeg_comp_master,\l... %struct.jpeg_comp_master* %14, i64 0, i32 0\l  %15 = load void (%struct.jpeg_compress_struct*)*, void\l... (%struct.jpeg_compress_struct*)** %prepare_for_pass, align 8, !tbaa !26\l  tail call void %15(%struct.jpeg_compress_struct* nonnull %cinfo) #4\l  %16 = load i32, i32* %total_iMCU_rows, align 8, !tbaa !27\l  %cmp1975 = icmp eq i32 %16, 0\l  br i1 %cmp1975, label %for.end, label %for.body.preheader, !prof !28\l|{<s0>T|<s1>F}}"];
	Node0x673d110:s0 -> Node0x673d2d0;
	Node0x673d110:s1 -> Node0x673da40;
	Node0x673da40 [shape=record, style = filled, fillcolor = skyblue, label="{for.body.preheader:                               \l  br label %for.body\l}"];
	Node0x673da40 -> Node0x673dd00;
	Node0x673dd00 [shape=record, style = filled, fillcolor = cyan, label="{for.body:                                         \l  %17 = phi i32 [ %25, %for.inc ], [ %16, %for.body.preheader ]\l  %iMCU_row.076 = phi i32 [ %inc, %for.inc ], [ 0, %for.body.preheader ]\l  %18 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr**\l... %progress, align 8, !tbaa !29\l  %cmp20 = icmp eq %struct.jpeg_progress_mgr* %18, null\l  br i1 %cmp20, label %if.end28, label %if.then21, !prof !30\l|{<s0>T|<s1>F}}"];
	Node0x673dd00:s0 -> Node0x673e7b0;
	Node0x673dd00:s1 -> Node0x673e890;
	Node0x673e890 [shape=record, style = filled, fillcolor = blue, label="{if.then21:                                        \l  %19 = bitcast %struct.jpeg_progress_mgr* %18 to void\l... (%struct.jpeg_common_struct*)**\l  %conv = zext i32 %iMCU_row.076 to i64\l  %pass_counter = getelementptr inbounds %struct.jpeg_progress_mgr,\l... %struct.jpeg_progress_mgr* %18, i64 0, i32 1\l  store i64 %conv, i64* %pass_counter, align 8, !tbaa !31\l  %conv24 = zext i32 %17 to i64\l  %pass_limit = getelementptr inbounds %struct.jpeg_progress_mgr,\l... %struct.jpeg_progress_mgr* %18, i64 0, i32 2\l  store i64 %conv24, i64* %pass_limit, align 8, !tbaa !33\l  %20 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %19, align 8, !tbaa !34\l  tail call void %20(%struct.jpeg_common_struct* nonnull %13) #4\l  br label %if.end28\l}"];
	Node0x673e890 -> Node0x673e7b0;
	Node0x673e7b0 [shape=record, style = filled, fillcolor = cyan, label="{if.end28:                                         \l  %21 = load %struct.jpeg_c_coef_controller*, %struct.jpeg_c_coef_controller**\l... %coef, align 8, !tbaa !35\l  %compress_data = getelementptr inbounds %struct.jpeg_c_coef_controller,\l... %struct.jpeg_c_coef_controller* %21, i64 0, i32 1\l  %22 = load i32 (%struct.jpeg_compress_struct*, i8***)*, i32\l... (%struct.jpeg_compress_struct*, i8***)** %compress_data, align 8, !tbaa !36\l  %call = tail call i32 %22(%struct.jpeg_compress_struct* nonnull %cinfo,\l... i8*** null) #4\l  %tobool29 = icmp eq i32 %call, 0\l  br i1 %tobool29, label %if.then30, label %for.inc, !prof !38\l|{<s0>T|<s1>F}}"];
	Node0x673e7b0:s0 -> Node0x673c920;
	Node0x673e7b0:s1 -> Node0x673de30;
	Node0x673c920 [shape=record, style = filled, fillcolor = blue, label="{if.then30:                                        \l  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err31, align\l... 8, !tbaa !15\l  %msg_code32 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %23, i64 0, i32 5\l  store i32 22, i32* %msg_code32, align 8, !tbaa !16\l  %error_exit34 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %23, i64 0, i32 0\l  %24 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit34, align 8, !tbaa !19\l  tail call void %24(%struct.jpeg_common_struct* nonnull %13) #4\l  br label %for.inc\l}"];
	Node0x673c920 -> Node0x673de30;
	Node0x673de30 [shape=record, style = filled, fillcolor = cyan, label="{for.inc:                                          \l  %inc = add i32 %iMCU_row.076, 1\l  %25 = load i32, i32* %total_iMCU_rows, align 8, !tbaa !27\l  %cmp19 = icmp ult i32 %inc, %25\l  br i1 %cmp19, label %for.body, label %for.end.loopexit, !prof !39\l|{<s0>T|<s1>F}}"];
	Node0x673de30:s0 -> Node0x673dd00;
	Node0x673de30:s1 -> Node0x673dac0;
	Node0x673dac0 [shape=record, style = filled, fillcolor = skyblue, label="{for.end.loopexit:                                 \l  br label %for.end\l}"];
	Node0x673dac0 -> Node0x673d2d0;
	Node0x673d2d0 [shape=record, style = filled, fillcolor = skyblue, label="{for.end:                                          \l  %26 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %master17,\l... align 8, !tbaa !20\l  %finish_pass37 = getelementptr inbounds %struct.jpeg_comp_master,\l... %struct.jpeg_comp_master* %26, i64 0, i32 2\l  %27 = load void (%struct.jpeg_compress_struct*)*, void\l... (%struct.jpeg_compress_struct*)** %finish_pass37, align 8, !tbaa !21\l  tail call void %27(%struct.jpeg_compress_struct* nonnull %cinfo) #4\l  %28 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %master17,\l... align 8, !tbaa !20\l  %is_last_pass = getelementptr inbounds %struct.jpeg_comp_master,\l... %struct.jpeg_comp_master* %28, i64 0, i32 4\l  %29 = load i32, i32* %is_last_pass, align 4, !tbaa !24\l  %lnot = icmp eq i32 %29, 0\l  br i1 %lnot, label %while.body, label %while.end.loopexit, !prof !25\l|{<s0>T|<s1>F}}"];
	Node0x673d2d0:s0 -> Node0x673d110;
	Node0x673d2d0:s1 -> Node0x67420a0;
	Node0x67420a0 [shape=record, style = filled, fillcolor = blue, label="{while.end.loopexit:                               \l  br label %while.end\l}"];
	Node0x67420a0 -> Node0x673cd30;
	Node0x673cd30 [shape=record, style = filled, fillcolor = skyblue, label="{while.end:                                        \l  %.pre-phi = phi %struct.jpeg_common_struct* [ %.pre,\l... %while.cond.preheader.while.end_crit_edge ], [ %13, %while.end.loopexit ]\l  %marker = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 55\l  %30 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer**\l... %marker, align 8, !tbaa !40\l  %write_file_trailer = getelementptr inbounds %struct.jpeg_marker_writer,\l... %struct.jpeg_marker_writer* %30, i64 0, i32 4\l  %31 = load void (%struct.jpeg_compress_struct*)*, void\l... (%struct.jpeg_compress_struct*)** %write_file_trailer, align 8, !tbaa !41\l  tail call void %31(%struct.jpeg_compress_struct* nonnull %cinfo) #4\l  %dest = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 5\l  %32 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest, align 8, !tbaa !43\l  %term_destination = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %32, i64 0, i32 4\l  %33 = load void (%struct.jpeg_compress_struct*)*, void\l... (%struct.jpeg_compress_struct*)** %term_destination, align 8, !tbaa !44\l  tail call void %33(%struct.jpeg_compress_struct* nonnull %cinfo) #4\l  tail call void @jpeg_abort(%struct.jpeg_common_struct* %.pre-phi) #4\l  ret void\l}"];
}
