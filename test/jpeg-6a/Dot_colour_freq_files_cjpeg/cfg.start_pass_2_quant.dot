digraph "CFG for 'start_pass_2_quant' function" {
	label="CFG for 'start_pass_2_quant' function";

	Node0x6267c80 [shape=record,label="{entry:\l  %cquantize1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %0 = bitcast %struct.jpeg_color_quantizer** %cquantize1 to\l... %struct.my_cquantizer**\l  %1 = load %struct.my_cquantizer*, %struct.my_cquantizer** %0, align 8, !tbaa\l... !2\l  %histogram2 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 3\l  %2 = load [32 x i16]**, [32 x i16]*** %histogram2, align 8, !tbaa !10\l  %dither_mode = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 20\l  %3 = load i32, i32* %dither_mode, align 8, !tbaa !13\l  %cmp = icmp eq i32 %3, 0\l  br i1 %cmp, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x6267c80:s0 -> Node0x62686b0;
	Node0x6267c80:s1 -> Node0x6268760;
	Node0x6268760 [shape=record,label="{if.then:                                          \l  store i32 2, i32* %dither_mode, align 8, !tbaa !13\l  br label %if.end\l}"];
	Node0x6268760 -> Node0x62686b0;
	Node0x62686b0 [shape=record,label="{if.end:                                           \l  %4 = phi i32 [ 0, %entry ], [ 2, %if.then ]\l  %tobool = icmp eq i32 %is_pre_scan, 0\l  br i1 %tobool, label %if.else, label %if.then4\l|{<s0>T|<s1>F}}"];
	Node0x62686b0:s0 -> Node0x6268a80;
	Node0x62686b0:s1 -> Node0x6268b50;
	Node0x6268b50 [shape=record,label="{if.then4:                                         \l  %color_quantize = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 0, i32 1\l  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*\l... @prescan_quantize, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)**\l... %color_quantize, align 8, !tbaa !14\l  %finish_pass = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 0, i32 2\l  %finish_pass6 = bitcast \{\}** %finish_pass to void\l... (%struct.jpeg_decompress_struct*)**\l  store void (%struct.jpeg_decompress_struct*)* @finish_pass1, void\l... (%struct.jpeg_decompress_struct*)** %finish_pass6, align 8, !tbaa !15\l  %needs_zeroed = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 4\l  store i32 1, i32* %needs_zeroed, align 8, !tbaa !16\l  br label %if.end50\l}"];
	Node0x6268b50 -> Node0x6269d90;
	Node0x6268a80 [shape=record,label="{if.else:                                          \l  %cmp8 = icmp eq i32 %4, 2\l  %color_quantize11 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 0, i32 1\l  %pass2_fs_dither.pass2_no_dither = select i1 %cmp8, void\l... (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* @pass2_fs_dither, void\l... (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* @pass2_no_dither\l  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*\l... %pass2_fs_dither.pass2_no_dither, void (%struct.jpeg_decompress_struct*,\l... i8**, i8**, i32)** %color_quantize11, align 8, !tbaa !14\l  %finish_pass17 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 0, i32 2\l  %finish_pass18 = bitcast \{\}** %finish_pass17 to void\l... (%struct.jpeg_decompress_struct*)**\l  store void (%struct.jpeg_decompress_struct*)* @finish_pass2, void\l... (%struct.jpeg_decompress_struct*)** %finish_pass18, align 8, !tbaa !15\l  %actual_number_of_colors = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 31\l  %5 = load i32, i32* %actual_number_of_colors, align 4, !tbaa !17\l  %cmp19 = icmp slt i32 %5, 1\l  br i1 %cmp19, label %if.end24.thread, label %if.end24\l|{<s0>T|<s1>F}}"];
	Node0x6268a80:s0 -> Node0x625ac50;
	Node0x6268a80:s1 -> Node0x6268de0;
	Node0x625ac50 [shape=record,label="{if.end24.thread:                                  \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %6 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !18\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %6, i64 0, i32 5\l  store i32 55, i32* %msg_code, align 8, !tbaa !19\l  %arrayidx = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %6, i64 0, i32 6, i32 0, i64 0\l  store i32 1, i32* %arrayidx, align 4, !tbaa !22\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %6, i64 0, i32 0\l  %7 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !23\l  %8 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %7(%struct.jpeg_common_struct* %8) #5\l  br label %if.end35\l}"];
	Node0x625ac50 -> Node0x626a090;
	Node0x6268de0 [shape=record,label="{if.end24:                                         \l  %cmp25 = icmp sgt i32 %5, 256\l  br i1 %cmp25, label %if.then26, label %if.end35\l|{<s0>T|<s1>F}}"];
	Node0x6268de0:s0 -> Node0x626db40;
	Node0x6268de0:s1 -> Node0x626a090;
	Node0x626db40 [shape=record,label="{if.then26:                                        \l  %err27 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err27, align 8,\l... !tbaa !18\l  %msg_code28 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 5\l  store i32 56, i32* %msg_code28, align 8, !tbaa !19\l  %arrayidx32 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 0\l  store i32 256, i32* %arrayidx32, align 4, !tbaa !22\l  %error_exit34 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %9, i64 0, i32 0\l  %10 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit34, align 8, !tbaa !23\l  %11 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %10(%struct.jpeg_common_struct* %11) #5\l  br label %if.end35\l}"];
	Node0x626db40 -> Node0x626a090;
	Node0x626a090 [shape=record,label="{if.end35:                                         \l  %12 = load i32, i32* %dither_mode, align 8, !tbaa !13\l  %cmp37 = icmp eq i32 %12, 2\l  br i1 %cmp37, label %if.then38, label %if.end50\l|{<s0>T|<s1>F}}"];
	Node0x626a090:s0 -> Node0x626e370;
	Node0x626a090:s1 -> Node0x6269d90;
	Node0x626e370 [shape=record,label="{if.then38:                                        \l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %13 = load i32, i32* %output_width, align 8, !tbaa !24\l  %add = add i32 %13, 2\l  %conv = zext i32 %add to i64\l  %mul = mul nuw nsw i64 %conv, 6\l  %fserrors = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 5\l  %14 = load i16*, i16** %fserrors, align 8, !tbaa !25\l  %cmp39 = icmp eq i16* %14, null\l  br i1 %cmp39, label %if.then41, label %if.then38.if.end43_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x626e370:s0 -> Node0x626ef50;
	Node0x626e370:s1 -> Node0x626f060;
	Node0x626f060 [shape=record,label="{if.then38.if.end43_crit_edge:                     \l  %15 = bitcast i16* %14 to i8*\l  br label %if.end43\l}"];
	Node0x626f060 -> Node0x626f210;
	Node0x626ef50 [shape=record,label="{if.then41:                                        \l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %16 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !26\l  %alloc_large = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %16, i64 0, i32 1\l  %17 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_large, align 8, !tbaa !27\l  %18 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %17(%struct.jpeg_common_struct* %18, i32 1, i64 %mul)\l... #5\l  %19 = bitcast i16** %fserrors to i8**\l  store i8* %call, i8** %19, align 8, !tbaa !25\l  br label %if.end43\l}"];
	Node0x626ef50 -> Node0x626f210;
	Node0x626f210 [shape=record,label="{if.end43:                                         \l  %20 = phi i8* [ %call, %if.then41 ], [ %15, %if.then38.if.end43_crit_edge ]\l  tail call void @jzero_far(i8* %20, i64 %mul) #5\l  %error_limiter = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 7\l  %21 = load i32*, i32** %error_limiter, align 8, !tbaa !29\l  %cmp45 = icmp eq i32* %21, null\l  br i1 %cmp45, label %if.then47, label %if.end48\l|{<s0>T|<s1>F}}"];
	Node0x626f210:s0 -> Node0x6270aa0;
	Node0x626f210:s1 -> Node0x6270b80;
	Node0x6270aa0 [shape=record,label="{if.then47:                                        \l  tail call fastcc void @init_error_limit(%struct.jpeg_decompress_struct*\l... nonnull %cinfo)\l  br label %if.end48\l}"];
	Node0x6270aa0 -> Node0x6270b80;
	Node0x6270b80 [shape=record,label="{if.end48:                                         \l  %on_odd_row = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 6\l  store i32 0, i32* %on_odd_row, align 8, !tbaa !30\l  br label %if.end50\l}"];
	Node0x6270b80 -> Node0x6269d90;
	Node0x6269d90 [shape=record,label="{if.end50:                                         \l  %needs_zeroed51 = getelementptr inbounds %struct.my_cquantizer,\l... %struct.my_cquantizer* %1, i64 0, i32 4\l  %22 = load i32, i32* %needs_zeroed51, align 8, !tbaa !16\l  %tobool52 = icmp eq i32 %22, 0\l  br i1 %tobool52, label %if.end58, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x6269d90:s0 -> Node0x62711b0;
	Node0x6269d90:s1 -> Node0x62712c0;
	Node0x62712c0 [shape=record,label="{for.body.preheader:                               \l  br label %for.body\l}"];
	Node0x62712c0 -> Node0x6271430;
	Node0x6271430 [shape=record,label="{for.body:                                         \l  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0,\l... %for.body.preheader ]\l  %arrayidx56 = getelementptr inbounds [32 x i16]*, [32 x i16]** %2, i64\l... %indvars.iv\l  %23 = bitcast [32 x i16]** %arrayidx56 to i8**\l  %24 = load i8*, i8** %23, align 8, !tbaa !31\l  tail call void @jzero_far(i8* %24, i64 4096) #5\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond = icmp eq i64 %indvars.iv.next, 32\l  br i1 %exitcond, label %for.end, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x6271430:s0 -> Node0x6272020;
	Node0x6271430:s1 -> Node0x6271430;
	Node0x6272020 [shape=record,label="{for.end:                                          \l  store i32 0, i32* %needs_zeroed51, align 8, !tbaa !16\l  br label %if.end58\l}"];
	Node0x6272020 -> Node0x62711b0;
	Node0x62711b0 [shape=record,label="{if.end58:                                         \l  ret void\l}"];
}
