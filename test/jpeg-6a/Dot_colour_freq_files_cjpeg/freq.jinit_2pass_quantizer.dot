digraph "CFG for 'jinit_2pass_quantizer' function" {
	label="CFG for 'jinit_2pass_quantizer' function";

	Node0x62598d0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %0 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !2\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %0, i64 0, i32 0\l  %1 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !10\l  %2 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %1(%struct.jpeg_common_struct* %2, i32 1, i64 88) #5\l  %cquantize1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 83\l  %3 = bitcast %struct.jpeg_color_quantizer** %cquantize1 to i8**\l  store i8* %call, i8** %3, align 8, !tbaa !13\l  %start_pass = bitcast i8* %call to void (%struct.jpeg_decompress_struct*,\l... i32)**\l  store void (%struct.jpeg_decompress_struct*, i32)* @start_pass_2_quant, void\l... (%struct.jpeg_decompress_struct*, i32)** %start_pass, align 8, !tbaa !14\l  %new_color_map = getelementptr inbounds i8, i8* %call, i64 24\l  %new_color_map3 = bitcast i8* %new_color_map to void\l... (%struct.jpeg_decompress_struct*)**\l  store void (%struct.jpeg_decompress_struct*)* @new_color_map_2_quant, void\l... (%struct.jpeg_decompress_struct*)** %new_color_map3, align 8, !tbaa !17\l  %fserrors = getelementptr inbounds i8, i8* %call, i64 64\l  %4 = bitcast i8* %fserrors to i16**\l  store i16* null, i16** %4, align 8, !tbaa !18\l  %error_limiter = getelementptr inbounds i8, i8* %call, i64 80\l  %5 = bitcast i8* %error_limiter to i32**\l  store i32* null, i32** %5, align 8, !tbaa !19\l  %out_color_components = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 28\l  %6 = load i32, i32* %out_color_components, align 8, !tbaa !20\l  %cmp = icmp eq i32 %6, 3\l  br i1 %cmp, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x62598d0:s0 -> Node0x62574f0;
	Node0x62598d0:s1 -> Node0x625d260;
	Node0x625d260 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %7 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !21\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %7, i64 0, i32 5\l  store i32 46, i32* %msg_code, align 8, !tbaa !22\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %7, i64 0, i32 0\l  %8 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !24\l  tail call void %8(%struct.jpeg_common_struct* %2) #5\l  br label %if.end\l}"];
	Node0x625d260 -> Node0x62574f0;
	Node0x62574f0 [shape=record, style = filled, fillcolor = blue, label="{if.end:                                           \l  %9 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !2\l  %alloc_small6 = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %9, i64 0, i32 0\l  %10 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small6, align 8, !tbaa !10\l  %call7 = tail call i8* %10(%struct.jpeg_common_struct* %2, i32 1, i64 256) #5\l  %histogram = getelementptr inbounds i8, i8* %call, i64 48\l  %11 = bitcast i8* %histogram to [32 x i16]***\l  %12 = bitcast i8* %histogram to i8**\l  store i8* %call7, i8** %12, align 8, !tbaa !25\l  br label %for.body\l}"];
	Node0x62574f0 -> Node0x625ee90;
	Node0x625ee90 [shape=record, style = filled, fillcolor = blue, label="{for.body:                                         \l  %indvars.iv = phi i64 [ 0, %if.end ], [ %indvars.iv.next, %for.body ]\l  %13 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_large = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %13, i64 0, i32 1\l  %14 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_large, align 8, !tbaa !26\l  %call10 = tail call i8* %14(%struct.jpeg_common_struct* nonnull %2, i32 1,\l... i64 4096) #5\l  %15 = load [32 x i16]**, [32 x i16]*** %11, align 8, !tbaa !25\l  %arrayidx = getelementptr inbounds [32 x i16]*, [32 x i16]** %15, i64\l... %indvars.iv\l  %16 = bitcast [32 x i16]** %arrayidx to i8**\l  store i8* %call10, i8** %16, align 8, !tbaa !27\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond = icmp eq i64 %indvars.iv.next, 32\l  br i1 %exitcond, label %for.end, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x625ee90:s0 -> Node0x62602b0;
	Node0x625ee90:s1 -> Node0x625ee90;
	Node0x62602b0 [shape=record, style = filled, fillcolor = blue, label="{for.end:                                          \l  %needs_zeroed = getelementptr inbounds i8, i8* %call, i64 56\l  %17 = bitcast i8* %needs_zeroed to i32*\l  store i32 1, i32* %17, align 8, !tbaa !28\l  %enable_2pass_quant = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 25\l  %18 = load i32, i32* %enable_2pass_quant, align 4, !tbaa !29\l  %tobool = icmp eq i32 %18, 0\l  br i1 %tobool, label %if.else, label %if.then12\l|{<s0>T|<s1>F}}"];
	Node0x62602b0:s0 -> Node0x6260a00;
	Node0x62602b0:s1 -> Node0x6260ad0;
	Node0x6260ad0 [shape=record, style = filled, fillcolor = blue, label="{if.then12:                                        \l  %desired_number_of_colors = getelementptr inbounds\l... %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %cinfo, i64\l... 0, i32 22\l  %19 = load i32, i32* %desired_number_of_colors, align 8, !tbaa !30\l  %cmp13 = icmp slt i32 %19, 8\l  br i1 %cmp13, label %if.end22.thread, label %if.end22\l|{<s0>T|<s1>F}}"];
	Node0x6260ad0:s0 -> Node0x6260f70;
	Node0x6260ad0:s1 -> Node0x6261020;
	Node0x6260f70 [shape=record, style = filled, fillcolor = blue, label="{if.end22.thread:                                  \l  %err15 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err15, align\l... 8, !tbaa !21\l  %msg_code16 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %20, i64 0, i32 5\l  store i32 55, i32* %msg_code16, align 8, !tbaa !22\l  %arrayidx19 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %20, i64 0, i32 6, i32 0, i64 0\l  store i32 8, i32* %arrayidx19, align 4, !tbaa !31\l  %error_exit21 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %20, i64 0, i32 0\l  %21 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit21, align 8, !tbaa !24\l  tail call void %21(%struct.jpeg_common_struct* nonnull %2) #5\l  br label %if.end33\l}"];
	Node0x6260f70 -> Node0x6262b20;
	Node0x6261020 [shape=record, style = filled, fillcolor = blue, label="{if.end22:                                         \l  %cmp23 = icmp sgt i32 %19, 256\l  br i1 %cmp23, label %if.then24, label %if.end33\l|{<s0>T|<s1>F}}"];
	Node0x6261020:s0 -> Node0x6262d20;
	Node0x6261020:s1 -> Node0x6262b20;
	Node0x6262d20 [shape=record, style = filled, fillcolor = blue, label="{if.then24:                                        \l  %err25 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err25, align\l... 8, !tbaa !21\l  %msg_code26 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %22, i64 0, i32 5\l  store i32 56, i32* %msg_code26, align 8, !tbaa !22\l  %arrayidx30 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %22, i64 0, i32 6, i32 0, i64 0\l  store i32 256, i32* %arrayidx30, align 4, !tbaa !31\l  %error_exit32 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %22, i64 0, i32 0\l  %23 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit32, align 8, !tbaa !24\l  tail call void %23(%struct.jpeg_common_struct* nonnull %2) #5\l  br label %if.end33\l}"];
	Node0x6262d20 -> Node0x6262b20;
	Node0x6262b20 [shape=record, style = filled, fillcolor = blue, label="{if.end33:                                         \l  %24 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_sarray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %24, i64 0, i32 2\l  %25 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8**\l... (%struct.jpeg_common_struct*, i32, i32, i32)** %alloc_sarray, align 8, !tbaa\l... !32\l  %call35 = tail call i8** %25(%struct.jpeg_common_struct* nonnull %2, i32 1,\l... i32 %19, i32 3) #5\l  %sv_colormap = getelementptr inbounds i8, i8* %call, i64 32\l  %26 = bitcast i8* %sv_colormap to i8***\l  store i8** %call35, i8*** %26, align 8, !tbaa !33\l  %desired36 = getelementptr inbounds i8, i8* %call, i64 40\l  %27 = bitcast i8* %desired36 to i32*\l  store i32 %19, i32* %27, align 8, !tbaa !34\l  br label %if.end38\l}"];
	Node0x6262b20 -> Node0x6264b80;
	Node0x6260a00 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %sv_colormap37 = getelementptr inbounds i8, i8* %call, i64 32\l  %28 = bitcast i8* %sv_colormap37 to i8***\l  store i8** null, i8*** %28, align 8, !tbaa !33\l  br label %if.end38\l}"];
	Node0x6260a00 -> Node0x6264b80;
	Node0x6264b80 [shape=record, style = filled, fillcolor = blue, label="{if.end38:                                         \l  %dither_mode = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 20\l  %29 = load i32, i32* %dither_mode, align 8, !tbaa !35\l  %cmp39 = icmp eq i32 %29, 0\l  br i1 %cmp39, label %if.end50, label %if.then45\l|{<s0>T|<s1>F}}"];
	Node0x6264b80:s0 -> Node0x6265780;
	Node0x6264b80:s1 -> Node0x6265860;
	Node0x6265860 [shape=record, style = filled, fillcolor = blue, label="{if.then45:                                        \l  store i32 2, i32* %dither_mode, align 8, !tbaa !35\l  %30 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align\l... 8, !tbaa !2\l  %alloc_large47 = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %30, i64 0, i32 1\l  %31 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_large47, align 8, !tbaa !26\l  %output_width = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 26\l  %32 = load i32, i32* %output_width, align 8, !tbaa !36\l  %add = add i32 %32, 2\l  %conv = zext i32 %add to i64\l  %mul = mul nuw nsw i64 %conv, 6\l  %call48 = tail call i8* %31(%struct.jpeg_common_struct* nonnull %2, i32 1,\l... i64 %mul) #5\l  %33 = bitcast i8* %fserrors to i8**\l  store i8* %call48, i8** %33, align 8, !tbaa !18\l  tail call fastcc void @init_error_limit(%struct.jpeg_decompress_struct*\l... nonnull %cinfo)\l  br label %if.end50\l}"];
	Node0x6265860 -> Node0x6265780;
	Node0x6265780 [shape=record, style = filled, fillcolor = blue, label="{if.end50:                                         \l  ret void\l}"];
}
