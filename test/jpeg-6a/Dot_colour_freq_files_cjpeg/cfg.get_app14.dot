digraph "CFG for 'get_app14' function" {
	label="CFG for 'get_app14' function";

	Node0x699b5e0 [shape=record,label="{entry:\l  %b = alloca [12 x i8], align 1\l  %0 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 0\l  call void @llvm.lifetime.start(i64 12, i8* %0) #4\l  %src = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 5\l  %1 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align 8,\l... !tbaa !2\l  %next_input_byte1 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %1, i64 0, i32 0\l  %bytes_in_buffer2 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %1, i64 0, i32 1\l  %2 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !10\l  %cmp = icmp eq i64 %2, 0\l  br i1 %cmp, label %if.then, label %if.end6\l|{<s0>T|<s1>F}}"];
	Node0x699b5e0:s0 -> Node0x69a0180;
	Node0x699b5e0:s1 -> Node0x69a0230;
	Node0x69a0180 [shape=record,label="{if.then:                                          \l  %fill_input_buffer = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %1, i64 0, i32 3\l  %3 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer, align 8, !tbaa !13\l  %call = tail call i32 %3(%struct.jpeg_decompress_struct* nonnull %cinfo) #4\l  %tobool = icmp eq i32 %call, 0\l  br i1 %tobool, label %cleanup, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x69a0180:s0 -> Node0x69a0650;
	Node0x69a0180:s1 -> Node0x699b540;
	Node0x699b540 [shape=record,label="{if.end:                                           \l  %4 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !10\l  br label %if.end6\l}"];
	Node0x699b540 -> Node0x69a0230;
	Node0x69a0230 [shape=record,label="{if.end6:                                          \l  %bytes_in_buffer.0 = phi i64 [ %4, %if.end ], [ %2, %entry ]\l  %next_input_byte.0 = load i8*, i8** %next_input_byte1, align 8, !tbaa !14\l  %dec = add i64 %bytes_in_buffer.0, -1\l  %incdec.ptr = getelementptr inbounds i8, i8* %next_input_byte.0, i64 1\l  %5 = load i8, i8* %next_input_byte.0, align 1, !tbaa !15\l  %conv = zext i8 %5 to i64\l  %shl = shl nuw nsw i64 %conv, 8\l  %cmp8 = icmp eq i64 %dec, 0\l  br i1 %cmp8, label %if.then10, label %if.end18\l|{<s0>T|<s1>F}}"];
	Node0x69a0230:s0 -> Node0x69a0e60;
	Node0x69a0230:s1 -> Node0x69a0f10;
	Node0x69a0e60 [shape=record,label="{if.then10:                                        \l  %fill_input_buffer11 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %1, i64 0, i32 3\l  %6 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer11, align 8, !tbaa !13\l  %call12 = tail call i32 %6(%struct.jpeg_decompress_struct* nonnull %cinfo) #4\l  %tobool13 = icmp eq i32 %call12, 0\l  br i1 %tobool13, label %cleanup, label %if.end15\l|{<s0>T|<s1>F}}"];
	Node0x69a0e60:s0 -> Node0x69a0650;
	Node0x69a0e60:s1 -> Node0x69a0740;
	Node0x69a0740 [shape=record,label="{if.end15:                                         \l  %7 = load i8*, i8** %next_input_byte1, align 8, !tbaa !14\l  %8 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !10\l  br label %if.end18\l}"];
	Node0x69a0740 -> Node0x69a0f10;
	Node0x69a0f10 [shape=record,label="{if.end18:                                         \l  %next_input_byte.1 = phi i8* [ %7, %if.end15 ], [ %incdec.ptr, %if.end6 ]\l  %bytes_in_buffer.1 = phi i64 [ %8, %if.end15 ], [ %dec, %if.end6 ]\l  %dec19 = add i64 %bytes_in_buffer.1, -1\l  %incdec.ptr20 = getelementptr inbounds i8, i8* %next_input_byte.1, i64 1\l  %9 = load i8, i8* %next_input_byte.1, align 1, !tbaa !15\l  %conv21 = zext i8 %9 to i64\l  %add = or i64 %conv21, %shl\l  %sub = add nsw i64 %add, -2\l  %cmp22 = icmp sgt i64 %sub, 11\l  br i1 %cmp22, label %for.cond.preheader, label %if.else109\l|{<s0>T|<s1>F}}"];
	Node0x69a0f10:s0 -> Node0x69a1cd0;
	Node0x69a0f10:s1 -> Node0x69a1dd0;
	Node0x69a1cd0 [shape=record,label="{for.cond.preheader:                               \l  %fill_input_buffer31 = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %1, i64 0, i32 3\l  br label %do.body27\l}"];
	Node0x69a1cd0 -> Node0x69a2010;
	Node0x69a2010 [shape=record,label="{do.body27:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next,\l... %if.end38 ]\l  %bytes_in_buffer.2203 = phi i64 [ %dec19, %for.cond.preheader ], [ %dec39,\l... %if.end38 ]\l  %next_input_byte.2202 = phi i8* [ %incdec.ptr20, %for.cond.preheader ], [\l... %incdec.ptr40, %if.end38 ]\l  %cmp28 = icmp eq i64 %bytes_in_buffer.2203, 0\l  br i1 %cmp28, label %if.then30, label %if.end38\l|{<s0>T|<s1>F}}"];
	Node0x69a2010:s0 -> Node0x69a26f0;
	Node0x69a2010:s1 -> Node0x69a2130;
	Node0x69a26f0 [shape=record,label="{if.then30:                                        \l  %10 = load i32 (%struct.jpeg_decompress_struct*)*, i32\l... (%struct.jpeg_decompress_struct*)** %fill_input_buffer31, align 8, !tbaa !13\l  %call32 = tail call i32 %10(%struct.jpeg_decompress_struct* %cinfo) #4\l  %tobool33 = icmp eq i32 %call32, 0\l  br i1 %tobool33, label %cleanup.loopexit, label %if.end35\l|{<s0>T|<s1>F}}"];
	Node0x69a26f0:s0 -> Node0x69a2a00;
	Node0x69a26f0:s1 -> Node0x69a2b00;
	Node0x69a2b00 [shape=record,label="{if.end35:                                         \l  %11 = load i8*, i8** %next_input_byte1, align 8, !tbaa !14\l  %12 = load i64, i64* %bytes_in_buffer2, align 8, !tbaa !10\l  br label %if.end38\l}"];
	Node0x69a2b00 -> Node0x69a2130;
	Node0x69a2130 [shape=record,label="{if.end38:                                         \l  %next_input_byte.3 = phi i8* [ %11, %if.end35 ], [ %next_input_byte.2202,\l... %do.body27 ]\l  %bytes_in_buffer.3 = phi i64 [ %12, %if.end35 ], [ %bytes_in_buffer.2203,\l... %do.body27 ]\l  %dec39 = add i64 %bytes_in_buffer.3, -1\l  %incdec.ptr40 = getelementptr inbounds i8, i8* %next_input_byte.3, i64 1\l  %13 = load i8, i8* %next_input_byte.3, align 1, !tbaa !15\l  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64\l... %indvars.iv\l  store i8 %13, i8* %arrayidx, align 1, !tbaa !15\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %cmp25 = icmp slt i64 %indvars.iv.next, 12\l  br i1 %cmp25, label %do.body27, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x69a2130:s0 -> Node0x69a2010;
	Node0x69a2130:s1 -> Node0x69a3510;
	Node0x69a3510 [shape=record,label="{for.end:                                          \l  %incdec.ptr40.lcssa = phi i8* [ %incdec.ptr40, %if.end38 ]\l  %dec39.lcssa = phi i64 [ %dec39, %if.end38 ]\l  %sub43 = add nsw i64 %add, -14\l  %14 = load i8, i8* %0, align 1, !tbaa !15\l  %cmp46 = icmp eq i8 %14, 65\l  br i1 %cmp46, label %land.lhs.true, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x69a3510:s0 -> Node0x69a3870;
	Node0x69a3510:s1 -> Node0x69a3950;
	Node0x69a3870 [shape=record,label="{land.lhs.true:                                    \l  %arrayidx48 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 1\l  %15 = load i8, i8* %arrayidx48, align 1, !tbaa !15\l  %cmp50 = icmp eq i8 %15, 100\l  br i1 %cmp50, label %land.lhs.true52, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x69a3870:s0 -> Node0x69a3bf0;
	Node0x69a3870:s1 -> Node0x69a3950;
	Node0x69a3bf0 [shape=record,label="{land.lhs.true52:                                  \l  %arrayidx53 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 2\l  %16 = load i8, i8* %arrayidx53, align 1, !tbaa !15\l  %cmp55 = icmp eq i8 %16, 111\l  br i1 %cmp55, label %land.lhs.true57, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x69a3bf0:s0 -> Node0x69a3fc0;
	Node0x69a3bf0:s1 -> Node0x69a3950;
	Node0x69a3fc0 [shape=record,label="{land.lhs.true57:                                  \l  %arrayidx58 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 3\l  %17 = load i8, i8* %arrayidx58, align 1, !tbaa !15\l  %cmp60 = icmp eq i8 %17, 98\l  br i1 %cmp60, label %land.lhs.true62, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x69a3fc0:s0 -> Node0x69a42b0;
	Node0x69a3fc0:s1 -> Node0x69a3950;
	Node0x69a42b0 [shape=record,label="{land.lhs.true62:                                  \l  %arrayidx63 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 4\l  %18 = load i8, i8* %arrayidx63, align 1, !tbaa !15\l  %cmp65 = icmp eq i8 %18, 101\l  br i1 %cmp65, label %if.then67, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x69a42b0:s0 -> Node0x69a45d0;
	Node0x69a42b0:s1 -> Node0x69a3950;
	Node0x69a45d0 [shape=record,label="{if.then67:                                        \l  %arrayidx68 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 5\l  %19 = load i8, i8* %arrayidx68, align 1, !tbaa !15\l  %conv69 = zext i8 %19 to i32\l  %shl70 = shl nuw nsw i32 %conv69, 8\l  %arrayidx71 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 6\l  %20 = load i8, i8* %arrayidx71, align 1, !tbaa !15\l  %conv72 = zext i8 %20 to i32\l  %add73 = or i32 %shl70, %conv72\l  %arrayidx74 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 7\l  %21 = load i8, i8* %arrayidx74, align 1, !tbaa !15\l  %conv75 = zext i8 %21 to i32\l  %shl76 = shl nuw nsw i32 %conv75, 8\l  %arrayidx77 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 8\l  %22 = load i8, i8* %arrayidx77, align 1, !tbaa !15\l  %conv78 = zext i8 %22 to i32\l  %add79 = or i32 %shl76, %conv78\l  %arrayidx80 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 9\l  %23 = load i8, i8* %arrayidx80, align 1, !tbaa !15\l  %conv81 = zext i8 %23 to i32\l  %shl82 = shl nuw nsw i32 %conv81, 8\l  %arrayidx83 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 10\l  %24 = load i8, i8* %arrayidx83, align 1, !tbaa !15\l  %conv84 = zext i8 %24 to i32\l  %add85 = or i32 %shl82, %conv84\l  %arrayidx86 = getelementptr inbounds [12 x i8], [12 x i8]* %b, i64 0, i64 11\l  %25 = load i8, i8* %arrayidx86, align 1, !tbaa !15\l  %conv87 = zext i8 %25 to i32\l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !16\l  %arraydecay = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %26, i64 0, i32 6, i32 0, i64 0\l  store i32 %add73, i32* %arraydecay, align 4, !tbaa !17\l  %arrayidx90 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %26, i64 0, i32 6, i32 0, i64 1\l  store i32 %add79, i32* %arrayidx90, align 4, !tbaa !17\l  %arrayidx91 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %26, i64 0, i32 6, i32 0, i64 2\l  store i32 %add85, i32* %arrayidx91, align 4, !tbaa !17\l  %arrayidx92 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %26, i64 0, i32 6, i32 0, i64 3\l  store i32 %conv87, i32* %arrayidx92, align 4, !tbaa !17\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %26, i64 0, i32 5\l  store i32 75, i32* %msg_code, align 8, !tbaa !18\l  %emit_message = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %26, i64 0, i32 1\l  %27 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message, align 8, !tbaa !20\l  %28 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %27(%struct.jpeg_common_struct* %28, i32 1) #4\l  %saw_Adobe_marker = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 54\l  store i32 1, i32* %saw_Adobe_marker, align 8, !tbaa !21\l  %Adobe_transform = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 55\l  store i8 %25, i8* %Adobe_transform, align 4, !tbaa !22\l  br label %if.end119\l}"];
	Node0x69a45d0 -> Node0x690f570;
	Node0x69a3950 [shape=record,label="{if.else:                                          \l  %err98 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err98, align\l... 8, !tbaa !16\l  %msg_code99 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %29, i64 0, i32 5\l  store i32 77, i32* %msg_code99, align 8, !tbaa !18\l  %conv100 = trunc i64 %sub43 to i32\l  %add101 = add nsw i32 %conv100, 12\l  %arrayidx105 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %29, i64 0, i32 6, i32 0, i64 0\l  store i32 %add101, i32* %arrayidx105, align 4, !tbaa !17\l  %emit_message107 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %29, i64 0, i32 1\l  %30 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message107, align 8, !tbaa !20\l  %31 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %30(%struct.jpeg_common_struct* %31, i32 1) #4\l  br label %if.end119\l}"];
	Node0x69a3950 -> Node0x690f570;
	Node0x69a1dd0 [shape=record,label="{if.else109:                                       \l  %err110 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %32 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err110, align\l... 8, !tbaa !16\l  %msg_code111 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %32, i64 0, i32 5\l  store i32 77, i32* %msg_code111, align 8, !tbaa !18\l  %conv112 = trunc i64 %sub to i32\l  %arrayidx116 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %32, i64 0, i32 6, i32 0, i64 0\l  store i32 %conv112, i32* %arrayidx116, align 4, !tbaa !17\l  %emit_message118 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %32, i64 0, i32 1\l  %33 = load void (%struct.jpeg_common_struct*, i32)*, void\l... (%struct.jpeg_common_struct*, i32)** %emit_message118, align 8, !tbaa !20\l  %34 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %33(%struct.jpeg_common_struct* %34, i32 1) #4\l  br label %if.end119\l}"];
	Node0x69a1dd0 -> Node0x690f570;
	Node0x690f570 [shape=record,label="{if.end119:                                        \l  %length.0 = phi i64 [ %sub43, %if.then67 ], [ %sub43, %if.else ], [ %sub,\l... %if.else109 ]\l  %next_input_byte.4 = phi i8* [ %incdec.ptr40.lcssa, %if.then67 ], [\l... %incdec.ptr40.lcssa, %if.else ], [ %incdec.ptr20, %if.else109 ]\l  %bytes_in_buffer.4 = phi i64 [ %dec39.lcssa, %if.then67 ], [ %dec39.lcssa,\l... %if.else ], [ %dec19, %if.else109 ]\l  store i8* %next_input_byte.4, i8** %next_input_byte1, align 8, !tbaa !14\l  store i64 %bytes_in_buffer.4, i64* %bytes_in_buffer2, align 8, !tbaa !10\l  %cmp122 = icmp sgt i64 %length.0, 0\l  br i1 %cmp122, label %if.then124, label %cleanup\l|{<s0>T|<s1>F}}"];
	Node0x690f570:s0 -> Node0x69a8d00;
	Node0x690f570:s1 -> Node0x69a0650;
	Node0x69a8d00 [shape=record,label="{if.then124:                                       \l  %35 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %src, align\l... 8, !tbaa !2\l  %skip_input_data = getelementptr inbounds %struct.jpeg_source_mgr,\l... %struct.jpeg_source_mgr* %35, i64 0, i32 4\l  %36 = load void (%struct.jpeg_decompress_struct*, i64)*, void\l... (%struct.jpeg_decompress_struct*, i64)** %skip_input_data, align 8, !tbaa !23\l  tail call void %36(%struct.jpeg_decompress_struct* nonnull %cinfo, i64\l... %length.0) #4\l  br label %cleanup\l}"];
	Node0x69a8d00 -> Node0x69a0650;
	Node0x69a2a00 [shape=record,label="{cleanup.loopexit:                                 \l  br label %cleanup\l}"];
	Node0x69a2a00 -> Node0x69a0650;
	Node0x69a0650 [shape=record,label="{cleanup:                                          \l  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then10 ], [ 1, %if.then124 ],\l... [ 1, %if.end119 ], [ 0, %cleanup.loopexit ]\l  call void @llvm.lifetime.end(i64 12, i8* %0) #4\l  ret i32 %retval.0\l}"];
}
