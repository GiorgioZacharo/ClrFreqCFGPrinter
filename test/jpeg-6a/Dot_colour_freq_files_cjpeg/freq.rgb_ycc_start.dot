digraph "CFG for 'rgb_ycc_start' function" {
	label="CFG for 'rgb_ycc_start' function";

	Node0x594b820 [shape=record, style = filled, fillcolor = skyblue, label="{entry:\l  %cconvert1 = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 56\l  %0 = bitcast %struct.jpeg_color_converter** %cconvert1 to\l... %struct.my_color_converter**\l  %1 = load %struct.my_color_converter*, %struct.my_color_converter** %0,\l... align 8, !tbaa !3\l  %mem = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 1\l  %2 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !11\l  %alloc_small = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %2, i64 0, i32 0\l  %3 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8*\l... (%struct.jpeg_common_struct*, i32, i64)** %alloc_small, align 8, !tbaa !12\l  %4 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %call = tail call i8* %3(%struct.jpeg_common_struct* %4, i32 1, i64 16384) #3\l  %5 = bitcast i8* %call to i64*\l  %rgb_ycc_tab2 = getelementptr inbounds %struct.my_color_converter,\l... %struct.my_color_converter* %1, i64 0, i32 1\l  %6 = bitcast i64** %rgb_ycc_tab2 to i8**\l  store i8* %call, i8** %6, align 8, !tbaa !15\l  br label %for.body\l}"];
	Node0x594b820 -> Node0x5955ce0;
	Node0x5955ce0 [shape=record, style = filled, fillcolor = cyan, label="{for.body:                                         \l  %i.056 = phi i64 [ 0, %entry ], [ %inc, %for.body ]\l  %mul = mul nuw nsw i64 %i.056, 19595\l  %arrayidx = getelementptr inbounds i64, i64* %5, i64 %i.056\l  store i64 %mul, i64* %arrayidx, align 8, !tbaa !18\l  %mul3 = mul nuw nsw i64 %i.056, 38470\l  %add4 = add nuw nsw i64 %i.056, 256\l  %arrayidx5 = getelementptr inbounds i64, i64* %5, i64 %add4\l  store i64 %mul3, i64* %arrayidx5, align 8, !tbaa !18\l  %mul6 = mul nuw nsw i64 %i.056, 7471\l  %add7 = add nuw nsw i64 %mul6, 32768\l  %add8 = add nuw nsw i64 %i.056, 512\l  %arrayidx9 = getelementptr inbounds i64, i64* %5, i64 %add8\l  store i64 %add7, i64* %arrayidx9, align 8, !tbaa !18\l  %mul10 = mul nsw i64 %i.056, -11059\l  %add11 = add nuw nsw i64 %i.056, 768\l  %arrayidx12 = getelementptr inbounds i64, i64* %5, i64 %add11\l  store i64 %mul10, i64* %arrayidx12, align 8, !tbaa !18\l  %mul13 = mul nsw i64 %i.056, -21709\l  %add14 = add nuw nsw i64 %i.056, 1024\l  %arrayidx15 = getelementptr inbounds i64, i64* %5, i64 %add14\l  store i64 %mul13, i64* %arrayidx15, align 8, !tbaa !18\l  %mul16 = shl i64 %i.056, 15\l  %sub = add nuw nsw i64 %mul16, 8421375\l  %add19 = add nuw nsw i64 %i.056, 1280\l  %arrayidx20 = getelementptr inbounds i64, i64* %5, i64 %add19\l  store i64 %sub, i64* %arrayidx20, align 8, !tbaa !18\l  %mul21 = mul nsw i64 %i.056, -27439\l  %add22 = add nuw nsw i64 %i.056, 1536\l  %arrayidx23 = getelementptr inbounds i64, i64* %5, i64 %add22\l  store i64 %mul21, i64* %arrayidx23, align 8, !tbaa !18\l  %mul24 = mul nsw i64 %i.056, -5329\l  %add25 = add nuw nsw i64 %i.056, 1792\l  %arrayidx26 = getelementptr inbounds i64, i64* %5, i64 %add25\l  store i64 %mul24, i64* %arrayidx26, align 8, !tbaa !18\l  %inc = add nuw nsw i64 %i.056, 1\l  %exitcond = icmp eq i64 %inc, 256\l  br i1 %exitcond, label %for.end, label %for.body, !prof !19\l|{<s0>T|<s1>F}}"];
	Node0x5955ce0:s0 -> Node0x59582b0;
	Node0x5955ce0:s1 -> Node0x5955ce0;
	Node0x59582b0 [shape=record, style = filled, fillcolor = skyblue, label="{for.end:                                          \l  ret void\l}"];
}
