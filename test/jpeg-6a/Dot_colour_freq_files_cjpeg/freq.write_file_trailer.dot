digraph "CFG for 'write_file_trailer' function" {
	label="CFG for 'write_file_trailer' function";

	Node0x5b24120 [shape=record, style = filled, fillcolor = skyblue, label="{entry:\l  %dest1.i.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 5\l  %0 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !3\l  %next_output_byte.i.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %0, i64 0, i32 0\l  %1 = load i8*, i8** %next_output_byte.i.i, align 8, !tbaa !11\l  %incdec.ptr.i.i = getelementptr inbounds i8, i8* %1, i64 1\l  store i8* %incdec.ptr.i.i, i8** %next_output_byte.i.i, align 8, !tbaa !11\l  store i8 -1, i8* %1, align 1, !tbaa !14\l  %free_in_buffer.i.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %0, i64 0, i32 1\l  %2 = load i64, i64* %free_in_buffer.i.i, align 8, !tbaa !15\l  %dec.i.i = add i64 %2, -1\l  store i64 %dec.i.i, i64* %free_in_buffer.i.i, align 8, !tbaa !15\l  %cmp.i.i = icmp eq i64 %dec.i.i, 0\l  br i1 %cmp.i.i, label %if.then.i.i, label %emit_byte.exit.i, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x5b24120:s0 -> Node0x5b268c0;
	Node0x5b24120:s1 -> Node0x5b26970;
	Node0x5b268c0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i.i:                                      \l  %empty_output_buffer.i.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %0, i64 0, i32 3\l  %3 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i.i, align 8, !tbaa !17\l  %call.i.i = tail call i32 %3(%struct.jpeg_compress_struct* nonnull %cinfo) #1\l  %tobool.i.i = icmp eq i32 %call.i.i, 0\l  br i1 %tobool.i.i, label %if.then3.i.i, label %emit_byte.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x5b268c0:s0 -> Node0x5b24020;
	Node0x5b268c0:s1 -> Node0x5b26970;
	Node0x5b24020 [shape=record, style = filled, fillcolor = blue, label="{if.then3.i.i:                                     \l  %err.i.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %4 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i.i, align\l... 8, !tbaa !18\l  %msg_code.i.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %4, i64 0, i32 5\l  store i32 22, i32* %msg_code.i.i, align 8, !tbaa !19\l  %error_exit.i.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %4, i64 0, i32 0\l  %5 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i.i, align 8, !tbaa !21\l  %6 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %5(%struct.jpeg_common_struct* %6) #1\l  br label %emit_byte.exit.i\l}"];
	Node0x5b24020 -> Node0x5b26970;
	Node0x5b26970 [shape=record, style = filled, fillcolor = skyblue, label="{emit_byte.exit.i:                                 \l  %7 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr**\l... %dest1.i.i, align 8, !tbaa !3\l  %next_output_byte.i3.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %7, i64 0, i32 0\l  %8 = load i8*, i8** %next_output_byte.i3.i, align 8, !tbaa !11\l  %incdec.ptr.i4.i = getelementptr inbounds i8, i8* %8, i64 1\l  store i8* %incdec.ptr.i4.i, i8** %next_output_byte.i3.i, align 8, !tbaa !11\l  store i8 -39, i8* %8, align 1, !tbaa !14\l  %free_in_buffer.i5.i = getelementptr inbounds %struct.jpeg_destination_mgr,\l... %struct.jpeg_destination_mgr* %7, i64 0, i32 1\l  %9 = load i64, i64* %free_in_buffer.i5.i, align 8, !tbaa !15\l  %dec.i6.i = add i64 %9, -1\l  store i64 %dec.i6.i, i64* %free_in_buffer.i5.i, align 8, !tbaa !15\l  %cmp.i7.i = icmp eq i64 %dec.i6.i, 0\l  br i1 %cmp.i7.i, label %if.then.i11.i, label %emit_marker.exit, !prof !16\l|{<s0>T|<s1>F}}"];
	Node0x5b26970:s0 -> Node0x5b270a0;
	Node0x5b26970:s1 -> Node0x5b27cb0;
	Node0x5b270a0 [shape=record, style = filled, fillcolor = blue, label="{if.then.i11.i:                                    \l  %empty_output_buffer.i8.i = getelementptr inbounds\l... %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %7, i64 0, i32 3\l  %10 = load i32 (%struct.jpeg_compress_struct*)*, i32\l... (%struct.jpeg_compress_struct*)** %empty_output_buffer.i8.i, align 8, !tbaa\l... !17\l  %call.i9.i = tail call i32 %10(%struct.jpeg_compress_struct* nonnull %cinfo)\l... #1\l  %tobool.i10.i = icmp eq i32 %call.i9.i, 0\l  br i1 %tobool.i10.i, label %if.then3.i15.i, label %emit_marker.exit\l|{<s0>T|<s1>F}}"];
	Node0x5b270a0:s0 -> Node0x5b28220;
	Node0x5b270a0:s1 -> Node0x5b27cb0;
	Node0x5b28220 [shape=record, style = filled, fillcolor = blue, label="{if.then3.i15.i:                                   \l  %err.i12.i = getelementptr inbounds %struct.jpeg_compress_struct,\l... %struct.jpeg_compress_struct* %cinfo, i64 0, i32 0\l  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err.i12.i,\l... align 8, !tbaa !18\l  %msg_code.i13.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 5\l  store i32 22, i32* %msg_code.i13.i, align 8, !tbaa !19\l  %error_exit.i14.i = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %11, i64 0, i32 0\l  %12 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit.i14.i, align 8, !tbaa !21\l  %13 = bitcast %struct.jpeg_compress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %12(%struct.jpeg_common_struct* %13) #1\l  br label %emit_marker.exit\l}"];
	Node0x5b28220 -> Node0x5b27cb0;
	Node0x5b27cb0 [shape=record, style = filled, fillcolor = skyblue, label="{emit_marker.exit:                                 \l  ret void\l}"];
}
