digraph "CFG for 'start_pass_dpost' function" {
	label="CFG for 'start_pass_dpost' function";

	Node0x4dc68d0 [shape=record, style = filled, fillcolor = blue, label="{entry:\l  %post1 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 76\l  %0 = bitcast %struct.jpeg_d_post_controller** %post1 to\l... %struct.my_post_controller**\l  %1 = load %struct.my_post_controller*, %struct.my_post_controller** %0,\l... align 8, !tbaa !2\l  switch i32 %pass_mode, label %sw.default [\l    i32 0, label %sw.bb\l    i32 3, label %sw.bb8\l    i32 2, label %sw.bb16\l  ]\l|{<s0>def|<s1>0|<s2>3|<s3>2}}"];
	Node0x4dc68d0:s0 -> Node0x4dc6ff0;
	Node0x4dc68d0:s1 -> Node0x4dc70d0;
	Node0x4dc68d0:s2 -> Node0x4dc71c0;
	Node0x4dc68d0:s3 -> Node0x4dc7290;
	Node0x4dc70d0 [shape=record, style = filled, fillcolor = blue, label="{sw.bb:                                            \l  %quantize_colors = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 19\l  %2 = load i32, i32* %quantize_colors, align 4, !tbaa !10\l  %tobool = icmp eq i32 %2, 0\l  br i1 %tobool, label %if.else, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x4dc70d0:s0 -> Node0x4dc7c40;
	Node0x4dc70d0:s1 -> Node0x4dc7d10;
	Node0x4dc7d10 [shape=record, style = filled, fillcolor = blue, label="{if.then:                                          \l  %post_process_data = getelementptr inbounds %struct.my_post_controller,\l... %struct.my_post_controller* %1, i64 0, i32 0, i32 1\l  store void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*,\l... i32)* @post_process_1pass, void (%struct.jpeg_decompress_struct*, i8***,\l... i32*, i32, i8**, i32*, i32)** %post_process_data, align 8, !tbaa !11\l  %buffer = getelementptr inbounds %struct.my_post_controller,\l... %struct.my_post_controller* %1, i64 0, i32 2\l  %3 = load i8**, i8*** %buffer, align 8, !tbaa !14\l  %cmp = icmp eq i8** %3, null\l  br i1 %cmp, label %if.then2, label %sw.epilog\l|{<s0>T|<s1>F}}"];
	Node0x4dc7d10:s0 -> Node0x4dc02a0;
	Node0x4dc7d10:s1 -> Node0x4dc0380;
	Node0x4dc02a0 [shape=record, style = filled, fillcolor = blue, label="{if.then2:                                         \l  %mem = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 1\l  %4 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %mem, align 8,\l... !tbaa !15\l  %access_virt_sarray = getelementptr inbounds %struct.jpeg_memory_mgr,\l... %struct.jpeg_memory_mgr* %4, i64 0, i32 7\l  %5 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*,\l... i32, i32, i32)*, i8** (%struct.jpeg_common_struct*,\l... %struct.jvirt_sarray_control*, i32, i32, i32)** %access_virt_sarray, align 8,\l... !tbaa !16\l  %6 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  %whole_image = getelementptr inbounds %struct.my_post_controller,\l... %struct.my_post_controller* %1, i64 0, i32 1\l  %7 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control**\l... %whole_image, align 8, !tbaa !19\l  %strip_height = getelementptr inbounds %struct.my_post_controller,\l... %struct.my_post_controller* %1, i64 0, i32 3\l  %8 = load i32, i32* %strip_height, align 8, !tbaa !20\l  %call = tail call i8** %5(%struct.jpeg_common_struct* %6,\l... %struct.jvirt_sarray_control* %7, i32 0, i32 %8, i32 1) #3\l  store i8** %call, i8*** %buffer, align 8, !tbaa !14\l  br label %sw.epilog\l}"];
	Node0x4dc02a0 -> Node0x4dc0380;
	Node0x4dc7c40 [shape=record, style = filled, fillcolor = blue, label="{if.else:                                          \l  %upsample = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 81\l  %9 = load %struct.jpeg_upsampler*, %struct.jpeg_upsampler** %upsample, align\l... 8, !tbaa !21\l  %upsample4 = getelementptr inbounds %struct.jpeg_upsampler,\l... %struct.jpeg_upsampler* %9, i64 0, i32 1\l  %10 = bitcast void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**,\l... i32*, i32)** %upsample4 to i64*\l  %11 = load i64, i64* %10, align 8, !tbaa !22\l  %post_process_data6 = getelementptr inbounds %struct.my_post_controller,\l... %struct.my_post_controller* %1, i64 0, i32 0, i32 1\l  %12 = bitcast void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**,\l... i32*, i32)** %post_process_data6 to i64*\l  store i64 %11, i64* %12, align 8, !tbaa !11\l  br label %sw.epilog\l}"];
	Node0x4dc7c40 -> Node0x4dc0380;
	Node0x4dc71c0 [shape=record, style = filled, fillcolor = blue, label="{sw.bb8:                                           \l  %whole_image9 = getelementptr inbounds %struct.my_post_controller,\l... %struct.my_post_controller* %1, i64 0, i32 1\l  %13 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control**\l... %whole_image9, align 8, !tbaa !19\l  %cmp10 = icmp eq %struct.jvirt_sarray_control* %13, null\l  br i1 %cmp10, label %if.then11, label %if.end13\l|{<s0>T|<s1>F}}"];
	Node0x4dc71c0:s0 -> Node0x4dcb4b0;
	Node0x4dc71c0:s1 -> Node0x4dcb590;
	Node0x4dcb4b0 [shape=record, style = filled, fillcolor = blue, label="{if.then11:                                        \l  %err = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err, align 8,\l... !tbaa !24\l  %msg_code = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %14, i64 0, i32 5\l  store i32 4, i32* %msg_code, align 8, !tbaa !25\l  %error_exit = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %14, i64 0, i32 0\l  %15 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit, align 8, !tbaa !27\l  %16 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %15(%struct.jpeg_common_struct* %16) #3\l  br label %if.end13\l}"];
	Node0x4dcb4b0 -> Node0x4dcb590;
	Node0x4dcb590 [shape=record, style = filled, fillcolor = blue, label="{if.end13:                                         \l  %post_process_data15 = getelementptr inbounds %struct.my_post_controller,\l... %struct.my_post_controller* %1, i64 0, i32 0, i32 1\l  store void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*,\l... i32)* @post_process_prepass, void (%struct.jpeg_decompress_struct*, i8***,\l... i32*, i32, i8**, i32*, i32)** %post_process_data15, align 8, !tbaa !11\l  br label %sw.epilog\l}"];
	Node0x4dcb590 -> Node0x4dc0380;
	Node0x4dc7290 [shape=record, style = filled, fillcolor = blue, label="{sw.bb16:                                          \l  %whole_image17 = getelementptr inbounds %struct.my_post_controller,\l... %struct.my_post_controller* %1, i64 0, i32 1\l  %17 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control**\l... %whole_image17, align 8, !tbaa !19\l  %cmp18 = icmp eq %struct.jvirt_sarray_control* %17, null\l  br i1 %cmp18, label %if.then19, label %if.end24\l|{<s0>T|<s1>F}}"];
	Node0x4dc7290:s0 -> Node0x4dcc500;
	Node0x4dc7290:s1 -> Node0x4dcc5b0;
	Node0x4dcc500 [shape=record, style = filled, fillcolor = blue, label="{if.then19:                                        \l  %err20 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %18 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err20, align\l... 8, !tbaa !24\l  %msg_code21 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %18, i64 0, i32 5\l  store i32 4, i32* %msg_code21, align 8, !tbaa !25\l  %error_exit23 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %18, i64 0, i32 0\l  %19 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit23, align 8, !tbaa !27\l  %20 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %19(%struct.jpeg_common_struct* %20) #3\l  br label %if.end24\l}"];
	Node0x4dcc500 -> Node0x4dcc5b0;
	Node0x4dcc5b0 [shape=record, style = filled, fillcolor = blue, label="{if.end24:                                         \l  %post_process_data26 = getelementptr inbounds %struct.my_post_controller,\l... %struct.my_post_controller* %1, i64 0, i32 0, i32 1\l  store void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*,\l... i32)* @post_process_2pass, void (%struct.jpeg_decompress_struct*, i8***,\l... i32*, i32, i8**, i32*, i32)** %post_process_data26, align 8, !tbaa !11\l  br label %sw.epilog\l}"];
	Node0x4dcc5b0 -> Node0x4dc0380;
	Node0x4dc6ff0 [shape=record, style = filled, fillcolor = blue, label="{sw.default:                                       \l  %err27 = getelementptr inbounds %struct.jpeg_decompress_struct,\l... %struct.jpeg_decompress_struct* %cinfo, i64 0, i32 0\l  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %err27, align\l... 8, !tbaa !24\l  %msg_code28 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %21, i64 0, i32 5\l  store i32 4, i32* %msg_code28, align 8, !tbaa !25\l  %error_exit30 = getelementptr inbounds %struct.jpeg_error_mgr,\l... %struct.jpeg_error_mgr* %21, i64 0, i32 0\l  %22 = load void (%struct.jpeg_common_struct*)*, void\l... (%struct.jpeg_common_struct*)** %error_exit30, align 8, !tbaa !27\l  %23 = bitcast %struct.jpeg_decompress_struct* %cinfo to\l... %struct.jpeg_common_struct*\l  tail call void %22(%struct.jpeg_common_struct* %23) #3\l  br label %sw.epilog\l}"];
	Node0x4dc6ff0 -> Node0x4dc0380;
	Node0x4dc0380 [shape=record, style = filled, fillcolor = blue, label="{sw.epilog:                                        \l  %next_row = getelementptr inbounds %struct.my_post_controller,\l... %struct.my_post_controller* %1, i64 0, i32 5\l  store i32 0, i32* %next_row, align 8, !tbaa !28\l  %starting_row = getelementptr inbounds %struct.my_post_controller,\l... %struct.my_post_controller* %1, i64 0, i32 4\l  store i32 0, i32* %starting_row, align 4, !tbaa !29\l  ret void\l}"];
}
